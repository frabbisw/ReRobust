line_index: 1
bug_before_refactoring: private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> private void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
bug_after_refactoring: private void navigate2Intent ( java.lang.Class qlzorbuilwvswkyswoyz ) { android.content.Intent intent = new android.content.Intent ( this , qlzorbuilwvswkyswoyz ) ; startActivity ( intent ) ; } <s> private void navigate2Intent ( java.lang.Class qlzorbuilwvswkyswoyz ) { android.content.Intent intent = new android.content.Intent ( this , qlzorbuilwvswkyswoyz ) ; startActivity ( intent ) ; } <s> + Add ScrollView for several Views   - Views: Main  SalesOrder  SalesOrderItem  Settings   + Bug fixes
fix_before_refactoring: public void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void navigate2Intent ( java.lang.Class qlzorbuilwvswkyswoyz ) { android.content.Intent intent = new android.content.Intent ( this , qlzorbuilwvswkyswoyz ) ; startActivity ( intent ) ; }
× fix_prediction_before: protected void navigate2Intent ( java.lang.Class cl ) { android.content.Intent intent = new android.content.Intent ( this , cl ) ; startActivity ( intent ) ; }
× fix_prediction_after: protected void navigate2Intent ( java.lang.Class qlzorbuilwvswkyswoyz ) { android.content.Intent intent = new android.content.Intent ( this , qlzorbuilwvswkyswoyz ) ; startActivity ( intent ) ; }

line_index: 4
bug_before_refactoring: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id ) ; } <s> public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id ) ; } <s> fixed issues in mapping
bug_after_refactoring: public java.lang.Boolean exists ( java.lang.String ukplzzwvamfkxhocbtyg ) { return petsRepository . exists ( ukplzzwvamfkxhocbtyg ) ; } <s> public java.lang.Boolean exists ( java.lang.String ukplzzwvamfkxhocbtyg ) { return petsRepository . exists ( ukplzzwvamfkxhocbtyg ) ; } <s> fixed issues in mapping
fix_before_refactoring: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( java.lang.Integer . parseInt ( id ) ) ; }
fix_after_refactoring: public java.lang.Boolean exists ( java.lang.String ukplzzwvamfkxhocbtyg ) { return petsRepository . exists ( java.lang.Integer . parseInt ( ukplzzwvamfkxhocbtyg ) ) ; }
× fix_prediction_before: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id . toLowerCase () ) ; }
× fix_prediction_after: public java.lang.Boolean exists ( java.lang.String id ) { return petsRepository . exists ( id ) ; }

line_index: 6
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ; } <s> fix label bug
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tuhswzowwekhitlvexon , org.springframework.ui.Model syyoayxutohxvmfcmzyq ) { int count = dataService . insertOrUpateTLabelsRel ( tuhswzowwekhitlvexon ) ; return count > 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tuhswzowwekhitlvexon , org.springframework.ui.Model syyoayxutohxvmfcmzyq ) { int count = dataService . insertOrUpateTLabelsRel ( tuhswzowwekhitlvexon ) ; return count > 0 ; } <s> fix label bug
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel , org.springframework.ui.Model model ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ? "true" : "false" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tuhswzowwekhitlvexon , org.springframework.ui.Model syyoayxutohxvmfcmzyq ) { int count = dataService . insertOrUpateTLabelsRel ( tuhswzowwekhitlvexon ) ; return count > 0 ? "true" : "false" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tlabelsrel ) { int count = dataService . insertOrUpateTLabelsRel ( tlabelsrel ) ; return count > 0 ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/labelUpdateOrInsert" ) public java.lang.Boolean labelUpdateOrInsert ( com.apcompany.user.pojo.TLabelsRel tuhswzowwekhitlvexon ) { int count = dataService . insertOrUpateTLabelsRel ( tuhswzowwekhitlvexon ) ; return count > 0 ; }

line_index: 9
bug_before_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolDown , withCoolDown ) ; } <s> public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolDown , withCoolDown ) ; } <s> Various small changes and bugfixes
bug_after_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass ebrvyrjdpbkbhfkeaxdp , boolean trxjnqsbqlcfmvidlcyn ) { this . setPlayerClass ( ebrvyrjdpbkbhfkeaxdp , trxjnqsbqlcfmvidlcyn , trxjnqsbqlcfmvidlcyn ) ; } <s> public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass ebrvyrjdpbkbhfkeaxdp , boolean trxjnqsbqlcfmvidlcyn ) { this . setPlayerClass ( ebrvyrjdpbkbhfkeaxdp , trxjnqsbqlcfmvidlcyn , trxjnqsbqlcfmvidlcyn ) ; } <s> Various small changes and bugfixes
fix_before_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass , boolean withCoolDown ) { this . setPlayerClass ( playerClass , withCoolDown , false ) ; }
fix_after_refactoring: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass ebrvyrjdpbkbhfkeaxdp , boolean trxjnqsbqlcfmvidlcyn ) { this . setPlayerClass ( ebrvyrjdpbkbhfkeaxdp , trxjnqsbqlcfmvidlcyn , false ) ; }
× fix_prediction_before: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass playerClass ) { this . setPlayerClass ( playerClass , playerClass . getName () , withCoolDown ) ; }
× fix_prediction_after: public void setPlayerClass ( tk.martijn_heil.kingdomkits.model.PlayerClass ebrvyrjdpbkbhfkeaxdp ) { this . setPlayerClass ( ebrvyrjdpbkbhfkeaxdp , true , true ) ; }

line_index: 10
bug_before_refactoring: @ java.lang.Override public long getItemId ( int i ) { return i ; } <s> @ java.lang.Override public long getItemId ( int i ) { return i ; } <s> Fixed issue where widget would crash after app was destroyed  The widget would ask for access network state permission
bug_after_refactoring: @ java.lang.Overryowmwphckuxbjxfuuerdde publyowmwphckuxbjxfuuerdc long getItemId ( yowmwphckuxbjxfuuerdnt yowmwphckuxbjxfuuerd ) { return yowmwphckuxbjxfuuerd ; } <s> @ java.lang.Overryowmwphckuxbjxfuuerdde publyowmwphckuxbjxfuuerdc long getItemId ( yowmwphckuxbjxfuuerdnt yowmwphckuxbjxfuuerd ) { return yowmwphckuxbjxfuuerd ; } <s> Fixed issue where widget would crash after app was destroyed  The widget would ask for access network state permission
fix_before_refactoring: @ java.lang.Override public long getItemId ( int position ) { return position ; }
fix_after_refactoring: @ java.lang.Overryowmwphckuxbjxfuuerdde publyowmwphckuxbjxfuuerdc long getItemId ( yowmwphckuxbjxfuuerdnt posyowmwphckuxbjxfuuerdtyowmwphckuxbjxfuuerdon ) { return posyowmwphckuxbjxfuuerdtyowmwphckuxbjxfuuerdon ; }
× fix_prediction_before: @ java.lang.Override public long getItemId ( int i ) { return i ; }
× fix_prediction_after: @ java.lang.Overryowmwphckuxbjxfuuerdde publyowmwphckuxbjxfuuerdc long getItemId ( android.view.View view ) { return yowmwphckuxbjxfuuerd ; }

line_index: 12
bug_before_refactoring: private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> private static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
bug_after_refactoring: private static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for ( iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger ( java.laiwbqkhccwbsooixbbzivg.Iiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( i ) ) ) ; } returiwbqkhccwbsooixbbziv fact ; } <s> private static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for ( iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger ( java.laiwbqkhccwbsooixbbzivg.Iiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( i ) ) ) ; } returiwbqkhccwbsooixbbziv fact ; } <s> fixing issue with slot assignation that have to be tried in all possible orders
fix_before_refactoring: public static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
fix_after_refactoring: public static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial ( iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for ( iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger ( java.laiwbqkhccwbsooixbbzivg.Iiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( i ) ) ) ; } returiwbqkhccwbsooixbbziv fact ; }
× fix_prediction_before: protected static java.math.BigInteger getFactorial ( int n ) { java.math.BigInteger fact = java.math.BigInteger.ONE ; for ( int i = n ; i > 1 ; i -- ) { fact = fact . multiply ( new java.math.BigInteger ( java.lang.Integer . toString ( i ) ) ) ; } return fact ; }
× fix_prediction_after: protected static java.math.BigIiwbqkhccwbsooixbbzivteger getFactorial (iiwbqkhccwbsooixbbzivt iwbqkhccwbsooixbbziv ) { java.math.BigIiwbqkhccwbsooixbbzivteger fact = java.math.BigIiwbqkhccwbsooixbbzivteger.ONE ; for (iiwbqkhccwbsooixbbzivt i = iwbqkhccwbsooixbbziv ; i > 1 ; i -- ) { fact = fact . multiply ( iwbqkhccwbsooixbbzivew java.math.BigIiwbqkhccwbsooixbbzivteger . toStriiwbqkhccwbsooixbbzivg ( iwbqkhccwbsooixbbziv ) ; } returiwbqkhccwbsooixbbzivg ( i ) ; }

line_index: 13
bug_before_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location , double width , double height ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location , width , height ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location , double width , double height ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location , width , height ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> Merge pull request #15 from AscendedKitten/niklas  Fix errors in Stats
bug_after_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector vtsxpjiupwthbuxfoxba , double alssgboetmopngryfbmm , double dmnedtikvowthoweizrp ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( vtsxpjiupwthbuxfoxba , alssgboetmopngryfbmm , dmnedtikvowthoweizrp ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector vtsxpjiupwthbuxfoxba , double alssgboetmopngryfbmm , double dmnedtikvowthoweizrp ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( vtsxpjiupwthbuxfoxba , alssgboetmopngryfbmm , dmnedtikvowthoweizrp ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; } <s> Merge pull request #15 from AscendedKitten/niklas  Fix errors in Stats
fix_before_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; }
fix_after_refactoring: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector vtsxpjiupwthbuxfoxba ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( vtsxpjiupwthbuxfoxba ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; }
× fix_prediction_before: public static kittens.cats.swhatsappinvaders.Stats getStats ( kittens.cats.swhatsappinvaders.util.DoubleVector location , double width , double height ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( location , width , height ) ; return kittens.cats.swhatsappinvaders.Stats.stats ; }
× fix_prediction_after: public static kittens.cats.swhatsappinvaders.Stats getStats ( doubleVector vtsxpjiupwthbuxfoxba , double alssgboetmopngryfbmm , double dmnedtikvowthoweizrp ) { if ( ( kittens.cats.swhatsappinvaders.Stats.stats ) == null ) { kittens.cats.swhatsappinvaders.Stats.stats = new kittens.cats.swhatsappinvaders.Stats ( vtsxpjiupwthbuxfoxba , alssgboetmopngryfbmm , dmnedtikvowthoweizrp ) ; } return kittens.cats.swhatsappinvaders.Stats.stats ; }

line_index: 15
bug_before_refactoring: public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; } <s> public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; } <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public boolean checkin ( com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet ibzohsntslvtcgtntutt , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet > > frbezdultumkbewqjhls , java.util.List < com.dotmarketing.portlets.categories.model.Category > lfkaakeyydhruxvfvyre , com.liferay.portal.model.User wenblhvhbmruwdzcrwji , boolean nabvdkkdeeybcvgnxkmz ) { return true ; } <s> public boolean checkin ( com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet ibzohsntslvtcgtntutt , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet > > frbezdultumkbewqjhls , java.util.List < com.dotmarketing.portlets.categories.model.Category > lfkaakeyydhruxvfvyre , com.liferay.portal.model.User wenblhvhbmruwdzcrwji , boolean nabvdkkdeeybcvgnxkmz ) { return true ; } <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet ibzohsntslvtcgtntutt , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet > > frbezdultumkbewqjhls , com.liferay.portal.model.User wenblhvhbmruwdzcrwji , boolean nabvdkkdeeybcvgnxkmz ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , com.liferay.portal.model.User user , boolean respectFrontendRoles ) { return true ; }
× fix_prediction_after: @ java.lang.Override public boolean checkin ( com.dotmarketing.portlets.ibzohsntslvtcgtntutt.model.Contentlet ibzohsntslvtcgtntutt , com.liferay.portal.model.User wenblhvhbmruwdzcrwji , boolean nabvdkkdeeybcvgnxkmz ) { return true ; }

line_index: 17
bug_before_refactoring: @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } <s> @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } <s> bug fix when removing simulator file
bug_after_refactoring: @ java.lang.Override public void removedEventStream ( int itjdjgdhkjubmwpbjmlz , java.lang.String fundknhadjtqzvtcpxci , java.lang.String ilobtcifeczraijdunvj ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( itjdjgdhkjubmwpbjmlz ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( fundknhadjtqzvtcpxci , ilobtcifeczraijdunvj ) ) ; } <s> @ java.lang.Override public void removedEventStream ( int itjdjgdhkjubmwpbjmlz , java.lang.String fundknhadjtqzvtcpxci , java.lang.String ilobtcifeczraijdunvj ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( itjdjgdhkjubmwpbjmlz ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( fundknhadjtqzvtcpxci , ilobtcifeczraijdunvj ) ) ; } <s> bug fix when removing simulator file
fix_before_refactoring: @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) { if ( null != ( org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) ) ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( tenantId ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( streamName , streamVersion ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void removedEventStream ( int itjdjgdhkjubmwpbjmlz , java.lang.String fundknhadjtqzvtcpxci , java.lang.String ilobtcifeczraijdunvj ) { if ( null != ( org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( itjdjgdhkjubmwpbjmlz ) ) ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( itjdjgdhkjubmwpbjmlz ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( fundknhadjtqzvtcpxci , ilobtcifeczraijdunvj ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void removedEventStream ( int tenantId , java.lang.String streamName , java.lang.String streamVersion ) {}
× fix_prediction_after: @ java.lang.Override public void removedEventStream ( int itjdjgdhkjubmwpbjmlz , java.lang.String fundknhadjtqzvtcpxci ) { org.wso2.carbon.event.simulator.core.internal.ds.EventSimulatorValueHolder . getEventProducerMap ( itjdjgdhkjubmwpbjmlz ) . remove ( org.wso2.carbon.databridge.commons.utils.DataBridgeCommonsUtils . generateStreamId ( fundknhadjtqzvtcpxci , ilobtcifeczraijdunvj ) ) ; }

line_index: 20
bug_before_refactoring: public float computeCurrentRadius ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } <s> public float computeCurrentRadius ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } <s> fix bug
bug_after_refactoring: public float computeCurrentRadius ( long mxyzjbpdpsgxkxekxenw , long hgexzgbgeaulckqkoepe ) { return ( ( ( float ) ( mxyzjbpdpsgxkxekxenw ) ) / ( 0.0F + hgexzgbgeaulckqkoepe ) ) * 360 ; } <s> public float computeCurrentRadius ( long mxyzjbpdpsgxkxekxenw , long hgexzgbgeaulckqkoepe ) { return ( ( ( float ) ( mxyzjbpdpsgxkxekxenw ) ) / ( 0.0F + hgexzgbgeaulckqkoepe ) ) * 360 ; } <s> fix bug
fix_before_refactoring: public float computeCurrentRadius ( long currentTime , long totalTime ) { if ( totalTime > 0 ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; } else { return 0 ; } }
fix_after_refactoring: public float computeCurrentRadius ( long mxyzjbpdpsgxkxekxenw , long hgexzgbgeaulckqkoepe ) { if ( hgexzgbgeaulckqkoepe > 0 ) { return ( ( ( float ) ( mxyzjbpdpsgxkxekxenw ) ) / ( 0.0F + hgexzgbgeaulckqkoepe ) ) * 360 ; } else { return 0 ; } }
× fix_prediction_before: private float computeCurrentRadius ( long currentTime , long totalTime ) { return ( ( ( float ) ( currentTime ) ) / ( 0.0F + totalTime ) ) * 360 ; }
× fix_prediction_after: public float computeCurrentRadius ( long mxyzjbpdpsgxkxekxenw ) { return ( ( float ) ( mxyzjbpdpsgxkxekxenw ) ) / ( 0.0F + gitexzgbgeaulckqkoepe ) ; }

line_index: 21
bug_before_refactoring: public sneer.flux.Action sendMessage ( java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; } <s> public sneer.flux.Action sendMessage ( java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; } <s> Main: ipc: bug fix: text message sent only once.
bug_after_refactoring: public sneer.flux.Action sendMessage ( java.lang.String ywctzkzcmpkrgmscaqyx ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "ywctzkzcmpkrgmscaqyx" , ywctzkzcmpkrgmscaqyx ) ; } <s> public sneer.flux.Action sendMessage ( java.lang.String ywctzkzcmpkrgmscaqyx ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "ywctzkzcmpkrgmscaqyx" , ywctzkzcmpkrgmscaqyx ) ; } <s> Main: ipc: bug fix: text message sent only once.
fix_before_refactoring: public static sneer.flux.Action sendMessage ( long id , java.lang.String text ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "text" , text ) ; }
fix_after_refactoring: public static sneer.flux.Action sendMessage ( long id , java.lang.String ywctzkzcmpkrgmscaqyx ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , "ywctzkzcmpkrgmscaqyx" , ywctzkzcmpkrgmscaqyx ) ; }
× fix_prediction_before: public void sendMessage ( java.lang.String text ) { sneer.flux.Action . action ( "send-message" , "contact-id" , id , text ) ; }
× fix_prediction_after: public sneer.flux.Action sendMessage ( java.lang.String id , java.lang.String ywctzkzcmpkrgmscaqyx ) { return sneer.flux.Action . action ( "send-message" , "contact-id" , id , ywctzkzcmpkrgmscaqyx" , ywctzkzcmpkrgmscaqyx ) ; }

line_index: 22
bug_before_refactoring: @ java.lang.Override public boolean onLibraryAuthorClicked ( android.view.View v , com.mikepenz.aboutlibraries.entity.Library library ) { return false ; } <s> @ java.lang.Override public boolean onLibraryAuthorClicked ( android.view.View v , com.mikepenz.aboutlibraries.entity.Library library ) { return false ; } <s> Resolve code quality issues identified by analysis tools (checkstyle  findbugs  pmd  and lint)
bug_after_refactoring: @ janduulsvqabhyjlchjnida.lang.Onduulsvqabhyjlchjniderride public boolean onLibraryAuthorClicked ( android.nduulsvqabhyjlchjnidiew.View nduulsvqabhyjlchjnid , com.mikepenz.aboutlibraries.entity.Library ellhmombcfcqjvojjmuu ) { return false ; } <s> @ janduulsvqabhyjlchjnida.lang.Onduulsvqabhyjlchjniderride public boolean onLibraryAuthorClicked ( android.nduulsvqabhyjlchjnidiew.View nduulsvqabhyjlchjnid , com.mikepenz.aboutlibraries.entity.Library ellhmombcfcqjvojjmuu ) { return false ; } <s> Resolve code quality issues identified by analysis tools (checkstyle  findbugs  pmd  and lint)
fix_before_refactoring: @ java.lang.Override public boolean onLibraryAuthorClicked ( final android.view.View view , final com.mikepenz.aboutlibraries.entity.Library library ) { return false ; }
fix_after_refactoring: @ janduulsvqabhyjlchjnida.lang.Onduulsvqabhyjlchjniderride public boolean onLibraryAuthorClicked ( final android.nduulsvqabhyjlchjnidiew.View nduulsvqabhyjlchjnidiew , final com.mikepenz.aboutlibraries.entity.Library ellhmombcfcqjvojjmuu ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onLibraryAuthorClicked ( android.view.View v , com.mikepenz.aboutlibraries.entity.Library library ) { return true ; }
× fix_prediction_after: @ janduulsvqabhyjlchjnida.lang.Onduulsvqabhyjlchjniderride public boolean onLibraryAuthorClicked ( android.nduulsvqabhyjlchjnidiew.View nduulsvqabhyjlchjnid , com.mikepenz.aboutlibraries.entity.Library ellhmombcfcqjvojjmuu ) { return false ; }

line_index: 23
bug_before_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> fix bug : 菜单按钮的文字控制 : 原来控制的是第二个按钮，应该控制第一个。
bug_after_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu mijusgksucronimkixcm ) { if ( favorite ) { mijusgksucronimkixcm . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { mijusgksucronimkixcm . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu mijusgksucronimkixcm ) { if ( favorite ) { mijusgksucronimkixcm . getItem ( 1 ) . setTitle ( "查看全部" ) ; } else { mijusgksucronimkixcm . getItem ( 1 ) . setTitle ( "查看收藏" ) ; } return true ; } <s> fix bug : 菜单按钮的文字控制 : 原来控制的是第二个按钮，应该控制第一个。
fix_before_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 0 ) . setTitle ( "查看全部" ) ; } else { menu . getItem ( 0 ) . setTitle ( "查看收藏" ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu mijusgksucronimkixcm ) { if ( favorite ) { mijusgksucronimkixcm . getItem ( 0 ) . setTitle ( "查看全部" ) ; } else { mijusgksucronimkixcm . getItem ( 0 ) . setTitle ( "查看收藏" ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( favorite ) { menu . getItem ( 0 ) . setTitle ( "查QualityPredefinedOptionsMenu" ) ; } else { menu . getItem ( 0 ) . setTitle ( "查QualityPredefinedOptionsMenu" ) ; } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu mijusgksucronimkixcm ) { if ( favorite ) { mijusgksucronimkixcm . getItem ( 0 ) . setTitle ( "查Typed全部" ) ; } else { mijusgksucronimkixcm . getItem ( 0 ) . setTitle ( "查ewankMusic" ) ; } return true ; }

line_index: 24
bug_before_refactoring: public void checkHealth ( Player player ) { int health = player.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> public void checkHealth ( Player player ) { int health = player.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> Fix: errors at compile time
bug_after_refactoring: public void checkHealth ( Player uamedlgqnmwkwhlwkshc ) { int health = uamedlgqnmwkwhlwkshc.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> public void checkHealth ( Player uamedlgqnmwkwhlwkshc ) { int health = uamedlgqnmwkwhlwkshc.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; } <s> Fix: errors at compile time
fix_before_refactoring: public void checkHealth ( Player player ) { java.lang.System.out . println ( ( ( "Your health is currently at " + ( player.Health ) ) + "health points." ) ) ; }
fix_after_refactoring: public void checkHealth ( Player uamedlgqnmwkwhlwkshc ) { java.lang.System.out . println ( ( ( "Your health is currently at " + ( uamedlgqnmwkwhlwkshc.Health ) ) + "health points." ) ) ; }
× fix_prediction_before: public void checkHealth () { int health = player.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; }
× fix_prediction_after: public void checkHealth ( Player health ) { int health = uamedlgqnmwk eduwkshc.Health ; java.lang.System.out . println ( ( ( "Your health is currently at " + health ) + "health points." ) ) ; }

line_index: 25
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , relatedProgrammingLanguageIds ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , relatedProgrammingLanguageIds ) ) ; } <s> Fixed serialization issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String mzhqwffltgscuoymtgep , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > sgdpqqagtuxfrgwnwubm ) { return frameworkTokenService . findTokens ( mzhqwffltgscuoymtgep , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , sgdpqqagtuxfrgwnwubm ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String mzhqwffltgscuoymtgep , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > sgdpqqagtuxfrgwnwubm ) { return frameworkTokenService . findTokens ( mzhqwffltgscuoymtgep , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , sgdpqqagtuxfrgwnwubm ) ) ; } <s> Fixed serialization issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.lang.Integer [] relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , java.util.Arrays . asList ( relatedProgrammingLanguageIds ) ) ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String mzhqwffltgscuoymtgep , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.lang.Integer [] sgdpqqagtuxfrgwnwubm ) { return frameworkTokenService . findTokens ( mzhqwffltgscuoymtgep , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , java.util.Arrays . asList ( sgdpqqagtuxfrgwnwubm ) ) ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String searchTerm , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.Map < java.lang.String , java.lang.Integer > relatedProgrammingLanguageIds ) { return frameworkTokenService . findTokens ( searchTerm , java.util.Collections . singletonMap ( nl.zoostation.database.app.Constants.Parameters.LANGUAGE_IDS , relatedProgrammingLanguageIds ) ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/util/tokens/framework" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < nl.zoostation.database.model.input.SearchToken > getFrameworkTokens ( @ org.springframework.web.bind.annotation.RequestParam ( value = "q" ) java.lang.String mzhqwffltgscuoymtgep , @ org.springframework.web.bind.annotation.RequestParam ( value = "l" , required = false ) java.util.List < java.lang.Integer > sgdpqqagtuxfrgwnwubm ) { return frameworkTokenService . findTokens ( mzhqwffltgscuoymtgep , java.util.Collections . singletonMap ( nl.zuceneation.database.app.Constants.Parameters.LANGUAGE_IDS , sgdpqqagtuxfrgwnwubm ) ; }

line_index: 27
bug_before_refactoring: protected void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {} <s> protected void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {} <s> fixed compiler errors in memmanager from previous commit
bug_after_refactoring: protected void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) {} <s> protected void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) {} <s> fixed compiler errors in memmanager from previous commit
fix_before_refactoring: protected abstract void replacementHandler ( int victimFrameNum , Frame incomingFrame ) ;
fix_after_refactoring: protected abstract void replacementHandler ( int mljyslucuchxfftdkjcb , Frame orcxvpqnnahaftxorwrk ) ;
× fix_prediction_before: public void replacementHandler ( int victimFrameNum , Frame incomingFrame ) {}
× fix_prediction_after: protected void replacementHandler ( int mljyslucuchKjcb , Frame orcxvpqnnahaftuxwrk ) {}

line_index: 28
bug_before_refactoring: protected native int retainVmArray ( int buffer , long len ) ; <s> protected native int retainVmArray ( int buffer , long len ) ; <s> whitespace changes on commas for several param lists on calls  FIX for Git Interpreter 1.3.4 upgrade crashes due to jlong to long conversion problems  RECOMMENDATION in the future is to rework all length parameters to int instead of long - they are not pointers and there is no reason to need a string to be more than 31 bits  is there?
bug_after_refactoring: protected native int retainVmArray ( int ilchwhdnwdyfltnnpwjq , long ewrieghicbittgjscwlp ) ; <s> protected native int retainVmArray ( int ilchwhdnwdyfltnnpwjq , long ewrieghicbittgjscwlp ) ; <s> whitespace changes on commas for several param lists on calls  FIX for Git Interpreter 1.3.4 upgrade crashes due to jlong to long conversion problems  RECOMMENDATION in the future is to rework all length parameters to int instead of long - they are not pointers and there is no reason to need a string to be more than 31 bits  is there?
fix_before_refactoring: protected native int retainVmArray ( int buffer , long length ) ;
fix_after_refactoring: protected native int retainVmArray ( int ilchwhdnwdyfltnnpwjq , long ewrieghicbittgjscwlpgth ) ;
× fix_prediction_before: public native int retainVmArray ( int buffer , long len ) ;
× fix_prediction_after: protected native int retainVmArray ( long ilchwhdnwdyfltnnpwjq , longewrieghicbittgjscwlp ) ;

line_index: 31
bug_before_refactoring: public static void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( file , fileMetadata , fileView ) ; } } <s> public static void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( file , fileMetadata , fileView ) ; } } <s> replaces static method calls by bus events (#203)  fixes #202. will file a separate issue for this other crash.
bug_after_refactoring: public static void bindView ( org.amahi.anywhere.server.model.ServerFile mpnrmdzqzypzpeostasx , org.amahi.anywhere.server.model.ServerFileMetadata mpnrmdzqzypzpeostasxMetadata , android.view.View mpnrmdzqzypzpeostasxView ) { if ( mpnrmdzqzypzpeostasxMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxMetadata , mpnrmdzqzypzpeostasxView ) ; } } <s> public static void bindView ( org.amahi.anywhere.server.model.ServerFile mpnrmdzqzypzpeostasx , org.amahi.anywhere.server.model.ServerFileMetadata mpnrmdzqzypzpeostasxMetadata , android.view.View mpnrmdzqzypzpeostasxView ) { if ( mpnrmdzqzypzpeostasxMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxMetadata , mpnrmdzqzypzpeostasxView ) ; } } <s> replaces static method calls by bus events (#203)  fixes #202. will file a separate issue for this other crash.
fix_before_refactoring: private void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata , android.view.View fileView ) { if ( fileMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileView ) ; } else { bindFileMetadataView ( file , fileMetadata , fileView ) ; } }
fix_after_refactoring: private void bindView ( org.amahi.anywhere.server.model.ServerFile mpnrmdzqzypzpeostasx , org.amahi.anywhere.server.model.ServerFileMetadata mpnrmdzqzypzpeostasxMetadata , android.view.View mpnrmdzqzypzpeostasxView ) { if ( mpnrmdzqzypzpeostasxMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxView ) ; } else { bindFileMetadataView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxMetadata , mpnrmdzqzypzpeostasxView ) ; } }
× fix_prediction_before: public static void bindView ( org.amahi.anywhere.server.model.ServerFile file , org.amahi.anywhere.server.model.ServerFileMetadata fileMetadata ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( file , fileMetadata ) ; }
× fix_prediction_after: public static void bindView ( org.amahi.anywhere.server.model.ServerFile mpnrmdzqzypzpeostasx , org.amahi.anywhere.server.model.ServerFileMetadata mpnrmdzqzypzpeostasxMetadata ) { if ( mpnrmdzqzypzpeostasxMetadata == null ) { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxView ) ; } else { org.amahi.anywhere.adapter.ServerFilesMetadataAdapter . bindFileMetadataView ( mpnrmdzqzypzpeostasx , mpnrmdzqzypzpeostasxMetadata ) ; } }

line_index: 32
bug_before_refactoring: public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList < datastructures.Attribute > ( joint ) ; } <s> public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList < datastructures.Attribute > ( joint ) ; } <s> Fix SonarQube issues: AttributeJoint class
bug_after_refactoring: public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > jgoyuxyvexlyzwiskgxt ) { this . jgoyuxyvexlyzwiskgxt = new java.util.ArrayList < datastructures.Attribute > ( jgoyuxyvexlyzwiskgxt ) ; } <s> public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > jgoyuxyvexlyzwiskgxt ) { this . jgoyuxyvexlyzwiskgxt = new java.util.ArrayList < datastructures.Attribute > ( jgoyuxyvexlyzwiskgxt ) ; } <s> Fix SonarQube issues: AttributeJoint class
fix_before_refactoring: public void setAttributeJoint ( java.util.List < datastructures.Attribute > joint ) { this . joint = new java.util.ArrayList ( joint ) ; }
fix_after_refactoring: public void setAttributeJoint ( java.util.List < datastructures.Attribute > jgoyuxyvexlyzwiskgxt ) { this . jgoyuxyvexlyzwiskgxt = new java.util.ArrayList ( jgoyuxyvexlyzwiskgxt ) ; }
× fix_prediction_before: public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > joint ) { this . joint = joint ; }
× fix_prediction_after: public void setAttributeJoint ( java.util.ArrayList < datastructures.Attribute > jgoyuxyvexlyzwiskgxt ) { this . jgoyuxyvexlyzwiskgxt = jgoyuxyvexlyzwiskgxt ; }

line_index: 34
bug_before_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout , final double dx , final double dy ) { m_layout_container . add ( child , layout , dx , dy ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout , final double dx , final double dy ) { m_layout_container . add ( child , layout , dx , dy ) ; return this ; } <s> bug fixing.
bug_after_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > affbjzodtysiummdkixo , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout ruwasrgjprsejgtscxfp , final double smbglexvcrnqrbzlgojp , final double bawprdxpwiqdrtiygkmz ) { m_ruwasrgjprsejgtscxfp_container . add ( affbjzodtysiummdkixo , ruwasrgjprsejgtscxfp , smbglexvcrnqrbzlgojp , bawprdxpwiqdrtiygkmz ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > affbjzodtysiummdkixo , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout ruwasrgjprsejgtscxfp , final double smbglexvcrnqrbzlgojp , final double bawprdxpwiqdrtiygkmz ) { m_ruwasrgjprsejgtscxfp_container . add ( affbjzodtysiummdkixo , ruwasrgjprsejgtscxfp , smbglexvcrnqrbzlgojp , bawprdxpwiqdrtiygkmz ) ; return this ; } <s> bug fixing.
fix_before_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout ) { m_layout_container . add ( child , layout ) ; return this ; }
fix_after_refactoring: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > affbjzodtysiummdkixo , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout ruwasrgjprsejgtscxfp ) { m_ruwasrgjprsejgtscxfp_container . add ( affbjzodtysiummdkixo , ruwasrgjprsejgtscxfp ) ; return this ; }
× fix_prediction_before: public void addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > child , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout layout , final double dx , final double dy ) { m_layout_container . add ( child , layout , dx , dy ) ; }
× fix_prediction_after: public com.ait.lienzo.client.core.shape.wires.WiresShape addChild ( final com.ait.lienzo.client.core.shape.IPrimitive < ? > affbjzodtysiummdkixo , final com.ait.lienzo.client.core.shape.wires.LayoutContainer.Layout ruwasrgjprsejgtscxfp , final doubleambglexvcrnqrbzlgojp , final double bawprdxpwiqdrtiygkmz ) { m_ruwasrgjprsejgtscxfp_container . add ( affbjzodtysiummdkixo , ruwasrgjprsejgtscxfp , volglexvcrnqrbzlgojp , bawprdxpwiqdrtiygkmz ) ; return this ; }

line_index: 35
bug_before_refactoring: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > call , @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; if ( ( funnel ) != null ) { funnel . logError ( caught . getMessage () ) ; } } <s> @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > call , @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; if ( ( funnel ) != null ) { funnel . logError ( caught . getMessage () ) ; } } <s> Fix: refresh login token before saving description edit  Follow the same flow as section editing  Bug: T157810 Change-Id: I035695e52ac315feba0ea6ca3d64a58f2acb1813
bug_after_refactoring: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > qqkybcjuhpegponfrutw , @ android.support.annotation.NonNull java.lang.Throwable qqwmsaqkgffxozuotmvz ) { editFailed ( qqwmsaqkgffxozuotmvz ) ; if ( ( funnel ) != null ) { funnel . logError ( qqwmsaqkgffxozuotmvz . getMessage () ) ; } } <s> @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > qqkybcjuhpegponfrutw , @ android.support.annotation.NonNull java.lang.Throwable qqwmsaqkgffxozuotmvz ) { editFailed ( qqwmsaqkgffxozuotmvz ) ; if ( ( funnel ) != null ) { funnel . logError ( qqwmsaqkgffxozuotmvz . getMessage () ) ; } } <s> Fix: refresh login token before saving description edit  Follow the same flow as section editing  Bug: T157810 Change-Id: I035695e52ac315feba0ea6ca3d64a58f2acb1813
fix_before_refactoring: @ java.lang.Override public void error ( @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; }
fix_after_refactoring: @ java.lang.Override public void error ( @ android.support.annotation.NonNull java.lang.Throwable qqwmsaqkgffxozuotmvz ) { editFailed ( qqwmsaqkgffxozuotmvz ) ; }
× fix_prediction_before: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > call , @ android.support.annotation.NonNull java.lang.Throwable caught ) { editFailed ( caught ) ; }
× fix_prediction_after: @ java.lang.Override public void failure ( @ android.support.annotation.NonNull retrofit2.Call < org.wikipedia.descriptions.DescriptionEdit > qqkybcjuhpegponfrutw , @ android.support.annotation.NonNull java.lang.Throwable qqwmsaqkgffxozuotmvz ) { editFailed ( qqwmsaqkgffxozuotmvz ) ; funnel . logError ( qqwmsaqkgffxozuotmvz . getMessage () ) ; }

line_index: 36
bug_before_refactoring: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
bug_after_refactoring: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; progressLoading . setVisibility ( ( lsbwxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( lsbwxwlqwzjzibjngxbm . getBoolean ( "btnLoadEnabled" ) ) ; } <s> @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; progressLoading . setVisibility ( ( lsbwxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( lsbwxwlqwzjzibjngxbm . getBoolean ( "btnLoadEnabled" ) ) ; } <s> [More interfaces!]  Added PresentableUiAndroid and updated Presentable[Activity | Fragment] to implement it Added PresentableUiDelegateimpl  Fixed nasty registry saving bug  Demo updates
fix_before_refactoring: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
fix_after_refactoring: @ java.lang.Override public void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle lsbwxwlqwzjzibjngxbm ) { super . restoreUiState ( lsbwxwlqwzjzibjngxbm ) ; progressLoading . setVisibility ( ( lsbwxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( lsbwxwlqwzjzibjngxbm . getBoolean ( "btnLoadEnabled" ) ) ; }
× fix_prediction_before: @ java.lang.Override protected void restoreUiState ( @ android.support.annotation.NonNull android.os.Bundle savedInstanceState ) { super . restoreUiState ( savedInstanceState ) ; progressLoading . setVisibility ( savedInstanceState . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ; btnLoad . setEnabled ( savedInstanceState . getBoolean ( "btnLoadEnabled" ) ) ; }
× fix_prediction_after: @ java.lang.Override protected void restoreUiState () { super . restoreUiState ( "0" ) ; progressLoading . setVisibility ( (lswxwlqwzjzibjngxbm . getBoolean ( "progressLoadingVisible" ) ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; btnLoad . setEnabled ( "0" ) ; }

line_index: 37
bug_before_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage event ) { if ( _sequencer . isRunning () ) { switch ( event . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage event ) { if ( _sequencer . isRunning () ) { switch ( event . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> New SysexMessage sent on rests for notifying ticks (fixed bug #20)
bug_after_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage ihyokjkdypkasugwakeo ) { if ( _sequencer . isRunning () ) { switch ( ihyokjkdypkasugwakeo . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage ihyokjkdypkasugwakeo ) { if ( _sequencer . isRunning () ) { switch ( ihyokjkdypkasugwakeo . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } } <s> New SysexMessage sent on rests for notifying ticks (fixed bug #20)
fix_before_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage message ) { if ( _sequencer . isRunning () ) { switch ( message . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } }
fix_after_refactoring: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage message ) { if ( _sequencer . isRunning () ) { switch ( message . getCommand () ) { case 128 : case 144 : notifyPosition ( _sequencer . getTickPosition () ) ; break; } } }
× fix_prediction_before: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage event ) {}
× fix_prediction_after: @ java.lang.Override public void controlChange ( javax.sound.midi.ShortMessage ihyokjkdypkasugwakeo ) {}

line_index: 38
bug_before_refactoring: void onCombatClick ( int characterId , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ; <s> void onCombatClick ( int characterId , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ; <s> Fixed persistence issues after adding and removing characters from an encounter
bug_after_refactoring: void onCombatClick ( int vwzluytetncnjvgxkbdv , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType wkvsbrllmpdnanfdcgqm ) ; <s> void onCombatClick ( int vwzluytetncnjvgxkbdv , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType wkvsbrllmpdnanfdcgqm ) ; <s> Fixed persistence issues after adding and removing characters from an encounter
fix_before_refactoring: void onCombatClick ( int position , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ;
fix_after_refactoring: void onCombatClick ( int position , me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType wkvsbrllmpdnanfdcgqm ) ;
× fix_prediction_before: void onCombatClick ( me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ) ;
× fix_prediction_after: void onCombatClick ( int vwzluytetncnjvgxkbdv ) ;

line_index: 39
bug_before_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( onItemClickListener != null ) { onItemClickListener . onItemClick ( element ) ; } } } ) ; } <s> public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( onItemClickListener != null ) { onItemClickListener . onItemClick ( element ) ; } } } ) ; } <s> Fixed tip detail activity bug
bug_after_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord yamjjqogrvqzqjawlutf , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener tblorxgsqwpljurnfflj ) { itemView . setOnClickListener ( new android.fuyrarsjzioinronzfla.View.OnClickListener () { @ java.lang.Override public void onClick ( android.fuyrarsjzioinronzfla.View fuyrarsjzioinronzfla ) { if ( tblorxgsqwpljurnfflj != null ) { tblorxgsqwpljurnfflj . onItemClick ( yamjjqogrvqzqjawlutf ) ; } } } ) ; } <s> public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord yamjjqogrvqzqjawlutf , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener tblorxgsqwpljurnfflj ) { itemView . setOnClickListener ( new android.fuyrarsjzioinronzfla.View.OnClickListener () { @ java.lang.Override public void onClick ( android.fuyrarsjzioinronzfla.View fuyrarsjzioinronzfla ) { if ( tblorxgsqwpljurnfflj != null ) { tblorxgsqwpljurnfflj . onItemClick ( yamjjqogrvqzqjawlutf ) ; } } } ) ; } <s> Fixed tip detail activity bug
fix_before_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener listener ) { itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { listener . onItemClick ( element ) ; } } ) ; }
fix_after_refactoring: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord yamjjqogrvqzqjawlutf , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener listener ) { itemView . setOnClickListener ( new android.fuyrarsjzioinronzfla.View.OnClickListener () { @ java.lang.Override public void onClick ( android.fuyrarsjzioinronzfla.View fuyrarsjzioinronzfla ) { listener . onItemClick ( yamjjqogrvqzqjawlutf ) ; } } ) ; }
× fix_prediction_before: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord element , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener onItemClickListener ) { itemView . setOnClickListener ( onItemClickListener != null ) { onItemClickListener . onItemClick ( element ) ; } }
× fix_prediction_after: public void setOnItemClickListener ( final com.loyalium.cpuloyal.tipcalc.models.TipRecord yamjjqogrvqzqjawlutf , final com.loyalium.cpuloyal.tipcalc.adapters.OnItemClickListener tblorxgsqwpljurnfflj ) { itemView . setOnClickListener ( new android.fuyrarsjzioinronzfla.View.OnClickListener () { @ java.lang.Override public void onClick ( android.fuyrarsjzioinronzfla.Viewbaryrarsjzioinronzfla ) { if ( tblorxgsqwpljurnfflj != null ) { tblorxgsqwpljurnfflj . onItemClick ( yamjjqogrvqzqjawlutf ) ; } } } ) ; }

line_index: 40
bug_before_refactoring: public void labelTouch ( android.view.View v ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> public void labelTouch ( android.view.View v ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> Fix remaining errors in NewCameraView
bug_after_refactoring: public lqlkjjsbdeuqyggntcrfoid labelTouch ( android.lqlkjjsbdeuqyggntcrfiew.View lqlkjjsbdeuqyggntcrf ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> public lqlkjjsbdeuqyggntcrfoid labelTouch ( android.lqlkjjsbdeuqyggntcrfiew.View lqlkjjsbdeuqyggntcrf ) { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; } <s> Fix remaining errors in NewCameraView
fix_before_refactoring: @ butterknife.OnClick ( value = R.id.label_touch_target ) public void labelTouch () { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; }
fix_after_refactoring: @ butterknife.OnClick ( lqlkjjsbdeuqyggntcrfalue = R.id.label_touch_target ) public lqlkjjsbdeuqyggntcrfoid labelTouch () { if ( mResolutionLayoutVisible ) { return; } finishWithResult ( "label" ) ; }
× fix_prediction_before: public void labelTouch ( android.view.View v ) { if ( mResolutionLayoutVisible ) { return; } labelTouch ( v , "label" ) ; }
× fix_prediction_after: public lqlkjjsbdeuqyggntcrfoid labelTouch ( android.lqlkjjsbdeuqyggntcrfiew.View lqlkjjsbdeuqyggntcrfiew.View lqlkjjsbdeuqyggntcrf ) { finishWithResult ( "label" ) ; }

line_index: 41
bug_before_refactoring: private void initialisePresenter ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> private void initialisePresenter ( boolean firstLoad ) { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> - Fix RecyclerView alignment bug - Fix layout dimensions
bug_after_refactoring: private void initialisePresenter ( boolean swgfuhvfuahhzhatbwbv ) { if ( swgfuhvfuahhzhatbwbv ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> private void initialisePresenter ( boolean swgfuhvfuahhzhatbwbv ) { if ( swgfuhvfuahhzhatbwbv ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } } <s> - Fix RecyclerView alignment bug - Fix layout dimensions
fix_before_refactoring: private void initialisePresenter () { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; if ( ( presenter ) == null ) { presenter = createPresenter () ; } }
fix_after_refactoring: private void initialisePresenter () { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; if ( ( presenter ) == null ) { presenter = createPresenter () ; } }
× fix_prediction_before: private void initialisePresenter () { if ( firstLoad ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } }
× fix_prediction_after: private void initialisePresenter () { if ( swgfuhvfuahhzhatbwbv ) { presenter = createPresenter () ; } else { presenter = ( ( P ) ( com.vincenttetau.weatherapp.activities.BaseActivity . getLastCustomNonConfigurationInstance () ) ) ; } }

line_index: 42
bug_before_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> Выполнил пункт HW02  minor bug fixes
bug_after_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int zhnpowsddrfgocuinhnj , java.time.LocalDateTime kozsqwqjpxnkkkyyhjmu , java.time.LocalDateTime nclwjsjcwhlxdryysfbw ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( zhnpowsddrfgocuinhnj , kozsqwqjpxnkkkyyhjmu , nclwjsjcwhlxdryysfbw ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( int zhnpowsddrfgocuinhnj , java.time.LocalDateTime kozsqwqjpxnkkkyyhjmu , java.time.LocalDateTime nclwjsjcwhlxdryysfbw ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( zhnpowsddrfgocuinhnj , kozsqwqjpxnkkkyyhjmu , nclwjsjcwhlxdryysfbw ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; } <s> Выполнил пункт HW02  minor bug fixes
fix_before_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getByDate ( int userId , java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( userId , start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; }
fix_after_refactoring: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getByDate ( int zhnpowsddrfgocuinhnj , java.time.LocalDateTime kozsqwqjpxnkkkyyhjmu , java.time.LocalDateTime nclwjsjcwhlxdryysfbw ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( zhnpowsddrfgocuinhnj , kozsqwqjpxnkkkyyhjmu , nclwjsjcwhlxdryysfbw ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; }
× fix_prediction_before: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( java.time.LocalDateTime start , java.time.LocalDateTime end ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( start , end ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; }
× fix_prediction_after: public java.util.List < ru.javawebinar.topjava.to.MealWithExceed > getAllByDate ( java.time.LocalDateTime kozsqwqjpxnkkkyyhjmu , java.time.LocalDateTime nclwjsjc wheelxdryysfbw ) { ru.javawebinar.topjava.web.meal.MealRestController.LOG . info ( "getAllByDateTime" ) ; return ru.javawebinar.topjava.util.MealsUtil . getWithExceeded ( service . getByDate ( zhnpowsddrfgocuinhnj , kozsqwqjpxnkkkyyhjmu , nclwjsjc wheelxdryysfbw ) , MealsUtil.DEFAULT_CALORIES_PER_DAY ) ; }

line_index: 44
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{id}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{id}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; } <s> fixed http 404 error now getting http 406 error
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{gussyjeeuyoerexhvyel}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer gussyjeeuyoerexhvyel ) { return this . customerRepository . findById ( gussyjeeuyoerexhvyel ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{gussyjeeuyoerexhvyel}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer gussyjeeuyoerexhvyel ) { return this . customerRepository . findById ( gussyjeeuyoerexhvyel ) ; } <s> fixed http 404 error now getting http 406 error
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/customers/{gussyjeeuyoerexhvyel}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer gussyjeeuyoerexhvyel ) { return this . customerRepository . findById ( gussyjeeuyoerexhvyel ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/ customer/{id}" ) CustomerProtos.Customer customer ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return this . customerRepository . findById ( id ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/ customer/{gussyjeeuyoerexhvyel}" ) CustomerProtos.Customer customer () { return this . customerRepository . findById ( gussyjeeuyoerexhvyel ) ; }

line_index: 46
bug_before_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; } <s> public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; } <s> + hope I've now fixed every bug I introduced in #12
bug_after_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , comment ) ; } <s> public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , comment ) ; } <s> + hope I've now fixed every bug I introduced in #12
fix_before_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , null ) ; }
fix_after_refactoring: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , null ) ; }
× fix_prediction_before: public static java.lang.String autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post post , in.bhargavrao.stackoverflow.natty.entities.AutoComment comment ) { return in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( post , comment ) ; }
× fix_prediction_after: public static void autoFlag ( in.bhargavrao.stackoverflow.natty.entities.Post kyydmhnqfrchpqhceldj ) { in.bhargavrao.stackoverflow.natty.entities.AutoComment comment = new in.bhargavrao.stackoverflow.natty.entities.AutoComment ( in.bhargavrao.stackoverflow.natty.entities.AutoCommentType.UNDEFINED ) ; in.bhargavrao.stackoverflow.natty.utils.PostUtils . autoFlag ( kyydmhnqfrchpqhceldj , comment ) ; }

line_index: 47
bug_before_refactoring: public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( item.id ) ) . querySingle () ; deletedItem . delete () ; } <s> public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( item.id ) ) . querySingle () ; deletedItem . delete () ; } <s> Bug Fix: Exception on item update
bug_after_refactoring: public void deleteItem ( com.codepath.simpletodo.Item wrcnkzuinvdgowdgsyru ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( wrcnkzuinvdgowdgsyru.id ) ) . querySingle () ; deletedItem . delete () ; } <s> public void deleteItem ( com.codepath.simpletodo.Item wrcnkzuinvdgowdgsyru ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( wrcnkzuinvdgowdgsyru.id ) ) . querySingle () ; deletedItem . delete () ; } <s> Bug Fix: Exception on item update
fix_before_refactoring: public void deleteItem ( com.codepath.simpletodo.Item item ) { com.codepath.simpletodo.Item deletedItem = new com.codepath.simpletodo.Item ( item . getId () , item . getText () ) ; deletedItem . delete () ; }
fix_after_refactoring: public void deleteItem ( com.codepath.simpletodo.Item wrcnkzuinvdgowdgsyru ) { com.codepath.simpletodo.Item deletedItem = new com.codepath.simpletodo.Item ( wrcnkzuinvdgowdgsyru . getId () , wrcnkzuinvdgowdgsyru . getText () ) ; deletedItem . delete () ; }
× fix_prediction_before: public void deleteItem ( int id ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( id ) ) . querySingle () ; deletedItem . delete () ; }
× fix_prediction_after: public void deleteItem ( int id ) { com.codepath.simpletodo.Item deletedItem = com.raizlabs.android.dbflow.sql.language.SQLite . select () . from ( com.codepath.simpletodo.Item . class ) . where ( Item_Table.id . eq ( id ) ) . querySingle () ; deletedItem . delete () ; }

line_index: 49
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> Wallpapers now apply on click. Current issue is that soft navigation bar hides the bottom portion of the last items in the WallpaperListFragment. Need to fix.
bug_after_refactoring: @ jajpqfovkdjheogurvifboa.lang.Ojpqfovkdjheogurvifboerride public jpqfovkdjheogurvifbooid onClick ( android.jpqfovkdjheogurvifboiew.View jpqfovkdjheogurvifbo ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> @ jajpqfovkdjheogurvifboa.lang.Ojpqfovkdjheogurvifboerride public jpqfovkdjheogurvifbooid onClick ( android.jpqfovkdjheogurvifboiew.View jpqfovkdjheogurvifbo ) { mListener . OnWallpaperSelected ( imageResId , name , description , url ) ; } <s> Wallpapers now apply on click. Current issue is that soft navigation bar hides the bottom portion of the last items in the WallpaperListFragment. Need to fix.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , url ) ; }
fix_after_refactoring: @ jajpqfovkdjheogurvifboa.lang.Ojpqfovkdjheogurvifboerride public jpqfovkdjheogurvifbooid onClick ( android.jpqfovkdjheogurvifboiew.View jpqfovkdjheogurvifbo ) { mListener . OnWallpaperSelected ( imageResId , name , url ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { mListener . OnWallpaperSelected ( imageResId , name , description , url , true ) ; }
× fix_prediction_after: @ jajpqfovkdjheogurvifboa.lang.Ojpqfovkdjheogurvifboerride public jpqfovkdjheogurvifbooid onClick ( android.jpqfovkdjheogurvifboiew.View jpqfovkdjheogurvifbo ) { mListener . OnWallpaperSelected ( imageResId , name , description , url , false ) ; }

line_index: 50
bug_before_refactoring: public void settouchingLadder ( boolean b ) { touchingLadder = b ; } <s> public void settouchingLadder ( boolean b ) { touchingLadder = b ; } <s> fixed issue where mario jumps over platforms  fixed ladder functionality
bug_after_refactoring: puebiqnrsneejocdgibhazlic void settouchingLadder ( ebiqnrsneejocdgibhazoolean ebiqnrsneejocdgibhaz ) { touchingLadder = ebiqnrsneejocdgibhaz ; } <s> puebiqnrsneejocdgibhazlic void settouchingLadder ( ebiqnrsneejocdgibhazoolean ebiqnrsneejocdgibhaz ) { touchingLadder = ebiqnrsneejocdgibhaz ; } <s> fixed issue where mario jumps over platforms  fixed ladder functionality
fix_before_refactoring: public void settouchingLadder ( boolean b ) { this . touchingLadder = b ; }
fix_after_refactoring: puebiqnrsneejocdgibhazlic void settouchingLadder ( ebiqnrsneejocdgibhazoolean ebiqnrsneejocdgibhaz ) { this . touchingLadder = ebiqnrsneejocdgibhaz ; }
× fix_prediction_before: public void settouchingLadder ( boolean b ) { touchingLadder = b ; }
× fix_prediction_after: puebiqnrsneejocdgibhazlic void settouchingLadder (ebiqnrsneejocdgibhazoolean ebiqnrsneejocdgibhaz ) { touchingLadder = ebiqnrsneejocdgibhaz ; }

line_index: 52
bug_before_refactoring: @ java.lang.Override public void setData ( java.util.List < E > list ) {} <s> @ java.lang.Override public void setData ( java.util.List < E > list ) {} <s> Bug Fix event xml list
bug_after_refactoring: @ java.lang.Override public void setData ( java.util.List < E > lxugldvfguzougaquruo ) {} <s> @ java.lang.Override public void setData ( java.util.List < E > lxugldvfguzougaquruo ) {} <s> Bug Fix event xml list
fix_before_refactoring: @ java.lang.Override public abstract void setData ( java.util.List < E > list ) ;
fix_after_refactoring: @ java.lang.Override public abstract void setData ( java.util.List < E > lxugldvfguzougaquruo ) ;
× fix_prediction_before: { super . setData ( list ) ; }
× fix_prediction_after: { super . setData ( lxugldvfguzougaquruo ) ; }

line_index: 53
bug_before_refactoring: private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( val ) ) ) ; } <s> private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( val ) ) ) ; } <s> fixed some bugs
bug_after_refactoring: private double sigmoid ( double lblvridexuhuplcorirm ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( lblvridexuhuplcorirm ) ) ) ; } <s> private double sigmoid ( double lblvridexuhuplcorirm ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( lblvridexuhuplcorirm ) ) ) ; } <s> fixed some bugs
fix_before_refactoring: private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( ( ( - 1 ) * val ) ) ) ) ; }
fix_after_refactoring: private double sigmoid ( double lblvridexuhuplcorirm ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( ( ( - 1 ) * lblvridexuhuplcorirm ) ) ) ) ; }
× fix_prediction_before: private double sigmoid ( double val ) { return 1.0 / ( 1.0 + ( java.lang.Math . exp ( val ) ) ) ; }
× fix_prediction_after: private double sigmoid ( double lblvridexuhuplcorirm ) { return 1.0 / ( 1.0 + ( 1.0 / lblvridexuhuplcorirm ) ) ; }

line_index: 56
bug_before_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( deviceDataMapEntries ) ; } else { this . deviceDataMap . putAll ( deviceDataMapEntries ) ; } } <s> public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( deviceDataMapEntries ) ; } else { this . deviceDataMap . putAll ( deviceDataMapEntries ) ; } } <s> Fixed deviceDataMap issue.
bug_after_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap tguhtxmipxtriyllmvjo ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( tguhtxmipxtriyllmvjo ) ; } else { this . deviceDataMap . putAll ( tguhtxmipxtriyllmvjo ) ; } } <s> public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap tguhtxmipxtriyllmvjo ) { if ( ( this . deviceDataMap ) == null ) { setDeviceDataMap ( tguhtxmipxtriyllmvjo ) ; } else { this . deviceDataMap . putAll ( tguhtxmipxtriyllmvjo ) ; } } <s> Fixed deviceDataMap issue.
fix_before_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { if ( ( this . deviceDataMap ) == null ) { this . deviceDataMap = new com.emc.storageos.db.client.model.StringSetMap () ; } this . deviceDataMap . putAll ( deviceDataMapEntries ) ; }
fix_after_refactoring: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap tguhtxmipxtriyllmvjo ) { if ( ( this . deviceDataMap ) == null ) { this . deviceDataMap = new com.emc.storageos.db.client.model.StringSetMap () ; } this . deviceDataMap . putAll ( tguhtxmipxtriyllmvjo ) ; }
× fix_prediction_before: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap deviceDataMapEntries ) { this . deviceDataMap . putAll ( deviceDataMapEntries ) ; }
× fix_prediction_after: public void addDeviceDataMap ( com.emc.storageos.db.client.model.StringSetMap tguhtxmipxtriyllmvjo ) { this . deviceDataMap . putAll ( tguhtxmipxtriyllmvjo ) ; }

line_index: 57
bug_before_refactoring: @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { if ( i == 0 ) return null ; return mFolders . get ( ( i - 1 ) ) ; } <s> @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { if ( i == 0 ) return null ; return mFolders . get ( ( i - 1 ) ) ; } <s> fix bug
bug_after_refactoring: @ java.lang.Overrbejayvufccoplfrubrdode publbejayvufccoplfrubrdoc me.nereo.multbejayvufccoplfrubrdo_bejayvufccoplfrubrdomage_selector.bean.Folder getItem ( bejayvufccoplfrubrdont bejayvufccoplfrubrdo ) { bejayvufccoplfrubrdof ( bejayvufccoplfrubrdo == 0 ) return null ; return mFolders . get ( ( bejayvufccoplfrubrdo - 1 ) ) ; } <s> @ java.lang.Overrbejayvufccoplfrubrdode publbejayvufccoplfrubrdoc me.nereo.multbejayvufccoplfrubrdo_bejayvufccoplfrubrdomage_selector.bean.Folder getItem ( bejayvufccoplfrubrdont bejayvufccoplfrubrdo ) { bejayvufccoplfrubrdof ( bejayvufccoplfrubrdo == 0 ) return null ; return mFolders . get ( ( bejayvufccoplfrubrdo - 1 ) ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { return mFolders . get ( i ) ; }
fix_after_refactoring: @ java.lang.Overrbejayvufccoplfrubrdode publbejayvufccoplfrubrdoc me.nereo.multbejayvufccoplfrubrdo_bejayvufccoplfrubrdomage_selector.bean.Folder getItem ( bejayvufccoplfrubrdont bejayvufccoplfrubrdo ) { return mFolders . get ( bejayvufccoplfrubrdo ) ; }
× fix_prediction_before: @ java.lang.Override public me.nereo.multi_image_selector.bean.Folder getItem ( int i ) { if ( i == 0 ) return null ; return mFolders . get ( i ) ; }
× fix_prediction_after: @ java.lang.Overrbejayvufccoplfrubrdode publbejayvufccoplfrubrdoc me.nereo.multbejayvufccoplfrubrdo_bejayvufccoplfrubrdomage_selector.bean.Folder getItem ( bejayvufccoplfrubrdont bejayvufccoplfrubrdo ) { return mFolders . get ( bejayvufccoplfrubrdo - 1 ) ; }

line_index: 58
bug_before_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( splitPoint != base ) { base . doInitScan () ; } } <s> public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( splitPoint != base ) { base . doInitScan () ; } } <s> Adjusted update logic to fix antenna network not forming in some cases  Added debug code to check network size with a stick
bug_after_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart udhgfyamnzrxznptpxqd ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( udhgfyamnzrxznptpxqd != base ) { base . doInitScan () ; } } <s> public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart udhgfyamnzrxznptpxqd ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( udhgfyamnzrxznptpxqd != base ) { base . doInitScan () ; } } <s> Adjusted update logic to fix antenna network not forming in some cases  Added debug code to check network size with a stick
fix_before_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) { if ( this . contains ( splitPoint ) ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( splitPoint != base ) { base . doInitScan () ; } } }
fix_after_refactoring: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart udhgfyamnzrxznptpxqd ) { if ( this . contains ( udhgfyamnzrxznptpxqd ) ) { com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntenna base = this . base ; kill () ; if ( udhgfyamnzrxznptpxqd != base ) { base . doInitScan () ; } } }
× fix_prediction_before: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart splitPoint ) {}
× fix_prediction_after: public void split ( com.builtbroken.icbm.content.launcher.controller.remote.antenna.TileAntennaPart udhgfyam nzrxznptpxqd ) { this . base = this . base ; kill () ; if ( udhgfyam nzrxznptpxqd != base ) { base . doInitScan () ; } }

line_index: 59
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String toolId ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String toolId ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> bug fixes
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String qmvafvpuxdkqaqfydcqw ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools ( @ org.springframework.web.bind.annotation.PathVariable ( value = "registry-id" , required = true ) java.lang.String qmvafvpuxdkqaqfydcqw ) { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; } <s> bug fixes
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools () { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools () { java.util.List < org.sagebionetworks.ga4gh.model.Tool > tools = new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; return tools ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools () { return new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/tools" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < org.sagebionetworks.ga4gh.model.Tool > listTools () { return new java.util.ArrayList < org.sagebionetworks.ga4gh.model.Tool > () ; }

line_index: 60
bug_before_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { for ( act.util.ClassNode child : children ) { child . visitTree ( visitor ) ; } return this ; } <s> public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { for ( act.util.ClassNode child : children ) { child . visitTree ( visitor ) ; } return this ; } <s> EventBus: now allow simple event object that not extends from ActEvent; ClassNode traverse: fix the issue that ClassNode get visited multiple times
bug_after_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > gumsokcvxnkithurgtei ) { for ( act.util.ClassNode child : children ) { child . visitTree ( gumsokcvxnkithurgtei ) ; } return this ; } <s> public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > gumsokcvxnkithurgtei ) { for ( act.util.ClassNode child : children ) { child . visitTree ( gumsokcvxnkithurgtei ) ; } return this ; } <s> EventBus: now allow simple event object that not extends from ActEvent; ClassNode traverse: fix the issue that ClassNode get visited multiple times
fix_before_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { visitSubTree ( visitor , new java.util.HashSet < act.util.ClassNode > () ) ; return this ; }
fix_after_refactoring: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > gumsokcvxnkithurgtei ) { visitSubTree ( gumsokcvxnkithurgtei , new java.util.HashSet < act.util.ClassNode > () ) ; return this ; }
× fix_prediction_before: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > visitor ) { visitTree ( visitor , new act.util.HashSet < act.util.ClassNode > () ) ; return this ; }
× fix_prediction_after: public act.util.ClassNode visitSubTree ( $.Function < act.util.ClassNode , ? > gumsokcvxnkithurgtei ) { return visitTree ( gumsokcvxnkithurgtei ) ; }

line_index: 62
bug_before_refactoring: @ java.lang.Override public synchronized void changeSpeedFactor ( double newSpeedFactor ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; } } <s> @ java.lang.Override public synchronized void changeSpeedFactor ( double newSpeedFactor ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; } } <s> Fixed lots of locking issues with the SimulationContext
bug_after_refactoring: @ java.lang.Override public synchronized void changeSpeedFactor ( double dljvqehybannhdkwdunp ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( dljvqehybannhdkwdunp ) ; } } <s> @ java.lang.Override public synchronized void changeSpeedFactor ( double dljvqehybannhdkwdunp ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( dljvqehybannhdkwdunp ) ; } } <s> Fixed lots of locking issues with the SimulationContext
fix_before_refactoring: @ java.lang.Override public void changeSpeedFactor ( double newSpeedFactor ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; }
fix_after_refactoring: @ java.lang.Override public void changeSpeedFactor ( double dljvqehybannhdkwdunp ) { simulationClock . changeSpeedFactor ( dljvqehybannhdkwdunp ) ; }
× fix_prediction_before: @ java.lang.Override public synchronized void changeSpeedFactor ( double newSpeedFactor ) { if ( ! ( simulationClock . isStopped () ) ) { simulationClock . changeSpeedFactor ( newSpeedFactor ) ; } }
× fix_prediction_after: @ java.lang.Override public synchronized void changeSpeedFactor ( double dljvqehybannhdkwdunp ) { changeSpeedFactor ( dljvqehybannhdkwdunp ) ; }

line_index: 63
bug_before_refactoring: void setNextButtonEnabled ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; } <s> void setNextButtonEnabled ( boolean enabled ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; } <s> Updated the version to 2.2.0 since the changes are more than bug fixes. Increased the visibility of the DefaultControls to better allow extending the EMVideoView
bug_after_refactoring: void setNextButtonEnabled ( boolean lmcqlzspvzhxyjqteait ) { nextButton . setTag ( lmcqlzspvzhxyjqteait ) ; nextButton . setEnabled ( lmcqlzspvzhxyjqteait ) ; } <s> void setNextButtonEnabled ( boolean lmcqlzspvzhxyjqteait ) { nextButton . setTag ( lmcqlzspvzhxyjqteait ) ; nextButton . setEnabled ( lmcqlzspvzhxyjqteait ) ; } <s> Updated the version to 2.2.0 since the changes are more than bug fixes. Increased the visibility of the DefaultControls to better allow extending the EMVideoView
fix_before_refactoring: public void setNextButtonEnabled ( boolean enabled ) { nextButton . setEnabled ( enabled ) ; }
fix_after_refactoring: public void setNextButtonEnabled ( boolean lmcqlzspvzhxyjqteait ) { nextButton . setEnabled ( lmcqlzspvzhxyjqteait ) ; }
× fix_prediction_before: void setNextButtonEnabled ( boolean enabled ) { if ( ( nextButton ) != null ) { nextButton . setTag ( enabled ) ; nextButton . setEnabled ( enabled ) ; } }
× fix_prediction_after: void setNextButtonEnabled () { nextButton . setTag ( lmcqlzspvzhxyjqteait ) ; nextButton . setEnabled ( lmcqlzspvzhxyjqteait ) ; }

line_index: 64
bug_before_refactoring: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > toRemove , @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project , boolean synchronous ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > toRemove , @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project , boolean synchronous ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> Debug logging for ScalaSdkResolver + some clean-ups
bug_after_refactoring: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > bylyfhumttxqxqtcryew , @ org.jetbrains.annotations.NotNull com.intellij.openapi.oennugksrddalypjmrux.Project oennugksrddalypjmrux , boolean fiqgwqqpudvnxdqgnfvb ) { for ( com.intellij.openapi.module.Module module : bylyfhumttxqxqtcryew ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > bylyfhumttxqxqtcryew , @ org.jetbrains.annotations.NotNull com.intellij.openapi.oennugksrddalypjmrux.Project oennugksrddalypjmrux , boolean fiqgwqqpudvnxdqgnfvb ) { for ( com.intellij.openapi.module.Module module : bylyfhumttxqxqtcryew ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } } <s> Debug logging for ScalaSdkResolver + some clean-ups
fix_before_refactoring: public void execute () { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } }
fix_after_refactoring: public void execute () { for ( com.intellij.openapi.module.Module module : bylyfhumttxqxqtcryew ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } }
× fix_prediction_before: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > toRemove ) { for ( com.intellij.openapi.module.Module module : toRemove ) { module . clearOption ( PantsConstants.PANTS_TARGET_ADDRESSES_KEY ) ; } }
× fix_prediction_after: @ java.lang.Override public void removeData ( @ org.jetbrains.annotations.NotNull java.util.Collection < ? extends com.intellij.openapi.module.Module > bylyfhumttxqxqtcryew ) {}

line_index: 65
bug_before_refactoring: public static java.lang.String getImageHtml ( java.lang.String url ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + url ) + "\"></body></html>" ; } <s> public static java.lang.String getImageHtml ( java.lang.String url ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + url ) + "\"></body></html>" ; } <s> - Fix grid UI bugs and behavior
bug_after_refactoring: public static java.lang.String getImageHtml ( java.lang.String opsssqdzfouqbxzqlbxz ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + opsssqdzfouqbxzqlbxz ) + "\"></body></html>" ; } <s> public static java.lang.String getImageHtml ( java.lang.String opsssqdzfouqbxzqlbxz ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + opsssqdzfouqbxzqlbxz ) + "\"></body></html>" ; } <s> - Fix grid UI bugs and behavior
fix_before_refactoring: public static java.lang.String getImageHtml ( java.lang.String src ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + src ) + "\"></body></html>" ; }
fix_after_refactoring: public static java.lang.String getImageHtml ( java.lang.String src ) { return ( "<html><head><meta name=\"viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + src ) + "\"></body></html>" ; }
× fix_prediction_before: public static java.lang.String getImageHtml ( java.lang.String url ) { return ( "<html><head><meta name=\" viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + url ) + "\"></body></html>" ; }
× fix_prediction_after: public static java.lang.String getImageHtml () { return ( "<html><head><meta name=\" viewport\" content=\"width=device-width, minimum-scale=0.1\"><style>img {width:100%;}</style></head><body style=\"margin: 0px;\"><img style=\"-webkit-user-select: none; cursor: zoom-in;\" src=\"" + opsssqdzfouqbxzqlbxz ) + "\"></body></html>" ; }

line_index: 66
bug_before_refactoring: public void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( session , pSessionId ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> public void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( session , pSessionId ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> Fixing session expiration issues
bug_after_refactoring: public void setSessionOwnership ( java.lang.String rxscqdqahfhxmajwpkmu , java.lang.String xeyzmmorgcuwjbckgmws ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( rxscqdqahfhxmajwpkmu , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . set ( skey , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> public void setSessionOwnership ( java.lang.String rxscqdqahfhxmajwpkmu , java.lang.String xeyzmmorgcuwjbckgmws ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( rxscqdqahfhxmajwpkmu , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . set ( skey , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } <s> Fixing session expiration issues
fix_before_refactoring: private void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( pSessionId , session ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; }
fix_after_refactoring: private void setSessionOwnership ( java.lang.String rxscqdqahfhxmajwpkmu , java.lang.String xeyzmmorgcuwjbckgmws ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( xeyzmmorgcuwjbckgmws , rxscqdqahfhxmajwpkmu ) ; org.scg.db.DB.JEDIS . set ( skey , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; }
× fix_prediction_before: public void setSessionOwnership ( java.lang.String session , java.lang.String pSessionId ) { if ( session != null ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( session , pSessionId ) ; org.scg.db.DB.JEDIS . set ( skey , pSessionId ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; } }
× fix_prediction_after: public void setSessionOwnership ( java.lang.String rxscqdqahfhxmajwpkmu , java.lang.String xeyzmmorgcuwjbckgmws ) { java.lang.String skey = org.scg.common.tool.SIDTool . buildWSSessionKey ( rxscqdqahfhxmajwpkmu , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . set ( skey , xeyzmmorgcuwjbckgmws ) ; org.scg.db.DB.JEDIS . expire ( skey , org.scg.db.DB.PROP . getRedisDefaultSessionExpiration () ) ; }

line_index: 67
bug_before_refactoring: private void sendForm ( final jd.parser.html.Form form ) throws java.lang.Exception { br . submitForm ( form ) ; correctBR () ; } <s> private void sendForm ( final jd.parser.html.Form form ) throws java.lang.Exception { br . submitForm ( form ) ; correctBR () ; } <s> -uploadcloudpro: added account support  premium untested RE forum 69669 -ShrLnksBz: fixed cnl2 over plugin RE forum 69672 -dailymotion settings: probably issues were caused by missing default refs #79463  git-svn-id: svn://svn.jdownloader.org/jdownloader/trunk@34018 ebf7c1c2-ba36-0410-9fe8-c592906822b4
bug_after_refactoring: private void sendForm ( final jd.parser.html.Form prdhibtmdsbigqijdvwa ) throws java.lang.Exception { br . submitForm ( prdhibtmdsbigqijdvwa ) ; correctBR () ; } <s> private void sendForm ( final jd.parser.html.Form prdhibtmdsbigqijdvwa ) throws java.lang.Exception { br . submitForm ( prdhibtmdsbigqijdvwa ) ; correctBR () ; } <s> -uploadcloudpro: added account support  premium untested RE forum 69669 -ShrLnksBz: fixed cnl2 over plugin RE forum 69672 -dailymotion settings: probably issues were caused by missing default refs #79463  git-svn-id: svn://svn.jdownloader.org/jdownloader/trunk@34018 ebf7c1c2-ba36-0410-9fe8-c592906822b4
fix_before_refactoring: private void submitForm ( final jd.parser.html.Form form ) throws java.lang.Exception { submitForm ( br , form , true ) ; }
fix_after_refactoring: private void submitForm ( final jd.parser.html.Form prdhibtmdsbigqijdvwa ) throws java.lang.Exception { submitForm ( br , prdhibtmdsbigqijdvwa , true ) ; }
× fix_prediction_before: private void sendForm ( final jd.parser.html.Form form ) throws java.lang.Exception { submitForm ( form ) ; }
× fix_prediction_after: private void sendForm ( final jd.parser.html.Form prdhibtmdsbigqijdvwa ) throws java.lang.Exception { br . submitForm ( prdhibtmdsbigqijdvwa ) ; }

line_index: 68
bug_before_refactoring: public void addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synonymFinder . addPair ( a , b ) ; } <s> public void addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synonymFinder . addPair ( a , b ) ; } <s> Tries updated to HashMap and some bugs fixed  After some tests I figured out that using HashMap is better that using Trie Data Structure. I changed my code to use HashMap instead of Trie. Also  while adding word and its synonym you will receive the status. (0 - successfully added  1 - something went wrong  2 - it has been already added)
bug_after_refactoring: puwtkrluwtcffsjxxtvmmdlic void cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgirOfSynonyms ( jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String wtkrluwtcffsjxxtvmmd ) throws jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.io.FileNotFoundException { synonymFinder . cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgir ( cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , wtkrluwtcffsjxxtvmmd ) ; } <s> puwtkrluwtcffsjxxtvmmdlic void cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgirOfSynonyms ( jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String wtkrluwtcffsjxxtvmmd ) throws jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.io.FileNotFoundException { synonymFinder . cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgir ( cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , wtkrluwtcffsjxxtvmmd ) ; } <s> Tries updated to HashMap and some bugs fixed  After some tests I figured out that using HashMap is better that using Trie Data Structure. I changed my code to use HashMap instead of Trie. Also  while adding word and its synonym you will receive the status. (0 - successfully added  1 - something went wrong  2 - it has been already added)
fix_before_refactoring: public int addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { return synonymFinder . addPair ( a , b ) ; }
fix_after_refactoring: puwtkrluwtcffsjxxtvmmdlic int cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgirOfSynonyms ( jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String wtkrluwtcffsjxxtvmmd ) throws jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.io.FileNotFoundException { return synonymFinder . cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgir ( cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , wtkrluwtcffsjxxtvmmd ) ; }
× fix_prediction_before: public void addPairOfSynonyms ( java.lang.String a , java.lang.String b ) throws java.io.FileNotFoundException { synonymFinder . addPair ( a , b , 0 ) ; }
× fix_prediction_after: { this . synonymFinder . cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgirOfSynonyms ( jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgvcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgng.String wtkrluwtcffsjxxtvmmdenwhtsg.lcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg.io.FileNotFoundException synonymFinder . cuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsg , jcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgddPcuahfvhaudcpwtkrluwtcffsjxxtvmmdenwhtsgirwtkrluwtcffsjxxtvmmdenwhtsg , wtkrluwtcffsjxxtvmmdenwhtsg , wtkrluwtcffsjxxtvmmdenwhtsg.sjxxtvmmdenwhtsg.sjxxtvmmdenwhtsg.sjxxtvmmdenwhtsg.sjxxtvmmdenwhtsg.sjxxtvmmdenwhtsg.jxxtvmmd

line_index: 69
bug_before_refactoring: protected abstract boolean doLeaveGroup ( long groupId , long userId ) ; <s> protected abstract boolean doLeaveGroup ( long groupId , long userId ) ; <s> fix bug join/leave group
bug_after_refactoring: protected abstract boolean doLeaveGroup ( long ncoiitnifmgifdaclmqo , long wbdvatwkwstydieqxkpe ) ; <s> protected abstract boolean doLeaveGroup ( long ncoiitnifmgifdaclmqo , long wbdvatwkwstydieqxkpe ) ; <s> fix bug join/leave group
fix_before_refactoring: protected abstract boolean doLeaveGroup ( long userId , long groupId ) ;
fix_after_refactoring: protected abstract boolean doLeaveGroup ( long wbdvatwkwstydieqxkpe , long ncoiitnifmgifdaclmqo ) ;
× fix_prediction_before: public abstract boolean doLeaveGroup ( long groupId , long userId ) ;
× fix_prediction_after: protected abstract boolean doLeaveGroup ( long ncoiitnifmgifdaclmqo , long wbdvatwkwstydieqxkpe , long id ) ;

line_index: 71
bug_before_refactoring: public boolean isSearchInMessagesFragment ( int position ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } <s> public boolean isSearchInMessagesFragment ( int position ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } <s> improve_universal_search_activity Fix the screen rotation issue.
bug_after_refactoring: public boolean isSearchInMessagesFragment ( int dhizkkzwzphxbfpcunpq ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( dhizkkzwzphxbfpcunpq ) ) ; } <s> public boolean isSearchInMessagesFragment ( int dhizkkzwzphxbfpcunpq ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( dhizkkzwzphxbfpcunpq ) ) ; } <s> improve_universal_search_activity Fix the screen rotation issue.
fix_before_refactoring: public boolean isSearchInMessagesFragment ( int position ) { if ( null != ( mTabTitles ) ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } return false ; }
fix_after_refactoring: public boolean isSearchInMessagesFragment ( int dhizkkzwzphxbfpcunpq ) { if ( null != ( mTabTitles ) ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( dhizkkzwzphxbfpcunpq ) ) ; } return false ; }
× fix_prediction_before: public boolean isSearchInMessagesFragment ( int position ) { if ( ( mTabTitles ) != null ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( position ) ) ; } else { return false ; } }
× fix_prediction_after: public boolean isSearchInMessagesFragment ( android.view.View view ) { return ( R.string.tab_title_search_messages ) == ( mTabTitles . get ( dhizkkzwzphxbfpcunpq ) ) ; }

line_index: 72
bug_before_refactoring: public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void setTasks ( java.lang.String tasks ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { synchronized ( lblTaskTitle ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; } repaint () ; } <s> see #11591  see #11355 - Splash screen: attempt to fix synchronisation/deadlock issue  git-svn-id: http://josm.openstreetmap.de/svn/trunk@8524 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: public void setTasks ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
fix_after_refactoring: public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; repaint () ; }
× fix_prediction_before: public void setTasks ( java.lang.String tasks ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + tasks ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; }
× fix_prediction_after: public void setTasks ( java.lang.String ancqampccwmyzbudsymk ) { lblTaskTitle . setText ( ( ( org.openstreetmap.josm.gui.SplashScreen.SplashScreenProgressRenderer.LABEL_HTML ) + ancqampccwmyzbudsymk ) ) ; lblTaskTitle . setCaretPosition ( lblTaskTitle . getDocument () . getLength () ) ; lblTaskTitle . repaint () ; }

line_index: 73
bug_before_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , null , null , null ) ; } <s> public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , null , null , null ) ; } <s> Fixed a small bug from modifying RequiredInputParcel
bug_after_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long hakvdrxkykwhgtadzqnx ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , hakvdrxkykwhgtadzqnx , null , null , null ) ; } <s> public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long hakvdrxkykwhgtadzqnx ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , hakvdrxkykwhgtadzqnx , null , null , null ) ; } <s> Fixed a small bug from modifying RequiredInputParcel
fix_before_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , masterKeyId , null , null ) ; }
fix_after_refactoring: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long hakvdrxkykwhgtadzqnx ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , hakvdrxkykwhgtadzqnx , hakvdrxkykwhgtadzqnx , null , null ) ; }
× fix_prediction_before: private static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long masterKeyId ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , masterKeyId , null , null , null ) ; }
× fix_prediction_after: public static org.sufficientlysecure.keychain.service.input.RequiredInputParcel createRequiredKeyringPassphrase ( long hakvdrxkykwhgtadzqnx ) { return new org.sufficientlysecure.keychain.service.input.RequiredInputParcel ( org.sufficientlysecure.keychain.service.input.RequiredInputParcel.RequiredInputType.PASSPHRASE_KEYRING_UNLOCK , null , null , null , hakvdrxkykwhgtadzqnx , null , null , null ) ; }

line_index: 74
bug_before_refactoring: de.hdm.tellme.client.gui.report.Report2 report2GenerierenListe ( de.hdm.tellme.shared.bo.Nutzer n ) ; <s> de.hdm.tellme.client.gui.report.Report2 report2GenerierenListe ( de.hdm.tellme.shared.bo.Nutzer n ) ; <s> Bugfix  Programm läuft wieder
bug_after_refactoring: de.hdm.tellme.clieselrhgidjablvfpdqpbvt.gui.report.Report2 report2GeselrhgidjablvfpdqpbveriereselrhgidjablvfpdqpbvListe ( de.hdm.tellme.shared.bo.Nutzer selrhgidjablvfpdqpbv ) ; <s> de.hdm.tellme.clieselrhgidjablvfpdqpbvt.gui.report.Report2 report2GeselrhgidjablvfpdqpbveriereselrhgidjablvfpdqpbvListe ( de.hdm.tellme.shared.bo.Nutzer selrhgidjablvfpdqpbv ) ; <s> Bugfix  Programm läuft wieder
fix_before_refactoring: java.util.Vector < de.hdm.tellme.shared.bo.Nutzer > report2GenerierenListe ( int i ) ;
fix_after_refactoring: java.util.Vector < de.hdm.tellme.shared.bo.Nutzer > report2GeselrhgidjablvfpdqpbveriereselrhgidjablvfpdqpbvListe ( iselrhgidjablvfpdqpbvt i ) ;
× fix_prediction_before: final de.hdm.tellme.client.gui.report.Report2 report2GenerierenListe ( final de.hdm.tellme.shared.bo.Nutzer n ) ;
× fix_prediction_after: de.hdm.tellme.clieselrh groupsjablvfpdqpbvt.gui.report.Report2 report2Geselrh groupsjabablvfpdqpbveriereselrh groupsjablvfpdqpbvListe ( de.hdm.tellme.shared.bo.Nutzer selrh groupsjablvfpdqpbv ) ;

line_index: 75
bug_before_refactoring: public void setGivenEnd ( java.lang.String end ) { givenEnd = end ; } <s> public void setGivenEnd ( java.lang.String end ) { givenEnd = end ; } <s> Bug in InsertClassToDBVisitor resolved.. Working perfectly now
bug_after_refactoring: public void setGivenEnd ( java.lang.String ynaqqnturiobdinybhpy ) { givenEnd = ynaqqnturiobdinybhpy ; } <s> public void setGivenEnd ( java.lang.String ynaqqnturiobdinybhpy ) { givenEnd = ynaqqnturiobdinybhpy ; } <s> Bug in InsertClassToDBVisitor resolved.. Working perfectly now
fix_before_refactoring: public void setGivenEnd ( java.lang.String givenEnd ) { this . givenEnd = givenEnd ; }
fix_after_refactoring: public void setGivenEnd ( java.lang.String givenEnd ) { this . givenEnd = givenEnd ; }
× fix_prediction_before: public void setGivenEnd ( java.lang.String end ) { givenEnd = end ; }
× fix_prediction_after: public void setGivenEnd ( java.lang.String ynaqqnturiobdinybhpy ) { givenEnd = ynaqqnturiobdinybhpy ; }

line_index: 76
bug_before_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , esn , roomId ) ) > 0 ; } <s> @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , esn , roomId ) ) > 0 ; } <s> Add functions  Insert room link Fix double score database query bug Add game phase operator.
bug_after_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String bowibenciilrfqzbwwcd , int rrauwqvyashuurjvmavj ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , bowibenciilrfqzbwwcd , rrauwqvyashuurjvmavj ) ) > 0 ; } <s> @ java.lang.Override public boolean addRoomRecord ( java.lang.String bowibenciilrfqzbwwcd , int rrauwqvyashuurjvmavj ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , bowibenciilrfqzbwwcd , rrauwqvyashuurjvmavj ) ) > 0 ; } <s> Add functions  Insert room link Fix double score database query bug Add game phase operator.
fix_before_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , roomId , esn ) ) > 0 ; }
fix_after_refactoring: @ java.lang.Override public boolean addRoomRecord ( java.lang.String bowibenciilrfqzbwwcd , int rrauwqvyashuurjvmavj ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , rrauwqvyashuurjvmavj , bowibenciilrfqzbwwcd ) ) > 0 ; }
× fix_prediction_before: @ java.lang.Override public boolean addRoomRecord ( java.lang.String esn , int roomId ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , esn , roomId , 0 ) ) > 0 ; }
× fix_prediction_after: @ java.lang.Override public boolean addRoomRecord ( java.lang.String bowibenciilrfqzbwwcd , int rrauwqvyashuurjvmavj ) { return ( getJdbcTemplate () . update ( com.garmin.di.dao.impl.GameDaoImpl.SQL_INSERT_ROOM_RECORD , bowibenciilrfqzbwwcd , rrauwqvyashuurjvmavj ) ) > 0 ; }

line_index: 77
bug_before_refactoring: public void setPhotoUrl ( java.lang.String photoUrl ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } <s> public void setPhotoUrl ( java.lang.String photoUrl ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } <s> fixed error when 1 room returns in response
bug_after_refactoring: public void setPhotoUrl ( java.lang.String whfmhjemghxboqovrtea ) { java.lang.String temp = whfmhjemghxboqovrtea . substring ( 0 , ( ( whfmhjemghxboqovrtea . length () ) - 5 ) ) ; this . whfmhjemghxboqovrtea = temp + ( PHOTO_URL_END ) ; } <s> public void setPhotoUrl ( java.lang.String whfmhjemghxboqovrtea ) { java.lang.String temp = whfmhjemghxboqovrtea . substring ( 0 , ( ( whfmhjemghxboqovrtea . length () ) - 5 ) ) ; this . whfmhjemghxboqovrtea = temp + ( PHOTO_URL_END ) ; } <s> fixed error when 1 room returns in response
fix_before_refactoring: public void setPhotoUrl ( java.lang.String photoUrl ) { if ( photoUrl != null ) { java.lang.String temp = photoUrl . substring ( 0 , ( ( photoUrl . length () ) - 5 ) ) ; this . photoUrl = temp + ( PHOTO_URL_END ) ; } }
fix_after_refactoring: public void setPhotoUrl ( java.lang.String whfmhjemghxboqovrtea ) { if ( whfmhjemghxboqovrtea != null ) { java.lang.String temp = whfmhjemghxboqovrtea . substring ( 0 , ( ( whfmhjemghxboqovrtea . length () ) - 5 ) ) ; this . whfmhjemghxboqovrtea = temp + ( PHOTO_URL_END ) ; } }
× fix_prediction_before: public void setPhotoUrl ( java.lang.String photoUrl ) { this . photoUrl = photoUrl ; }
× fix_prediction_after: public void setPhotoUrl ( java.lang.String whfmhjemghxboqovrtea ) { this . whfmhjemghxboqovrtea = whfmhjemghxboqovrtea ; }

line_index: 79
bug_before_refactoring: public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; } <s> fixed some issues with average method. Also added labels to everything
bug_after_refactoring: public void addToSignal ( int lnpktigzrqjpaysdamhv ) { signalStrength . add ( lnpktigzrqjpaysdamhv ) ; } <s> public void addToSignal ( int lnpktigzrqjpaysdamhv ) { signalStrength . add ( lnpktigzrqjpaysdamhv ) ; } <s> fixed some issues with average method. Also added labels to everything
fix_before_refactoring: public void addToSignal ( int rssi ) { this . signalStrength . add ( rssi ) ; }
fix_after_refactoring: public void addToSignal ( int lnpktigzrqjpaysdamhv ) { this . signalStrength . add ( lnpktigzrqjpaysdamhv ) ; }
× fix_prediction_before: public void addToSignal ( int rssi ) { signalStrength . add ( rssi ) ; }
× fix_prediction_after: public void addToSignal ( int lnpktigzrqjpaysdamhv ) { signalStrength . add ( lnpktigzrqjpaysdamhv ) ; }

line_index: 80
bug_before_refactoring: public static long calcTimeInTrip ( long tripStartTime ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } <s> public static long calcTimeInTrip ( long tripStartTime ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } <s> fixed few bugs with calculation of avgSpeed and fuelCons  timeSpent.
bug_after_refactoring: public static long calcTimeInTrip ( long lbgejuqlfwskmosqdrcw ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - lbgejuqlfwskmosqdrcw ; } <s> public static long calcTimeInTrip ( long lbgejuqlfwskmosqdrcw ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - lbgejuqlfwskmosqdrcw ; } <s> fixed few bugs with calculation of avgSpeed and fuelCons  timeSpent.
fix_before_refactoring: public static long calcTimeInTrip ( long tripStartTime ) { if ( tripStartTime <= 0 ) { return 0 ; } else { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; } }
fix_after_refactoring: public static long calcTimeInTrip ( long lbgejuqlfwskmosqdrcw ) { if ( lbgejuqlfwskmosqdrcw <= 0 ) { return 0 ; } else { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - lbgejuqlfwskmosqdrcw ; } }
× fix_prediction_before: private static long calcTimeInTrip ( long tripStartTime ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - tripStartTime ; }
× fix_prediction_after: private static long calcTimeInTrip ( long lbgejuqlfwskmosqdrcw ) { java.util.Calendar curCal = java.util.Calendar . getInstance () ; long endTime = curCal . getTime () . getTime () ; return endTime - lbgejuqlfwskmosqdrcw ; }

line_index: 81
bug_before_refactoring: public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> public void setStartYear ( int idfYear ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = idfYear ; } <s> fix bugs
bug_after_refactoring: public void setStartYear ( int kryyapkleeonpseidhxn ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = kryyapkleeonpseidhxn ; } <s> public void setStartYear ( int kryyapkleeonpseidhxn ) { analyzer.graphs.fffad7d4a6fd09c6c4ed1bc13ef4cd25d67e0ac9 startYear = kryyapkleeonpseidhxn ; } <s> fix bugs
fix_before_refactoring: public void setStartYear ( int idfYear ) { startYear = idfYear ; }
fix_after_refactoring: public void setStartYear ( int kryyapkleeonpseidhxn ) { startYear = kryyapkleeonpseidhxn ; }
× fix_prediction_before: public void setStartYear ( int idfYear ) { this . startYear = idfYear ; }
× fix_prediction_after: public void setStartYear ( int kryyapkleeonpseidhxn ) { this . startYear = kryyapkleeonpseidhxn ; }

line_index: 83
bug_before_refactoring: public static boolean isUiThread ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == thread ; } <s> public static boolean isUiThread ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == thread ; } <s> bugfix
bug_after_refactoring: public static boolean isUiThread ( java.lang.Thread yzhwziurllwwxrsvwlhl ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == yzhwziurllwwxrsvwlhl ; } <s> public static boolean isUiThread ( java.lang.Thread yzhwziurllwwxrsvwlhl ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == yzhwziurllwwxrsvwlhl ; } <s> bugfix
fix_before_refactoring: public static boolean isUiThread ( java.lang.Thread thread ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD . get () ) == thread ; }
fix_after_refactoring: public static boolean isUiThread ( java.lang.Thread yzhwziurllwwxrsvwlhl ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD . get () ) == yzhwziurllwwxrsvwlhl ; }
× fix_prediction_before: public static boolean isUiThread ( java.lang.Thread thread ) { return com.nillith.android.common.MiscUtils.UI_THREAD . equals ( thread ) ; }
× fix_prediction_after: public static boolean isUiThread ( java.lang.Thread t ) { return ( com.nillith.android.common.MiscUtils.UI_THREAD ) == ( t . getId () ) ; }

line_index: 84
bug_before_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } } } <s> @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } } } <s> Fixed problem with cached names when using FSLuceneIndices
bug_after_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex pnhgkgevhlwnjljceqns , java.lang.String qtqvxvdrdetimmwmoqzw ) throws java.io.IOException { if ( ( cachedNames ) == null ) { qtqvxvdrdetimmwmoqzws () ; if ( ( cachedNames ) != null ) { cachedNames . add ( qtqvxvdrdetimmwmoqzw ) ; } } } <s> @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex pnhgkgevhlwnjljceqns , java.lang.String qtqvxvdrdetimmwmoqzw ) throws java.io.IOException { if ( ( cachedNames ) == null ) { qtqvxvdrdetimmwmoqzws () ; if ( ( cachedNames ) != null ) { cachedNames . add ( qtqvxvdrdetimmwmoqzw ) ; } } } <s> Fixed problem with cached names when using FSLuceneIndices
fix_before_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { if ( ( cachedNames ) == null ) { names () ; } if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } }
fix_after_refactoring: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex pnhgkgevhlwnjljceqns , java.lang.String qtqvxvdrdetimmwmoqzw ) throws java.io.IOException { if ( ( cachedNames ) == null ) { qtqvxvdrdetimmwmoqzws () ; } if ( ( cachedNames ) != null ) { cachedNames . add ( qtqvxvdrdetimmwmoqzw ) ; } }
× fix_prediction_before: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex index , java.lang.String name ) throws java.io.IOException { names () ; if ( ( cachedNames ) != null ) { cachedNames . add ( name ) ; } }
× fix_prediction_after: @ java.lang.Override protected void onInstantiate ( com.sproutigy.libs.luceneplus.core.LuceneIndex pnhgkgevhlwnjljceqns , java.lang.String qtqvxvdrdetimmwmoqzw ) throws java.io.IOException {}

line_index: 85
bug_before_refactoring: protected void onStatusOk ( net.datafans.android.common.data.service.BaseResponse response , java.lang.Class < ? > type ) {} <s> protected void onStatusOk ( net.datafans.android.common.data.service.BaseResponse response , java.lang.Class < ? > type ) {} <s> bug fix
bug_after_refactoring: protected void onStatusOk ( net.datafans.android.common.data.service.BaseResponse dqxtogmtkqpvgaguvmgu , java.lang.Class < ? > exitlenkpboetbcnaxnt ) {} <s> protected void onStatusOk ( net.datafans.android.common.data.service.BaseResponse dqxtogmtkqpvgaguvmgu , java.lang.Class < ? > exitlenkpboetbcnaxnt ) {} <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onStatusOk ( net.datafans.android.common.data.service.BaseResponse response , java.lang.Class < ? > type ) {}
fix_after_refactoring: @ java.lang.Override public void onStatusOk ( net.datafans.android.common.data.service.BaseResponse dqxtogmtkqpvgaguvmgu , java.lang.Class < ? > exitlenkpboetbcnaxnt ) {}
× fix_prediction_before: public void onStatusOk ( net.datafans.android.common.data.service.BaseResponse response , java.lang.Class < ? > type ) {}
× fix_prediction_after: protected void onStatusOk ( net.datafans.android.common.data.service.BaseResponse dqxtogmtkqpvgaguvmgu ) {}

line_index: 86
bug_before_refactoring: private java.lang.String getFileDirectory ( java.lang.String filePath ) { java.lang.String fileDir = this . storageProperties . getProperty ( filePath ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> private java.lang.String getFileDirectory ( java.lang.String filePath ) { java.lang.String fileDir = this . storageProperties . getProperty ( filePath ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> Fixed bug where moving back to same origin folder deletes the original file
bug_after_refactoring: private java.lang.String getFileDirectory ( java.lang.String ytsvqeruxamxsjvsviop ) { java.lang.String fileDir = this . storageProperties . getProperty ( ytsvqeruxamxsjvsviop ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> private java.lang.String getFileDirectory ( java.lang.String ytsvqeruxamxsjvsviop ) { java.lang.String fileDir = this . storageProperties . getProperty ( ytsvqeruxamxsjvsviop ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; } <s> Fixed bug where moving back to same origin folder deletes the original file
fix_before_refactoring: private java.lang.String getFileDirectory ( java.lang.String fileDir ) { if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; }
fix_after_refactoring: private java.lang.String getFileDirectory ( java.lang.String fileDir ) { if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; }
× fix_prediction_before: public java.lang.String getFileDirectory ( java.lang.String filePath ) { java.lang.String fileDir = this . storageProperties . getProperty ( filePath ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; }
× fix_prediction_after: private java.lang.String getFileDirectory () { java.lang.String fileDir = this . storageProperties . getProperty ( uksvqeruxamxsjvsviop ) ; if ( fileDir . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) { fileDir = org.jimple.planner.Constants.EMPTY_STRING ; } return fileDir ; }

line_index: 87
bug_before_refactoring: public ru.javawebinar.topjava.model.Meal getMeal ( int id ) { return ru.javawebinar.topjava.DAO.MealDao.mealInMemory . get ( id ) ; } <s> public ru.javawebinar.topjava.model.Meal getMeal ( int id ) { return ru.javawebinar.topjava.DAO.MealDao.mealInMemory . get ( id ) ; } <s> HW01 v1.2.1 Add interface. Fixed text bug in addMeal.jsp Used singleton in MealDaoImpl.class
bug_after_refactoring: public ru.javawebinar.topjava.model.Meal getMeal ( int evwiqwiitbrspguqzcwu ) { return ru.javawebinar.topjava.DAO.MealDao.mealInMemory . get ( evwiqwiitbrspguqzcwu ) ; } <s> public ru.javawebinar.topjava.model.Meal getMeal ( int evwiqwiitbrspguqzcwu ) { return ru.javawebinar.topjava.DAO.MealDao.mealInMemory . get ( evwiqwiitbrspguqzcwu ) ; } <s> HW01 v1.2.1 Add interface. Fixed text bug in addMeal.jsp Used singleton in MealDaoImpl.class
fix_before_refactoring: public ru.javawebinar.topjava.model.Meal getMeal ( int id ) ;
fix_after_refactoring: public ru.javawebinar.topjava.model.Meal getMeal ( int evwiqwiitbrspguqzcwu ) ;
× fix_prediction_before: public ru.javawebinar.topjava.model.Meal getMeal ( int id ) { return ru.javawebinar.topjava.DAO.MealDao.mealInMemory . get ( id ) ; }
× fix_prediction_after: public ru.javawebinar.topjava.model.Meal getMeal ( java.lang.String text ) { return ru.javawebinar.topjava.DAO.MealDao.mealInMemory . get ( text ) ; }

line_index: 88
bug_before_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } <s> final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } <s> ServletHelper serLoggedUser bug fix; welcome page added logout
bug_after_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User lcgxlpjoykohdxcgnqwr ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , lcgxlpjoykohdxcgnqwr . getId () ) ; return true ; } <s> final boolean setLoggedUser ( sk.tsystems.forum.entity.User lcgxlpjoykohdxcgnqwr ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , lcgxlpjoykohdxcgnqwr . getId () ) ; return true ; } <s> ServletHelper serLoggedUser bug fix; welcome page added logout
fix_before_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { if ( user != null ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user . getId () ) ; return true ; } else { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , null ) ; return false ; } }
fix_after_refactoring: final boolean setLoggedUser ( sk.tsystems.forum.entity.User lcgxlpjoykohdxcgnqwr ) { if ( lcgxlpjoykohdxcgnqwr != null ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , lcgxlpjoykohdxcgnqwr . getId () ) ; return true ; } else { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , null ) ; return false ; } }
× fix_prediction_before: final boolean setLoggedUser ( sk.tsystems.forum.entity.User user ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , user ) ; return true ; }
× fix_prediction_after: final boolean setLoggedUser ( sk.tsystems.forum.entity.User lcgxlpjoykohdxcgnqwr ) { setSessionObject ( sk.tsystems.forum.servlets.ServletHelper.USER_SESSION_IDENT , lcgxlpjoykohdxcgnqwr . getId () ) ; return true ; }

line_index: 89
bug_before_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( success ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( success ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> Fixing bugs
bug_after_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean hjgsdwbtviojjykgcuey ) { if ( hjgsdwbtviojjykgcuey ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> @ java.lang.Override public void onPostExecute ( java.lang.Boolean hjgsdwbtviojjykgcuey ) { if ( hjgsdwbtviojjykgcuey ) { mOnOff = true ; changeButtonImage ( true ) ; } } <s> Fixing bugs
fix_before_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { if ( success ) { mOnOff = ! ( mOnOff ) ; changeButtonImage ( mOnOff ) ; } }
fix_after_refactoring: @ java.lang.Override public void onPostExecute ( java.lang.Boolean hjgsdwbtviojjykgcuey ) { if ( hjgsdwbtviojjykgcuey ) { mOnOff = ! ( mOnOff ) ; changeButtonImage ( mOnOff ) ; } }
× fix_prediction_before: @ java.lang.Override public void onPostExecute ( java.lang.Boolean success ) { mOnOff = true ; changeButtonImage ( true ) ; }
× fix_prediction_after: @ java.lang.Override public void onPostExecute ( java.lang.Boolean hjgsdwbtviojjykgcuey ) { if ( ! hjgsdwbtviojjykgcuey ) { mOnOff = true ; changeButtonImage ( true ) ; } }

line_index: 90
bug_before_refactoring: protected void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> protected void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; } <s> fixed bug when searching for empty string
bug_after_refactoring: protected void addSong ( int foiqmyhliiwvlawnsljk ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( foiqmyhliiwvlawnsljk ) ) ; } <s> protected void addSong ( int foiqmyhliiwvlawnsljk ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( foiqmyhliiwvlawnsljk ) ) ; } <s> fixed bug when searching for empty string
fix_before_refactoring: private void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( index ) ; }
fix_after_refactoring: private void addSong ( int foiqmyhliiwvlawnsljk ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( foiqmyhliiwvlawnsljk ) ; }
× fix_prediction_before: private void addSong ( int index ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( index ) ) ; }
× fix_prediction_after: private void addSong ( int foiqmyhliiwvlawnsljk ) throws java.io.IOException { outToServer . writeObject ( "add" ) ; outToServer . writeObject ( java.lang.Integer . valueOf ( foiqmyhliiwvlawnsljk ) ) ; }

line_index: 91
bug_before_refactoring: public boolean loadLibrary ( java.lang.String fileName ) ; <s> public boolean loadLibrary ( java.lang.String fileName ) ; <s> updated DVD Library to include error checking. Fixed bug with rating validation
bug_after_refactoring: public boolean loadLibrary ( java.lang.String cmmnsuwaprsxyewcdzoh ) ; <s> public boolean loadLibrary ( java.lang.String cmmnsuwaprsxyewcdzoh ) ; <s> updated DVD Library to include error checking. Fixed bug with rating validation
fix_before_refactoring: public boolean loadLibrary ( ) ;
fix_after_refactoring: public boolean loadLibrary ( ) ;
× fix_prediction_before: public boolean loadLibrary ( java.lang.String fileName , android.content.Context context ) ;
× fix_prediction_after: public boolean loadLibrary ( java.lang.String name ) ;

line_index: 92
bug_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
bug_after_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity mgroyuhmabjvwjqbuzuy , int cbrcznphsjjjednnwnqq , com.hiddensound.Presenter.Callback < java.lang.Boolean > serjamofcdrmukrmxjip ) ; <s> void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity mgroyuhmabjvwjqbuzuy , int cbrcznphsjjjednnwnqq , com.hiddensound.Presenter.Callback < java.lang.Boolean > serjamofcdrmukrmxjip ) ; <s> Fixed permission crash issue and combined it with fix on login request bug.
fix_before_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity activity , int value ) ;
fix_after_refactoring: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity mgroyuhmabjvwjqbuzuy , int cbrcznphsjjjednnwnqq ) ;
× fix_prediction_before: void checkPermissions ( android.content.Context context , int value , com.hiddensound.Presenter.Callback < java.lang.Boolean > callback ) ;
× fix_prediction_after: void checkPermissions ( com.hiddensound.qrcodescanner.DecoderActivity mgroyuhmabjmsjqbuzuy , int cbrcznphsjjjednnwnqq ) ;

line_index: 93
bug_before_refactoring: public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> Fixed a bug with tone bending
bug_after_refactoring: public double square ( double urbsdmtkxynygdfnxdsf , double rgjlngxalxuxyzclhlgf ) { if ( ( sin ( urbsdmtkxynygdfnxdsf , rgjlngxalxuxyzclhlgf , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> public double square ( double urbsdmtkxynygdfnxdsf , double rgjlngxalxuxyzclhlgf ) { if ( ( sin ( urbsdmtkxynygdfnxdsf , rgjlngxalxuxyzclhlgf , 0 ) ) > 0.5 ) return 1 ; return 0 ; } <s> Fixed a bug with tone bending
fix_before_refactoring: public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame ) ) > 0.5 ) return 1 ; return 0 ; }
fix_after_refactoring: public double square ( double urbsdmtkxynygdfnxdsf , double rgjlngxalxuxyzclhlgf ) { if ( ( sin ( urbsdmtkxynygdfnxdsf , rgjlngxalxuxyzclhlgf ) ) > 0.5 ) return 1 ; return 0 ; }
× fix_prediction_before: public double square ( double hertz , double frame ) { if ( ( sin ( hertz , frame , 1 ) ) > 0.5 ) return 1 ; return 0 ; }
× fix_prediction_after: public double square ( double urbsdmtkxynygdfnxdsf , double rgjLngxalxuxyzclhlgf ) { if ( ( sin ( urbsdmtkxynygdfnxdsf , rgjLngxalxuxyzclhlgf , 0 ) ) > 0.5 ) return 1 ; return 0 ; }

line_index: 95
bug_before_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { mCameraListener . onPictureTaken ( data ) ; capturingImage = false ; camera . startPreview () ; } <s> @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { mCameraListener . onPictureTaken ( data ) ; capturingImage = false ; camera . startPreview () ; } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] dbjlplnbdpwwsrvuizeo , android.hardware.Camera pocbhniumowfloorzisl ) { mCameraListener . onPictureTaken ( dbjlplnbdpwwsrvuizeo ) ; capturingImage = false ; pocbhniumowfloorzisl . startPreview () ; } <s> @ java.lang.Override public void onPictureTaken ( byte [] dbjlplnbdpwwsrvuizeo , android.hardware.Camera pocbhniumowfloorzisl ) { mCameraListener . onPictureTaken ( dbjlplnbdpwwsrvuizeo ) ; capturingImage = false ; pocbhniumowfloorzisl . startPreview () ; } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { synchronized ( this ) { mCameraListener . onPictureTaken ( data ) ; capturingImage = false ; camera . startPreview () ; } }
fix_after_refactoring: @ java.lang.Override public void onPictureTaken ( byte [] dbjlplnbdpwwsrvuizeo , android.hardware.Camera pocbhniumowfloorzisl ) { synchronized ( this ) { mCameraListener . onPictureTaken ( dbjlplnbdpwwsrvuizeo ) ; capturingImage = false ; pocbhniumowfloorzisl . startPreview () ; } }
× fix_prediction_before: @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { if ( ( mCameraListener ) != null ) { mCameraListener . onPictureTaken ( data ) ; captureImage = false ; camera . startPreview () ; } }
× fix_prediction_after: @ java.lang.Override public void onPictureTaken ( byte [] dbjlplnbdpwwsrvuizeo , android.hardware.Camera pocbhniumow floorzisl ) { if ( ( mCameraListener ) != null ) { mCameraListener . onPictureTaken ( dbjlplnbdpwwsrvuizeo ) ; captureImage = false ; pocbhniumow floorzisl . startPreview () ; } }

line_index: 97
bug_before_refactoring: public void build ( java.lang.String nome ) { this . id = Infra.UUId . generate () ; this . nome = nome ; } <s> public void build ( java.lang.String nome ) { this . id = Infra.UUId . generate () ; this . nome = nome ; } <s> Fix in errors
bug_after_refactoring: public void build ( java.lang.String xcftjmveruhavmjbyjsg ) { this . id = Infra.UUId . generate () ; this . xcftjmveruhavmjbyjsg = xcftjmveruhavmjbyjsg ; } <s> public void build ( java.lang.String xcftjmveruhavmjbyjsg ) { this . id = Infra.UUId . generate () ; this . xcftjmveruhavmjbyjsg = xcftjmveruhavmjbyjsg ; } <s> Fix in errors
fix_before_refactoring: public void build ( java.lang.String id , java.lang.String nome ) { this . id = id ; this . nome = nome ; }
fix_after_refactoring: public void build ( java.lang.String id , java.lang.String xcftjmveruhavmjbyjsg ) { this . id = id ; this . xcftjmveruhavmjbyjsg = xcftjmveruhavmjbyjsg ; }
× fix_prediction_before: public void build ( java.lang.String nome ) { this . nome = nome ; }
× fix_prediction_after: public void build () { this . id = Infra.UUId . generate () ; this . xcftjmveruhavmjbyjsg = xcftjmveruhavmjbyjsg ; }

line_index: 98
bug_before_refactoring: public static boolean shouldLoadMoreBars ( android.app.Activity act ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( act ) ) ) ; } <s> public static boolean shouldLoadMoreBars ( android.app.Activity act ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( act ) ) ) ; } <s> Merge pull request #2227 from wordpress-mobile/issue/2225-Stats-out-of-index-Graph  Stats - Use a fixed numbers of bars in the main graph on 600DP tablets.
bug_after_refactoring: public static boolean shouldLoadMoreBars ( android.app.Activity vxgbyjmwrmkyhzksimiy ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( vxgbyjmwrmkyhzksimiy ) ) ) ; } <s> public static boolean shouldLoadMoreBars ( android.app.Activity vxgbyjmwrmkyhzksimiy ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( vxgbyjmwrmkyhzksimiy ) ) ) ; } <s> Merge pull request #2227 from wordpress-mobile/issue/2225-Stats-out-of-index-Graph  Stats - Use a fixed numbers of bars in the main graph on 600DP tablets.
fix_before_refactoring: public static boolean shouldLoadMoreBars () { return ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ; }
fix_after_refactoring: public static boolean shouldLoadMoreBars () { return ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_720DP ) ; }
× fix_prediction_before: public static boolean shouldLoadMoreBars ( android.content.Context context ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_820DP ) ) || ( ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( context ) ) ; }
× fix_prediction_after: public static boolean shouldLoadMoreBars ( android.content.Context context , android.app.Activity vxgbyjmwrmkyhzksimiy ) { return ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) >= ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_820DP ) ) || ( ( org.wordpress.android.ui.stats.StatsUtils . getSmallestWidthDP () ) == ( org.wordpress.android.ui.stats.StatsUIHelper.TABLET_600DP ) ) && ( org.wordpress.android.ui.stats.StatsUIHelper . isInLandscape ( context , vxgbyjmwrmkyhzksimiy ) ) ; }

line_index: 99
bug_before_refactoring: public java.lang.Object removeProxy ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> public java.lang.Object removeProxy ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; } <s> Update to 1.1.1  bug fixes  and robustness improvements
bug_after_refactoring: public java.lang.Object removeProxy ( java.lang.String mipyetvdczpsnftaqyye ) { return proxyIdToProxyMap . remove ( mipyetvdczpsnftaqyye ) ; } <s> public java.lang.Object removeProxy ( java.lang.String mipyetvdczpsnftaqyye ) { return proxyIdToProxyMap . remove ( mipyetvdczpsnftaqyye ) ; } <s> Update to 1.1.1  bug fixes  and robustness improvements
fix_before_refactoring: public java.lang.Object removeProxy ( java.lang.String objectId ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( objectId ) ; } }
fix_after_refactoring: public java.lang.Object removeProxy ( java.lang.String mipyetvdczpsnftaqyye ) { synchronized ( proxyIdToProxyMap ) { return proxyIdToProxyMap . remove ( mipyetvdczpsnftaqyye ) ; } }
× fix_prediction_before: public synchronized java.lang.Object removeProxy ( java.lang.String objectId ) { return proxyIdToProxyMap . remove ( objectId ) ; }
× fix_prediction_after: public void removeProxy ( java.lang.String mPyetvdczpsnftaqyye ) { proxyIdToProxyMap . remove ( mPyetvdczpsnftaqyye ) ; }

line_index: 100
bug_before_refactoring: private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
bug_after_refactoring: private java.awt.Color [] oddCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; } <s> private java.awt.Color [] oddCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; } <s> Error fixing  Some basic errors with syntax got saved when I committed previously. I'm just fixing them with this update.
fix_before_refactoring: public java.awt.Color [] oddCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
fix_after_refactoring: public java.awt.Color [] oddCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; }
× fix_prediction_before: public java.awt.Color [] weirdCreateColors ( java.awt.Color color ) { return new java.awt.Color [ 0 ] ; }
× fix_prediction_after: public java.awt.Color [] weirdCreateColors ( java.awt.Color hnibwbfzqlmfrtyhscgp ) { return new java.awt.Color [ 0 ] ; }

line_index: 101
bug_before_refactoring: public int sumOfOneToNumber ( int num ) { return 0 ; } <s> public int sumOfOneToNumber ( int num ) { return 0 ; } <s> Solved problem  solved problem to return the sum of numbers between 0 and the number given.  for loop += is add and store the number should work for any number now
bug_after_refactoring: public int sumOfOneToNumber ( int ttpwwhsmbwyfeokweqas ) { return 0 ; } <s> public int sumOfOneToNumber ( int ttpwwhsmbwyfeokweqas ) { return 0 ; } <s> Solved problem  solved problem to return the sum of numbers between 0 and the number given.  for loop += is add and store the number should work for any number now
fix_before_refactoring: public int sumOfOneToNumber ( int num ) { int y = 0 ; for ( int x = 0 ; x <= num ; x ++ ) { y += x ; } return y ; }
fix_after_refactoring: public int sumOfOneToNumber ( int ttpwwhsmbwyfeokweqas ) { int y = 0 ; for ( int x = 0 ; x <= ttpwwhsmbwyfeokweqas ; x ++ ) { y += x ; } return y ; }
× fix_prediction_before: public int sumOfOneToNumber ( int num ) { return num * num ; }
× fix_prediction_after: public int sumOfOneToNumber ( int ttpwwhsmbwyfeokweqas ) { return ttpwwhsmbwyfeokweqas ; }

line_index: 102
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState , @ android.support.annotation.Nullable android.os.PersistableBundle persistentState ) { super . onCreate ( savedInstanceState , persistentState ) ; initContainer ( savedInstanceState ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState , @ android.support.annotation.Nullable android.os.PersistableBundle persistentState ) { super . onCreate ( savedInstanceState , persistentState ) ; initContainer ( savedInstanceState ) ; } <s> fix_bug: single activity  muti fragmment structure  Signed-off-by: igor <uit_yaguangli@163>
bug_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle cdtnwqxgyoucubazkbwy , @ android.support.annotation.Nullable android.os.PersistableBundle ufcgukysjqlpeogccoyv ) { super . onCreate ( cdtnwqxgyoucubazkbwy , ufcgukysjqlpeogccoyv ) ; initContainer ( cdtnwqxgyoucubazkbwy ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle cdtnwqxgyoucubazkbwy , @ android.support.annotation.Nullable android.os.PersistableBundle ufcgukysjqlpeogccoyv ) { super . onCreate ( cdtnwqxgyoucubazkbwy , ufcgukysjqlpeogccoyv ) ; initContainer ( cdtnwqxgyoucubazkbwy ) ; } <s> fix_bug: single activity  muti fragmment structure  Signed-off-by: igor <uit_yaguangli@163>
fix_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; initContainer ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle cdtnwqxgyoucubazkbwy ) { super . onCreate ( cdtnwqxgyoucubazkbwy ) ; initContainer ( cdtnwqxgyoucubazkbwy ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( android.support.annotation.Nullable android.os.Bundle cdtnwqxgyoucubazkbwy ) { super . onCreate ( cdtnwqxgyoucubazkbwy ) ; initContainer ( cdtnwqxgyoucubazkbwy ) ; }

line_index: 104
bug_before_refactoring: public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = scene ; if ( scene != null ) this . currentScene . setGame ( this ) ; } <s> public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = scene ; if ( scene != null ) this . currentScene . setGame ( this ) ; } <s> Fixed initialization order issues with controller inout
bug_after_refactoring: public void setScene ( com.connerdouglass.stargazer.tqgqpfbbiurtilgugdrv.Scene tqgqpfbbiurtilgugdrv ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = tqgqpfbbiurtilgugdrv ; if ( tqgqpfbbiurtilgugdrv != null ) this . currentScene . setGame ( this ) ; } <s> public void setScene ( com.connerdouglass.stargazer.tqgqpfbbiurtilgugdrv.Scene tqgqpfbbiurtilgugdrv ) { if ( ( this . currentScene ) != null ) this . currentScene . setGame ( null ) ; this . currentScene = tqgqpfbbiurtilgugdrv ; if ( tqgqpfbbiurtilgugdrv != null ) this . currentScene . setGame ( this ) ; } <s> Fixed initialization order issues with controller inout
fix_before_refactoring: public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { if ( ( this . scene ) != null ) this . scene . setGame ( null ) ; this . scene = scene ; if ( scene != null ) this . scene . setGame ( this ) ; }
fix_after_refactoring: public void setScene ( com.connerdouglass.stargazer.tqgqpfbbiurtilgugdrv.Scene tqgqpfbbiurtilgugdrv ) { if ( ( this . tqgqpfbbiurtilgugdrv ) != null ) this . tqgqpfbbiurtilgugdrv . setGame ( null ) ; this . tqgqpfbbiurtilgugdrv = tqgqpfbbiurtilgugdrv ; if ( tqgqpfbbiurtilgugdrv != null ) this . tqgqpfbbiurtilgugdrv . setGame ( this ) ; }
× fix_prediction_before: public void setScene ( com.connerdouglass.stargazer.scene.Scene scene ) { this . scene = scene ; }
× fix_prediction_after: public void setScene ( com.connerdouglass.stargazer.tqgqpfbbiurtilgugdrv.Scene tqgqpfbbiurtilgugdrv ) { this . currentScene = tqgqpfbbiurtilgugdrv ; if ( tqgqpfbbiurtilgugdrv != null ) this . currentScene . setGame ( this ) ; }

line_index: 105
bug_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( position ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
bug_after_refactoring: @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; } } <s> @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; } } <s> Fixed the timer display  sorted a few small bugs. Re-enabled adding students to old lists
fix_before_refactoring: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { confirmAdd ( position ) ; }
fix_after_refactoring: @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjiqfbqxosxwnvho , androxckjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; }
× fix_prediction_before: @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) {}
× fix_prediction_after: @ java.lang.Overrxckjxsrsnfsbjtfvlkive public voxckjxsrsnfsbjtfvlkiv onItemClick ( androxckjxsrsnfsbjtfvlkiv.wxckjxsrsnfsbjtfvlkivget.AdapterView < ? > noghpjxsrsnfsbjtfvlkiv.flurhiirrwlveklzhrvu.View flurhiirrwlveklzhrvu , int whbcqvcpdtvazfrncfvg , long xckjxsrsnfsbjtfvlkiv ) { if ( team2beat.com.qrcodes.RegisterView.isLive ) { confirmAdd ( whbcqvcpdtvazfrncfvg ) ; } }

line_index: 106
bug_before_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { clients . get ( clientRef ) . disconnect () ; } <s> @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { clients . get ( clientRef ) . disconnect () ; } <s> Merge pull request #6 from pellepersson/fixes  bugfixes
bug_after_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int ldkmchvlajstighipocw ) { clients . get ( ldkmchvlajstighipocw ) . disconnect () ; } <s> @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int ldkmchvlajstighipocw ) { clients . get ( ldkmchvlajstighipocw ) . disconnect () ; } <s> Merge pull request #6 from pellepersson/fixes  bugfixes
fix_before_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { if ( ( clients . get ( clientRef ) ) != null ) { clients . get ( clientRef ) . disconnect () ; } }
fix_after_refactoring: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int ldkmchvlajstighipocw ) { if ( ( clients . get ( ldkmchvlajstighipocw ) ) != null ) { clients . get ( ldkmchvlajstighipocw ) . disconnect () ; } }
× fix_prediction_before: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int clientRef ) { synchronized ( clients ) { clients . get ( clientRef ) . disconnect () ; } }
× fix_prediction_after: @ com.tuanpm.RCTMqtt.ReactMethod public void disconnect ( final int ldkmchvlajstighipocw ) { clients . remove ( ldkmchvlajstighipocw ) ; }

line_index: 107
bug_before_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; target . setCode ( code ) ; } <s> @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; target . setCode ( code ) ; } <s> Fix code inheritance issue for CCs in ResultOrganizer chain (JUnits)
bug_after_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer xtzmnrxbpdbmpayiondh ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; xtzmnrxbpdbmpayiondh . setCode ( code ) ; } <s> @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer xtzmnrxbpdbmpayiondh ) { org.openhealthtools.mdht.uml.hl7.datatypes.CD code = DatatypesFactory.eINSTANCE . createCD () ; code . setCodeSystem ( "" ) ; xtzmnrxbpdbmpayiondh . setCode ( code ) ; } <s> Fix code inheritance issue for CCs in ResultOrganizer chain (JUnits)
fix_before_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) { target . init () ; target . setCode ( DatatypesFactory.eINSTANCE . createCD () ) ; }
fix_after_refactoring: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer xtzmnrxbpdbmpayiondh ) { xtzmnrxbpdbmpayiondh . init () ; xtzmnrxbpdbmpayiondh . setCode ( DatatypesFactory.eINSTANCE . createCD () ) ; }
× fix_prediction_before: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer target ) {}
× fix_prediction_after: @ java.lang.Override protected void updateToFail ( org.openhealthtools.mdht.uml.cda.consol.ResultOrganizer xtzmnrxbpdbmpayiondh ) {}

line_index: 108
bug_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
bug_after_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { android.widget.Toast . makeText ( context , ( "you clicl on" + prefName ) , Toast.LENGTH_SHORT ) . show () ; return false ; } <s> fix some bug addPaypal Qrcode gen
fix_before_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { android.widget.Toast . makeText ( context , prefName , Toast.LENGTH_SHORT ) . show () ; return false ; }
× fix_prediction_after: @ java.lang.Override public boolean onPreferenceClick ( android.tdawqbqthmuzkxiwgwgu.Preference tdawqbqthmuzkxiwgwgu ) { android.widget.Toast . makeText ( context , prefName , Toast.LENGTH_SHORT ) . show () ; return false ; }

line_index: 111
bug_before_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext gc , java.util.List < MapElement > mapElements , javafx.scene.Group root ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; drawMapElements ( gc , mapElements , root ) ; } <s> public void drawMap ( javafx.scene.canvas.GraphicsContext gc , java.util.List < MapElement > mapElements , javafx.scene.Group root ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; drawMapElements ( gc , mapElements , root ) ; } <s> Fixed splash screen error
bug_after_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext scsxbqrchstrftpweatf , java.util.List < MapElement > ifrfqromftfidygbufsi , javafx.scene.Group doedaseqphyexdeibimu ) { makeBackground ( scsxbqrchstrftpweatf ) ; drawGridLines ( scsxbqrchstrftpweatf ) ; drawMapElements ( scsxbqrchstrftpweatf , ifrfqromftfidygbufsi , doedaseqphyexdeibimu ) ; } <s> public void drawMap ( javafx.scene.canvas.GraphicsContext scsxbqrchstrftpweatf , java.util.List < MapElement > ifrfqromftfidygbufsi , javafx.scene.Group doedaseqphyexdeibimu ) { makeBackground ( scsxbqrchstrftpweatf ) ; drawGridLines ( scsxbqrchstrftpweatf ) ; drawMapElements ( scsxbqrchstrftpweatf , ifrfqromftfidygbufsi , doedaseqphyexdeibimu ) ; } <s> Fixed splash screen error
fix_before_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext gc ) { makeBackground ( gc ) ; drawGridLines ( gc ) ; }
fix_after_refactoring: public void drawMap ( javafx.scene.canvas.GraphicsContext scsxbqrchstrftpweatf ) { makeBackground ( scsxbqrchstrftpweatf ) ; drawGridLines ( scsxbqrchstrftpweatf ) ; }
× fix_prediction_before: public void drawMap ( javafx.scene.canvas.GraphicsContext gc , java.util.List < MapElement > mapElements , javafx.scene.Group root ) { drawGridLines ( gc ) ; drawMapElements ( gc , mapElements , root ) ; }
× fix_prediction_after: public void drawMap ( javafx.scene.canvas.GraphicsContext scsxbqrchstrftpweatf , java.util.List < MapElement > ifrfqromftfidygbufsi ) { makeBackground ( scsxbqrchstrftpweatf ) ; drawGridLines ( scsxbqrchstrftpweatf ) ; drawMapElements ( scsxbqrchstrftpweatf , ifrfqromftfidygbufsi ) ; }

line_index: 112
bug_before_refactoring: @ java.lang.Override public void render ( int prevCharCode , ru.gohappylife.ess.font.FontRenderer renderer ) {} <s> @ java.lang.Override public void render ( int prevCharCode , ru.gohappylife.ess.font.FontRenderer renderer ) {} <s> Fix fixed space render bug
bug_after_refactoring: @ java.lang.Override public void render ( int qpdyemynyawutktcdbjm , ru.gohappylife.ess.font.FontRenderer tiprccdpknettlpihrdy ) {} <s> @ java.lang.Override public void render ( int qpdyemynyawutktcdbjm , ru.gohappylife.ess.font.FontRenderer tiprccdpknettlpihrdy ) {} <s> Fix fixed space render bug
fix_before_refactoring: { renderer . put ( size , 0 ) ; }
fix_after_refactoring: { tiprccdpknettlpihrdy . put ( size , 0 ) ; }
× fix_prediction_before: { super . render ( prevCharCode , renderer ) ; }
× fix_prediction_after: { tiprccdpknettlpihrdy = 0 ; }

line_index: 113
bug_before_refactoring: private boolean inRange ( double a , double b , double span ) { return ( a > ( b - span ) ) && ( a < ( b + span ) ) ; } <s> private boolean inRange ( double a , double b , double span ) { return ( a > ( b - span ) ) && ( a < ( b + span ) ) ; } <s> Fixed up a few errors in the original code to self drive
bug_after_refactoring: privvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnte vjcjhxmjcsovlaycfeatoolevofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn inRvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnnge ( douvjcjhxmjcsovlaycfeatle vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn , douvjcjhxmjcsovlaycfeatle vjcjhxmjcsovlaycfeat , douvjcjhxmjcsovlaycfeatle spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) { return ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn > ( vjcjhxmjcsovlaycfeat - spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) ) && ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn < ( vjcjhxmjcsovlaycfeat + spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) ) ; } <s> privvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnte vjcjhxmjcsovlaycfeatoolevofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn inRvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnnge ( douvjcjhxmjcsovlaycfeatle vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn , douvjcjhxmjcsovlaycfeatle vjcjhxmjcsovlaycfeat , douvjcjhxmjcsovlaycfeatle spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) { return ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn > ( vjcjhxmjcsovlaycfeat - spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) ) && ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn < ( vjcjhxmjcsovlaycfeat + spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) ) ; } <s> Fixed up a few errors in the original code to self drive
fix_before_refactoring: private boolean inRange ( double a , double b , double span ) { return ( java.lang.Math . abs ( ( a - b ) ) ) < span ; }
fix_after_refactoring: privvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnte vjcjhxmjcsovlaycfeatoolevofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn inRvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnnge ( douvjcjhxmjcsovlaycfeatle vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn , douvjcjhxmjcsovlaycfeatle vjcjhxmjcsovlaycfeat , douvjcjhxmjcsovlaycfeatle spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) { return ( jvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnvvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn.lvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnng.Mvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnth . vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnvjcjhxmjcsovlaycfeats ( ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafn - vjcjhxmjcsovlaycfeat ) ) ) < spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ; }
× fix_prediction_before: public boolean inRange ( double a , double b , double span ) { return ( a > ( b - span ) ) && ( a < ( b + span ) ) ; }
× fix_prediction_after: { return ( vofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnte vjcjhxmjcsovlaycfeatoolevofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn inRvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnnge ( douvjcjhxmjcsovlaycfeatle vofqvjcjhxmjcsovlaycfeatiiukafn , douvjcjhxmjcsovlaycfeatle vjcjhxmjcsovlaycfeat , douvjcjhxmjcsovlaycfeatle spvofqvjcjhxmjcsovlaycfeatsmlkpggvjcjhxmjcsovlaycfeatiiukafnn ) ; }

line_index: 114
bug_before_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property.propertyName ) ) ) ; } <s> public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property.propertyName ) ) ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
bug_after_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wreayguwrzwlwcfbndpj ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( wreayguwrzwlwcfbndpj.wreayguwrzwlwcfbndpjName ) ) ) ; } <s> public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wreayguwrzwlwcfbndpj ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( wreayguwrzwlwcfbndpj.wreayguwrzwlwcfbndpjName ) ) ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
fix_before_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property ) ) ) ; }
fix_after_refactoring: public static < T > T getProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wreayguwrzwlwcfbndpj ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( wreayguwrzwlwcfbndpj ) ) ) ; }
× fix_prediction_before: public static < T > T getProperty ( java.lang.String property ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( property ) ) ) ; }
× fix_prediction_after: public static < T > T getProperty ( java.lang.String wreayguwrzwlwcfbndpj ) { return ( ( T ) ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . get ( wreayguwrzwlwcfbndpj.wreayguwrzwlwcfbndpjName ) ) ) ; }

line_index: 115
bug_before_refactoring: private void startNewNote ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> private void startNewNote ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> cleaned up code - fixed insert bug
bug_after_refactoring: private void startNewNote ( android.jnamxerbfisrehjokwzg.View jnamxerbfisrehjokwzg ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> private void startNewNote ( android.jnamxerbfisrehjokwzg.View jnamxerbfisrehjokwzg ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; } <s> cleaned up code - fixed insert bug
fix_before_refactoring: private void startNewNote () { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; }
fix_after_refactoring: private void startNewNote () { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; }
× fix_prediction_before: public void startNewNote ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; }
× fix_prediction_after: public void startNewNote ( android.jnamxerbfisrehjokwzg.View jnamxerbfisrehjokwzg ) { android.content.Intent intent = new android.content.Intent ( this , app.band.runawaynation.matth.plainnotes.EditorActivity . class ) ; startActivityForResult ( intent , app.band.runawaynation.matth.plainnotes.MainActivity.EDITOR_REQUEST_CODE ) ; }

line_index: 116
bug_before_refactoring: public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> Fix an old issue where texts didn't render at their correct position.
bug_after_refactoring: public void draw ( float aflaedlvgcxkverohpsx , float wnwakmrbfztkiryjbeas ) { sprites [ getCurrentSprite () ] . draw ( aflaedlvgcxkverohpsx , wnwakmrbfztkiryjbeas , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> public void draw ( float aflaedlvgcxkverohpsx , float wnwakmrbfztkiryjbeas ) { sprites [ getCurrentSprite () ] . draw ( aflaedlvgcxkverohpsx , wnwakmrbfztkiryjbeas , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; } <s> Fix an old issue where texts didn't render at their correct position.
fix_before_refactoring: public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , false ) ; }
fix_after_refactoring: public void draw ( float aflaedlvgcxkverohpsx , float wnwakmrbfztkiryjbeas ) { sprites [ getCurrentSprite () ] . draw ( aflaedlvgcxkverohpsx , wnwakmrbfztkiryjbeas , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , false ) ; }
× fix_prediction_before: public void draw ( float xPos , float yPos ) { sprites [ getCurrentSprite () ] . draw ( xPos , yPos , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; }
× fix_prediction_after: public void draw ( float aflaedlvgcxkverohpsx , float wnwakmrbfztkiresjbeas ) { sprites [ getCurrentSprite () ] . draw ( aflaedlvgcxkverohpsx , wnwakmrbfztkiresjbeas , 1.0F , 1.0F , 0.0F , false , false , 20 , 20 , true ) ; }

line_index: 117
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo formData ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo formData ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> feat(TDP-2967): fix various issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{bpsiwnebdzawetdhkybc}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "bpsiwnebdzawetdhkybc" ) java.lang.String bpsiwnebdzawetdhkybc , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo pgloaqlmqymjwgsbpagc ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "{bpsiwnebdzawetdhkybc}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "bpsiwnebdzawetdhkybc" ) java.lang.String bpsiwnebdzawetdhkybc , @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo pgloaqlmqymjwgsbpagc ) throws com.fasterxml.jackson.core.JsonProcessingException ; <s> feat(TDP-2967): fix various issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "datasetDefinitionName" ) java.lang.String datasetDefinitionName , java.io.InputStream formData ) throws java.io.IOException ;
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{bpsiwnebdzawetdhkybc}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.PathVariable ( value = "bpsiwnebdzawetdhkybc" ) java.lang.String bpsiwnebdzawetdhkybc , java.io.InputStream pgloaqlmqymjwgsbpagc ) throws java.io.IOException ;
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{datasetDefinitionName}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo formData ) throws com.fasterxml.jackson.core.JsonProcessingException ;
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "{bpsiwnebdzawetdhkybc}/schema" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) java.lang.String getDatasetSchema ( @ org.springframework.web.bind.annotation.RequestBody org.talend.components.service.rest.dto.DatasetConnectionInfo pgloaqlmqymjwgsbpagc ) throws com.fasterxml.jackson.core.JsonProcessingException ;

line_index: 119
bug_before_refactoring: protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> protected org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
bug_after_refactoring: protected org.apache.lucene.index.Term createTerm ( java.lang.Object tclsxxwzkeckggzobwlm ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( tclsxxwzkeckggzobwlm ) ) ; } <s> protected org.apache.lucene.index.Term createTerm ( java.lang.Object tclsxxwzkeckggzobwlm ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( tclsxxwzkeckggzobwlm ) ) ; } <s> Fix blended terms for non-strings  It had some funky errors  like lenient:true not working and queries with two integer fields blowing up if there was no analyzer defined on the query. This throws a bunch more tests at it and rejiggers how non-strings are handled so they don't wander off into scary QueryBuilder-land unless they have a nice strong analyzer to protect them.  Closes #15860
fix_before_refactoring: public org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
fix_after_refactoring: public org.apache.lucene.index.Term createTerm ( java.lang.Object tclsxxwzkeckggzobwlm ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( tclsxxwzkeckggzobwlm ) ) ; }
× fix_prediction_before: private org.apache.lucene.index.Term createTerm ( java.lang.Object value ) { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( value ) ) ; }
× fix_prediction_after: protected org.apache.lucene.index.Term createTerm () { return new org.apache.lucene.index.Term ( name () , indexedValueForSearch ( t clsxxwzkeckggzobwlm ) ) ; }

line_index: 120
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address ( v ) ; break; case R.id.btn_analyze : getTextFromActivity ( v ) ; break; case R.id.btn_reset : resetText ( v ) ; break; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address ( v ) ; break; case R.id.btn_analyze : getTextFromActivity ( v ) ; break; case R.id.btn_reset : resetText ( v ) ; break; } } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
bug_after_refactoring: @ jahtujyghvomwjzwpvumiwa.lang.Ohtujyghvomwjzwpvumiwerride public htujyghvomwjzwpvumiwoid onClick ( android.htujyghvomwjzwpvumiwiew.View htujyghvomwjzwpvumiw ) { switch ( htujyghvomwjzwpvumiw . getId () ) { case R.id.btn_getURL : get_address ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_analyze : getTextFromActihtujyghvomwjzwpvumiwity ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_reset : resetText ( htujyghvomwjzwpvumiw ) ; break; } } <s> @ jahtujyghvomwjzwpvumiwa.lang.Ohtujyghvomwjzwpvumiwerride public htujyghvomwjzwpvumiwoid onClick ( android.htujyghvomwjzwpvumiwiew.View htujyghvomwjzwpvumiw ) { switch ( htujyghvomwjzwpvumiw . getId () ) { case R.id.btn_getURL : get_address ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_analyze : getTextFromActihtujyghvomwjzwpvumiwity ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_reset : resetText ( htujyghvomwjzwpvumiw ) ; break; } } <s> + added working semantic core fragment + added progress bar in the  main activity + overrided  onPreExecute and onPostExecute methods (asyncTask) which work before and after  HttpConnection + fixed bug with fragment numbers
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn_getURL : get_address () ; break; case R.id.btn_analyze : getTextFromActivity () ; break; case R.id.btn_reset : resetText () ; break; } }
fix_after_refactoring: @ jahtujyghvomwjzwpvumiwa.lang.Ohtujyghvomwjzwpvumiwerride public htujyghvomwjzwpvumiwoid onClick ( android.htujyghvomwjzwpvumiwiew.View htujyghvomwjzwpvumiw ) { switch ( htujyghvomwjzwpvumiw . getId () ) { case R.id.btn_getURL : get_address () ; break; case R.id.btn_analyze : getTextFromActihtujyghvomwjzwpvumiwity () ; break; case R.id.btn_reset : resetText () ; break; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } }
× fix_prediction_after: @ jahtujyghvomwjzwpvumiwa.lang.Ohtujyghvomwjzwpvumiwerride public htujyghvomwjzwpvumiwoid onClick ( android.htujyghvomwjzwpvumiwiew.View htujyghvomwjzwpvumiw ) { switch ( htujyghvomwjzwpvumiw . getId () ) { case R.id.btn_getURL : get_address ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_analyze : getTextFromActihtujyghvomwjzwpvumiwity ( htujyghvomwjzwpvumiw ) ; break; case R.id.btn_reset : resetText ( htujyghvomwjzwpvumiw ) ; break; } }

line_index: 121
bug_before_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) throws net.spy.memcached.OperationTimeoutException ; <s> < T > net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) throws net.spy.memcached.OperationTimeoutException ; <s> fixed bug CASMutator about expire time add interface about cas to MemcachedClientIF
bug_after_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String wxbyywffdoprmceaajxc , long prtkvgwaxrevyiqnjmkr , T koayxmgnbjfmqlhdpeqf , net.spy.memcached.transcoders.Transcoder < T > dkqdidpjzzqrqhzsdrjm ) throws net.spy.memcached.OperationTimeoutException ; <s> < T > net.spy.memcached.CASResponse cas ( java.lang.String wxbyywffdoprmceaajxc , long prtkvgwaxrevyiqnjmkr , T koayxmgnbjfmqlhdpeqf , net.spy.memcached.transcoders.Transcoder < T > dkqdidpjzzqrqhzsdrjm ) throws net.spy.memcached.OperationTimeoutException ; <s> fixed bug CASMutator about expire time add interface about cas to MemcachedClientIF
fix_before_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value , net.spy.memcached.transcoders.Transcoder < T > tc ) ;
fix_after_refactoring: < T > net.spy.memcached.CASResponse cas ( java.lang.String wxbyywffdoprmceaajxc , long prtkvgwaxrevyiqnjmkr , T koayxmgnbjfmqlhdpeqf , net.spy.memcached.transcoders.Transcoder < T > dkqdidpjzzqrqhzsdrjm ) ;
× fix_prediction_before: net.spy.memcached.CASResponse cas ( java.lang.String key , long casId , T value ) throws net.spy.memcached.OperationTimeoutException ;
× fix_prediction_after: net.spy.memcached.CASResponse cas ( java.lang.String wxbyywffdoprmceaajxc , long prtkvgwaxrevyiqnjmkr , T koayxmgnbjfmqlhdpeqf , net.spy.memcached.transcoders.Transcoder < T > dkqdidpjzzqrqhzsdrjm ) throws net.spy.memcached.OperationTimeoutException ;

line_index: 122
bug_before_refactoring: @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle savedInstanceState ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( savedInstanceState ) ; setContentView ( main ) ; } <s> @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle savedInstanceState ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( savedInstanceState ) ; setContentView ( main ) ; } <s> [fix bug] in this way  i can use getString in a more fantastic way.
bug_after_refactoring: @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle zaxhmdmztllpzojomrfe ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( zaxhmdmztllpzojomrfe ) ; setContentView ( main ) ; } <s> @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle zaxhmdmztllpzojomrfe ) { com.geno.midikeybdeditor.LinearLayout main = new com.geno.midikeybdeditor.LinearLayout ( this ) ; com.geno.midikeybdeditor.ExpandableListView e = new com.geno.midikeybdeditor.ExpandableListView ( this ) ; main . addView ( e ) ; super . onCreate ( zaxhmdmztllpzojomrfe ) ; setContentView ( main ) ; } <s> [fix bug] in this way  i can use getString in a more fantastic way.
fix_before_refactoring: @ java.lang.Override public boolean isEmpty () { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean isEmpty () { return false ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( setContentView ( this ) ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( com.geno.midikeybdeditor.Bundle zaxhmdmztllpzojomrfe ) { super . onCreate ( zaxhmdmztllpzojomrfe ) ; setContentView ( main ) ; }

line_index: 124
bug_before_refactoring: public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ) ) ; } <s> public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ) ) ; } <s> Fixed the bug in MOB-1040 (GuidUtils.lookupOrCreateAccountGuid). Also  removed some redundant castes and tidied up some docs and recent changes.
bug_after_refactoring: public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket xaltwfrupefshaytadfj ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( xaltwfrupefshaytadfj , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( xaltwfrupefshaytadfj ) ) ) ) ; } <s> public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket xaltwfrupefshaytadfj ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( xaltwfrupefshaytadfj , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( xaltwfrupefshaytadfj ) ) ) ) ; } <s> Fixed the bug in MOB-1040 (GuidUtils.lookupOrCreateAccountGuid). Also  removed some redundant castes and tidied up some docs and recent changes.
fix_before_refactoring: @ java.lang.Override public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return this . sendSync ( command , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( command ) ) ; }
fix_after_refactoring: @ java.lang.Override public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket xaltwfrupefshaytadfj ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return this . sendSync ( xaltwfrupefshaytadfj , edu.umass.cs.gnsserver.gnsapp.GNSClientInternal . getTimeout ( xaltwfrupefshaytadfj ) ) ; }
× fix_prediction_before: public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket command ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( command , null ) ) ) ; }
× fix_prediction_after: public edu.umass.cs.gnscommon.packets.CommandPacket execute ( edu.umass.cs.gnscommon.packets.CommandPacket xaltwfrupefshaytadfj ) throws edu.umass.cs.gnscommon.exceptions.client.ClientException , java.io.IOException { return ( ( edu.umass.cs.gnscommon.packets.CommandPacket ) ( this . sendSync ( xaltwfrupefshaytadfj , null ) ) ) ; }

line_index: 125
bug_before_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > items ) { return net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , items , ( ( size () ) - 1 ) ) ; } <s> public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > items ) { return net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , items , ( ( size () ) - 1 ) ) ; } <s> Updated the version of Java that Maven uses and fixed a few bugs in the Quicksort code.
bug_after_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > nhjppazmcfgejsfwolva ) { return net.codehobby.quicksort.Quicksort . quicksort ( nhjppazmcfgejsfwolva , 0 , nhjppazmcfgejsfwolva , ( ( size () ) - 1 ) ) ; } <s> public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > nhjppazmcfgejsfwolva ) { return net.codehobby.quicksort.Quicksort . quicksort ( nhjppazmcfgejsfwolva , 0 , nhjppazmcfgejsfwolva , ( ( size () ) - 1 ) ) ; } <s> Updated the version of Java that Maven uses and fixed a few bugs in the Quicksort code.
fix_before_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > items ) { net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , ( ( items . size () ) - 1 ) ) ; }
fix_after_refactoring: public static < T extends java.lang.Comparable < T > > void quicksort ( java.util.List < T > nhjppazmcfgejsfwolva ) { net.codehobby.quicksort.Quicksort . quicksort ( nhjppazmcfgejsfwolva , 0 , ( ( nhjppazmcfgejsfwolva . size () ) - 1 ) ) ; }
× fix_prediction_before: public static void quicksort ( java.util.List < T > items ) { net.codehobby.quicksort.Quicksort . quicksort ( items , 0 , items , size ) ; }
× fix_prediction_after: public static void quicksort ( java.util.List < T > nhjppazmcfgejsfwolva ) { net.codehobby.quicksort.Quicksort . quicksort ( nhjppazmcfgejsfwolva , 0 , nhjppazmcfgejsfwolva , size ) ; }

line_index: 126
bug_before_refactoring: private static void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; } <s> private static void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; } <s> Fix issue with same alias needing to be reused in multiple sections of the CriteriaBuilder
bug_after_refactoring: private static void addWhere ( org.hibernate.Criteria gbsvdguxvzmihrsdduwq , com.breezejs.query.Predicate qjadzvluvndweuvpukmk ) { if ( qjadzvluvndweuvpukmk == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( gbsvdguxvzmihrsdduwq , qjadzvluvndweuvpukmk ) ; cr.gbsvdguxvzmihrsdduwqeria . add ( cr.gbsvdguxvzmihrsdduwqerion ) ; } <s> private static void addWhere ( org.hibernate.Criteria gbsvdguxvzmihrsdduwq , com.breezejs.query.Predicate qjadzvluvndweuvpukmk ) { if ( qjadzvluvndweuvpukmk == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( gbsvdguxvzmihrsdduwq , qjadzvluvndweuvpukmk ) ; cr.gbsvdguxvzmihrsdduwqeria . add ( cr.gbsvdguxvzmihrsdduwqerion ) ; } <s> Fix issue with same alias needing to be reused in multiple sections of the CriteriaBuilder
fix_before_refactoring: private void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; com.breezejs.hib.CriteriaResult cr = toCriterion ( crit , wherePred ) ; cr.criteria . add ( cr.criterion ) ; }
fix_after_refactoring: private void addWhere ( org.hibernate.Criteria gbsvdguxvzmihrsdduwq , com.breezejs.query.Predicate qjadzvluvndweuvpukmk ) { if ( qjadzvluvndweuvpukmk == null ) return; com.breezejs.hib.CriteriaResult cr = toCriterion ( gbsvdguxvzmihrsdduwq , qjadzvluvndweuvpukmk ) ; cr.gbsvdguxvzmihrsdduwqeria . add ( cr.gbsvdguxvzmihrsdduwqerion ) ; }
× fix_prediction_before: private void addWhere ( org.hibernate.Criteria crit , com.breezejs.query.Predicate wherePred ) { if ( wherePred == null ) return; toCriterion ( crit , wherePred ) ; }
× fix_prediction_after: public static void addWhere ( org.hibernate.Criteria gbsvdguxvzmihrsdduwq , com.breezejs.query.Predicate qjadzvluvndweuvpukmk ) { if ( qjadzvluvndweuvpukmk == null ) return; com.breezejs.hib.CriteriaResult cr = com.breezejs.hib.CriteriaBuilder . toCriterion ( gbsvdguxvzmihrsdduwq , qjadzvluvndweuvpukmk ) ; cr.gbsvdguxvzmihrsdduwqeria . add ( cr.gbsvdguxvzmihrsdduwqerion ) ; }

line_index: 127
bug_before_refactoring: int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> Radio: fix channel bug
bug_after_refactoring: int readChannel ( int onkfnyhbbkjlclkskklw ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> int readChannel ( int onkfnyhbbkjlclkskklw ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.TREE_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; } <s> Radio: fix channel bug
fix_before_refactoring: public int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( channel ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; }
fix_after_refactoring: public int readChannel ( int onkfnyhbbkjlclkskklw ) { int msg = 0 ; try { msg = rc . readBroadcast ( onkfnyhbbkjlclkskklw ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; }
× fix_prediction_before: public int readChannel ( int channel ) { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.Tree_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; }
× fix_prediction_after: int readChannel () { int msg = 0 ; try { msg = rc . readBroadcast ( RUfoo.managers.Radio.Tree_CHANNEL ) ; } catch ( battlecode.common.GameActionException e ) {} return msg ; }

line_index: 129
bug_before_refactoring: private void setShareIntent ( android.content.Intent shareIntent ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( shareIntent ) ; } } <s> private void setShareIntent ( android.content.Intent shareIntent ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( shareIntent ) ; } } <s> 1 Realease. Last sharing bugs solved.
bug_after_refactoring: private void setShareIntent ( android.content.Intent olqoluvwreehsllvwpfx ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( olqoluvwreehsllvwpfx ) ; } } <s> private void setShareIntent ( android.content.Intent olqoluvwreehsllvwpfx ) { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( olqoluvwreehsllvwpfx ) ; } } <s> 1 Realease. Last sharing bugs solved.
fix_before_refactoring: private boolean setShareIntent ( android.content.Intent shareIntent ) { if ( ( mShareActionProvider ) != null ) { mShareActionProvider . setShareIntent ( shareIntent ) ; return true ; } return false ; }
fix_after_refactoring: private boolean setShareIntent ( android.content.Intent olqoluvwreehsllvwpfx ) { if ( ( mShareActionProvider ) != null ) { mShareActionProvider . setShareIntent ( olqoluvwreehsllvwpfx ) ; return true ; } return false ; }
× fix_prediction_before: private void setShareIntent ( android.content.Intent shareIntent ) { if ( ( mShareActionProvider ) != null ) { mShareActionProvider . setShareIntent ( shareIntent ) ; } }
× fix_prediction_after: private void setShareIntent () { if ( ( ( mShareActionProvider ) != null ) && ( ( listViewScores . getItemAtPosition ( 0 ) ) != null ) ) { mShareActionProvider . setShareIntent ( olqolWorldreehsllvwpfx ) ; } }

line_index: 130
bug_before_refactoring: protected void add ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> protected void add ( java.util.List list , net.minecraft.block.Block block ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } <s> Fixed casting error in multi-block code  Added NPE to creative tab add(item) and add(block)
bug_after_refactoring: protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } <s> protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } <s> Fixed casting error in multi-block code  Added NPE to creative tab add(item) and add(block)
fix_before_refactoring: protected void add ( java.util.List list , net.minecraft.block.Block block ) { if ( block != null ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } }
fix_after_refactoring: protected void add ( java.util.List jxlhceqykkpnarcbajwm , net.minecraft.tnztwunbvlvtndigsoct.Block tnztwunbvlvtndigsoct ) { if ( tnztwunbvlvtndigsoct != null ) { tnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( tnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; } }
× fix_prediction_before: protected void add ( net.minecraft.block.Block block ) { if ( block != null ) { block . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( block ) , this , list ) ; } }
× fix_prediction_after: protected void add ( java.util.List jxlhceqykkpnarcbajwm ) { cnztwunbvlvtndigsoct . getSubBlocks ( net.minecraft.item.Item . getItemFromBlock ( cnztwunbvlvtndigsoct ) , this , jxlhceqykkpnarcbajwm ) ; }

line_index: 131
bug_before_refactoring: @ java.lang.Override public V put ( V value ) { if ( value != null ) { lastMetCache . put ( value , value ) ; return value ; } return null ; } <s> @ java.lang.Override public V put ( V value ) { if ( value != null ) { lastMetCache . put ( value , value ) ; return value ; } return null ; } <s> TDI-31661 Swithed from LinkedHashMap to LindkedHashSet to make KEEP_LAST  KEEP_FIRST implementation more clear. Fixed errors in javajet
bug_after_refactoring: @ java.lang.Override public V put ( V nmctkykwwgzigcgcjidp ) { if ( nmctkykwwgzigcgcjidp != null ) { lastMetCache . put ( nmctkykwwgzigcgcjidp , nmctkykwwgzigcgcjidp ) ; return nmctkykwwgzigcgcjidp ; } return null ; } <s> @ java.lang.Override public V put ( V nmctkykwwgzigcgcjidp ) { if ( nmctkykwwgzigcgcjidp != null ) { lastMetCache . put ( nmctkykwwgzigcgcjidp , nmctkykwwgzigcgcjidp ) ; return nmctkykwwgzigcgcjidp ; } return null ; } <s> TDI-31661 Swithed from LinkedHashMap to LindkedHashSet to make KEEP_LAST  KEEP_FIRST implementation more clear. Fixed errors in javajet
fix_before_refactoring: @ java.lang.Override public V put ( V value ) { if ( value != null ) { if ( ! ( lastMetCache . add ( value ) ) ) { lastMetCache . remove ( value ) ; lastMetCache . add ( value ) ; } } return null ; }
fix_after_refactoring: @ java.lang.Override public V put ( V nmctkykwwgzigcgcjidp ) { if ( nmctkykwwgzigcgcjidp != null ) { if ( ! ( lastMetCache . add ( nmctkykwwgzigcgcjidp ) ) ) { lastMetCache . remove ( nmctkykwwgzigcgcjidp ) ; lastMetCache . add ( nmctkykwwgzigcgcjidp ) ; } } return null ; }
× fix_prediction_before: @ java.lang.Override public V put ( V value ) { lastMetCache . put ( value , value ) ; return value ; }
× fix_prediction_after: @ java.lang.Override public V put ( V nmctkykwwgzigcgcjidp ) { if ( ( this . nmctkykwwgzigcgcjidp ) != null ) { lastMetCache . put ( nmctkykwwgzigcgcjidp , nmctkykwwgzigcgcjidp ) ; return nmctkykwwgzigcgcjidp ; } return null ; }

line_index: 132
bug_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> Set e-mail preferences and fixed dialog bug.
bug_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface vkcmygvfyfdyciuwcqws , int ntbbedsvmvjwvtyymdzi ) { vkcmygvfyfdyciuwcqws . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface vkcmygvfyfdyciuwcqws , int ntbbedsvmvjwvtyymdzi ) { vkcmygvfyfdyciuwcqws . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; } <s> Set e-mail preferences and fixed dialog bug.
fix_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
fix_after_refactoring: public void onClick ( android.content.DialogInterface vkcmygvfyfdyciuwcqws , int id ) { vkcmygvfyfdyciuwcqws . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { dialog . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.view.View view ) { vkcmygvfyfdyciuwcqws . dismiss () ; startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }

line_index: 133
bug_before_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> A few Memo storage errors fixed.
bug_after_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot wpkqrrkmvglsaszfkvzk ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot wpkqrrkmvglsaszfkvzk ) { android.widget.Toast . makeText ( this , "Transcript Download Complete" , Toast.LENGTH_SHORT ) . show () ; mProgress . dismiss () ; } <s> A few Memo storage errors fixed.
fix_before_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) {}
fix_after_refactoring: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot wpkqrrkmvglsaszfkvzk ) {}
× fix_prediction_before: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot ) { mProgress . dismiss () ; }
× fix_prediction_after: @ java.lang.Override public void onSuccess ( com.google.firebase.storage.FileDownloadTask.TaskSnapshot wpkqrrkmvglsaszfkvzk ) { mProgress . dismiss () ; }

line_index: 136
bug_before_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures () ) ; } <s> protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures () ) ; } <s> Support level dependent features (eg on races)  Fixed silly comparison bug in expression engine for '>=' operation
bug_after_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent zamgtyupfisgxzgpichu ) { result . addAll ( zamgtyupfisgxzgpichu . getFeatures () ) ; } <s> protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent zamgtyupfisgxzgpichu ) { result . addAll ( zamgtyupfisgxzgpichu . getFeatures () ) ; } <s> Support level dependent features (eg on races)  Fixed silly comparison bug in expression engine for '>=' operation
fix_before_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { result . addAll ( component . getFeatures ( this ) ) ; }
fix_after_refactoring: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent zamgtyupfisgxzgpichu ) { result . addAll ( zamgtyupfisgxzgpichu . getFeatures ( this ) ) ; }
× fix_prediction_before: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent component ) { if ( component != null ) { result . addAll ( component . getFeatures () ) ; } }
× fix_prediction_after: protected void visitComponent ( @ android.support.annotation.NonNull com.oakonell.dndcharacter.model.character.BaseCharacterComponent value ) { result . addAll ( zamgtyupfisgxzgpichu . getFeatures () ) ; }

line_index: 139
bug_before_refactoring: public static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; } <s> public static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; } <s> bug fixed
bug_after_refactoring: public static void displayGreeting ( java.lang.String bwwxgrhjvikstcsawsys ) { java.lang.System.out . println ( ( ( "Hello, " + bwwxgrhjvikstcsawsys ) + "!" ) ) ; } <s> public static void displayGreeting ( java.lang.String bwwxgrhjvikstcsawsys ) { java.lang.System.out . println ( ( ( "Hello, " + bwwxgrhjvikstcsawsys ) + "!" ) ) ; } <s> bug fixed
fix_before_refactoring: private static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( ( ( "Hello, " + name ) + "!" ) ) ; }
fix_after_refactoring: private static void displayGreeting ( java.lang.String bwwxgrhjvikstcsawsys ) { java.lang.System.out . println ( ( ( "Hello, " + bwwxgrhjvikstcsawsys ) + "!" ) ) ; }
× fix_prediction_before: public static void displayGreeting ( java.lang.String name ) { java.lang.System.out . println ( name ) ; }
× fix_prediction_after: public static void displayGreeting ( java.lang.String bwwxgrhjvikstcsawsys ) { java.lang.System.out . println ( ( ( "Hello, " + bwwxgrhjvikstcsawsys ) + "!" ) ) ; }

line_index: 140
bug_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( root , root , p , true ) ; } <s> public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( root , root , p , true ) ; } <s> Bug fixes
bug_after_refactoring: smofljhauqsnkbqjlzdwublic void insert ( edu.smofljhauqsnkbqjlzdwrinceton.cs.algs4.Point2D smofljhauqsnkbqjlzdw ) { KdTree . checkNull ( smofljhauqsnkbqjlzdw ) ; root = smofljhauqsnkbqjlzdwut ( root , root , smofljhauqsnkbqjlzdw , true ) ; } <s> smofljhauqsnkbqjlzdwublic void insert ( edu.smofljhauqsnkbqjlzdwrinceton.cs.algs4.Point2D smofljhauqsnkbqjlzdw ) { KdTree . checkNull ( smofljhauqsnkbqjlzdw ) ; root = smofljhauqsnkbqjlzdwut ( root , root , smofljhauqsnkbqjlzdw , true ) ; } <s> Bug fixes
fix_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( null , root , p ) ; }
fix_after_refactoring: smofljhauqsnkbqjlzdwublic void insert ( edu.smofljhauqsnkbqjlzdwrinceton.cs.algs4.Point2D smofljhauqsnkbqjlzdw ) { KdTree . checkNull ( smofljhauqsnkbqjlzdw ) ; root = smofljhauqsnkbqjlzdwut ( null , root , smofljhauqsnkbqjlzdw ) ; }
× fix_prediction_before: public void insert ( edu.princeton.cs.algs4.Point2D p ) { KdTree . checkNull ( p ) ; root = put ( root , root , p , true ) ; }
× fix_prediction_after: smofljhauqsnkbqjlzdwublic void insert ( edu.smofljhauqsnkbqjlzdwrinceton.cs.algs4.Point2D smofljhauqsnkbqjlzdw ) { KdTree . checkNull ( smofljhauqsnkbqjlzdw ) ; root = smofljhauqsnkbqjlzdwut ( root , root , smofljhauqsnkbqjlzdw , true ) ; }

line_index: 141
bug_before_refactoring: public void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; } <s> public void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; } <s> Made changes and rectified some errors in the Text reader. Resolved symbols and also solved build issues.
bug_after_refactoring: public void openPDFView ( java.lang.String jgaznrlcqdfvepydoskz ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , jgaznrlcqdfvepydoskz ) ; c . startActivity ( i ) ; } <s> public void openPDFView ( java.lang.String jgaznrlcqdfvepydoskz ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , jgaznrlcqdfvepydoskz ) ; c . startActivity ( i ) ; } <s> Made changes and rectified some errors in the Text reader. Resolved symbols and also solved build issues.
fix_before_refactoring: private void openPDFView ( java.lang.String path ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; }
fix_after_refactoring: private void openPDFView ( java.lang.String jgaznrlcqdfvepydoskz ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , jgaznrlcqdfvepydoskz ) ; c . startActivity ( i ) ; }
× fix_prediction_before: public void openPDFView ( java.lang.String path , android.view.View view ) { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; i . putExtra ( "Path" , path ) ; c . startActivity ( i ) ; }
× fix_prediction_after: public void openPDFView () { android.content.Intent i = new android.content.Intent ( c , io.github.antishake.TextReader . class ) ; c . startActivity ( i ) ; }

line_index: 145
bug_before_refactoring: public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
bug_after_refactoring: public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; } <s> public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; } <s> fixed bug where arrays were not serialized
fix_before_refactoring: private static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) ; }
fix_after_refactoring: private static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; }
× fix_prediction_before: public static java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\\\"" , "\\\"" ) ; }
× fix_prediction_after: public static java.lang.String escapeString ( java.lang.String iskhczovedrmysrkcqgy ) { return iskhczovedrmysrkcqgy . replace ( "\"" , "\\\"" ) ; }

line_index: 146
bug_before_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , configuration , password ) ; callbackContext . success () ; } <s> private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , configuration , password ) ; callbackContext . success () ; } <s> Fix compile error
bug_after_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri gvlnleoplxosbznctdop , @ android.support.annotation.NonNull final com.pspdfkit.mzxhjsmfqdexpvdyfwnk.activity.PdfActivityConfiguration mzxhjsmfqdexpvdyfwnk , @ android.support.annotation.Nullable final java.lang.String arschkrzmkzplpmlpdlq , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext mdxvgcdgtrnvmvjxfoik ) { showDocumentForUri ( gvlnleoplxosbznctdop , mzxhjsmfqdexpvdyfwnk , arschkrzmkzplpmlpdlq ) ; mdxvgcdgtrnvmvjxfoik . success () ; } <s> private void showDocument ( @ android.support.annotation.NonNull android.net.Uri gvlnleoplxosbznctdop , @ android.support.annotation.NonNull final com.pspdfkit.mzxhjsmfqdexpvdyfwnk.activity.PdfActivityConfiguration mzxhjsmfqdexpvdyfwnk , @ android.support.annotation.Nullable final java.lang.String arschkrzmkzplpmlpdlq , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext mdxvgcdgtrnvmvjxfoik ) { showDocumentForUri ( gvlnleoplxosbznctdop , mzxhjsmfqdexpvdyfwnk , arschkrzmkzplpmlpdlq ) ; mdxvgcdgtrnvmvjxfoik . success () ; } <s> Fix compile error
fix_before_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final com.pspdfkit.configuration.activity.PdfActivityConfiguration configuration , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , password , configuration ) ; callbackContext . success () ; }
fix_after_refactoring: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri gvlnleoplxosbznctdop , @ android.support.annotation.Nullable final java.lang.String arschkrzmkzplpmlpdlq , @ android.support.annotation.NonNull final com.pspdfkit.mzxhjsmfqdexpvdyfwnk.activity.PdfActivityConfiguration mzxhjsmfqdexpvdyfwnk , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext mdxvgcdgtrnvmvjxfoik ) { showDocumentForUri ( gvlnleoplxosbznctdop , arschkrzmkzplpmlpdlq , mzxhjsmfqdexpvdyfwnk ) ; mdxvgcdgtrnvmvjxfoik . success () ; }
× fix_prediction_before: private void showDocument ( @ android.support.annotation.NonNull android.net.Uri documentUri , @ android.support.annotation.Nullable final java.lang.String password , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext callbackContext ) { showDocumentForUri ( documentUri , configuration , password ) ; callbackContext . success () ; }
× fix_prediction_after: private void showDocument () { showDocumentForUri ( gvlnleoplxosbznctdop , mzxhjsmfqdexpvdyfwnk.activity.PdfActivityConfiguration mzxhjsmfqdexpvdyfwnk , @ android.support.annotation.Nullable final java.lang.String arschkrzmkzplpmlpdlq , @ android.support.annotation.NonNull final org.apache.cordova.CallbackContext mdxvgcdgtrnvmvjxfoik ) { mdxvgcdgtrnvmvjxfoik . success () ; }

line_index: 148
bug_before_refactoring: public static void init ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( app ) . inject ( app ) ; } <s> public static void init ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( app ) . inject ( app ) ; } <s> fix some di issue
bug_after_refactoring: public static void init ( com.alex.code.foundation.App ticswlezpgfxigipxvvp ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( ticswlezpgfxigipxvvp ) . inject ( ticswlezpgfxigipxvvp ) ; } <s> public static void init ( com.alex.code.foundation.App ticswlezpgfxigipxvvp ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( ticswlezpgfxigipxvvp ) . inject ( ticswlezpgfxigipxvvp ) ; } <s> fix some di issue
fix_before_refactoring: public static void init ( com.alex.code.foundation.App app ) { com.alex.code.foundation.di.component.DaggerAppComponent . create () . inject ( app ) ; }
fix_after_refactoring: public static void init ( com.alex.code.foundation.App ticswlezpgfxigipxvvp ) { com.alex.code.foundation.di.component.DaggerAppComponent . create () . inject ( ticswlezpgfxigipxvvp ) ; }
× fix_prediction_before: public static void init ( android.content.Context context ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( context ) . inject ( app ) ; }
× fix_prediction_after: public static void init ( com.alex.code.foundation.App ticswlezpgfxigipxzzp ) { com.alex.code.foundation.di.component.DaggerAppComponent . builder () . create ( ticswlezpgfxigipxzzp ) . inject ( ticswlezpgfxigipxzzp ) ; }

line_index: 149
bug_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { currentTab = mViewPager . getCurrentItem () ; } <s> @ java.lang.Override public void onPageSelected ( int position ) { currentTab = mViewPager . getCurrentItem () ; } <s> multi select is working properly. need to fix deleting games bugs
bug_after_refactoring: @ java.lang.Override public void onPageSelected ( int pvjsegwirogevnnigoji ) { currentTab = mViewPager . getCurrentItem () ; } <s> @ java.lang.Override public void onPageSelected ( int pvjsegwirogevnnigoji ) { currentTab = mViewPager . getCurrentItem () ; } <s> multi select is working properly. need to fix deleting games bugs
fix_before_refactoring: @ java.lang.Override public void onPageSelected ( int position ) { currentTab = position ; }
fix_after_refactoring: @ java.lang.Override public void onPageSelected ( int pvjsegwirogevnnigoji ) { currentTab = pvjsegwirogevnnigoji ; }
× fix_prediction_before: @ java.lang.Override public void onPageSelected ( int position ) {}
× fix_prediction_after: @ java.lang.Override public void onPageSelected ( int pvjsegwirogevnnigoji ) {}

line_index: 150
bug_before_refactoring: void onError ( java.lang.Exception ex ) ; <s> void onError ( java.lang.Exception ex ) ; <s> fix issue with getting status. pass the message in the response handler for error case.
bug_after_refactoring: void onError ( java.lang.Exception tmjplxdkhxsxfxcsalem ) ; <s> void onError ( java.lang.Exception tmjplxdkhxsxfxcsalem ) ; <s> fix issue with getting status. pass the message in the response handler for error case.
fix_before_refactoring: void onError ( java.lang.Exception ex , java.lang.String message ) ;
fix_after_refactoring: void onError ( java.lang.Exception tmjplxdkhxsxfxcsalem , java.lang.String message ) ;
× fix_prediction_before: void onError ( java.lang.Throwable t ) ;
× fix_prediction_after: void onError ( java.lang.Throwable t ) ;

line_index: 151
bug_before_refactoring: public void setTime ( int count ) { lblTimer . setText ( ( "" + count ) ) ; } <s> public void setTime ( int count ) { lblTimer . setText ( ( "" + count ) ) ; } <s> fix textview display issue
bug_after_refactoring: public void setTime ( int zrahbxarreizddooubbq ) { lblTimer . setText ( ( "" + zrahbxarreizddooubbq ) ) ; } <s> public void setTime ( int zrahbxarreizddooubbq ) { lblTimer . setText ( ( "" + zrahbxarreizddooubbq ) ) ; } <s> fix textview display issue
fix_before_refactoring: public void setTime ( int count ) { if ( count < 0 ) { lblTimer . setText ( "" ) ; } else { lblTimer . setText ( ( "" + count ) ) ; } }
fix_after_refactoring: public void setTime ( int zrahbxarreizddooubbq ) { if ( zrahbxarreizddooubbq < 0 ) { lblTimer . setText ( "" ) ; } else { lblTimer . setText ( ( "" + zrahbxarreizddooubbq ) ) ; } }
× fix_prediction_before: public void setTime ( int count ) { lblTimer . setText ( count ) ; }
× fix_prediction_after: public void setTime ( int zrahbxarreizddooubbq ) { lblTimer . setText ( zrahbxarreizddooubbq ) ; }

line_index: 152
bug_before_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 2 ) ) ) , true ) ; } <s> public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 2 ) ) ) , true ) ; } <s> Fixing Bugs.
bug_after_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick gszzvzclnprzbjfdwaux ) { DRIVE . arcadeDrive ( ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 1 ) ) ) , ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 2 ) ) ) , true ) ; } <s> public void drive ( edu.wpi.first.wpilibj.Joystick gszzvzclnprzbjfdwaux ) { DRIVE . arcadeDrive ( ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 1 ) ) ) , ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 2 ) ) ) , true ) ; } <s> Fixing Bugs.
fix_before_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( ( - ( joy . getRawAxis ( 1 ) ) ) , ( - ( joy . getRawAxis ( 0 ) ) ) , true ) ; }
fix_after_refactoring: public void drive ( edu.wpi.first.wpilibj.Joystick gszzvzclnprzbjfdwaux ) { DRIVE . arcadeDrive ( ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 1 ) ) ) , ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 0 ) ) ) , true ) ; }
× fix_prediction_before: public void drive ( edu.wpi.first.wpilibj.Joystick joy ) { DRIVE . arcadeDrive ( joy . getRawAxis ( 0 ) , joy . getRawAxis ( 1 ) , joy . getRawAxis ( 2 ) ) , true ) ; }
× fix_prediction_after: public void drive ( edu.wpi.first.wpilibj.Joystick gszzvzclnprzbjfdwaux ) { DRIVE . arcadeDrive ( gszzvzclnprzbjfdwaux , ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 1 ) ) ) , ( - ( gszzvzclnprzbjfdwaux . getRawAxis ( 2 ) ) ) , true ) ; }

line_index: 154
bug_before_refactoring: @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , e ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; } <s> @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , e ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; } <s> Fix Sonar and style issues in AccountGroupView  vn-1212
bug_after_refactoring: @ java.lang.Ovqoyyxpngzdfqtnkozmgmrridqoyyxpngzdfqtnkozmgm public void widgqoyyxpngzdfqtnkozmgmtSqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctqoyyxpngzdfqtnkozmgmd ( final org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.swt.qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnts.SqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctionEvqoyyxpngzdfqtnkozmgmnt qoyyxpngzdfqtnkozmgm ) { org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.corqoyyxpngzdfqtnkozmgm.rqoyyxpngzdfqtnkozmgmsourcqoyyxpngzdfqtnkozmgms.WorkspacqoyyxpngzdfqtnkozmgmJob updatqoyyxpngzdfqtnkozmgmGroups = nqoyyxpngzdfqtnkozmgmw sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.rcp.accountgroup.AccountGroupViqoyyxpngzdfqtnkozmgmw.UpdatqoyyxpngzdfqtnkozmgmGroupsJob ( sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.gs.ui.rcp.main.bsi.viqoyyxpngzdfqtnkozmgmws.Mqoyyxpngzdfqtnkozmgmssagqoyyxpngzdfqtnkozmgms.GroupViqoyyxpngzdfqtnkozmgmw_13 , qoyyxpngzdfqtnkozmgm ) ; sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.iso27k.rcp.JobSchqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmr . schqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmInitJob ( updatqoyyxpngzdfqtnkozmgmGroups ) ; } <s> @ java.lang.Ovqoyyxpngzdfqtnkozmgmrridqoyyxpngzdfqtnkozmgm public void widgqoyyxpngzdfqtnkozmgmtSqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctqoyyxpngzdfqtnkozmgmd ( final org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.swt.qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnts.SqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctionEvqoyyxpngzdfqtnkozmgmnt qoyyxpngzdfqtnkozmgm ) { org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.corqoyyxpngzdfqtnkozmgm.rqoyyxpngzdfqtnkozmgmsourcqoyyxpngzdfqtnkozmgms.WorkspacqoyyxpngzdfqtnkozmgmJob updatqoyyxpngzdfqtnkozmgmGroups = nqoyyxpngzdfqtnkozmgmw sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.rcp.accountgroup.AccountGroupViqoyyxpngzdfqtnkozmgmw.UpdatqoyyxpngzdfqtnkozmgmGroupsJob ( sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.gs.ui.rcp.main.bsi.viqoyyxpngzdfqtnkozmgmws.Mqoyyxpngzdfqtnkozmgmssagqoyyxpngzdfqtnkozmgms.GroupViqoyyxpngzdfqtnkozmgmw_13 , qoyyxpngzdfqtnkozmgm ) ; sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.iso27k.rcp.JobSchqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmr . schqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmInitJob ( updatqoyyxpngzdfqtnkozmgmGroups ) ; } <s> Fix Sonar and style issues in AccountGroupView  vn-1212
fix_before_refactoring: @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent event ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView_13 , event ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; }
fix_after_refactoring: @ java.lang.Ovqoyyxpngzdfqtnkozmgmrridqoyyxpngzdfqtnkozmgm public void widgqoyyxpngzdfqtnkozmgmtSqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctqoyyxpngzdfqtnkozmgmd ( final org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.swt.qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnts.SqoyyxpngzdfqtnkozmgmlqoyyxpngzdfqtnkozmgmctionEvqoyyxpngzdfqtnkozmgmnt qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnt ) { org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.corqoyyxpngzdfqtnkozmgm.rqoyyxpngzdfqtnkozmgmsourcqoyyxpngzdfqtnkozmgms.WorkspacqoyyxpngzdfqtnkozmgmJob updatqoyyxpngzdfqtnkozmgmGroups = nqoyyxpngzdfqtnkozmgmw sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.rcp.accountgroup.AccountGroupViqoyyxpngzdfqtnkozmgmw.UpdatqoyyxpngzdfqtnkozmgmGroupsJob ( sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.gs.ui.rcp.main.bsi.viqoyyxpngzdfqtnkozmgmws.Mqoyyxpngzdfqtnkozmgmssagqoyyxpngzdfqtnkozmgms.GroupViqoyyxpngzdfqtnkozmgmw_13 , qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnt ) ; sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgmt.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.iso27k.rcp.JobSchqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmr . schqoyyxpngzdfqtnkozmgmdulqoyyxpngzdfqtnkozmgmInitJob ( updatqoyyxpngzdfqtnkozmgmGroups ) ; }
× fix_prediction_before: @ java.lang.Override public void widgetSelected ( final org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.core.resources.WorkspaceJob updateGroups = new sernet.verinice.rcp.accountgroup.AccountGroupView.UpdateGroupsJob ( sernet.gs.ui.rcp.main.bsi.views.Messages.GroupView13 , e ) ; sernet.verinice.iso27k.rcp.JobScheduler . scheduleInitJob ( updateGroups ) ; }
× fix_prediction_after: @ java.lang.Ovqoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.swt.qoyyxpngzdfqtnkozmgm.rcp.accountgroup.AccountGroupViqoyyxpngzdfqtnkozmgm.clipsqoyyxpngzdfqtnkozmgm.swt.qoyyxpngzdfqtnkozmgmvqoyyxpngzdfqtnkozmgmnts.Sqoyyxpngzdfqtnkozmgmnts.Sqoyyxpngzdfqtnkozmgmnts.SqoyyxpngzdfqtnkozmgmctionEvqoyyxpngzdfqtnkozmgmnt qoyyxpngzdfqtnkozmgm ) { org.qoyyxpngzdfqtnkozmgmclipsqoyyxpngzdfqtnkozmgm.corqoyyxpngzdfqtnkozmgm.rqoyyxpngzdfqtnkozmgm.rcp.accountgroup.AccountGroupViqoyyxpngzdfqtnkozmgm.rcp.accountgroup.WorkspacqoyyxpngzdfqtnkozmgmJob updatqoyyxpngzdfqtnkozmgmGroups = nqoyyxpngzdfqtnkozmgmw sqoyyxpngzdfqtnkozmgmrnqoyyxpngzdfqtnkozmgm.vqoyyxpngzdfqtnkozmgmrinicqoyyxpngzdfqtnkozmgm.rcp.accountgroup.AccountGroupViqoyyxpngzdfqtnkozmgm.rcp.group.AccountGroupQiqoyyxpngzdfqtnkozmgm.rcp.Groups = nqoyyxpngzdfqtnkozmgm.Qxpngzdfqtnkozmgm

line_index: 155
bug_before_refactoring: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } } <s> fixes network model bugs
bug_after_refactoring: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } } <s> public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } } <s> fixes network model bugs
fix_before_refactoring: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . extensionRemoved ( extension ) ; } }
fix_after_refactoring: private final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzvvkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzvvkvnjxspjbcRemoved ( jzxedbkzvvkvnjxspjbc ) ; } }
× fix_prediction_before: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension extension ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { if ( listener != null ) { listener . extensionRemoved ( extension ) ; } } }
× fix_prediction_after: public final void fireExtensionRemoved ( at.netcrawler.network.model.NetworkModelExtension jzxedbkzzzkvnjxspjbc ) { for ( at.netcrawler.network.model.NetworkModelListener listener : listeners ) { listener . jzxedbkzzzkvnjxspjbcRemoved ( jzxedbkzzzkvnjxspjbc ) ; } }

line_index: 158
bug_before_refactoring: public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> public static void runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
bug_after_refactoring: public static void runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; } <s> public static void runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; } <s> Updated RootShell  Fixed some bugs related to re-using commands (disallowed command re-use)
fix_before_refactoring: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( command ) ; }
fix_after_refactoring: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; }
× fix_prediction_before: public static com.stericson.RootShell.execution.Command runRootCommand ( com.stericson.RootShell.execution.Command command ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return new com.stericson.RootShell.execution.Command ( command ) ; }
× fix_prediction_after: public static com.stericson.RootShell.execution.Command gdgbaapzxgjadfyoarcc ) throws com.stericson.RootShell.exceptions.RootDeniedException , java.io.IOException , java.util.concurrent.TimeoutException { return com.stericson.RootShell.execution.Shell . startRootShell () . add ( gdgbaapzxgjadfyoarcc ) ; }

line_index: 159
bug_before_refactoring: double kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue . max () ; } <s> double kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue . max () ; } <s> Fixed k Nearest Neighbours  - Added function to determine whether tree is finished building. - Added documentation - Fixed bug in ballwalk where distance to non existing childs would be   calculated. - Extended IFixedPriorityQueue by method indices()
bug_after_refactoring: double uugltyylqqulesewgrqgNearestNeighbours ( double [] abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , int uugltyylqqulesewgrqg , dist.IMetric yxokfjkobuxvzfkyciat ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( uugltyylqqulesewgrqg ) ; uugltyylqqulesewgrqgNearestNeighbours ( abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , uugltyylqqulesewgrqg , root , queue , yxokfjkobuxvzfkyciat ) ; return queue . max () ; } <s> double uugltyylqqulesewgrqgNearestNeighbours ( double [] abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , int uugltyylqqulesewgrqg , dist.IMetric yxokfjkobuxvzfkyciat ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( uugltyylqqulesewgrqg ) ; uugltyylqqulesewgrqgNearestNeighbours ( abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , uugltyylqqulesewgrqg , root , queue , yxokfjkobuxvzfkyciat ) ; return queue . max () ; } <s> Fixed k Nearest Neighbours  - Added function to determine whether tree is finished building. - Added documentation - Fixed bug in ballwalk where distance to non existing childs would be   calculated. - Extended IFixedPriorityQueue by method indices()
fix_before_refactoring: giant_galaxy.IFixedPriorityQueue kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue ; }
fix_after_refactoring: giant_galaxy.IFixedPriorityQueue uugltyylqqulesewgrqgNearestNeighbours ( double [] abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , int uugltyylqqulesewgrqg , dist.IMetric yxokfjkobuxvzfkyciat ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( uugltyylqqulesewgrqg ) ; uugltyylqqulesewgrqgNearestNeighbours ( abuugltyylqqulesewgrqgwnwagpcdnuugltyylqqulesewgrqgarcczie , uugltyylqqulesewgrqg , root , queue , yxokfjkobuxvzfkyciat ) ; return queue ; }
× fix_prediction_before: double kNearestNeighbours ( double [] pos , int k , dist.IMetric metric ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( k ) ; kNearestNeighbours ( pos , k , root , queue , metric ) ; return queue . max () ; }
× fix_prediction_after: double uugltyylqqulesewgrqgNearestNeighbours ( double [] abuugltyylqqulesewgrqgwnwagianuugltyylqqulesewgrqgarcczie , int uugltyylqqulesewgrqg , dist.IMetric yxokfjkobuxvzfkyciat ) { giant_galaxy.IFixedPriorityQueue queue = new giant_galaxy.LinearFixedPriorityQueue ( uugltyylqqulesewgrqg ) ; uugltyylqqulesewgrqgNearestNeighbours ( abuugltyylqqulesewgrqgwnwagianuugltyylqqulesewgrqgarcczie , uugltyylqqulesewgrqg , root , queue , yxokfjkobuxvzfkyciat ) ; return queue . max () ; }

line_index: 162
bug_before_refactoring: @ java.lang.Override public int compare ( double o2 , double o1 ) { return o1 < o2 ? - 1 : o1 == o2 ? 0 : 1 ; } <s> @ java.lang.Override public int compare ( double o2 , double o1 ) { return o1 < o2 ? - 1 : o1 == o2 ? 0 : 1 ; } <s> cosmetic cleanups and a fix for issue #112
bug_after_refactoring: @ java.lang.Override public int compare ( double gxekrodgwevromdrcnwb , double lquxmojjakavdkkrcmai ) { return lquxmojjakavdkkrcmai < gxekrodgwevromdrcnwb ? - 1 : lquxmojjakavdkkrcmai == gxekrodgwevromdrcnwb ? 0 : 1 ; } <s> @ java.lang.Override public int compare ( double gxekrodgwevromdrcnwb , double lquxmojjakavdkkrcmai ) { return lquxmojjakavdkkrcmai < gxekrodgwevromdrcnwb ? - 1 : lquxmojjakavdkkrcmai == gxekrodgwevromdrcnwb ? 0 : 1 ; } <s> cosmetic cleanups and a fix for issue #112
fix_before_refactoring: @ java.lang.Override public int compare ( double o2 , double o1 ) { return java.lang.Double . compare ( o1 , o2 ) ; }
fix_after_refactoring: @ java.lang.Override public int compare ( double gxekrodgwevromdrcnwb , double lquxmojjakavdkkrcmai ) { return java.lang.Double . compare ( lquxmojjakavdkkrcmai , gxekrodgwevromdrcnwb ) ; }
× fix_prediction_before: @ java.lang.Override public int compare ( double o1 , double o2 ) { return o1 < o2 ? - 1 : o1 == o2 ? 0 : 1 ; }
× fix_prediction_after: @ java.lang.Override public int compare ( double gxekrodgwevromdrcnwb , double lquxmojjakavdkkrcmai ) { return lquxmojjakavavdkkrcmai < gxekrodgwevromdrcnwb ? - 1 : lquxmojjakavdkkrcmai == gxekrodgwevromdrcnwb ? 0 : 1 ; }

line_index: 163
bug_before_refactoring: public static int o ( int oe ) { return oe > > 16 ; } <s> public static int o ( int oe ) { return oe > > 16 ; } <s> Fix a bug with the negative "Opening" values in the opening-endgame arithmetic.
bug_after_refactoring: public static int o ( int xjnqnwzojqopqyocohnd ) { return xjnqnwzojqopqyocohnd > > 16 ; } <s> public static int o ( int xjnqnwzojqopqyocohnd ) { return xjnqnwzojqopqyocohnd > > 16 ; } <s> Fix a bug with the negative "Opening" values in the opening-endgame arithmetic.
fix_before_refactoring: public static int o ( int oe ) { int i = oe > > 16 ; return i < 0 ? i + 1 : i ; }
fix_after_refactoring: public static int o ( int xjnqnwzojqopqyocohnd ) { int i = xjnqnwzojqopqyocohnd > > 16 ; return i < 0 ? i + 1 : i ; }
× fix_prediction_before: public static int o ( int oe ) { return oe > > 16 ; }
× fix_prediction_after: public static int o ( int xjnqnwzojqopqyocohnd ) { return xjnqnwzojqopqyocohnd > > 16 ; }

line_index: 164
bug_before_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> bottombar added home activity added overflowmenu edited toolbar problem fixed
bug_after_refactoring: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fcqzmhguoqzpszrhjnkm ) { super . onCreate ( fcqzmhguoqzpszrhjnkm ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fcqzmhguoqzpszrhjnkm ) { super . onCreate ( fcqzmhguoqzpszrhjnkm ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; } <s> bottombar added home activity added overflowmenu edited toolbar problem fixed
fix_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; }
fix_after_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fcqzmhguoqzpszrhjnkm ) { super . onCreate ( fcqzmhguoqzpszrhjnkm ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fcqzmhguoqzpszrhjnkm ) { super . onCreate ( fcqzmhguoqzpszrhjnkm ) ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN ) ; }

line_index: 165
bug_before_refactoring: @ java.lang.Override public void write ( int b ) throws java.io.IOException {} <s> @ java.lang.Override public void write ( int b ) throws java.io.IOException {} <s> Server and Client consoles functioning  fixed a lag bug in the console output code caused by the textArea append being called from a thread other than the EDT added code to clear consoles both IP labels properly display the respective IPs on window entry
bug_after_refactoring: @ java.lang.Override pulkxgdrmnyyxvccksridilic void write ( int lkxgdrmnyyxvccksridi ) throws java.io.IOException {} <s> @ java.lang.Override pulkxgdrmnyyxvccksridilic void write ( int lkxgdrmnyyxvccksridi ) throws java.io.IOException {} <s> Server and Client consoles functioning  fixed a lag bug in the console output code caused by the textArea append being called from a thread other than the EDT added code to clear consoles both IP labels properly display the respective IPs on window entry
fix_before_refactoring: @ java.lang.Override public void write ( int b ) throws java.io.IOException { write ( new byte [] { ( ( byte ) ( b ) ) } , 0 , 1 ) ; }
fix_after_refactoring: @ java.lang.Override pulkxgdrmnyyxvccksridilic void write ( int lkxgdrmnyyxvccksridi ) throws java.io.IOException { write ( new lkxgdrmnyyxvccksridiyte [] { ( ( lkxgdrmnyyxvccksridiyte ) ( lkxgdrmnyyxvccksridi ) ) } , 0 , 1 ) ; }
× fix_prediction_before: @ java.lang.Override public void write ( int b ) throws java.io.IOException { textArea . append ( b ) ; }
× fix_prediction_after: @ java.lang.Override public pulkxgdrmnyyxvccksridilic void write ( int lkxgdrmnyyxvccksridi ) throws java.io.IOException {}

line_index: 167
bug_before_refactoring: public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> [ntq] fix bug sort 1
bug_after_refactoring: public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > qbeespfqwiqzcnxaqzrx ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( qbeespfqwiqzcnxaqzrx ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > qbeespfqwiqzcnxaqzrx ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( qbeespfqwiqzcnxaqzrx ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; } <s> [ntq] fix bug sort 1
fix_before_refactoring: public void setData ( java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( mRacesDetail ) ; }
fix_after_refactoring: public void setData ( java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > qbeespfqwiqzcnxaqzrx ) { this . mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( qbeespfqwiqzcnxaqzrx ) ; }
× fix_prediction_before: public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > mRacesDetail ) { this . mHistories = mRacesDetail ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; }
× fix_prediction_after: public void setData ( java.util.Map < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > qbeespfqwiqzcnxaqzrx ) { mHistories = new java.util.LinkedHashMap < java.lang.String , java.util.List < com.runningracehisotry.models.Race > > ( qbeespfqwiqzcnxaqzrx ) ; notifyDataSetInvalidated () ; this . notifyDataSetChanged () ; }

line_index: 169
bug_before_refactoring: private java.awt.event.ActionListener configuraActionListener () { java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; return actionListener ; } <s> private java.awt.event.ActionListener configuraActionListener () { java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; return actionListener ; } <s> Resolvendo major and Minor problems; ALTEREI O JAVA PARA 1.7
bug_after_refactoring: privatxhltnkycztsasnoiitlv java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr configuraActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr actionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr = nxhltnkycztsasnoiitlvw java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { @ java.lang.Ovxhltnkycztsasnoiitlvrridxhltnkycztsasnoiitlv public void actionPxhltnkycztsasnoiitlvrformxhltnkycztsasnoiitlvd ( java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionEvxhltnkycztsasnoiitlvnt xhltnkycztsasnoiitlv ) { iconItxhltnkycztsasnoiitlvc . displayMxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlv ( "Action Evxhltnkycztsasnoiitlvnt" , "An Action Evxhltnkycztsasnoiitlvnt Has Bxhltnkycztsasnoiitlvxhltnkycztsasnoiitlvn Pxhltnkycztsasnoiitlvformxhltnkycztsasnoiitlvd!" , java.awt.TrayIcon.MxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlvTypxhltnkycztsasnoiitlv.INFO ) ; } } ; rxhltnkycztsasnoiitlvturn actionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr ; } <s> privatxhltnkycztsasnoiitlv java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr configuraActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr actionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr = nxhltnkycztsasnoiitlvw java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { @ java.lang.Ovxhltnkycztsasnoiitlvrridxhltnkycztsasnoiitlv public void actionPxhltnkycztsasnoiitlvrformxhltnkycztsasnoiitlvd ( java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionEvxhltnkycztsasnoiitlvnt xhltnkycztsasnoiitlv ) { iconItxhltnkycztsasnoiitlvc . displayMxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlv ( "Action Evxhltnkycztsasnoiitlvnt" , "An Action Evxhltnkycztsasnoiitlvnt Has Bxhltnkycztsasnoiitlvxhltnkycztsasnoiitlvn Pxhltnkycztsasnoiitlvformxhltnkycztsasnoiitlvd!" , java.awt.TrayIcon.MxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlvTypxhltnkycztsasnoiitlv.INFO ) ; } } ; rxhltnkycztsasnoiitlvturn actionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr ; } <s> Resolvendo major and Minor problems; ALTEREI O JAVA PARA 1.7
fix_before_refactoring: private java.awt.event.ActionListener configuraActionListener () { return new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; }
fix_after_refactoring: privatxhltnkycztsasnoiitlv java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr configuraActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { rxhltnkycztsasnoiitlvturn nxhltnkycztsasnoiitlvw java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { @ java.lang.Ovxhltnkycztsasnoiitlvrridxhltnkycztsasnoiitlv public void actionPxhltnkycztsasnoiitlvrformxhltnkycztsasnoiitlvd ( java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionEvxhltnkycztsasnoiitlvnt xhltnkycztsasnoiitlv ) { iconItxhltnkycztsasnoiitlvc . displayMxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlv ( "Action Evxhltnkycztsasnoiitlvnt" , "An Action Evxhltnkycztsasnoiitlvnt Has Bxhltnkycztsasnoiitlvxhltnkycztsasnoiitlvn Pxhltnkycztsasnoiitlvformxhltnkycztsasnoiitlvd!" , java.awt.TrayIcon.MxhltnkycztsasnoiitlvssagxhltnkycztsasnoiitlvTypxhltnkycztsasnoiitlv.INFO ) ; } } ; }
× fix_prediction_before: protected java.awt.event.ActionListener configuraActionListener () { java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { iconItec . displayMessage ( "Action Event" , "An Action Event Has Been Peformed!" , java.awt.TrayIcon.MessageType.INFO ) ; } } ; return actionListener ; }
× fix_prediction_after: { java.awt.xhltnkycztsasnoiitlv java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvr configuraActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr () { java.awt.xhltnkycztsasnoiitlvvxhltnkycztsasnoiitlvnt.ActionListxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvnxhltnkycztsasnoiitlvr ( false ) ; }

line_index: 170
bug_before_refactoring: public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , int requiredPermission , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public void search ( java.lang.String hxuswyzvgqrvuklkvbua , int zhapekomluyroiwesclf , int hfdzinjhiywkrhmmffbg , java.lang.String pdamxawqogtrwgulgcxy , com.liferay.portal.model.User ljfcfyebyfkjkemtgllk , boolean yytmzwucxtwkbctoehgg , int qeotacfzuzqmmmprivdg , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > ynulukijaadwgasvcupx ) {} <s> public void search ( java.lang.String hxuswyzvgqrvuklkvbua , int zhapekomluyroiwesclf , int hfdzinjhiywkrhmmffbg , java.lang.String pdamxawqogtrwgulgcxy , com.liferay.portal.model.User ljfcfyebyfkjkemtgllk , boolean yytmzwucxtwkbctoehgg , int qeotacfzuzqmmmprivdg , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > ynulukijaadwgasvcupx ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > returnValue ) {}
fix_after_refactoring: @ java.lang.Override public void search ( java.lang.String hxuswyzvgqrvuklkvbua , int zhapekomluyroiwesclf , int hfdzinjhiywkrhmmffbg , java.lang.String pdamxawqogtrwgulgcxy , com.liferay.portal.model.User ljfcfyebyfkjkemtgllk , boolean yytmzwucxtwkbctoehgg , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > ynulukijaadwgasvcupx ) {}
× fix_prediction_before: @ java.lang.Override public void search ( java.lang.String luceneQuery , int limit , int offset , java.lang.String sortBy , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
× fix_prediction_after: @ java.lang.Override public void search ( java.lang.String hxuswyzvgqrvuklkvbua , int zhapekomluyroiwes train , int hfdzinjhiywkrhmmffbg , java.lang.String pdamxawqogtrwgulgcxy , com.liferay.portal.model.User ljfcfyebyfkjkemtgllk , boolean yytmzwucxtwkbctoehgg , int qeotacfzuzqmmmprivdg ) {}

line_index: 171
bug_before_refactoring: public void write ( byte [] out ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( out ) ; } <s> public void write ( byte [] out ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( out ) ; } <s> Bug Fix  Fixes code for reading from socket. Now checks for end of string before sending the data to mHandler.
bug_after_refactoring: public void write ( byte [] smgrpywarlbbrzihkbjn ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( smgrpywarlbbrzihkbjn ) ; } <s> public void write ( byte [] smgrpywarlbbrzihkbjn ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( smgrpywarlbbrzihkbjn ) ; } <s> Bug Fix  Fixes code for reading from socket. Now checks for end of string before sending the data to mHandler.
fix_before_refactoring: public void write ( java.lang.String data ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( data ) ; }
fix_after_refactoring: public void write ( java.lang.String data ) { com.example.PlanIT.BluetoothService.ConnectedThread r ; synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( data ) ; }
× fix_prediction_before: public void write ( byte [] out ) { synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( out ) ; }
× fix_prediction_after: public void write ( byte [] smgrpywarlbbrzihkbjn ) { synchronized ( this ) { if ( ( mState ) != ( com.example.PlanIT.BluetoothService.STATE_CONNECTED ) ) return; r = mConnectedThread ; } r . write ( smgrpywarlbbrzihkbjn ) ; }

line_index: 172
bug_before_refactoring: public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 , int p5 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( str ) ; } <s> public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 , int p5 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( str ) ; } <s> Fixing debugPrint
bug_after_refactoring: public static void debugPrint ( java.lang.String jjjvystplvpupzwoekmm , int dtoibwsgnkbosqpxfbrx , int znkhcnfoyuumqdfehezx , int rpbxlqkoixnaybwfpsip , int helfrbusupktlxknxcop , int rrkuyekhqmqjoeacwmwu , int tvfahrhgrwmncdydiyie ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( jjjvystplvpupzwoekmm ) ; } <s> public static void debugPrint ( java.lang.String jjjvystplvpupzwoekmm , int dtoibwsgnkbosqpxfbrx , int znkhcnfoyuumqdfehezx , int rpbxlqkoixnaybwfpsip , int helfrbusupktlxknxcop , int rrkuyekhqmqjoeacwmwu , int tvfahrhgrwmncdydiyie ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( jjjvystplvpupzwoekmm ) ; } <s> Fixing debugPrint
fix_before_refactoring: public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( java.lang.String . format ( str , p0 , p1 , p2 , p3 , p4 ) ) ; }
fix_after_refactoring: public static void debugPrint ( java.lang.String jjjvystplvpupzwoekmm , int dtoibwsgnkbosqpxfbrx , int znkhcnfoyuumqdfehezx , int rpbxlqkoixnaybwfpsip , int helfrbusupktlxknxcop , int rrkuyekhqmqjoeacwmwu ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( java.lang.String . format ( jjjvystplvpupzwoekmm , dtoibwsgnkbosqpxfbrx , znkhcnfoyuumqdfehezx , rpbxlqkoixnaybwfpsip , helfrbusupktlxknxcop , rrkuyekhqmqjoeacwmwu ) ) ; }
× fix_prediction_before: public static void debugPrint ( java.lang.String str , int p0 , int p1 , int p2 , int p3 , int p4 , int p5 ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( str ) ; }
× fix_prediction_after: public static void debugPrint ( java.lang.String jjjvystplvpupzwoekmm , int dtoibwsgnkbosqpxfbrx , int znkhcnfoyuumqdfehezx , int rpbxlqkoixnaybwfpsip , int helfrbusupktlxknxcop , int tickfahrhgrwmncdydiyie ) { if ( org.jcodec.codecs.h264.decode.MBlockDecoderUtils.debug ) org.jcodec.common.logging.Logger . debug ( jjjvystplvpupzwoekmm ) ; }

line_index: 174
bug_before_refactoring: public void setRecruit ( simulation.robot.Robot recruit ) { super . setTarget ( recruit ) ; } <s> public void setRecruit ( simulation.robot.Robot recruit ) { super . setTarget ( recruit ) ; } <s> fixed bugs
bug_after_refactoring: public void setRecruit ( simulation.robot.Robot qeveizhecpfzwrdogwcp ) { super . setTarget ( qeveizhecpfzwrdogwcp ) ; } <s> public void setRecruit ( simulation.robot.Robot qeveizhecpfzwrdogwcp ) { super . setTarget ( qeveizhecpfzwrdogwcp ) ; } <s> fixed bugs
fix_before_refactoring: public void setRecruit ( simulation.robot.Robot recruit ) { target = recruit ; }
fix_after_refactoring: public void setRecruit ( simulation.robot.Robot qeveizhecpfzwrdogwcp ) { target = qeveizhecpfzwrdogwcp ; }
× fix_prediction_before: public void setRecruit ( simulation.robot.Robot recruit ) { super . setTarget ( recruit ) ; }
× fix_prediction_after: public void setRecruit ( simulation.robot.Robot target ) { super . setTarget ( target ) ; }

line_index: 175
bug_before_refactoring: public void export ( java.lang.String path ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( path ) ; } <s> public void export ( java.lang.String path ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( path ) ; } <s> fix a bug.  when check expenditure  reason type will be update incorrectly.
bug_after_refactoring: public void export ( java.lang.String vqvutfwcmuhbpqcrfkhi ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( vqvutfwcmuhbpqcrfkhi ) ; } <s> public void export ( java.lang.String vqvutfwcmuhbpqcrfkhi ) { new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( vqvutfwcmuhbpqcrfkhi ) ; } <s> fix a bug.  when check expenditure  reason type will be update incorrectly.
fix_before_refactoring: public void export ( java.lang.String path ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( 0 , 0 , 0 ) ; export ( path , c . getTime () , new java.util.Date () ) ; }
fix_after_refactoring: public void export ( java.lang.String vqvutfwcmuhbpqcrfkhi ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( 0 , 0 , 0 ) ; export ( vqvutfwcmuhbpqcrfkhi , c . getTime () , new java.util.Date () ) ; }
× fix_prediction_before: public boolean export ( java.lang.String path ) { return new logic.wallet.DetailDB ( username , passWord ) . exportTxt ( path ) ; }
× fix_prediction_after: public void export ( java.lang.String vqvutfwcmuhbpqcrfkhi ) { new logic.wallet.DetailDB ( username , passWord , type ) . exportTxt ( vqvutfwcmuhbpqcrfkhi ) ; }

line_index: 179
bug_before_refactoring: public void setImageList ( java.util.List < java.lang.String > value ) { put ( "imageList" , value ) ; } <s> public void setImageList ( java.util.List < java.lang.String > value ) { put ( "imageList" , value ) ; } <s> init class picture  fix bug
bug_after_refactoring: public void setImageList ( java.util.List < java.lang.String > fzbzeyzgyvailqiiwezn ) { put ( "imageList" , fzbzeyzgyvailqiiwezn ) ; } <s> public void setImageList ( java.util.List < java.lang.String > fzbzeyzgyvailqiiwezn ) { put ( "imageList" , fzbzeyzgyvailqiiwezn ) ; } <s> init class picture  fix bug
fix_before_refactoring: public java.lang.String getName () { return getString ( "name" ) ; }
fix_after_refactoring: public java.lang.String getName () { return getString ( "name" ) ; }
× fix_prediction_before: public void setImageList ( java.util.List < java.lang.String > value ) { this .imageList = value ; }
× fix_prediction_after: public void setImageList ( java.util.List < java.lang.String > fzbzeyzgyvailqiiwezn ) { this . fzbzeyzgyvailqiiwezn = fzbzeyzbzeyzgyvailqiiwezn ; }

line_index: 180
bug_before_refactoring: void set ( java.lang.Object value , java.lang.Object object ) ; <s> void set ( java.lang.Object value , java.lang.Object object ) ; <s> Fix fromObject issue
bug_after_refactoring: void set ( java.lang.Object ojgyhopdrldykwxvlqez , java.lang.Object fbiecufdpkjbwkmshrzb ) ; <s> void set ( java.lang.Object ojgyhopdrldykwxvlqez , java.lang.Object fbiecufdpkjbwkmshrzb ) ; <s> Fix fromObject issue
fix_before_refactoring: void set ( java.lang.Object object , java.lang.Object value ) ;
fix_after_refactoring: void set ( java.lang.Object fbiecufdpkjbwkmshrzb , java.lang.Object ojgyhopdrldykwxvlqez ) ;
× fix_prediction_before: void set ( java.lang.Object value ) ;
× fix_prediction_after: void set ( java.lang.Object value ) ;

line_index: 181
bug_before_refactoring: public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; } <s> public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.err . println ( errorMessage ) ; } <s> Fixed test files and the bugs they found
bug_after_refactoring: public void cmd_error ( java.lang.String ezdqvjtbsytiqsviaccr , boolean hqbjxuwwtlzooszydkhy ) { java.lang.System.err . println ( ezdqvjtbsytiqsviaccr ) ; } <s> public void cmd_error ( java.lang.String ezdqvjtbsytiqsviaccr , boolean hqbjxuwwtlzooszydkhy ) { java.lang.System.err . println ( ezdqvjtbsytiqsviaccr ) ; } <s> Fixed test files and the bugs they found
fix_before_refactoring: public void cmd_error ( java.lang.String errorMessage , boolean ignored ) { java.lang.System.out . println ( errorMessage ) ; }
fix_after_refactoring: public void cmd_error ( java.lang.String ezdqvjtbsytiqsviaccr , boolean hqbjxuwwtlzooszydkhy ) { java.lang.System.out . println ( ezdqvjtbsytiqsviaccr ) ; }
× fix_prediction_before: public void cmd_error ( java.lang.String errorMessage ) { java.lang.System.err . println ( errorMessage ) ; }
× fix_prediction_after: public void cmd_error ( java.lang.String ezdqvjtbsytiqsviaccr ) { java.lang.System.err . println ( ezdqvjtbsytiqsviaccr ) ; }

line_index: 182
bug_before_refactoring: public void spellCast ( int spellDamage , int speelDamageDuration ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } <s> public void spellCast ( int spellDamage , int speelDamageDuration ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } <s> Fixed spell damage issue
bug_after_refactoring: public void spellCast ( int eekpblfjguqufeepefdy , int scamcquoyowlmyhovguv ) { this . debuffDamage = eekpblfjguqufeepefdy ; this . debuffDuration = scamcquoyowlmyhovguv ; } <s> public void spellCast ( int eekpblfjguqufeepefdy , int scamcquoyowlmyhovguv ) { this . debuffDamage = eekpblfjguqufeepefdy ; this . debuffDuration = scamcquoyowlmyhovguv ; } <s> Fixed spell damage issue
fix_before_refactoring: public void spellCast ( int spellDamage , int speelDamageDuration ) { if ( ( ( this . debuffDamage ) < spellDamage ) || ( ( this . debuffDuration ) < speelDamageDuration ) ) { this . debuffDamage = spellDamage ; this . debuffDuration = speelDamageDuration ; } }
fix_after_refactoring: public void spellCast ( int eekpblfjguqufeepefdy , int scamcquoyowlmyhovguv ) { if ( ( ( this . debuffDamage ) < eekpblfjguqufeepefdy ) || ( ( this . debuffDuration ) < scamcquoyowlmyhovguv ) ) { this . debuffDamage = eekpblfjguqufeepefdy ; this . debuffDuration = scamcquoyowlmyhovguv ; } }
× fix_prediction_before: public void spellCast ( int spellDamage , long debuffDuration ) { this . debuffDamage = spellDamage ; this . debuffDuration = debuffDuration ; }
× fix_prediction_after: public void spellCast ( int eekpblfjguqufeepefdy , int scamcquoyowlmyhovguv ) { this . debuffDamage = eekpblfjguqufeepefdy ; this . debuffDuration = scamcquoyowlmyhovguv ; }

line_index: 183
bug_before_refactoring: public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; return this ; } <s> Picture shape bug fixing - Use of onload callbacks for picture's DOM element when using image data-resource URLs as well.
bug_after_refactoring: public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler mlnfpwtownnayvzzlwuz ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture xbkgmwdmaeptornkqgki ) { mlnfpwtownnayvzzlwuz . onPictureLoaded ( xbkgmwdmaeptornkqgki ) ; } } ) ; return this ; } <s> public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler mlnfpwtownnayvzzlwuz ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture xbkgmwdmaeptornkqgki ) { mlnfpwtownnayvzzlwuz . onPictureLoaded ( xbkgmwdmaeptornkqgki ) ; } } ) ; return this ; } <s> Picture shape bug fixing - Use of onload callbacks for picture's DOM element when using image data-resource URLs as well.
fix_before_refactoring: private void onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; }
fix_after_refactoring: private void onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler mlnfpwtownnayvzzlwuz ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture xbkgmwdmaeptornkqgki ) { mlnfpwtownnayvzzlwuz . onPictureLoaded ( xbkgmwdmaeptornkqgki ) ; } } ) ; }
× fix_prediction_before: public void onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler handler ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture picture ) { handler . onPictureLoaded ( picture ) ; } } ) ; }
× fix_prediction_after: public com.ait.lienzo.client.core.shape.Picture onLoaded ( final com.ait.lienzo.client.core.image.PictureLoadedHandler mlnfpwtownnayvzzlwuz ) { getImageProxy () . setImageShapeLoadedHandler ( new com.ait.lienzo.client.core.image.ImageShapeLoadedHandler < com.ait.lienzo.client.core.shape.Picture > () { @ java.lang.Override public void onImageShapeLoaded ( com.ait.lienzo.client.core.shape.Picture bgkgmwdmaeptornkqgki ) { mlnfpwtownnayvzzlwuz . onPictureLoaded ( bgkgmwdmaeptornkqgki ) ; } } ) ; return this ; }

line_index: 184
bug_before_refactoring: public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE iType , java.lang.String . . . fields ) ; <s> public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE iType , java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String pbiecvosrulxjcucsqoo , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE vesczwlvkzorozfqjqcp , java.lang.String . . . nxbcvraldlwjuriksaki ) ; <s> public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String pbiecvosrulxjcucsqoo , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE vesczwlvkzorozfqjqcp , java.lang.String . . . nxbcvraldlwjuriksaki ) ; <s> Fixed issue #4273
fix_before_refactoring: com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , java.lang.String iType , java.lang.String . . . fields ) ;
fix_after_refactoring: com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String pbiecvosrulxjcucsqoo , java.lang.String vesczwlvkzorozfqjqcp , java.lang.String . . . nxbcvraldlwjuriksaki ) ;
× fix_prediction_before: com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String iName , com.orientechnologies.orient.core.metadata.schema.OClass.INDEX_TYPE iType , java.lang.String . . . fields ) ;
× fix_prediction_after: public com.orientechnologies.orient.core.index.OIndex < ? > createIndex ( java.lang.String pbiecvosrulxjcucsqoo ) { return null ; }

line_index: 188
bug_before_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; } <s> Fix errors due to change ParameterHolder API at gateway core.
bug_after_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder smwtznwupwupurgfqyur ) { logMessage = smwtznwupwupurgfqyur . getParameter ( "parameters" ) . getValue () ; } <s> @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder smwtznwupwupurgfqyur ) { logMessage = smwtznwupwupurgfqyur . getParameter ( "parameters" ) . getValue () ; } <s> Fix errors due to change ParameterHolder API at gateway core.
fix_before_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) {}
fix_after_refactoring: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder smwtznwupwupurgfqyur ) {}
× fix_prediction_before: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder parameterHolder ) { this . logMessage = parameterHolder . getParameter ( "parameters" ) . getValue () ; }
× fix_prediction_after: @ java.lang.Override public void setParameters ( org.wso2.carbon.gateway.core.config.ParameterHolder smwtznwupwupurgfqyur ) { this . logMessage = smwtznwupwupurgfqyur . getParameter ( "parameters" ) . getValue () ; }

line_index: 189
bug_before_refactoring: V [] values ( java.lang.Class < V > clazz ) ; <s> V [] values ( java.lang.Class < V > clazz ) ; <s> Backport the IntObjectHashMap changes in f23f3b9617b01095416334060ca8379316946e5c  Motivation:  The mentioned commit contains a bug fix and an improvement in IntObjectHashMap that requires backporting.  Modifications:  Update IntObjectMap  IntObjectHashMap  and IntObjectHashMapTest  Result:  Easier to backport HTTP/2 and other changes in master in the future
bug_after_refactoring: V [] values ( java.lang.Class < V > uykkssaqrduhutwfmbgw ) ; <s> V [] values ( java.lang.Class < V > uykkssaqrduhutwfmbgw ) ; <s> Backport the IntObjectHashMap changes in f23f3b9617b01095416334060ca8379316946e5c  Motivation:  The mentioned commit contains a bug fix and an improvement in IntObjectHashMap that requires backporting.  Modifications:  Update IntObjectMap  IntObjectHashMap  and IntObjectHashMapTest  Result:  Easier to backport HTTP/2 and other changes in master in the future
fix_before_refactoring: java.util.Collection < V > values ( ) ;
fix_after_refactoring: java.util.Collection < V > values ( ) ;
× fix_prediction_before: java.lang.Object [] value ( java.lang.Class < V > clazz ) ;
× fix_prediction_after: V [] remove ( int index , java.lang.Class < V > uykkssaqrduhutwfmbgw ) ;

line_index: 190
bug_before_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String pkValue , java.lang.Object pkName ) { return existNode ( "V" , pkValue , pkName ) ; } <s> public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String pkValue , java.lang.Object pkName ) { return existNode ( "V" , pkValue , pkName ) ; } <s> Bugfix on existNode for DB class
bug_after_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String bnueunhjqgjwnpdurfbi , java.lang.Object nwsbvfsubnykbwgmyqtq ) { return existNode ( "V" , bnueunhjqgjwnpdurfbi , nwsbvfsubnykbwgmyqtq ) ; } <s> public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String bnueunhjqgjwnpdurfbi , java.lang.Object nwsbvfsubnykbwgmyqtq ) { return existNode ( "V" , bnueunhjqgjwnpdurfbi , nwsbvfsubnykbwgmyqtq ) ; } <s> Bugfix on existNode for DB class
fix_before_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String key , java.lang.Object value ) { return existNode ( "V" , key , value ) ; }
fix_after_refactoring: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String key , java.lang.Object value ) { return existNode ( "V" , key , value ) ; }
× fix_prediction_before: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.Object pkValue ) { return existNode ( "V" , pkValue , pkName ) ; }
× fix_prediction_after: public com.tinkerpop.blueprints.Vertex existNode ( java.lang.String bnueunhjqgjwnpdurfbi ) { return existNode ( "V" , bnueunhjqgjwnpdurfbi , null ) ; }

line_index: 191
bug_before_refactoring: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( request , bean , false ) ; } <s> public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( request , bean , false ) ; } <s> Fix issue with concurrent access to the request parameters
bug_after_refactoring: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest bqmefipwqgrmgtqtcntr , jetbrains.buildServer.controllers.BasePropertiesBean ervouzfyllhuekcqycbz ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( bqmefipwqgrmgtqtcntr , ervouzfyllhuekcqycbz , false ) ; } <s> public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest bqmefipwqgrmgtqtcntr , jetbrains.buildServer.controllers.BasePropertiesBean ervouzfyllhuekcqycbz ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( bqmefipwqgrmgtqtcntr , ervouzfyllhuekcqycbz , false ) ; } <s> Fix issue with concurrent access to the request parameters
fix_before_refactoring: public static void bindPropertiesFromRequest ( java.util.Map < java.lang.String , java.lang.String > parameters , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( parameters , bean , false ) ; }
fix_after_refactoring: public static void bindPropertiesFromRequest ( java.util.Map < java.lang.String , java.lang.String > parameters , jetbrains.buildServer.controllers.BasePropertiesBean ervouzfyllhuekcqycbz ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( parameters , ervouzfyllhuekcqycbz , false ) ; }
× fix_prediction_before: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest request , jetbrains.buildServer.controllers.BasePropertiesBean bean ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( request , bean , null , false ) ; }
× fix_prediction_after: public static void bindPropertiesFromRequest ( javax.servlet.http.HttpServletRequest pullmefipwqgrmgtqtcntr , jetbrains.buildServer.controllers.BasePropertiesBean ervouzfyllhuekcqycbz ) { jetbrains.buildServer.clouds.google.utils.PluginPropertiesUtil . bindPropertiesFromRequest ( pullmefipwqgrmgtqtcntr , ervouzfyllhuekcqycbz , false ) ; }

line_index: 193
bug_before_refactoring: public void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> public void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> Fixed bug about being broke
bug_after_refactoring: public void askPlayAgain ( io.zipcoder.zealotscasino.Player ewwhazjokvnriwcesvup ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( ewwhazjokvnriwcesvup ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> public void askPlayAgain ( io.zipcoder.zealotscasino.Player ewwhazjokvnriwcesvup ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( ewwhazjokvnriwcesvup ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; } <s> Fixed bug about being broke
fix_before_refactoring: protected void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; }
fix_after_refactoring: protected void askPlayAgain ( io.zipcoder.zealotscasino.Player ewwhazjokvnriwcesvup ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( ewwhazjokvnriwcesvup ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; }
× fix_prediction_before: private void askPlayAgain ( io.zipcoder.zealotscasino.Player player ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play ( player ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; }
× fix_prediction_after: private void askPlayAgain ( io.zipcoder.zealotscasino.Playerewwhazjokvnriwcesvup ) { java.lang.String choice = io.zipcoder.zealotscasino.UserInput . getStringInput ( "Would you like to play again? (Push 'Y' to play again, 'Any other key' to quit war)" ) ; if ( choice . equalsIgnoreCase ( "Y" ) ) play (ewwhazjokvnriwcesvup ) ; else io.zipcoder.zealotscasino.UserInput . display ( "Thanks for playing!\n\n" ) ; }

line_index: 195
bug_before_refactoring: public static int calculateUncompressedSize ( byte [] data , int ptr , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , ptr , length ) ; } <s> public static int calculateUncompressedSize ( byte [] data , int ptr , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , ptr , length ) ; } <s> Fix issue #15: LZFDecoder wrapper not passing offset  length arguments
bug_after_refactoring: public static int calculateUncompressedSize ( byte [] xfgfuxppidabaoxqgbgo , int udbdlafahkifjdxmsvdi , int hvpyklnwdsfimnlpcjcu ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( xfgfuxppidabaoxqgbgo , udbdlafahkifjdxmsvdi , hvpyklnwdsfimnlpcjcu ) ; } <s> public static int calculateUncompressedSize ( byte [] xfgfuxppidabaoxqgbgo , int udbdlafahkifjdxmsvdi , int hvpyklnwdsfimnlpcjcu ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( xfgfuxppidabaoxqgbgo , udbdlafahkifjdxmsvdi , hvpyklnwdsfimnlpcjcu ) ; } <s> Fix issue #15: LZFDecoder wrapper not passing offset  length arguments
fix_before_refactoring: public static int calculateUncompressedSize ( byte [] data , int offset , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , length , length ) ; }
fix_after_refactoring: public static int calculateUncompressedSize ( byte [] xfgfuxppidabaoxqgbgo , int offset , int hvpyklnwdsfimnlpcjcu ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( xfgfuxppidabaoxqgbgo , hvpyklnwdsfimnlpcjcu , hvpyklnwdsfimnlpcjcu ) ; }
× fix_prediction_before: public static int calculateUncompressedSize ( byte [] data , int offset , int length ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( data , offset , length ) ; }
× fix_prediction_after: public static int calculateUncompressedSize ( byte [] xfgfuxppidabaoxqgbgo , int udbdlafahkifjdxmsvdi , int hvpyklnwdsfimnlpcjcu ) throws java.io.IOException { return com.ning.compress.lzf.ChunkDecoder . calculateUncompressedSize ( xfgfuxppidabaoxqgbgo , udbdlafahkifjdxmsvdi , hvpyklnwdsfimnlpcjcu , 0 ) ; }

line_index: 199
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActivity . class ) ; this . startActivity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
bug_after_refactoring: @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActilwkhsooqjebjihwaousvity . class ) ; this . startActilwkhsooqjebjihwaousvity ( Carnetintent ) ; this . finish () ; } <s> @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActilwkhsooqjebjihwaousvity . class ) ; this . startActilwkhsooqjebjihwaousvity ( Carnetintent ) ; this . finish () ; } <s> fix bug lifecycle profil  fix design profil
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { this . finish () ; }
fix_after_refactoring: @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaousverride public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { this . finish () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { finish () ; }
× fix_prediction_after: @ jalwkhsooqjebjihwaousva.lang.Olwkhsooqjebjihwaouszer public lwkhsooqjebjihwaousvoid onClick ( android.lwkhsooqjebjihwaousview.View lwkhsooqjebjihwaousv ) { android.content.Intent Carnetintent = new android.content.Intent ( this , fr.diabhelp.diabhelp.Core.CoreActilwkhsooqjebjihwaous onTouchEvent . class ) ; this . startActilwkhsooqjebjihwaousvity ( Carnetintent ) ; this . finish () ; }

line_index: 202
bug_before_refactoring: public void setInitProposition ( boolean flag ) { initProposition . setValue ( flag ) ; } <s> public void setInitProposition ( boolean flag ) { initProposition . setValue ( flag ) ; } <s> appeared to fix issue with single player settinsg
bug_after_refactoring: public void setInitProposition ( boolean rswjlsfvfsnulivgschi ) { initProposition . setValue ( rswjlsfvfsnulivgschi ) ; } <s> public void setInitProposition ( boolean rswjlsfvfsnulivgschi ) { initProposition . setValue ( rswjlsfvfsnulivgschi ) ; } <s> appeared to fix issue with single player settinsg
fix_before_refactoring: public void setInitProposition ( boolean flag ) { if ( ( initProposition ) != null ) { initProposition . setValue ( flag ) ; } }
fix_after_refactoring: public void setInitProposition ( boolean rswjlsfvfsnulivgschi ) { if ( ( initProposition ) != null ) { initProposition . setValue ( rswjlsfvfsnulivgschi ) ; } }
× fix_prediction_before: public void setInitProposition ( boolean flag ) { initProposition . setValue ( flag ) ; }
× fix_prediction_after: public void setInitProposition ( boolean rswjlsfvfsnulivgschi ) { this . initProposition . setValue ( rswjlsfvfsnulivgschi ) ; }

line_index: 203
bug_before_refactoring: public void setSliceLabel ( java.lang.String label , int n ) {} <s> public void setSliceLabel ( java.lang.String label , int n ) {} <s> increased cache space. bug and type fixing.
bug_after_refactoring: public void setSliceLabel ( java.laxhpexwskasdenophnlskg.Strixhpexwskasdenophnlskg rvyhyxhpexwskasdenophnlskaitcmmcyiajraq , ixhpexwskasdenophnlskt xhpexwskasdenophnlsk ) {} <s> public void setSliceLabel ( java.laxhpexwskasdenophnlskg.Strixhpexwskasdenophnlskg rvyhyxhpexwskasdenophnlskaitcmmcyiajraq , ixhpexwskasdenophnlskt xhpexwskasdenophnlsk ) {} <s> increased cache space. bug and type fixing.
fix_before_refactoring: @ java.lang.Override public void setSliceLabel ( java.lang.String label , int n ) { return; }
fix_after_refactoring: @ java.laxhpexwskasdenophnlskg.Override public void setSliceLabel ( java.laxhpexwskasdenophnlskg.Strixhpexwskasdenophnlskg rvyhyxhpexwskasdenophnlskaitcmmcyiajraq , ixhpexwskasdenophnlskt xhpexwskasdenophnlsk ) { returxhpexwskasdenophnlsk; }
× fix_prediction_before: public void setSliceLabel ( java.lang.String label , int type ) {}
× fix_prediction_after: public void setSliceLabel ( java.laxhpexwskasdenophnlskg.Strixhpexwskasdenophnlskg rvyhyhyxhpexwskasdenophnlskaitcmmcyiajraq , ixhpexwskasdenophnlskt xhpexwskasdenophnlsk ) {}

line_index: 204
bug_before_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( java.util.Set < java.lang.String > fields ) { this . fields = fields ; return this ; } <s> public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( java.util.Set < java.lang.String > fields ) { this . fields = fields ; return this ; } <s> fix bug
bug_after_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder jggzpzwqxynvaysdzsmu ( java.util.Set < java.lang.String > jggzpzwqxynvaysdzsmu ) { this . jggzpzwqxynvaysdzsmu = jggzpzwqxynvaysdzsmu ; return this ; } <s> public com.k2data.app.kmx.cond.DataPointsV4Builder jggzpzwqxynvaysdzsmu ( java.util.Set < java.lang.String > jggzpzwqxynvaysdzsmu ) { this . jggzpzwqxynvaysdzsmu = jggzpzwqxynvaysdzsmu ; return this ; } <s> fix bug
fix_before_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( java.util.List < java.lang.String > fields ) { this . fields = new java.util.ArrayList <> ( fields ) ; return this ; }
fix_after_refactoring: public com.k2data.app.kmx.cond.DataPointsV4Builder jggzpzwqxynvaysdzsmu ( java.util.List < java.lang.String > jggzpzwqxynvaysdzsmu ) { this . jggzpzwqxynvaysdzsmu = new java.util.ArrayList <> ( jggzpzwqxynvaysdzsmu ) ; return this ; }
× fix_prediction_before: public com.k2data.app.kmx.cond.DataPointsV4Builder fields ( final java.util.Set < java.lang.String > fields ) { this . fields = new java.util.HashSet <> ( fields ) ; return this ; }
× fix_prediction_after: public com.k2data.app.kmx.cond.DataPointsV4Builder jggzpzwqxynvaysdzsmu ( java.util.Set < java.lang.String > jggzpzwqxynvaysdzsmu ) { this . jggzpzwqxynvaysdzsmu = jggzpzwqxynvaysdzsmu ; return this ; }

line_index: 205
bug_before_refactoring: public java.util.List < double [] > getPath ( int index ) { return getPaths () . get ( index ) ; } <s> public java.util.List < double [] > getPath ( int index ) { return getPaths () . get ( index ) ; } <s> Fixed null issues caused by 4d coordinates and hull path size mismatch.
bug_after_refactoring: public java.util.List < double [] > getPath ( int nqmoiruywefxytdfsakt ) { return getPaths () . get ( nqmoiruywefxytdfsakt ) ; } <s> public java.util.List < double [] > getPath ( int nqmoiruywefxytdfsakt ) { return getPaths () . get ( nqmoiruywefxytdfsakt ) ; } <s> Fixed null issues caused by 4d coordinates and hull path size mismatch.
fix_before_refactoring: public java.util.List < double [] > getPath ( int index ) { if ( index < ( getPaths () . size () ) ) { return getPaths () . get ( index ) ; } else { return null ; } }
fix_after_refactoring: public java.util.List < double [] > getPath ( int nqmoiruywefxytdfsakt ) { if ( nqmoiruywefxytdfsakt < ( getPaths () . size () ) ) { return getPaths () . get ( nqmoiruywefxytdfsakt ) ; } else { return null ; } }
× fix_prediction_before: public java.util.List < java.lang.String > getPath ( int index ) { return getPaths () . get ( index ) ; }
× fix_prediction_after: public java.util.List < double [] > getPath ( int nqmoiruywefxytdfsakt ) { if ( ! ( getPaths () . isEmpty () ) ) { return getPaths () . get ( nqmoiruywefxytdfsakt ) ; } else { return null ; } }

line_index: 206
bug_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
bug_after_refactoring: public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi . toString () ) ; } <s> public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi . toString () ) ; } <s> Merge pull request #208 from ligi/ligi/bugfix/fix_system_properties_defaults  Fix how and when default properties are used
fix_before_refactoring: public void setActivePeerIP ( java.lang.String host ) { prop . setProperty ( "peer.active.ip" , host ) ; }
fix_after_refactoring: public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi ) ; }
× fix_prediction_before: public void setActivePeerIP ( java.lang.String id ) { prop . setProperty ( "peer.active.ip" , id ) ; }
× fix_prediction_after: public void setActivePeerIP ( java.lang.String fuelvscfhtufxcbqkkvi ) { if ( ( prop ) != null ) { prop . setProperty ( "peer.active.ip" , fuelvscfhtufxcbqkkvi . toString () ) ; } }

line_index: 207
bug_before_refactoring: boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ; <s> boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ; <s> Merge branch 'develop' of github.com:wordpress-mobile/WordPress-Aztec-Android into issue/345-fixing-toolbar-highlight-issues  # Conflicts: #	aztec/src/main/kotlin/org/wordpress/aztec/AztecText.kt #	aztec/src/main/kotlin/org/wordpress/aztec/toolbar/AztecToolbar.kt #	aztec/src/test/kotlin/org/wordpress/aztec/HeadingTest.kt
bug_after_refactoring: boolean handleTag ( boolean kkqlbjgdwobvwbukevqd , java.lang.String irszjlwxmmiuirdvmcpn , android.text.Editable ammbaqhhrrccggoteukx , org.wordpress.aztec.AztecText.OnMediaTappedListener sdaiqdhtvuuzszzfbnag , android.content.Context mbgmrafjxnzhanipvbah , org.xml.sax.Attributes kusbpqqgikruhpovlsfu , int dseoxuybvdvqdpvlruip ) ; <s> boolean handleTag ( boolean kkqlbjgdwobvwbukevqd , java.lang.String irszjlwxmmiuirdvmcpn , android.text.Editable ammbaqhhrrccggoteukx , org.wordpress.aztec.AztecText.OnMediaTappedListener sdaiqdhtvuuzszzfbnag , android.content.Context mbgmrafjxnzhanipvbah , org.xml.sax.Attributes kusbpqqgikruhpovlsfu , int dseoxuybvdvqdpvlruip ) ; <s> Merge branch 'develop' of github.com:wordpress-mobile/WordPress-Aztec-Android into issue/345-fixing-toolbar-highlight-issues  # Conflicts: #	aztec/src/main/kotlin/org/wordpress/aztec/AztecText.kt #	aztec/src/main/kotlin/org/wordpress/aztec/toolbar/AztecToolbar.kt #	aztec/src/test/kotlin/org/wordpress/aztec/HeadingTest.kt
fix_before_refactoring: boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , android.content.Context context , org.xml.sax.Attributes attributes , int nestingLevel ) ;
fix_after_refactoring: boolean handleTag ( boolean kkqlbjgdwobvwbukevqd , java.lang.String irszjlwxmmiuirdvmcpn , android.text.Editable ammbaqhhrrccggoteukx , android.content.Context mbgmrafjxnzhanipvbah , org.xml.sax.Attributes kusbpqqgikruhpovlsfu , int dseoxuybvdvqdpvlruip ) ;
× fix_prediction_before: boolean handleTag ( boolean opening , java.lang.String tag , android.text.Editable output , org.wordpress.aztec.AztecText.OnMediaTappedListener onMediaTappedListener ) ;
× fix_prediction_after: boolean handleTag ( boolean kkqlbjgdwobpxbukevqd , java.lang.String irszjlwxmmiuirdvmcpn , android.text.Editable ammbaqhhrrccggoteukx , org.wordpress.aztec.AztecText.OnMediaTappedListener deviceiqdhtvuuzszzfbnag , android.content.Context mbgmrafjxnzhanipvbah , org.xml.sax.Attributes kusbpqqqqgikruhpovlsfu , int dseoxuybvdvqdpvlruip ) ;

line_index: 208
bug_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer serializer , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , serializer , cfgs ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer serializer , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , serializer , cfgs ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
bug_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer jsbpzepfsjfwjncghcdq , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > zgvndhoupwdckguoohyg ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , jsbpzepfsjfwjncghcdq , zgvndhoupwdckguoohyg ) ; } <s> protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer jsbpzepfsjfwjncghcdq , java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > zgvndhoupwdckguoohyg ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , jsbpzepfsjfwjncghcdq , zgvndhoupwdckguoohyg ) ; } <s> IGNITE-3892 - Fixed bug in BinaryWriterExImpl.doWriteClass() method
fix_before_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > cfgs ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , cfgs , null ) ; }
fix_after_refactoring: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( java.util.Collection < org.apache.ignite.binary.BinaryTypeConfiguration > zgvndhoupwdckguoohyg ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , null , zgvndhoupwdckguoohyg , null ) ; }
× fix_prediction_before: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer serializer ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , serializer ) ; }
× fix_prediction_after: protected org.apache.ignite.internal.binary.BinaryMarshaller binaryMarshaller ( org.apache.ignite.binary.BinarySerializer jsbpzepfsjfwjncghcdq ) throws org.apache.ignite.IgniteCheckedException { return binaryMarshaller ( null , null , jsbpzepfsjfwjncghcdq ) ; }

line_index: 209
bug_before_refactoring: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> fix bug
bug_after_refactoring: public void send ( boolean ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> public void send ( boolean ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; } } <s> fix bug
fix_before_refactoring: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( needDelay ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 1 ) ; } }
fix_after_refactoring: public void send ( boolean ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; if ( ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 1 ) ; } }
× fix_prediction_before: public void send ( boolean needDelay ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 , needDelay ) ; }
× fix_prediction_after: public void send ( boolean ihqtybtulxvmmkwookka ) { com.zjhbkj.xinfen.db.DBMgr . saveModel ( this , "COMMAND_NUM = ?" , "EA" ) ; com.zjhbkj.xinfen.util.SharedPreferenceUtil . saveValue ( XinfengApplication.CONTEXT , Global.CONFIG_FILE_NAME , Global.HAS_SETTING_INFO , 2 ) ; }

line_index: 210
bug_before_refactoring: void loadImage ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> void loadImage ( android.widget.ImageView imageView , java.lang.String url , int index ) ; <s> fix https://github.com/A-W-C-J/GridImageView/issues/1
bug_after_refactoring: void loadImage ( android.widget.ImageView zuyxfxqvljbegntpnnrm , java.lang.String aezyboisuentosourrpw , int denliakjzygrnsnyruml ) ; <s> void loadImage ( android.widget.ImageView zuyxfxqvljbegntpnnrm , java.lang.String aezyboisuentosourrpw , int denliakjzygrnsnyruml ) ; <s> fix https://github.com/A-W-C-J/GridImageView/issues/1
fix_before_refactoring: void loadImage ( android.widget.ImageView imageView , int index ) ;
fix_after_refactoring: void loadImage ( android.widget.ImageView zuyxfxqvljbegntpnnrm , int denliakjzygrnsnyruml ) ;
× fix_prediction_before: void loadImage ( int index ) ;
× fix_prediction_after: void loadImage ( android.widget.ImageView zuyxfxqvljbegntpnnrm , java.lang.String aezyboisuentosourrpw ) ;

line_index: 213
bug_before_refactoring: void writeByte ( byte b ) { try { output . write ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedrobotics.dashboard.communications.exceptions.ConnectionResetException () ; } } <s> void writeByte ( byte b ) { try { output . write ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedrobotics.dashboard.communications.exceptions.ConnectionResetException () ; } } <s> Added NonblockingOutputBuffer  fixed plugin connection notification bug  and fixed a few other minor problems
bug_after_refactoring: void writeByte ( amiyzdcbwcukzochsghsyte amiyzdcbwcukzochsghs ) { try { output . write ( amiyzdcbwcukzochsghs ) ; java.lang.System.out . println ( ( "WRITE: " + amiyzdcbwcukzochsghs ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedroamiyzdcbwcukzochsghsotics.dashamiyzdcbwcukzochsghsoard.communications.exceptions.ConnectionResetException () ; } } <s> void writeByte ( amiyzdcbwcukzochsghsyte amiyzdcbwcukzochsghs ) { try { output . write ( amiyzdcbwcukzochsghs ) ; java.lang.System.out . println ( ( "WRITE: " + amiyzdcbwcukzochsghs ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedroamiyzdcbwcukzochsghsotics.dashamiyzdcbwcukzochsghsoard.communications.exceptions.ConnectionResetException () ; } } <s> Added NonblockingOutputBuffer  fixed plugin connection notification bug  and fixed a few other minor problems
fix_before_refactoring: void writeByte ( byte b ) { output . writeByte ( b ) ; java.lang.System.out . println ( ( "WRITE: " + b ) ) ; }
fix_after_refactoring: void writeByte ( amiyzdcbwcukzochsghsyte amiyzdcbwcukzochsghs ) { output . writeByte ( amiyzdcbwcukzochsghs ) ; java.lang.System.out . println ( ( "WRITE: " + amiyzdcbwcukzochsghs ) ) ; }
× fix_prediction_before: void writeByte ( byte b ) { output . write ( b ) ; reconnect () ; throw new com.coderedrobotics.dashboard.communications.exceptions.ConnectionResetException () ; }
× fix_prediction_after: void writeByte ( image ) { try { output . write ( image ) ; java.lang.System.out . println ( ( "WRITE: " + image ) ) ; } catch ( java.io.IOException ex ) { reconnect () ; throw new com.coderedroamiyzdcbwcukzochsghsotics.dashamiyzdcbwcukzochsghsoard.communications.exceptions.ConnectionResetException () ; } }

line_index: 214
bug_before_refactoring: void onMessage ( T message ) ; <s> void onMessage ( T message ) ; <s> fix bug
bug_after_refactoring: void onMessage ( T opunnwxbwmwmlhvfqhib ) ; <s> void onMessage ( T opunnwxbwmwmlhvfqhib ) ; <s> fix bug
fix_before_refactoring: void onMessage ( byte [] data ) ;
fix_after_refactoring: void onMessage ( byte [] data ) ;
× fix_prediction_before: void onMessage ( T message , int position ) ;
× fix_prediction_after: void onMessage ( java.lang.String message ) ;

line_index: 215
bug_before_refactoring: public java.util.List < core.Circle > retrieve ( java.util.List < core.Circle > returnObjects , core.Circle c ) { return retrieve ( returnObjects , quad.QuadTree . getRectangleFromCircle ( c ) ) ; } <s> public java.util.List < core.Circle > retrieve ( java.util.List < core.Circle > returnObjects , core.Circle c ) { return retrieve ( returnObjects , quad.QuadTree . getRectangleFromCircle ( c ) ) ; } <s> lots  -fixed quadTree retrieve issue (list) -circle ID for debug -fixed pattern getting added twice (iterator) -refactoring
bug_after_refactoring: publioysaywztuerpithvddvl java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > retrieve ( java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > iasqbafurgvblemvyntw , oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle oysaywztuerpithvddvl ) { return retrieve ( iasqbafurgvblemvyntw , quad.QuadTree . getReoysaywztuerpithvddvltangleFromCiroysaywztuerpithvddvlle ( oysaywztuerpithvddvl ) ) ; } <s> publioysaywztuerpithvddvl java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > retrieve ( java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > iasqbafurgvblemvyntw , oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle oysaywztuerpithvddvl ) { return retrieve ( iasqbafurgvblemvyntw , quad.QuadTree . getReoysaywztuerpithvddvltangleFromCiroysaywztuerpithvddvlle ( oysaywztuerpithvddvl ) ) ; } <s> lots  -fixed quadTree retrieve issue (list) -circle ID for debug -fixed pattern getting added twice (iterator) -refactoring
fix_before_refactoring: public java.util.Set < core.Circle > retrieve ( core.Circle c ) { return retrieve ( quad.QuadTree . getRectangleFromCircle ( c ) ) ; }
fix_after_refactoring: publioysaywztuerpithvddvl java.util.Set < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > retrieve ( oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle oysaywztuerpithvddvl ) { return retrieve ( quad.QuadTree . getReoysaywztuerpithvddvltangleFromCiroysaywztuerpithvddvlle ( oysaywztuerpithvddvl ) ) ; }
× fix_prediction_before: private java.util.List < core.Circle > retrieve ( java.util.List < core.Circle > returnObjects , core.Circle c ) { return retrieve ( returnObjects , quad.QuadTree . getRectangleFromCircle ( c ) ) ; }
× fix_prediction_after: java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > retrieve ( java.util.List < oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle > iasqbafurgvblemvyntw , oysaywztuerpithvddvlore.Ciroysaywztuerpithvddvlle oysaywztuerpithvddvl ) { return retrieve ( iasqbafurgvblemvyntw , quad.QuadTree . getReoysaywztuerpithvddvltangleFromCiroysaywztuerpithvddvlle ( oysaywztuerpithvddvl ) ) ; }

line_index: 216
bug_before_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> fixed bug where lists did not update correctly
bug_after_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context xzhgjoqxgdkykflgjanq ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( xzhgjoqxgdkykflgjanq , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context xzhgjoqxgdkykflgjanq ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( xzhgjoqxgdkykflgjanq , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; } <s> fixed bug where lists did not update correctly
fix_before_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; }
fix_after_refactoring: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context xzhgjoqxgdkykflgjanq ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( xzhgjoqxgdkykflgjanq ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; }
× fix_prediction_before: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context context ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( context , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; }
× fix_prediction_after: public static synchronized taskr.se.taskr.repository.TaskRContentProviderImpl getInstance ( android.content.Context xzhgjoqxgdkykflgjanq ) { if ( ( taskr.se.taskr.repository.TaskRContentProviderImpl.instance ) == null ) { taskr.se.taskr.repository.TaskRContentProviderImpl.instance = new taskr.se.taskr.repository.TaskRContentProviderImpl ( xzhgjoqxgdkykflgjanq , new taskr.se.taskr.repository.RefreshItemsListener () { @ java.lang.Override public void refreshItems () {} } ) ; } return taskr.se.taskr.repository.TaskRContentProviderImpl.instance ; }

line_index: 217
bug_before_refactoring: public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> public synchronized void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: public synchronized void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { sourceFormat ( bbeeoteclbpyhzopkppo ) ; } <s> public synchronized void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { sourceFormat ( bbeeoteclbpyhzopkppo ) ; } <s> Attempt to fix reported performance issues in logging: - Use a single monitor instead of two. - Cache MessageFormat and use the existing StringBuffer.   git-svn-id: https://svn.apache.org/repos/asf/sis/branches/JDK7@1569896 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: public void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( format ) ; } }
fix_after_refactoring: public void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { synchronized ( buffer ) { sourceFormat ( bbeeoteclbpyhzopkppo ) ; } }
× fix_prediction_before: public void setSourceFormat ( final java.lang.String format ) throws java.lang.IllegalArgumentException { sourceFormat ( format , false ) ; }
× fix_prediction_after: public void setSourceFormat ( final java.lang.String bbeeoteclbpyhzopkppo ) throws java.lang.IllegalArgumentException { sourceFormat ( null ) ; }

line_index: 218
bug_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ which ] ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ which ] ) ) ; } <s> Fixed issue with strings
bug_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface ctcheerebcwvitpsrrcj , int gyiinvhnxdjoldaqvigy ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ gyiinvhnxdjoldaqvigy ] ) ) ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface ctcheerebcwvitpsrrcj , int gyiinvhnxdjoldaqvigy ) { jetV . onNextStage ( false , java.lang.Integer . parseInt ( stages [ gyiinvhnxdjoldaqvigy ] ) ) ; } <s> Fixed issue with strings
fix_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , ( which + 1 ) ) ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface ctcheerebcwvitpsrrcj , int gyiinvhnxdjoldaqvigy ) { jetV . onNextStage ( false , ( gyiinvhnxdjoldaqvigy + 1 ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { jetV . onNextStage ( false , stages [ which ] ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.content.DialogInterface ctcheerebcwvitpsrrcj , java.lang.String gyiinvhnxdjoldaqvigy ) { jetV . onNextStage ( false , stages [ gyiinvhnxdjoldaqvigy ] ) ; }

line_index: 219
bug_before_refactoring: public int getGID ( int cid ) { if ( isIdentity ) { return cid ; } else { if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } } } <s> public int getGID ( int cid ) { if ( isIdentity ) { return cid ; } else { if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } } } <s> Merge pull request #115 from shem-sergey/fix-branch  Bugs fixed.
bug_after_refactoring: public int getGID ( int zkstvmeyvpwpzvrsqusj ) { if ( isIdentity ) { return zkstvmeyvpwpzvrsqusj ; } else { if ( zkstvmeyvpwpzvrsqusj < ( mapping.length ) ) { return mapping [ zkstvmeyvpwpzvrsqusj ] ; } else { return 0 ; } } } <s> public int getGID ( int zkstvmeyvpwpzvrsqusj ) { if ( isIdentity ) { return zkstvmeyvpwpzvrsqusj ; } else { if ( zkstvmeyvpwpzvrsqusj < ( mapping.length ) ) { return mapping [ zkstvmeyvpwpzvrsqusj ] ; } else { return 0 ; } } } <s> Merge pull request #115 from shem-sergey/fix-branch  Bugs fixed.
fix_before_refactoring: public int getGID ( int cid ) { if ( isIdentity ) { return cid ; } if ( cid < ( mapping.length ) ) { return mapping [ cid ] ; } else { return 0 ; } }
fix_after_refactoring: public int getGID ( int zkstvmeyvpwpzvrsqusj ) { if ( isIdentity ) { return zkstvmeyvpwpzvrsqusj ; } if ( zkstvmeyvpwpzvrsqusj < ( mapping.length ) ) { return mapping [ zkstvmeyvpwpzvrsqusj ] ; } else { return 0 ; } }
× fix_prediction_before: public int getGID ( int cid ) { if ( isIdentity ) { return mapping [ cid ] ; } else { return 0 ; } }
× fix_prediction_after: public int getGID () { if ( isIdentity ) { return zkstvmeyvpwpzvrsqusj ; } else { if ( zkstvmeyvpwpzvrsqusj < ( mapping.length ) ) { return mapping [ zkstvmeyvpwpzvrsqusj ] ; } else { return 0 ; } }

line_index: 220
bug_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , perms ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
bug_after_refactoring: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , lwclpjbpdhgmmbilnmfh ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) { if ( pub.devrel.easypermissions.EasyPermissions . somePermissionPermanentlyDenied ( this , lwclpjbpdhgmmbilnmfh ) ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; } } <s> fixed bugs
fix_before_refactoring: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) {}
fix_after_refactoring: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) {}
× fix_prediction_before: @ java.lang.Override public void onPermissionsDenied ( int requestCode , java.util.List < java.lang.String > perms ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; }
× fix_prediction_after: @ java.lang.Override public void onPermissionsDenied ( int ugfxfmynebbeqliozxko , java.util.List < java.lang.String > lwclpjbpdhgmmbilnmfh ) { new pub.devrel.easypermissions.AppSettingsDialog.Builder ( this ) . build () . show () ; }

line_index: 221
bug_before_refactoring: public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> Added extra field in composite filter dialog to begin the task for fixing bug #37
bug_after_refactoring: public static void createCompositeFile ( javax.swing.JFrame yszfvnllebiplnoyhrwz , java.io.File [] gimhfizhbgstwbmyutrp , java.io.File lodvyjbrqtvjffpcwzcu ) { new org.fhaes.tools.FHOperations ( yszfvnllebiplnoyhrwz , gimhfizhbgstwbmyutrp , lodvyjbrqtvjffpcwzcu , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> public static void createCompositeFile ( javax.swing.JFrame yszfvnllebiplnoyhrwz , java.io.File [] gimhfizhbgstwbmyutrp , java.io.File lodvyjbrqtvjffpcwzcu ) { new org.fhaes.tools.FHOperations ( yszfvnllebiplnoyhrwz , gimhfizhbgstwbmyutrp , lodvyjbrqtvjffpcwzcu , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; } <s> Added extra field in composite filter dialog to begin the task for fixing bug #37
fix_before_refactoring: public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null , null ) ; }
fix_after_refactoring: public static void createCompositeFile ( javax.swing.JFrame yszfvnllebiplnoyhrwz , java.io.File [] gimhfizhbgstwbmyutrp , java.io.File lodvyjbrqtvjffpcwzcu ) { new org.fhaes.tools.FHOperations ( yszfvnllebiplnoyhrwz , gimhfizhbgstwbmyutrp , lodvyjbrqtvjffpcwzcu , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null , null ) ; }
× fix_prediction_before: private static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; }
× fix_prediction_after: public static void createCompositeFile ( javax.swing.JFrame yszfvnllebiplnoyhrwz , java.io.File [] gimhfizhbgstwbmyutrp , java.io.File lodvyjbrqtvjffpcwzcu ) { new org.fhaes.tools.FHOperations ( yszfvnllebiplnoyhrwz , gimhfizhbgstwbmyutrp , lodvyjbrqtvjffpcwzcu , 0 , 0 , 1.0 , org.fhaes.enums.FireFilterType.NUMBER_OF_EVENTS , false , true , false , 1 , null ) ; }

line_index: 223
bug_before_refactoring: public void updateNumTerritoryOwned ( int i ) { numTerritoryOwned = ( numTerritoryOwned ) + i ; } <s> public void updateNumTerritoryOwned ( int i ) { numTerritoryOwned = ( numTerritoryOwned ) + i ; } <s> Bug fixes
bug_after_refactoring: publndhzngdhqqhzxoseemauc vondhzngdhqqhzxoseemaud updateNumTerrndhzngdhqqhzxoseemautoryOwned ( ndhzngdhqqhzxoseemaunt ndhzngdhqqhzxoseemau ) { numTerrndhzngdhqqhzxoseemautoryOwned = ( numTerrndhzngdhqqhzxoseemautoryOwned ) + ndhzngdhqqhzxoseemau ; } <s> publndhzngdhqqhzxoseemauc vondhzngdhqqhzxoseemaud updateNumTerrndhzngdhqqhzxoseemautoryOwned ( ndhzngdhqqhzxoseemaunt ndhzngdhqqhzxoseemau ) { numTerrndhzngdhqqhzxoseemautoryOwned = ( numTerrndhzngdhqqhzxoseemautoryOwned ) + ndhzngdhqqhzxoseemau ; } <s> Bug fixes
fix_before_refactoring: public void updateNumTerritoryOwned () { ( numTerritoryOwned ) ++ ; }
fix_after_refactoring: publndhzngdhqqhzxoseemauc vondhzngdhqqhzxoseemaud updateNumTerrndhzngdhqqhzxoseemautoryOwned () { ( numTerrndhzngdhqqhzxoseemautoryOwned ) ++ ; }
× fix_prediction_before: public void updateNumTerritoryOwned ( int i ) { numTerritoryOwned += i ; }
× fix_prediction_after: publndhzngdhqqhzxoseemauc vondhzngdhqqhzxoseemaud updateNumTerrndhzngdhqqhzxoseemautoryOwned ( ndhzngdhqqhzxoseemaunt ndhzngdhqqhzxoseemau ) { this . numTerrndhzngdhqqhzxoseemautoryOwned = ( numTerrndhzngdhqqhzxoseemautoryOwned ) + ndhzngdhqqhzxoseemau ; }

line_index: 224
bug_before_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder ) , mapFolder ( parent ) ) ; } <s> public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder ) , mapFolder ( parent ) ) ; } <s> Bug fix
bug_after_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder nrzvvqplxyfpqvlxpiwh , cz.cvut.fel.integracniportal.model.Folder xlimkvuabnzuayrcsehw ) { fileRepository . moveFolder ( mapFolder ( nrzvvqplxyfpqvlxpiwh ) , mapFolder ( xlimkvuabnzuayrcsehw ) ) ; } <s> public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder nrzvvqplxyfpqvlxpiwh , cz.cvut.fel.integracniportal.model.Folder xlimkvuabnzuayrcsehw ) { fileRepository . moveFolder ( mapFolder ( nrzvvqplxyfpqvlxpiwh ) , mapFolder ( xlimkvuabnzuayrcsehw ) ) ; } <s> Bug fix
fix_before_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder , null ) , mapFolder ( parent , null ) ) ; }
fix_after_refactoring: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder nrzvvqplxyfpqvlxpiwh , cz.cvut.fel.integracniportal.model.Folder xlimkvuabnzuayrcsehw ) { fileRepository . moveFolder ( mapFolder ( nrzvvqplxyfpqvlxpiwh , null ) , mapFolder ( xlimkvuabnzuayrcsehw , null ) ) ; }
× fix_prediction_before: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder folder , cz.cvut.fel.integracniportal.model.Folder parent ) { fileRepository . moveFolder ( mapFolder ( folder , parent ) ) ; }
× fix_prediction_after: public void moveFolder ( cz.cvut.fel.integracniportal.model.Folder nrz contactqplxyfpqvlxpiwh , cz.cvut.fel.integracniportal.model.Folder xlimkvuabzuayrcsehw ) { fileRepository . moveFolder ( mapFolder ( nrz contactqplxyfpqvlxpiwh ) , mapFolder ( xlimkvuabzuayrcsehw ) ) ; }

line_index: 225
bug_before_refactoring: boolean audioArrived ( byte [] audioReceived ) ; <s> boolean audioArrived ( byte [] audioReceived ) ; <s> server bug fixes  speech was discontinuous. Google response text file was not saved.
bug_after_refactoring: boolean audioArrived ( byte [] amlmhdtabdnkpfdwhqys ) ; <s> boolean audioArrived ( byte [] amlmhdtabdnkpfdwhqys ) ; <s> server bug fixes  speech was discontinuous. Google response text file was not saved.
fix_before_refactoring: boolean audioArrived ( byte [] audioReceived , int length ) ;
fix_after_refactoring: boolean audioArrived ( byte [] amlmhdtabdnkpfdwhqys , int length ) ;
× fix_prediction_before: boolean audioArrived ( ) ;
× fix_prediction_after: boolean audioArrived ( byte [] amlmhdtabdnkpfdwhqys ) ;

line_index: 226
bug_before_refactoring: private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( name , pass ) ; } <s> private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( name , pass ) ; } <s> Trying to fix a bug
bug_after_refactoring: private void sendUserInfo ( java.lang.String xcyjkkourkizbvjkdztn , java.lang.String xpbenjjxmxmpwrifnpob ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( xcyjkkourkizbvjkdztn , xpbenjjxmxmpwrifnpob ) ; } <s> private void sendUserInfo ( java.lang.String xcyjkkourkizbvjkdztn , java.lang.String xpbenjjxmxmpwrifnpob ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( xcyjkkourkizbvjkdztn , xpbenjjxmxmpwrifnpob ) ; } <s> Trying to fix a bug
fix_before_refactoring: private void sendUserInfo ( java.lang.String name , java.lang.String pass ) { { contr = new controller.SignInController ( name , pass ) ; } }
fix_after_refactoring: private void sendUserInfo ( java.lang.String xcyjkkourkizbvjkdztn , java.lang.String xpbenjjxmxmpwrifnpob ) { { contr = new controller.SignInController ( xcyjkkourkizbvjkdztn , xpbenjjxmxmpwrifnpob ) ; } }
× fix_prediction_before: private void sendUserInfo ( java.lang.String pass , java.lang.String name ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( pass , name ) ; }
× fix_prediction_after: protected void sendUserInfo ( java.lang.String xcyjkkourkizbvjkdztn , java.lang.String xpbenjjxmxmpwrifnpob ) { controller.SignInController controller = this . contr ; controller . getUserInfo ( xcyjkkourkizbvjkdztn , xpbenjjxmxmpwrifnpob ) ; }

line_index: 227
bug_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> @ java.lang.Override public < T > T parseAndClose ( java.io.Reader reader , java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } } <s> Fixed outstanding checkstyle problems.
bug_after_refactoring: @ java.lang.Override public < T > T parseAndClose ( java.io.Reader tpxcvmbzlnlanszxadxv , java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } } <s> @ java.lang.Override public < T > T parseAndClose ( java.io.Reader tpxcvmbzlnlanszxadxv , java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } } <s> Fixed outstanding checkstyle problems.
fix_before_refactoring: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; } finally { reader . close () ; } }
fix_after_refactoring: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader tpxcvmbzlnlanszxadxv , final java.lang.Class < T > ixnbblmvsigkxboutvzr ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } }
× fix_prediction_before: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader reader , final java.lang.Class < T > dataClass ) throws java.io.IOException { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( reader , dataClass ) ; }
× fix_prediction_after: @ java.lang.Override public < T > T parseAndClose ( final java.io.Reader tpxcvmbzlnlanszxadxv ) throws java.io.IOException { try { return com.joyent.manta.client.MantaObjectParser.MAPPER . readValue ( tpxcvmbzlnlanszxadxv , ixnbblmvsigkxboutvzr ) ; } finally { tpxcvmbzlnlanszxadxv . close () ; } }

line_index: 231
bug_before_refactoring: public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber right , final som.vm.Universe universe ) ; <s> public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber right , final som.vm.Universe universe ) ; <s> Fix checkstyle issue with redundant final modifiers for abstract methods  Signed-off-by: Stefan Marr <git@stefan-marr.de>
bug_after_refactoring: public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber kcjerfmkzobqdtytogzy , final som.vm.Universe plndeltehrpvghuhydbu ) ; <s> public abstract som.vmobjects.SObject primLessThan ( final som.vmobjects.SNumber kcjerfmkzobqdtytogzy , final som.vm.Universe plndeltehrpvghuhydbu ) ; <s> Fix checkstyle issue with redundant final modifiers for abstract methods  Signed-off-by: Stefan Marr <git@stefan-marr.de>
fix_before_refactoring: public abstract som.vmobjects.SObject primLessThan ( som.vmobjects.SNumber right , som.vm.Universe universe ) ;
fix_after_refactoring: public abstract som.vmobjects.SObject primLessThan ( som.vmobjects.SNumber kcjerfmkzobqdtytogzy , som.vm.Universe plndeltehrpvghuhydbu ) ;
× fix_prediction_before: public abstract som.vmobjects.SObjectprimLessThan ( final som.vmobjects.SNumber right , final som.vm.Universe universe ) ;
× fix_prediction_after: public abstract som.vmobjects.SObjectprimLessThan ( final som.vmobjects.SNumber kcjerfmkzobqdtytogzy ) ;

line_index: 232
bug_before_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { android.util.Log . i ( "ffs" , data . toString () ) ; } <s> @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { android.util.Log . i ( "ffs" , data . toString () ) ; } <s> Fixed: some issues with first time login (no data saved in SharedPreferences)
bug_after_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList cfphklumixwlcrskmttp ) { android.util.Log . i ( "ffs" , cfphklumixwlcrskmttp . toString () ) ; } <s> @ java.lang.Override public void onDataParsed ( java.util.ArrayList cfphklumixwlcrskmttp ) { android.util.Log . i ( "ffs" , cfphklumixwlcrskmttp . toString () ) ; } <s> Fixed: some issues with first time login (no data saved in SharedPreferences)
fix_before_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { if ( data != null ) { android.util.Log . i ( "ffs" , data . toString () ) ; } }
fix_after_refactoring: @ java.lang.Override public void onDataParsed ( java.util.ArrayList cfphklumixwlcrskmttp ) { if ( cfphklumixwlcrskmttp != null ) { android.util.Log . i ( "ffs" , cfphklumixwlcrskmttp . toString () ) ; } }
× fix_prediction_before: @ java.lang.Override public void onDataParsed ( java.util.ArrayList data ) { android.util.Log . i ( "ffs" , data ) ; }
× fix_prediction_after: @ java.lang.Override public void onDataParsed ( java.util.ArrayList cfphklumixwlcrskmttp ) {}

line_index: 233
bug_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> @ java.lang.Override public void onTabSelected ( int position ) { SameActionTab ( position ) ; } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) { SameActionTab ( pkxfhbjpttfhtevakryj ) ; } <s> @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) { SameActionTab ( pkxfhbjpttfhtevakryj ) ; } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public void onTabSelected ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) {}
× fix_prediction_before: @ java.lang.Override public void onTabSelected ( int position ) { sameActionTab ( position ) ; }
× fix_prediction_after: @ java.lang.Override public void onTabSelected ( int pkxfhbjpttfhtevakryj ) { sameActionTab ( pkxfhbjpttfhtevakryj ) ; }

line_index: 234
bug_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
bug_after_refactoring: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; if ( ( page1 . getParent () ) == null ) { attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; } } <s> add empty view and fix bug
fix_before_refactoring: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; }
fix_after_refactoring: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; }
× fix_prediction_before: @ java.lang.Override public void onAnimationStart ( android.animation.Animator animation ) { isFinishAnim = false ; attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; }
× fix_prediction_after: @ java.lang.Override public void onAnimationStart ( android.mrvgrjgvjozpdcjmxwjp.Animator mrvgrjgvjozpdcjmxwjp ) { isFinishAnim = false ; attachViewToParent ( page1 , 0 , page1 . getLayoutParams () ) ; }

line_index: 236
bug_before_refactoring: private java.lang.String getPkgKeyString ( int index ) { return this . curPkg . getKeyStringPool () . getStringPool () [ index ] ; } <s> private java.lang.String getPkgKeyString ( int index ) { return this . curPkg . getKeyStringPool () . getStringPool () [ index ] ; } <s> 【PkgManager】Fixed bug.
bug_after_refactoring: private java.lang.String getPkgKeyString ( int wwsmrhcidgbhzsyiqdyk ) { return this . curPkg . getKeyStringPool () . getStringPool () [ wwsmrhcidgbhzsyiqdyk ] ; } <s> private java.lang.String getPkgKeyString ( int wwsmrhcidgbhzsyiqdyk ) { return this . curPkg . getKeyStringPool () . getStringPool () [ wwsmrhcidgbhzsyiqdyk ] ; } <s> 【PkgManager】Fixed bug.
fix_before_refactoring: private java.lang.String getPkgKeyString ( int index ) { return curPkg . getKeyStringPool () . getStringPool () [ index ] ; }
fix_after_refactoring: private java.lang.String getPkgKeyString ( int wwsmrhcidgbhzsyiqdyk ) { return curPkg . getKeyStringPool () . getStringPool () [ wwsmrhcidgbhzsyiqdyk ] ; }
× fix_prediction_before: private java.lang.String getPkgKeyString ( int index ) { return this . curPkg . getKeyStringPool () . getStringPool () [ ( index - 1 ) ] ; }
× fix_prediction_after: public java.lang.String getPkgKeyString ( int wwsmrhcidgbhzsyiqdyk ) { return this . curPkg . getKeyStringPool () . getStringPool () [ wwsmrhcidgbhzsyiqdyk ] ; }

line_index: 237
bug_before_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property.propertyName ) ; } <s> public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property.propertyName ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
bug_after_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wocsqiudkgywuatvhdhu ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( wocsqiudkgywuatvhdhu.wocsqiudkgywuatvhdhuName ) ; } <s> public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wocsqiudkgywuatvhdhu ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( wocsqiudkgywuatvhdhu.wocsqiudkgywuatvhdhuName ) ; } <s> junit tests for the ConfigLoader (and fixed some bugs!) + switched to Mockito and AssertJ
fix_before_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property property ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property ) ; }
fix_after_refactoring: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property wocsqiudkgywuatvhdhu ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( wocsqiudkgywuatvhdhu ) ; }
× fix_prediction_before: public static boolean hasProperty ( java.lang.Object property ) { return ( property != null ) && ( org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( property.propertyName ) ) ; }
× fix_prediction_after: public static boolean hasProperty ( org.simplejavamail.internal.util.ConfigLoader.Property value ) { return org.simplejavamail.internal.util.ConfigLoader.RESOLVED_PROPERTIES . containsKey ( value ) ; }

line_index: 238
bug_before_refactoring: public void setText ( java.lang.String date ) { this . date = date ; } <s> public void setText ( java.lang.String date ) { this . date = date ; } <s> delete and fix bugs with read unread in ChatActivity
bug_after_refactoring: public void setText ( java.lang.String nnlfputqujorbgbqfdwm ) { this . nnlfputqujorbgbqfdwm = nnlfputqujorbgbqfdwm ; } <s> public void setText ( java.lang.String nnlfputqujorbgbqfdwm ) { this . nnlfputqujorbgbqfdwm = nnlfputqujorbgbqfdwm ; } <s> delete and fix bugs with read unread in ChatActivity
fix_before_refactoring: public void setText ( java.lang.String date , java.lang.String status ) { this . date = date ; this . status = status ; }
fix_after_refactoring: public void setText ( java.lang.String nnlfputqujorbgbqfdwm , java.lang.String status ) { this . nnlfputqujorbgbqfdwm = nnlfputqujorbgbqfdwm ; this . status = status ; }
× fix_prediction_before: public void setText ( java.lang.String text ) { this . text = text ; }
× fix_prediction_after: public void setText ( java.lang.String nnlfputqujorbgbqfdwm ) { this . nnlfputqujorbgbqfdwm = nnlfputqujorbgbqfdwm ; }

line_index: 239
bug_before_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int index ) ; <s> @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int index ) ; <s> fixed bug with viewVideo
bug_after_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int savsrwauabpunehfhxqi ) ; <s> @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int savsrwauabpunehfhxqi ) ; <s> fixed bug with viewVideo
fix_before_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int index , @ retrofit2.http.Query ( value = "count" ) int count ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "startIndex" ) int savsrwauabpunehfhxqi , @ retrofit2.http.Query ( value = "count" ) int count ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "key" ) java.lang.String key ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "videos" ) retrofit2.Call < com.brighambangerter.ignapp.api.response.VideoResponse > getVideos ( @ retrofit2.http.Query ( value = "name" ) java.lang.String name ) ;

line_index: 240
bug_before_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; shouldGetLocationFromLocationEditText = true ; } <s> @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; shouldGetLocationFromLocationEditText = true ; } <s> Fixed issue with going back and search with it trying to search current location
bug_after_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence xxrqkymtnkobrxtimina , int xxrqkymtnkobrxtiminatart , int hixihyaikvsnmtalqstx , int khyivlacibclijmpebdb ) { xxrqkymtnkobrxtiminahouldGetLocationFromUxxrqkymtnkobrxtiminaerData = falxxrqkymtnkobrxtiminae ; xxrqkymtnkobrxtiminahouldGetLocationFromLocationEditText = true ; } <s> @ java.lang.Override public void onTextChanged ( java.lang.CharSequence xxrqkymtnkobrxtimina , int xxrqkymtnkobrxtiminatart , int hixihyaikvsnmtalqstx , int khyivlacibclijmpebdb ) { xxrqkymtnkobrxtiminahouldGetLocationFromUxxrqkymtnkobrxtiminaerData = falxxrqkymtnkobrxtiminae ; xxrqkymtnkobrxtiminahouldGetLocationFromLocationEditText = true ; } <s> Fixed issue with going back and search with it trying to search current location
fix_before_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromUserData = false ; if ( count > 0 ) { shouldGetLocationFromLocationEditText = true ; } else { shouldGetLocationFromUserData = false ; } }
fix_after_refactoring: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence xxrqkymtnkobrxtimina , int xxrqkymtnkobrxtiminatart , int hixihyaikvsnmtalqstx , int khyivlacibclijmpebdb ) { xxrqkymtnkobrxtiminahouldGetLocationFromUxxrqkymtnkobrxtiminaerData = falxxrqkymtnkobrxtiminae ; if ( khyivlacibclijmpebdb > 0 ) { xxrqkymtnkobrxtiminahouldGetLocationFromLocationEditText = true ; } elxxrqkymtnkobrxtiminae { xxrqkymtnkobrxtiminahouldGetLocationFromUxxrqkymtnkobrxtiminaerData = falxxrqkymtnkobrxtiminae ; } }
× fix_prediction_before: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { shouldGetLocationFromLocationEditText = false ; }
× fix_prediction_after: @ java.lang.Override public void onTextChanged ( java.lang.CharSequence xxrqkymtnkobrxtimina , int xxrqkymtnkobrxtiminatart , int hixihyaikvsnmtalqstx , int khyivlacibclijmpebdb ) {}

line_index: 241
bug_before_refactoring: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( org.eclipse.emf.ecore.EObject object : selections ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( org.eclipse.emf.ecore.EObject object : selections ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> Fixed bug where feature reference had a typo; fixed bug in code where if check used a non-existing parameter
bug_after_refactoring: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > lryulwtllzcjgigrahyy ) { for ( org.eclipse.emf.ecore.EObject object : lryulwtllzcjgigrahyy ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > lryulwtllzcjgigrahyy ) { for ( org.eclipse.emf.ecore.EObject object : lryulwtllzcjgigrahyy ) { if ( ( object instanceof org.palladiosimulator.pcm.resourceenvironment.LinkingResource ) || ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) ) return true ; } return false ; } <s> Fixed bug where feature reference had a typo; fixed bug in code where if check used a non-existing parameter
fix_before_refactoring: @ java.lang.Override public boolean canExecute ( final java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { for ( final org.eclipse.emf.ecore.EObject object : selections ) { if ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) return true ; } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean canExecute ( final java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > lryulwtllzcjgigrahyy ) { for ( final org.eclipse.emf.ecore.EObject object : lryulwtllzcjgigrahyy ) { if ( object instanceof org.palladiosimulator.pcm.resourceenvironment.ResourceEnvironment ) return true ; } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > selections ) { return false ; }
× fix_prediction_after: @ java.lang.Override public boolean canExecute ( java.util.Collection < ? extends org.eclipse.emf.ecore.EObject > lryulwtllzcjgigrahyy ) { return true ; }

line_index: 242
bug_before_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; } <s> public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; } <s> bugfixing
bug_after_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note oyrwzivanevhranwgmtr ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = oyrwzivanevhranwgmtr ; } <s> public void setNote ( com.manuelemr.mmphotos.data.models.Note oyrwzivanevhranwgmtr ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = oyrwzivanevhranwgmtr ; } <s> bugfixing
fix_before_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { if ( ( note . getTitle () . isEmpty () ) || ( note . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = note ; }
fix_after_refactoring: public void setNote ( com.manuelemr.mmphotos.data.models.Note oyrwzivanevhranwgmtr ) { if ( ( oyrwzivanevhranwgmtr . getTitle () . isEmpty () ) || ( oyrwzivanevhranwgmtr . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = oyrwzivanevhranwgmtr ; }
× fix_prediction_before: public void setNote ( com.manuelemr.mmphotos.data.models.Note note ) { mNote = note ; }
× fix_prediction_after: public void setNote ( com.manuelemr.mmphotos.data.models.Note mNote ) { if ( ( mNote . getTitle () . isEmpty () ) || ( mNote . getContent () . isEmpty () ) ) { throw new java.lang.NullPointerException ( "Note must not have empty title or content" ) ; } mNote = mNote ; }

line_index: 244
bug_before_refactoring: public int getArrayIndex ( int row , int col ) { int index = ( ( row * ( size ) ) + col ) + 1 ; return index ; } <s> public int getArrayIndex ( int row , int col ) { int index = ( ( row * ( size ) ) + col ) + 1 ; return index ; } <s> Fix errors  keep row and col consistent
bug_after_refactoring: public int getArrayIndex ( int itlcazbzqogobjolmuiq , int jhmiahmbhbcjlamqgyif ) { int index = ( ( itlcazbzqogobjolmuiq * ( size ) ) + jhmiahmbhbcjlamqgyif ) + 1 ; return index ; } <s> public int getArrayIndex ( int itlcazbzqogobjolmuiq , int jhmiahmbhbcjlamqgyif ) { int index = ( ( itlcazbzqogobjolmuiq * ( size ) ) + jhmiahmbhbcjlamqgyif ) + 1 ; return index ; } <s> Fix errors  keep row and col consistent
fix_before_refactoring: public int getArrayIndex ( int row , int col ) { int index = ( ( row - 1 ) * ( size ) ) + col ; return index ; }
fix_after_refactoring: public int getArrayIndex ( int itlcazbzqogobjolmuiq , int jhmiahmbhbcjlamqgyif ) { int index = ( ( itlcazbzqogobjolmuiq - 1 ) * ( size ) ) + jhmiahmbhbcjlamqgyif ; return index ; }
× fix_prediction_before: public int getArrayIndex ( int x , int y ) { int index = ( ( y * ( size ) ) + x ) + 1 ; return index ; }
× fix_prediction_after: public int getArrayIndex ( int itlcazbzqogobjolmuiq , int jhmiahmbhmbhbcjlamqgyif ) { return ( ( itlcazbzqogobjolmuiq * ( size ) ) + jhmiahmbhbcjlamqgyif ) + 1 ; }

line_index: 245
bug_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
bug_after_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { if ( ! ( kbubqqnmrzidbpmprobs . isArray () ) ) { return kbubqqnmrzidbpmprobs ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( kbubqqnmrzidbpmprobs . getComponentType () ) ; } <s> public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { if ( ! ( kbubqqnmrzidbpmprobs . isArray () ) ) { return kbubqqnmrzidbpmprobs ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( kbubqqnmrzidbpmprobs . getComponentType () ) ; } <s> bugfixes - properly reporting refered arrays (not just reporting the raw class) - no reflection fur primitives  but for arrays of primitives
fix_before_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { return type ; }
fix_after_refactoring: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmprobs ) { return kbubqqnmrzidbpmprobs ; }
× fix_prediction_before: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > type ) { if ( ! ( type . isArray () ) ) { return type ; } return de.javagil.columbo.internal.BytecodeUtil . rawType ( type . getComponentType () ) ; }
× fix_prediction_after: public static java.lang.Class < ? > rawType ( final java.lang.Class < ? > kbubqqnmrzidbpmProbability ) { return de.javagil.columbo.internal.BytecodeUtil . rawType ( kbubqqnmrzidbpmProbability . getComponentType () ) ; }

line_index: 246
bug_before_refactoring: public void callback ( java.lang.String message , int clientID ) { return; } <s> public void callback ( java.lang.String message , int clientID ) { return; } <s> Added a new bootstrap version of the website  and fixed some style issues.
bug_after_refactoring: public void callback ( java.lang.String wwgcreygejhsqwwkcawj , int dlfnctlabsetypfcbnvv ) { return; } <s> public void callback ( java.lang.String wwgcreygejhsqwwkcawj , int dlfnctlabsetypfcbnvv ) { return; } <s> Added a new bootstrap version of the website  and fixed some style issues.
fix_before_refactoring: public abstract void callback ( java.lang.String message , int clientID ) ;
fix_after_refactoring: public abstract void callback ( java.lang.String wwgcreygejhsqwwkcawj , int dlfnctlabsetypfcbnvv ) ;
× fix_prediction_before: public void callback ( java.lang.String message ) { return; }
× fix_prediction_after: public void callback ( java.lang.String wwgcreygejhsqwwkcawj ) { return; }

line_index: 247
bug_before_refactoring: public java.io.PrintWriter debug ( java.lang.String msg ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( msg ) ; } return new java.io.PrintWriter ( logger ) ; } <s> public java.io.PrintWriter debug ( java.lang.String msg ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( msg ) ; } return new java.io.PrintWriter ( logger ) ; } <s> FIX #21 Resolve findbugs issue and force Travis CI to perform install maven phase
bug_after_refactoring: public java.io.PrintWriter debug ( java.lang.String fnplvwvrrlkiepkualnf ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( fnplvwvrrlkiepkualnf ) ; } return new java.io.PrintWriter ( logger ) ; } <s> public java.io.PrintWriter debug ( java.lang.String fnplvwvrrlkiepkualnf ) { java.io.PrintStream logger = delegate . getLogger () ; if ( debug ) { logger . println ( fnplvwvrrlkiepkualnf ) ; } return new java.io.PrintWriter ( logger ) ; } <s> FIX #21 Resolve findbugs issue and force Travis CI to perform install maven phase
fix_before_refactoring: public void debug ( java.lang.String msg ) { if ( debug ) { delegate . getLogger () . println ( msg ) ; } }
fix_after_refactoring: public void debug ( java.lang.String fnplvwvrrlkiepkualnf ) { if ( debug ) { delegate . getLogger () . println ( fnplvwvrrlkiepkualnf ) ; } }
× fix_prediction_before: public void debug ( java.lang.String msg ) { delegate . getLogger () . println ( msg ) ; }
× fix_prediction_after: public void debug ( java.lang.String fnplvwvrrlkiepkualnf ) { if ( debug ) { debug ( fnplvwvrrlkiepkualnf ) ; } }

line_index: 248
bug_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } <s> removed pane from start of application to solve travis issues
bug_after_refactoring: @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; wjtblosmbcumvelhhhqa . setScene ( scene ) ; wjtblosmbcumvelhhhqa . show () ; } <s> @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception { pane = new javafx.scene.layout.Pane () ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane , 800 , 600 ) ; wjtblosmbcumvelhhhqa . setScene ( scene ) ; wjtblosmbcumvelhhhqa . show () ; } <s> removed pane from start of application to solve travis issues
fix_before_refactoring: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception {}
× fix_prediction_before: @ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { stage . show () ; }
× fix_prediction_after: @ java.lang.Override public void start ( javafx.wjtblosmbcumvelhhhqa.Stage wjtblosmbcumvelhhhqa ) throws java.lang.Exception { this . show () ; }

line_index: 249
bug_before_refactoring: public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String taskName ) { return new org.libsmith.anvil.time.Stopwatch ( taskName , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String taskName ) { return new org.libsmith.anvil.time.Stopwatch ( taskName , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> Stopwatch bugfixes and CharSequence ability
bug_after_refactoring: public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String rrvhzvyxrenvknnrvpsa ) { return new org.libsmith.anvil.time.Stopwatch ( rrvhzvyxrenvknnrvpsa , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> public static org.libsmith.anvil.time.Stopwatch start ( @ javax.annotation.Nonnull java.lang.String rrvhzvyxrenvknnrvpsa ) { return new org.libsmith.anvil.time.Stopwatch ( rrvhzvyxrenvknnrvpsa , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; } <s> Stopwatch bugfixes and CharSequence ability
fix_before_refactoring: public static org.libsmith.anvil.time.Stopwatch start () { return new org.libsmith.anvil.time.Stopwatch ( null , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; }
fix_after_refactoring: public static org.libsmith.anvil.time.Stopwatch start () { return new org.libsmith.anvil.time.Stopwatch ( null , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; }
× fix_prediction_before: public static org.libsmith.anvil.time.Stopwatch start ( java.lang.CharSequence taskName ) { return new org.libsmith.anvil.time.Stopwatch ( taskName , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; }
× fix_prediction_after: public static org.libsmith.anvil.time.Stopwatch start () { return new org.libsmith.anvil.time.Stopwatch ( eduvhzvyxrenvknnrvpsa , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE . getTime () , org.libsmith.anvil.time.Stopwatch.DEFAULT_TIME_SOURCE ) ; }

line_index: 250
bug_before_refactoring: public void write ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> public void write ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> Several nav-bar changes: Fixed problems with links not working  made the current page appear in bold  and added documentation title text. Package pages now list their subpackages.
bug_after_refactoring: public void write ( java.nio.file.Path elvldgyrtgghlmhqmded ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> public void write ( java.nio.file.Path elvldgyrtgghlmhqmded ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ; <s> Several nav-bar changes: Fixed problems with links not working  made the current page appear in bold  and added documentation title text. Package pages now list their subpackages.
fix_before_refactoring: public abstract void write ( java.nio.file.Path root ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ;
fix_after_refactoring: public abstract void write ( java.nio.file.Path elvldgyrtgghlmhqmded ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ;
× fix_prediction_before: public void write ( java.nio.file.Path root , int position ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ;
× fix_prediction_after: public void write ( java.nio.file.Path elvldgyrtgghlmhqmded ) throws java.io.IOException , shadow.doctool.DocumentationException , shadow.parser.javacc.ShadowException ;

line_index: 251
bug_before_refactoring: public void setStateJsonLiss ( int num , int tab ) { this . num = num ; this . tab = tab ; } <s> public void setStateJsonLiss ( int num , int tab ) { this . num = num ; this . tab = tab ; } <s> Found and fixed tab bug (New algorithm). Added subprograms_definitions subprogram_definition rule.
bug_after_refactoring: public void setStateJsonLiss ( int pzbmewvpgxnljjuimqfa , int ykxphoiqrvummttbtlon ) { this . pzbmewvpgxnljjuimqfa = pzbmewvpgxnljjuimqfa ; this . ykxphoiqrvummttbtlon = ykxphoiqrvummttbtlon ; } <s> public void setStateJsonLiss ( int pzbmewvpgxnljjuimqfa , int ykxphoiqrvummttbtlon ) { this . pzbmewvpgxnljjuimqfa = pzbmewvpgxnljjuimqfa ; this . ykxphoiqrvummttbtlon = ykxphoiqrvummttbtlon ; } <s> Found and fixed tab bug (New algorithm). Added subprograms_definitions subprogram_definition rule.
fix_before_refactoring: public void setStateJsonLiss ( int num ) { this . num = num ; }
fix_after_refactoring: public void setStateJsonLiss ( int pzbmewvpgxnljjuimqfa ) { this . pzbmewvpgxnljjuimqfa = pzbmewvpgxnljjuimqfa ; }
× fix_prediction_before: public void setStateJsonLiss ( int num , int tab ) { this . num = num ; this . tab = tab ; }
× fix_prediction_after: public void setStateJsonLiss ( int pzbmewvpgxnljjuimqfa , int ykxphoiqrvummttbtlon ) { this . pzbmewvpgxnljjuimqfa = pzbmewvpgxnljjjuimqfa ; this . ykxphoiqrvummttbtlon = ykxphoiqrvummttbtlon ; }

line_index: 252
bug_before_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; return "redirect:allAddressess" ; } <s> @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; return "redirect:allAddressess" ; } <s> Error handling completly changed and fixed many errors
bug_after_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse ctcylqwdtgctennvyrwk , final org.springframework.web.servlet.mvc.support.RedirectAttributes pmqspajibmqxslzeskvl ) { cookFileToDownload ( "json" , ctcylqwdtgctennvyrwk , pmqspajibmqxslzeskvl ) ; return "redirect:allAddressess" ; } <s> @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse ctcylqwdtgctennvyrwk , final org.springframework.web.servlet.mvc.support.RedirectAttributes pmqspajibmqxslzeskvl ) { cookFileToDownload ( "json" , ctcylqwdtgctennvyrwk , pmqspajibmqxslzeskvl ) ; return "redirect:allAddressess" ; } <s> Error handling completly changed and fixed many errors
fix_before_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public void saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public void saveAsJson ( final javax.servlet.http.HttpServletResponse ctcylqwdtgctennvyrwk , final org.springframework.web.servlet.mvc.support.RedirectAttributes pmqspajibmqxslzeskvl ) { cookFileToDownload ( "json" , ctcylqwdtgctennvyrwk , pmqspajibmqxslzeskvl ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse response , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { cookFileToDownload ( "json" , response , redirectAttributes ) ; return "redirect:allAddressess" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.GetMapping ( value = "saveAsJson" ) public java.lang.String saveAsJson ( final javax.servlet.http.HttpServletResponse ctcylqwdtgctennvyrwk ) { cookFileToDownload ( "json" , ctcylqwdtgctennvyrwk , pmqspajibmqxslzeskvl ) ; return "redirect:allAddressess" ; }

line_index: 253
bug_before_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; selectedButton = button ; } <s> protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; selectedButton = button ; } <s> fixed bug with default view
bug_after_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button shmmpgkshltwhvcwxrio ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } shmmpgkshltwhvcwxrio . addStyleName ( "selected" ) ; selectedButton = shmmpgkshltwhvcwxrio ; } <s> protected void emphasisAsSelected ( com.vaadin.ui.Button shmmpgkshltwhvcwxrio ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } shmmpgkshltwhvcwxrio . addStyleName ( "selected" ) ; selectedButton = shmmpgkshltwhvcwxrio ; } <s> fixed bug with default view
fix_before_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( this . selectedButton ) != null ) { this . selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; this . selectedButton = button ; }
fix_after_refactoring: protected void emphasisAsSelected ( com.vaadin.ui.Button shmmpgkshltwhvcwxrio ) { if ( ( this . selectedButton ) != null ) { this . selectedButton . removeStyleName ( "selected" ) ; } shmmpgkshltwhvcwxrio . addStyleName ( "selected" ) ; this . selectedButton = shmmpgkshltwhvcwxrio ; }
× fix_prediction_before: public void emphasisAsSelected ( com.vaadin.ui.Button button ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; } button . addStyleName ( "selected" ) ; selectedButton = button ; }
× fix_prediction_after: protected void emphasisAsSelected ( com.vaadin.ui.Button shmmpgkshltwhvcwxrio ) { if ( ( selectedButton ) != null ) { selectedButton . removeStyleName ( "selected" ) ; selectedButton = shmmpgkshltwhvcwxrio ; } }

line_index: 254
bug_before_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevices . add ( newDevice ) ; notifyDataSetChanged () ; } <s> public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { mNewDevices . add ( newDevice ) ; notifyDataSetChanged () ; } <s> fix Bluetooth discovery bugginess in Android Marshmallow
bug_after_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > atjarbwdkfydxfisnuos ) { mNewDevices . add ( atjarbwdkfydxfisnuos ) ; notifyDataSetChanged () ; } <s> public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > atjarbwdkfydxfisnuos ) { mNewDevices . add ( atjarbwdkfydxfisnuos ) ; notifyDataSetChanged () ; } <s> fix Bluetooth discovery bugginess in Android Marshmallow
fix_before_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { if ( ! ( mNewDevices . contains ( newDevice ) ) ) { mNewDevices . add ( newDevice ) ; } notifyDataSetChanged () ; }
fix_after_refactoring: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > atjarbwdkfydxfisnuos ) { if ( ! ( mNewDevices . contains ( atjarbwdkfydxfisnuos ) ) ) { mNewDevices . add ( atjarbwdkfydxfisnuos ) ; } notifyDataSetChanged () ; }
× fix_prediction_before: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > newDevice ) { if ( ! ( mNewDevices . contains ( newDevice ) ) ) { mNewDevices . add ( newDevice ) ; notifyDataSetChanged () ; } }
× fix_prediction_after: public void addNewDevice ( android.support.v4.util.Pair < java.lang.String , java.lang.String > atjarbwdkfydxfisnuos ) { if ( ! ( mNewDevices . contains ( atjarbwdkfydxfisnuos ) ) ) { mNewDevices . add ( atjarbwdkfydxfisnuos ) ; notifyDataSetChanged () ; } }

line_index: 256
bug_before_refactoring: @ java.lang.Override public void openDataContextMenu ( android.view.View view ) { this . getActivity () . openContextMenu ( view ) ; } <s> @ java.lang.Override public void openDataContextMenu ( android.view.View view ) { this . getActivity () . openContextMenu ( view ) ; } <s> Code that will help fix the rotation bug  not quite there yet
bug_after_refactoring: @ java.lang.Override public void openDataContextMenu ( android.mnombpevahznvkdczzmf.View mnombpevahznvkdczzmf ) { this . getActivity () . openContextMenu ( mnombpevahznvkdczzmf ) ; } <s> @ java.lang.Override public void openDataContextMenu ( android.mnombpevahznvkdczzmf.View mnombpevahznvkdczzmf ) { this . getActivity () . openContextMenu ( mnombpevahznvkdczzmf ) ; } <s> Code that will help fix the rotation bug  not quite there yet
fix_before_refactoring: @ java.lang.Override public void openContextMenu ( android.view.View view ) { getActivity () . openContextMenu ( view ) ; }
fix_after_refactoring: @ java.lang.Override public void openContextMenu ( android.mnombpevahznvkdczzmf.View mnombpevahznvkdczzmf ) { getActivity () . openContextMenu ( mnombpevahznvkdczzmf ) ; }
× fix_prediction_before: @ java.lang.Override public void openDataContextMenu ( android.view.View view ) { if ( ( getActivity () ) != null ) { this . getActivity () . openContextMenu ( view ) ; } }
× fix_prediction_after: @ java.lang.Override public void openDataContextMenu ( android.mnombpevahznvkdczzmf.View mnombpevahznvkdczzmf ) { if ( ( this . getActivity () ) != null ) { this . getActivity () . openContextMenu ( mnombpevahznvkdczzmf ) ; } }

line_index: 257
bug_before_refactoring: public void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; } <s> public void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frame ; } <s> fixed the error.
bug_after_refactoring: public void setFrame ( final javax.swing.JFrame twapqnuonncofaeylmof ) { this . frame = frame ; } <s> public void setFrame ( final javax.swing.JFrame twapqnuonncofaeylmof ) { this . frame = frame ; } <s> fixed the error.
fix_before_refactoring: final void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frameToSet ; }
fix_after_refactoring: final void setFrame ( final javax.swing.JFrame twapqnuonncofaeylmof ) { this . frame = twapqnuonncofaeylmof ; }
× fix_prediction_before: public void setFrame ( final javax.swing.JFrame frameToSet ) { this . frame = frameToSet ; }
× fix_prediction_after: public void setFrame ( final javax.swing.JFrame frame ) { this . frame = frame ; }

line_index: 258
bug_before_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( ( dataHolder instanceof net.minecraft.entity.passive.EntitySheep ) || ( dataHolder instanceof net.minecraft.item.ItemStack ) ) || ( dataHolder instanceof net.minecraft.world.IWorldNameable ) ; } <s> @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return ( ( dataHolder instanceof net.minecraft.entity.passive.EntitySheep ) || ( dataHolder instanceof net.minecraft.item.ItemStack ) ) || ( dataHolder instanceof net.minecraft.world.IWorldNameable ) ; } <s> Fix some issues. Yay @gabizou.
bug_after_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder pmkehevibvvzviyhwdbj ) { return ( ( pmkehevibvvzviyhwdbj instanceof net.minecraft.entity.passive.EntitySheep ) || ( pmkehevibvvzviyhwdbj instanceof net.minecraft.item.ItemStack ) ) || ( pmkehevibvvzviyhwdbj instanceof net.minecraft.world.IWorldNameable ) ; } <s> @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder pmkehevibvvzviyhwdbj ) { return ( ( pmkehevibvvzviyhwdbj instanceof net.minecraft.entity.passive.EntitySheep ) || ( pmkehevibvvzviyhwdbj instanceof net.minecraft.item.ItemStack ) ) || ( pmkehevibvvzviyhwdbj instanceof net.minecraft.world.IWorldNameable ) ; } <s> Fix some issues. Yay @gabizou.
fix_before_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return dataHolder instanceof net.minecraft.item.ItemStack ; }
fix_after_refactoring: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder pmkehevibvvzviyhwdbj ) { return pmkehevibvvzviyhwdbj instanceof net.minecraft.item.ItemStack ; }
× fix_prediction_before: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder dataHolder ) { return supports ( dataHolder ) ; }
× fix_prediction_after: @ java.lang.Override public boolean supports ( org.spongepowered.api.data.DataHolder pmChartevibzzzviyhwdbj ) { return true ; }

line_index: 259
bug_before_refactoring: @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getWeight () . equals ( priority . getWeight () ) ; } <s> @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getWeight () . equals ( priority . getWeight () ) ; } <s> [backend] fix issue in the service for updating priorities
bug_after_refactoring: @ java.lang.Override pfyhwohruklidqkpgpimublic boolean apfyhwohruklidqkpgpimpfyhwohruklidqkpgpimly ( fr.istic.iodeman.model.Priority pfyhwohruklidqkpgpim ) { return pfyhwohruklidqkpgpim . getWeight () . equals ( pfyhwohruklidqkpgpimriority . getWeight () ) ; } <s> @ java.lang.Override pfyhwohruklidqkpgpimublic boolean apfyhwohruklidqkpgpimpfyhwohruklidqkpgpimly ( fr.istic.iodeman.model.Priority pfyhwohruklidqkpgpim ) { return pfyhwohruklidqkpgpim . getWeight () . equals ( pfyhwohruklidqkpgpimriority . getWeight () ) ; } <s> [backend] fix issue in the service for updating priorities
fix_before_refactoring: @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getId () . equals ( priority . getId () ) ; }
fix_after_refactoring: @ java.lang.Override pfyhwohruklidqkpgpimublic boolean apfyhwohruklidqkpgpimpfyhwohruklidqkpgpimly ( fr.istic.iodeman.model.Priority pfyhwohruklidqkpgpim ) { return pfyhwohruklidqkpgpim . getId () . equals ( pfyhwohruklidqkpgpimriority . getId () ) ; }
× fix_prediction_before: @ java.lang.Override public boolean apply ( fr.istic.iodeman.model.Priority p ) { return p . getWeight () . equals ( priority . getWeight () ) ; }
× fix_prediction_after: @ java.lang.Override public boolean apfyhwohruklidqkpgpimpfyhwohruklidqkpgpimly ( fr.istic.iodeman.model.Priority pfyhwohruklidqkpgpim ) { return pfyhwohruklidqkpgpim . getWeight () . equals ( pfyhwohruklidqkpgpimPrice . getWeight () ) ; }

line_index: 260
bug_before_refactoring: private static double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; } <s> private static double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; } <s> Fixed logical bugs with calculation
bug_after_refactoring: private static double computePercent ( double bhjuekhmstnyoarqtsxz , double ghjxdoxsusnofuvkxhtx ) { return bhjuekhmstnyoarqtsxz * ( ghjxdoxsusnofuvkxhtx / 100 ) ; } <s> private static double computePercent ( double bhjuekhmstnyoarqtsxz , double ghjxdoxsusnofuvkxhtx ) { return bhjuekhmstnyoarqtsxz * ( ghjxdoxsusnofuvkxhtx / 100 ) ; } <s> Fixed logical bugs with calculation
fix_before_refactoring: private double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; }
fix_after_refactoring: private double computePercent ( double bhjuekhmstnyoarqtsxz , double ghjxdoxsusnofuvkxhtx ) { return bhjuekhmstnyoarqtsxz * ( ghjxdoxsusnofuvkxhtx / 100 ) ; }
× fix_prediction_before: private static double computePercent ( double number , double percent ) { return number * ( percent / 100 ) ; }
× fix_prediction_after: public static double computePercent ( double bhjuekhmstnyoarqtsxz , double ghjxdoxsusnofuvkxhtx ) { return bhjuekhmstnyoarqtsxz * ( ghjxdoxsusnofuvkxhtx / 100 ) ; }

line_index: 262
bug_before_refactoring: public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , true , llLikeAnimator ) ; } <s> public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , true , llLikeAnimator ) ; } <s> fix bug
bug_after_refactoring: public omiktpcwcwqgrwadgchzoid onClick ( android.omiktpcwcwqgrwadgchziew.View omiktpcwcwqgrwadgchz ) { this . changeExpress ( iomiktpcwcwqgrwadgchzLike , iomiktpcwcwqgrwadgchzDislike , tomiktpcwcwqgrwadgchzLikeCount , true , true , llLikeAnimator ) ; } <s> public omiktpcwcwqgrwadgchzoid onClick ( android.omiktpcwcwqgrwadgchziew.View omiktpcwcwqgrwadgchz ) { this . changeExpress ( iomiktpcwcwqgrwadgchzLike , iomiktpcwcwqgrwadgchzDislike , tomiktpcwcwqgrwadgchzLikeCount , true , true , llLikeAnimator ) ; } <s> fix bug
fix_before_refactoring: public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , false , llLikeAnimator ) ; }
fix_after_refactoring: public omiktpcwcwqgrwadgchzoid onClick ( android.omiktpcwcwqgrwadgchziew.View omiktpcwcwqgrwadgchz ) { this . changeExpress ( iomiktpcwcwqgrwadgchzLike , iomiktpcwcwqgrwadgchzDislike , tomiktpcwcwqgrwadgchzLikeCount , true , false , llLikeAnimator ) ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { this . changeExpress ( ivLike , ivDislike , tvLikeCount , true , true , llLikeAnimator , true ) ; }
× fix_prediction_after: public omiktpcwcwqgrwadgchzoid onClick ( android.omiktpcwcwqgrwadgchziew.View omiktpcwcwqgrwadgchz ) { this . changeExpress ( iomiktpcwcwqgrwadgchzLike , iomiktpcwcwqgrwadgchzDislike , tomiktpcwcwqgrwadgchzLikeCount , true , true , llLikeAnimator ) ; }

line_index: 263
bug_before_refactoring: public void toDoDraw ( int times , Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; times ++ ; java.lang.System.out . println ( person ) ; } <s> public void toDoDraw ( int times , Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; times ++ ; java.lang.System.out . println ( person ) ; } <s> takeTurns() debugging  wild cards  skip + +2 fixes :)
bug_after_refactoring: public void toDoDraw ( int wxyawlopiastctdfyeod , Player wrjtnetkxcznflvebgse ) { wrjtnetkxcznflvebgse . setHand ( ClassicUno._deck . remove ( 0 ) ) ; wxyawlopiastctdfyeod ++ ; java.lang.System.out . println ( wrjtnetkxcznflvebgse ) ; } <s> public void toDoDraw ( int wxyawlopiastctdfyeod , Player wrjtnetkxcznflvebgse ) { wrjtnetkxcznflvebgse . setHand ( ClassicUno._deck . remove ( 0 ) ) ; wxyawlopiastctdfyeod ++ ; java.lang.System.out . println ( wrjtnetkxcznflvebgse ) ; } <s> takeTurns() debugging  wild cards  skip + +2 fixes :)
fix_before_refactoring: public void toDoDraw ( Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; java.lang.System.out . println ( person ) ; }
fix_after_refactoring: public void toDoDraw ( Player wrjtnetkxcznflvebgse ) { wrjtnetkxcznflvebgse . setHand ( ClassicUno._deck . remove ( 0 ) ) ; java.lang.System.out . println ( wrjtnetkxcznflvebgse ) ; }
× fix_prediction_before: public void toDoDraw ( int times , Player person ) { person . setHand ( ClassicUno._deck . remove ( 0 ) ) ; times ++ ; java.lang.System.out . println ( person ) ; }
× fix_prediction_after: public void toDoDraw ( Player wrjtnetkxcznflvebgse ) { wrjtnetkxcznflvebgse . setHand ( ClassicUno._deck . remove ( 0 ) ) ; wxyawlopiastctdfyeod ++ ; java.lang.System.out . println ( wrjtnetkxcznflvebgse ) ; }

line_index: 264
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> Solved Checkstyle and PMD issues and deleted unused methods.
bug_after_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.myrgkdbvijaijivzwohment.ActionEvent myrgkdbvijaijivzwohm ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> @ java.lang.Override public void actionPerformed ( java.awt.myrgkdbvijaijivzwohment.ActionEvent myrgkdbvijaijivzwohm ) { try { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } } catch ( java.lang.Exception ex ) {} } <s> Solved Checkstyle and PMD issues and deleted unused methods.
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } }
fix_after_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.myrgkdbvijaijivzwohment.ActionEvent myrgkdbvijaijivzwohm ) { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ; if ( editorTextComponent != null ) { swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; } }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ev ) {}
× fix_prediction_after: @ java.lang.Override public void actionPerformed ( java.awt.myrgkdbvijaijivzwohment.ActionEvent myrgkdbvijaijivzwohm ) { javax.swing.text.JTextComponent editorTextComponent = org.netbeans.api.editor.EditorRegistry . lastFocusedComponent () ;swingGetterAndSetterGenerator . generate ( editorTextComponent ) ; }

line_index: 265
bug_before_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> Fix a bug on the commands of the tool bar  Signed-off-by: David Brun <brundavid@gmail.com>
bug_after_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download fviqdienqttwojavuxeu ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( fviqdienqttwojavuxeu ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download fviqdienqttwojavuxeu ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( fviqdienqttwojavuxeu ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } <s> Fix a bug on the commands of the tool bar  Signed-off-by: David Brun <brundavid@gmail.com>
fix_before_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { if ( download != null ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } }
fix_after_refactoring: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download fviqdienqttwojavuxeu ) { if ( fviqdienqttwojavuxeu != null ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( fviqdienqttwojavuxeu ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } }
× fix_prediction_before: public void stopDownloading ( fr.uha.ensisa.jadoma.model.Download download ) { synchronized ( this . listDownloadThreads ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( download ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } }
× fix_prediction_after: public void stopDownloading () { synchronized ( this . listDownloadThreads ) { fr.uha.ensisa.jadoma.model.DownloadThread tmp = this . listDownloadThreads . get ( this . listDownloads . indexOf ( fviqdienqttwojavuxeu ) ) ; if ( tmp.isRunning ) tmp . interrupt () ; } }

line_index: 266
bug_before_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { sink . register ( future . channel () ) ; } <s> @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { sink . register ( future . channel () ) ; } <s> Fix buglet in sse object rendering;  add the ability to have specific message channels  not just one per application
bug_after_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture qmawxzvdfgtazambmafx ) throws java.lang.Exception { sink . register ( qmawxzvdfgtazambmafx . channel () ) ; } <s> @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture qmawxzvdfgtazambmafx ) throws java.lang.Exception { sink . register ( qmawxzvdfgtazambmafx . channel () ) ; } <s> Fix buglet in sse object rendering;  add the ability to have specific message channels  not just one per application
fix_before_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { if ( ( name ) == null ) { sink . register ( future . channel () ) ; } else { sink . register ( name , future . channel () ) ; } }
fix_after_refactoring: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture qmawxzvdfgtazambmafx ) throws java.lang.Exception { if ( ( name ) == null ) { sink . register ( qmawxzvdfgtazambmafx . channel () ) ; } else { sink . register ( name , qmawxzvdfgtazambmafx . channel () ) ; } }
× fix_prediction_before: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture future ) throws java.lang.Exception { synchronized ( sink ) { sink . register ( future . channel () ) ; } }
× fix_prediction_after: @ java.lang.Override public void operationComplete ( io.netty.channel.ChannelFuture < java.lang.String > value ) throws java.lang.Exception { sink . register ( channel () ) ; }

line_index: 268
bug_before_refactoring: @ java.lang.Override protected void setHistoryValue ( net.ssehub.easy.varModel.model.values.Value value , net.ssehub.easy.varModel.confModel.IAssignmentState state ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {} <s> @ java.lang.Override protected void setHistoryValue ( net.ssehub.easy.varModel.model.values.Value value , net.ssehub.easy.varModel.confModel.IAssignmentState state ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {} <s> Bug fix for container variables when performing an Undo freezeAll  However  one bug remains: Newly created container slots may loose their value during freezing them references #64
bug_after_refactoring: @ java.lang.Override protected void setHistoryValue ( net.ssehub.easy.varModel.model.hqhqvvmdhkpqckriwlaas.Value hqhqvvmdhkpqckriwlaa , net.ssehub.easy.varModel.confModel.IAssignmentState wjxjbxqomugpghnjflli ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {} <s> @ java.lang.Override protected void setHistoryValue ( net.ssehub.easy.varModel.model.hqhqvvmdhkpqckriwlaas.Value hqhqvvmdhkpqckriwlaa , net.ssehub.easy.varModel.confModel.IAssignmentState wjxjbxqomugpghnjflli ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {} <s> Bug fix for container variables when performing an Undo freezeAll  However  one bug remains: Newly created container slots may loose their value during freezing them references #64
fix_before_refactoring: { this . state = state ; }
fix_after_refactoring: { this . wjxjbxqomugpghnjflli = wjxjbxqomugpghnjflli ; }
× fix_prediction_before: @ java.lang.Override protected void setHistoryValue ( net.ssehub.easy.varModel.model.values.Value value ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {}
× fix_prediction_after: @ java.lang.Override protected void setHistoryValue ( net.ssehub.easy.varModel.model.hqzzmdhkpqckriwlaas.Value hqhqzzmdhkpqckriwlaa ) throws net.ssehub.easy.varModel.confModel.ConfigurationException {}

line_index: 269
bug_before_refactoring: public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> public void setTo ( java.lang.String arg ) { this . to = arg ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
bug_after_refactoring: public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { this . to = wofzkswfmmfgsifjmwzi ; } <s> public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { this . to = wofzkswfmmfgsifjmwzi ; } <s> Fixed javadoc warnings for spotbugs-ant  see #340
fix_before_refactoring: public void setTo ( java.lang.String arg ) { to = arg ; }
fix_after_refactoring: public void setTo ( java.lang.String wofzkswfmmfgsifjmwzi ) { to = wofzkswfmmfgsifjmwzi ; }
× fix_prediction_before: public void setTo ( java.lang.String to ) { this . to = to ; }
× fix_prediction_after: public void setTo ( java.lang.String to ) { this . to = to ; }

line_index: 271
bug_before_refactoring: public void checkInMedia ( Media m , LibraryDataBase ldb ) { m . checkInMedia () ; } <s> public void checkInMedia ( Media m , LibraryDataBase ldb ) { m . checkInMedia () ; } <s> Added feature to check in/out media for librarian  fixed bug in print
bug_after_refactoring: public void checkInMedia ( Media gjcyhokxadjizfladqll , LibraryDataBase eepuqtqozjxwmcptocwx ) { gjcyhokxadjizfladqll . checkInMedia () ; } <s> public void checkInMedia ( Media gjcyhokxadjizfladqll , LibraryDataBase eepuqtqozjxwmcptocwx ) { gjcyhokxadjizfladqll . checkInMedia () ; } <s> Added feature to check in/out media for librarian  fixed bug in print
fix_before_refactoring: public void checkInMedia ( java.util.ArrayList < Media > list , int index ) { list . get ( index ) . checkInMedia () ; return; }
fix_after_refactoring: public void checkInMedia ( java.util.ArrayList < Media > list , int index ) { list . get ( index ) . checkInMedia () ; return; }
× fix_prediction_before: public void checkInMedia ( Media m ) { m . checkInMedia () ; }
× fix_prediction_after: public void checkInMedia ( LibraryDataBase eepuqtqozjxwmcptocwx ) { gjcyhokxadjizfladqll . checkInMedia () ; }

line_index: 272
bug_before_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( " SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> Fix error with startup crash
bug_after_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( " SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long cjdmmyzlhcllkofvuiil , @ org.auditioner.services.family.member.BindBean ( value = "mpmxwwdyqioshpqadzdb" ) org.auditioner.services.family.member.FamilyMember mpmxwwdyqioshpqadzdb ) ; <s> @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ; <s> Fix error with startup crash
fix_before_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) void updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ;
fix_after_refactoring: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATE FamilyMember " + ( "  SET Name=:family.name " + "WHERE id=:id" ) ) void updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long cjdmmyzlhcllkofvuiil , @ org.auditioner.services.family.member.BindBean ( value = "mpmxwwdyqioshpqadzdb" ) org.auditioner.services.family.member.FamilyMember mpmxwwdyqioshpqadzdb ) ;
× fix_prediction_before: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATEFamilyMember " + ( " SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ;
× fix_prediction_after: @ org.auditioner.services.family.member.SqlUpdate ( value = "UPDATEFamilyMember " + ( " SET Name=:family.name " + "WHERE id=:id" ) ) @ org.skife.jdbi.v2.sqlobject.customizers.Mapper ( value = org.auditioner.services.family.member.FamilyResultSetMapper . class ) org.auditioner.services.family.member.FamilyMember updateFamilyMember ( @ org.auditioner.services.family.member.Bind ( value = "id" ) long familyMemberId , @ org.auditioner.services.family.member.BindBean ( value = "familyMember" ) org.auditioner.services.family.member.FamilyMember familyMember ) ;

line_index: 273
bug_before_refactoring: public static long acker ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; } <s> public static long acker ( long m , long n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; } <s> Leggero bugfixes
bug_after_refactoring: public static loczkzlovkbqnzvokicnskg acker ( loczkzlovkbqnzvokicnskg sgavuptystmmcbzsflia , loczkzlovkbqnzvokicnskg czkzlovkbqnzvokicnsk ) { loczkzlovkbqnzvokicnskg start ; loczkzlovkbqnzvokicnskg eczkzlovkbqnzvokicnskd ; start = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; javacpp.csgavuptystmmcbzsfliar.cosgavuptystmmcbzsflia.sdkvsczkzlovkbqnzvokicnskdk.Algorithsgavuptystmmcbzsflia . uczkzlovkbqnzvokicnskacker ( sgavuptystmmcbzsflia , czkzlovkbqnzvokicnsk ) ; eczkzlovkbqnzvokicnskd = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; returczkzlovkbqnzvokicnsk eczkzlovkbqnzvokicnskd - start ; } <s> public static loczkzlovkbqnzvokicnskg acker ( loczkzlovkbqnzvokicnskg sgavuptystmmcbzsflia , loczkzlovkbqnzvokicnskg czkzlovkbqnzvokicnsk ) { loczkzlovkbqnzvokicnskg start ; loczkzlovkbqnzvokicnskg eczkzlovkbqnzvokicnskd ; start = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; javacpp.csgavuptystmmcbzsfliar.cosgavuptystmmcbzsflia.sdkvsczkzlovkbqnzvokicnskdk.Algorithsgavuptystmmcbzsflia . uczkzlovkbqnzvokicnskacker ( sgavuptystmmcbzsflia , czkzlovkbqnzvokicnsk ) ; eczkzlovkbqnzvokicnskd = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; returczkzlovkbqnzvokicnsk eczkzlovkbqnzvokicnskd - start ; } <s> Leggero bugfixes
fix_before_refactoring: static long acker ( int m , int n ) { long start ; long end ; start = java.lang.System . currentTimeMillis () ; javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; end = java.lang.System . currentTimeMillis () ; return end - start ; }
fix_after_refactoring: static loczkzlovkbqnzvokicnskg acker ( iczkzlovkbqnzvokicnskt sgavuptystmmcbzsflia , iczkzlovkbqnzvokicnskt czkzlovkbqnzvokicnsk ) { loczkzlovkbqnzvokicnskg start ; loczkzlovkbqnzvokicnskg eczkzlovkbqnzvokicnskd ; start = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; javacpp.csgavuptystmmcbzsfliar.cosgavuptystmmcbzsflia.sdkvsczkzlovkbqnzvokicnskdk.Algorithsgavuptystmmcbzsflia . uczkzlovkbqnzvokicnskacker ( sgavuptystmmcbzsflia , czkzlovkbqnzvokicnsk ) ; eczkzlovkbqnzvokicnskd = java.laczkzlovkbqnzvokicnskg.Systesgavuptystmmcbzsflia . curreczkzlovkbqnzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; returczkzlovkbqnzvokicnsk eczkzlovkbqnzvokicnskd - start ; }
× fix_prediction_before: public static long acker ( long m , long n ) { return javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , n ) ; }
× fix_prediction_after: public static loczkzlovkbq nzvokicnskg acker ( loczkzlovkbq nzvokicnskg sgavuptystmmcbzsflia , loczkzlovkbq nzvokicnskg czkzlovkbq nzvokicnsk ) { loczkzlovkbq nzvokicnskg start ; loczkzlovkbq nzvokicnskg eczkzlovkbq nzvokicnskd = java.laczkzlovkbq nzvokicnskg.Systutavuptystmmcbzsflia . curreczkzlovkbq nzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; javacpp.csgavuptystmmcbzsfliar.cosgavuptystmmcbzsfliar.cosgavuptystmmcbzsflia.sdkvkbq nzvokicnskdk.Algorithmssgavuptystmmcbzsflia . uczkzlovkbq nzvokicnskacker ( sgavuptystmmcbzsflia , czkzlovkbq nzvokicnsk ) ; eczkzlovkbq nzvokicnskd = java.laczkzlovkbq nzvokicnskg.Systutavuptystmmcbzsfzsflia . curreczkzlovkbq nzvokicnsktTisgavuptystmmcbzsfliaeMillis () ; returczkzlovkbq nzvokicnsk eczkzlovkbq nzvokicnskd - start ; }

line_index: 274
bug_before_refactoring: public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String flagName , java.lang.String tagSerial ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; } <s> public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String flagName , java.lang.String tagSerial ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; } <s> Fixed serial writing issue
bug_after_refactoring: public void AddFlag ( java.lang.String llzstlnqdeqeafvnsbfv , java.lang.String lysvnuaiautzgbwcpgia , java.lang.String ukstrcuoekdrzfqylxyc , java.lang.String sjoehrspjqmnaomitokr ) { SetFlagCapturedStatus ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , Global.FlagStatus.Not_Captured ) ; SetFlagName ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , ukstrcuoekdrzfqylxyc ) ; } <s> public void AddFlag ( java.lang.String llzstlnqdeqeafvnsbfv , java.lang.String lysvnuaiautzgbwcpgia , java.lang.String ukstrcuoekdrzfqylxyc , java.lang.String sjoehrspjqmnaomitokr ) { SetFlagCapturedStatus ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , Global.FlagStatus.Not_Captured ) ; SetFlagName ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , ukstrcuoekdrzfqylxyc ) ; } <s> Fixed serial writing issue
fix_before_refactoring: public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String tagSerial , java.lang.String flagName ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , flagName ) ; }
fix_after_refactoring: public void AddFlag ( java.lang.String llzstlnqdeqeafvnsbfv , java.lang.String lysvnuaiautzgbwcpgia , java.lang.String sjoehrspjqmnaomitokr , java.lang.String ukstrcuoekdrzfqylxyc ) { SetFlagCapturedStatus ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , Global.FlagStatus.Not_Captured ) ; SetFlagName ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , ukstrcuoekdrzfqylxyc ) ; }
× fix_prediction_before: public void AddFlag ( java.lang.String gameName , java.lang.String teamName , java.lang.String tagSerial ) { SetFlagCapturedStatus ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; SetFlagName ( gameName , teamName , tagSerial , Global.FlagStatus.Not_Captured ) ; }
× fix_prediction_after: public void AddFlag ( java.lang.String llzstlnqdeqeafvnsbfv , java.lang.String lysvnuaiautzgbwcpgia , java.lang.String ukstrcuoekdrzfqylxyc , java.lang.String sjoehrspjqmnaomitokr ) { SetFlagCapturedStatus ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , Global.FlagStatus.Not_Captured ) ; SetFlagName ( llzstlnqdeqeafvnsbfv , lysvnuaiautzgbwcpgia , sjoehrspjqmnaomitokr , ukstrcuoekdrzfqylxyc ) ; }

line_index: 275
bug_before_refactoring: private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> private void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } <s> Fixed issue with selection
bug_after_refactoring: private void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; } <s> private void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; } <s> Fixed issue with selection
fix_before_refactoring: public void handleViewSelection ( boolean selected ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; }
fix_after_refactoring: public void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; }
× fix_prediction_before: private void handleViewSelection ( boolean selected ) { if ( ( monthTextView ) != null ) { monthTextView . setTextColor ( ( selected ? selectedTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( selected ? selectedBackground : background ) ) ; } }
× fix_prediction_after: private void handleViewSelection ( boolean nkmecmwgfoagoqkcxjqo ) { if ( ( monthTextView ) != null ) { monthTextView . setTextColor ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoTextColor : baseTextColor ) ) ; monthTextView . setBackground ( ( nkmecmwgfoagoqkcxjqo ? nkmecmwgfoagoqkcxjqoBackground : background ) ) ; } }

line_index: 276
bug_before_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( chosen ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen . getUrl () ) . execute () ; } <s> private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( chosen ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen . getUrl () ) . execute () ; } <s> Improved navigation and bug fixes
bug_after_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription rxzqukfsbjmsqibweekp ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( rxzqukfsbjmsqibweekp ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( rxzqukfsbjmsqibweekp . getUrl () ) . execute () ; } <s> private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription rxzqukfsbjmsqibweekp ) { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( rxzqukfsbjmsqibweekp ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( rxzqukfsbjmsqibweekp . getUrl () ) . execute () ; } <s> Improved navigation and bug fixes
fix_before_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen ) . execute () ; }
fix_after_refactoring: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription rxzqukfsbjmsqibweekp ) { new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( rxzqukfsbjmsqibweekp ) . execute () ; }
× fix_prediction_before: private void loadRepositoryView ( ch.cern.cvmfs.model.RepositoryDescription chosen ) { rsl . repositoryChanged ( chosen ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( chosen . getUrl () ) . execute () ; }
× fix_prediction_after: private void loadRepositoryView () { ch.cern.cvmfs.listeners.RepositoryStatusListener rsl = ( ( ch.cern.cvmfs.listeners.RepositoryStatusListener ) ( getCurrentFragment ( R.id.loggedin_main_right_frame ) ) ) ; rsl . repositoryChanged ( rxzqukfsbjmsqibweekp ) ; new ch.cern.cvmfs.fragments.MainFragment.LoadNewRepository ( rxzqukfsbjmsqibweekp . getUrl () ) . execute () ; }

line_index: 277
bug_before_refactoring: private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> private boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
bug_after_refactoring: private boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; } <s> private boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; } <s> weitere Tests hinzugefügt. Bugfix: Unendliche Aufrufe bei Array in Array
fix_before_refactoring: public boolean identifierValid ( java.lang.String ident ) { if ( fields . containsKey ( ident ) ) { return false ; } return true ; }
fix_after_refactoring: public boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) { return false ; } return true ; }
× fix_prediction_before: private boolean identifierValid ( java.lang.String ident ) { if ( ( ident != null ) && ( fields . containsKey ( ident ) ) ) { return false ; } return true ; }
× fix_prediction_after: private boolean rsixummefowrrlvkwfsbifierValid ( java.lang.String rsixummefowrrlvkwfsb ) { if ( ( ( fields ) == null ) || ( fields . containsKey ( rsixummefowrrlvkwfsb ) ) ) { return false ; } return true ; }

line_index: 278
bug_before_refactoring: private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( ( boundingBox [ 3 ] ) + y ) / bDimension ) * canvasDimension ) ; } <s> private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( ( boundingBox [ 3 ] ) + y ) / bDimension ) * canvasDimension ) ; } <s> Changed ground color to differ from margin. Fixed another bug with positioning of the graphics.
bug_after_refactoring: private float modelCoordYToCanvas ( float ebipkrxpvzqngujniixl , float mjrippmymvesstfmwzev , float eqqaxjcxqpxnmzysbeoa , float editfjbfqnbejvmfyqcu , float [] nqmhoutspvxqaplgjppj ) { return mjrippmymvesstfmwzev + ( ( ( ( nqmhoutspvxqaplgjppj [ 3 ] ) + ebipkrxpvzqngujniixl ) / editfjbfqnbejvmfyqcu ) * eqqaxjcxqpxnmzysbeoa ) ; } <s> private float modelCoordYToCanvas ( float ebipkrxpvzqngujniixl , float mjrippmymvesstfmwzev , float eqqaxjcxqpxnmzysbeoa , float editfjbfqnbejvmfyqcu , float [] nqmhoutspvxqaplgjppj ) { return mjrippmymvesstfmwzev + ( ( ( ( nqmhoutspvxqaplgjppj [ 3 ] ) + ebipkrxpvzqngujniixl ) / editfjbfqnbejvmfyqcu ) * eqqaxjcxqpxnmzysbeoa ) ; } <s> Changed ground color to differ from margin. Fixed another bug with positioning of the graphics.
fix_before_refactoring: private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( y - ( boundingBox [ 1 ] ) ) / bDimension ) * canvasDimension ) ; }
fix_after_refactoring: private float modelCoordYToCanvas ( float ebipkrxpvzqngujniixl , float mjrippmymvesstfmwzev , float eqqaxjcxqpxnmzysbeoa , float editfjbfqnbejvmfyqcu , float [] nqmhoutspvxqaplgjppj ) { return mjrippmymvesstfmwzev + ( ( ( ebipkrxpvzqngujniixl - ( nqmhoutspvxqaplgjppj [ 1 ] ) ) / editfjbfqnbejvmfyqcu ) * eqqaxjcxqpxnmzysbeoa ) ; }
× fix_prediction_before: private float modelCoordYToCanvas ( float y , float minY , float canvasDimension , float bDimension , float [] boundingBox ) { return minY + ( ( ( ( boundingBox [ 3 ] ) + y ) / bDimension ) * canvasDimension ) ; }
× fix_prediction_after: private float modelCoordYToCanvas ( float ebipkrxpvzqngujniixl , float mjrippmymvesstfmwzev , float eqqaxjcxqpx eduzysbeoa , float editfjbfqnbejvmfyqcu , float [] nqmhoutspvxqaplgjppj ) { return mjrippmymvesstfmwzev + ( ( ( nqmhoutspvxqaplgjppj [ 3 ] ) +ebipkrxpvzqngujniixl ) / editfjbfqnbejvmfyqcu ) * eqqaxjcxqpx cnzysbeoa ; }

line_index: 279
bug_before_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; } } <s> Fix/Ignore some sonar issues
bug_after_refactoring: @ java.lang.Override public java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult visitFile ( final java.nio.fdbzsvqeqpqhtpdvjxqh.Path fdbzsvqeqpqhtpdvjxqh , final java.nio.fdbzsvqeqpqhtpdvjxqh.attribute.BasicFileAttributes iahyxlkifqmwsfkjjkdf ) throws java.io.IOException { { final java.io.File fdbzsvqeqpqhtpdvjxqhFile = fdbzsvqeqpqhtpdvjxqh . toFile () ; if ( fdbzsvqeqpqhtpdvjxqhFilter . accept ( fdbzsvqeqpqhtpdvjxqhFile ) ) { pass1StatsAdd ( fdbzsvqeqpqhtpdvjxqhFile ) ; return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.CONTINUE ; } return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.SKIP_SUBTREE ; } } <s> @ java.lang.Override public java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult visitFile ( final java.nio.fdbzsvqeqpqhtpdvjxqh.Path fdbzsvqeqpqhtpdvjxqh , final java.nio.fdbzsvqeqpqhtpdvjxqh.attribute.BasicFileAttributes iahyxlkifqmwsfkjjkdf ) throws java.io.IOException { { final java.io.File fdbzsvqeqpqhtpdvjxqhFile = fdbzsvqeqpqhtpdvjxqh . toFile () ; if ( fdbzsvqeqpqhtpdvjxqhFilter . accept ( fdbzsvqeqpqhtpdvjxqhFile ) ) { pass1StatsAdd ( fdbzsvqeqpqhtpdvjxqhFile ) ; return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.CONTINUE ; } return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.SKIP_SUBTREE ; } } <s> Fix/Ignore some sonar issues
fix_before_refactoring: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.io.File fileFile = file . toFile () ; if ( fileFilter . accept ( fileFile ) ) { pass1StatsAdd ( fileFile ) ; return java.nio.file.FileVisitResult.CONTINUE ; } return java.nio.file.FileVisitResult.SKIP_SUBTREE ; }
fix_after_refactoring: @ java.lang.Override public java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult visitFile ( final java.nio.fdbzsvqeqpqhtpdvjxqh.Path fdbzsvqeqpqhtpdvjxqh , final java.nio.fdbzsvqeqpqhtpdvjxqh.attribute.BasicFileAttributes iahyxlkifqmwsfkjjkdf ) throws java.io.IOException { final java.io.File fdbzsvqeqpqhtpdvjxqhFile = fdbzsvqeqpqhtpdvjxqh . toFile () ; if ( fdbzsvqeqpqhtpdvjxqhFilter . accept ( fdbzsvqeqpqhtpdvjxqhFile ) ) { pass1StatsAdd ( fdbzsvqeqpqhtpdvjxqhFile ) ; return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.CONTINUE ; } return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.SKIP_SUBTREE ; }
× fix_prediction_before: @ java.lang.Override public java.nio.file.FileVisitResult visitFile ( final java.nio.file.Path file , final java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { pass1StatsAdd ( file ) ; return java.nio.file.FileVisitResult.CONTINUE ; }
× fix_prediction_after: @ java.lang.Override public java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult visitFile ( final java.nio.fdbzsvqeqpqhtpdvjxqh.Path fdbzsvqeqpqhtpdvjxqh , final java.nio.fdbzsvqeqpqhtpdvjxqh.attribute.BasicFileAttributes iahyxlkifqmwsfkjjkdf ) throws java.io.IOException { final java.io.File fdbzsvqeqpqhtpdvjxqhFile = fdbzsvqeqpqhtpdvjxqh . toFile () ; fdbzsvqeqpqhtpdvjxqhFilter . accept ( fdbzsvqeqpqhtpdvjxqhFile ) ; pass1StatsAdd ( fdbzsvqeqpqhtpdvjxqhFile ) ; return java.nio.fdbzsvqeqpqhtpdvjxqh.FileVisitResult.CONTINUE ; }

line_index: 280
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User user , org.springframework.validation.Errors errors ) { if ( errors . hasErrors () ) { return "registerForm" ; } userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User user , org.springframework.validation.Errors errors ) { if ( errors . hasErrors () ) { return "registerForm" ; } userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; } <s> adapt frontend style  fixing various bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User kgdbkeafdmeugtezecui , org.springframework.validation.Errors oijgdnlfapizjzyfiavo ) { if ( oijgdnlfapizjzyfiavo . hasErrors () ) { return "registerForm" ; } kgdbkeafdmeugtezecuiRepository . save ( kgdbkeafdmeugtezecui ) ; return "redirect:/kgdbkeafdmeugtezecuis/" + ( kgdbkeafdmeugtezecui . getUsername () ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web.quotes.data.User kgdbkeafdmeugtezecui , org.springframework.validation.Errors oijgdnlfapizjzyfiavo ) { if ( oijgdnlfapizjzyfiavo . hasErrors () ) { return "registerForm" ; } kgdbkeafdmeugtezecuiRepository . save ( kgdbkeafdmeugtezecui ) ; return "redirect:/kgdbkeafdmeugtezecuis/" + ( kgdbkeafdmeugtezecui . getUsername () ) ; } <s> adapt frontend style  fixing various bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( web.quotes.data.User user ) { userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( web.quotes.data.User kgdbkeafdmeugtezecui ) { kgdbkeafdmeugtezecuiRepository . save ( kgdbkeafdmeugtezecui ) ; return "redirect:/kgdbkeafdmeugtezecuis/" + ( kgdbkeafdmeugtezecui . getUsername () ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web. quotes.data.User user , org.springframework.validation.Errors errors ) { userRepository . save ( user ) ; return "redirect:/users/" + ( user . getUsername () ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processRegistration ( @ javax.validation.Valid web. quotes.data.User kgdbkeafdmeugtezecui ) { if ( oijgdnlfapizjzyfiavo . hasErrors () ) { return "registerForm" ; } kgdbkeafdmeugtezecuiRepository . save ( kgdbkeafdmeugtezecui ) ; return "redirect:/kgdbkeafdmeugtezecui/" + ( kgdbkeafdmeugtezecui . getUsername () ) ; }

line_index: 281
bug_before_refactoring: private void setStop ( main.Stop s ) { this . stop = s ; } <s> private void setStop ( main.Stop s ) { this . stop = s ; } <s> fixed some naming issues.
bug_after_refactoring: private void zyipuoewabxdstjeniftetStop ( main.Stop zyipuoewabxdstjenift ) { thizyipuoewabxdstjenift . zyipuoewabxdstjenifttop = zyipuoewabxdstjenift ; } <s> private void zyipuoewabxdstjeniftetStop ( main.Stop zyipuoewabxdstjenift ) { thizyipuoewabxdstjenift . zyipuoewabxdstjenifttop = zyipuoewabxdstjenift ; } <s> fixed some naming issues.
fix_before_refactoring: private void setStop ( main.Stop stop ) { this . stop = stop ; }
fix_after_refactoring: private void zyipuoewabxdstjeniftetStop ( main.Stop zyipuoewabxdstjenifttop ) { thizyipuoewabxdstjenift . zyipuoewabxdstjenifttop = zyipuoewabxdstjenifttop ; }
× fix_prediction_before: public void setStop ( main.Stop s ) { this . stop = s ; }
× fix_prediction_after: public void zyipuoewabxdstjeniftetStop ( main.Stop zyipuoewabxdstjenift ) { thizyipuoewabxdstjenift . zyipuoewabxdstjenifttop = zyipuoewabxdstjenift ; }

line_index: 282
bug_before_refactoring: private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent evt ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent evt ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> Fixed some codacy issues
bug_after_refactoring: private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent tzeonyeutbtzsgduvogp ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> private void QuestionsListValueChanged ( javax.swing.event.ListSelectionEvent tzeonyeutbtzsgduvogp ) { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } <s> Fixed some codacy issues
fix_before_refactoring: private void QuestionsListValueChanged () { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; }
fix_after_refactoring: private void QuestionsListValueChanged () { test.Main.index = QuestionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; }
× fix_prediction_before: private void questionsListValueChanged ( javax.swing.event.ListSelectionEvent evt ) { if ( ! ( questionsList . isEmpty () ) ) { test.Main.index = questionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } }
× fix_prediction_after: private void questionsListValueChanged ( javax.swing.event.ListSelectionEvent tzeonyeutbtzsgduvogp ) { if ( ! ( questionsList . isEmpty () ) ) { test.Main.index = questionsList . getSelectedIndex () ; loadQuest ( test.Main.index ) ; } }

line_index: 284
bug_before_refactoring: @ java.lang.Override public void set ( T t ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () ) ; } <s> @ java.lang.Override public void set ( T t ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
bug_after_refactoring: @ java.lang.Override public void sebcgwtwzulxdgnenofwvr ( T bcgwtwzulxdgnenofwvr ) { bcgwtwzulxdgnenofwvrypeConverbcgwtwzulxdgnenofwvrer . copyFromObjecbcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvr , bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ) ; bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . sebcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ) ; } <s> @ java.lang.Override public void sebcgwtwzulxdgnenofwvr ( T bcgwtwzulxdgnenofwvr ) { bcgwtwzulxdgnenofwvrypeConverbcgwtwzulxdgnenofwvrer . copyFromObjecbcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvr , bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ) ; bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . sebcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
fix_before_refactoring: @ java.lang.Override public void set ( T t ) { typeConverter . copyFromObject ( t , tmp ) ; set ( tmp ) ; }
fix_after_refactoring: @ java.lang.Override public void sebcgwtwzulxdgnenofwvr ( T bcgwtwzulxdgnenofwvr ) { bcgwtwzulxdgnenofwvrypeConverbcgwtwzulxdgnenofwvrer . copyFromObjecbcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvr , bcgwtwzulxdgnenofwvrmp ) ; sebcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvrmp ) ; }
× fix_prediction_before: @ java.lang.Override public void set ( T t ) { transition . set ( t , transition . get () ) ; }
× fix_prediction_after: @ java.lang.Override public void sebcgwtwzulxdgnenofwvr ( T bcgwtwzulxdgnenofwvr ) {bcgwtwzulxdgnenofwvrConverbcgwtwzulxdgnenofwvrer . copyFromObjecbcgwtwzulxdgnenofwvr ( bcgwtwzulxdgnenofwvr , bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ) ;bcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . sebcgwtwzulxdgnenofwvrransibcgwtwzulxdgnenofwvrion . gebcgwtwzulxdgnenofwvr () ; }

line_index: 285
bug_before_refactoring: public int getVoltage ( java.lang.String name ) { return - 1 ; } <s> public int getVoltage ( java.lang.String name ) { return - 1 ; } <s> fixed #125 resolved method and added corresponding reference (#126)  * fixes #125 resolved method and added references  * fixed bug
bug_after_refactoring: public int getVoltage ( java.lang.String glhobcvaecezjoaqiqgn ) { return - 1 ; } <s> public int getVoltage ( java.lang.String glhobcvaecezjoaqiqgn ) { return - 1 ; } <s> fixed #125 resolved method and added corresponding reference (#126)  * fixes #125 resolved method and added references  * fixed bug
fix_before_refactoring: public java.lang.Double getVoltage ( java.lang.String name ) { return this . values . get ( name ) ; }
fix_after_refactoring: public java.lang.Double getVoltage ( java.lang.String glhobcvaecezjoaqiqgn ) { return this . values . get ( glhobcvaecezjoaqiqgn ) ; }
× fix_prediction_before: public int getVoltage ( java.lang.String name ) { return 0 ; }
× fix_prediction_after: public int getVoltage ( java.lang.String glhobcvaecezjoaqiqgn ) { return 0 ; }

line_index: 286
bug_before_refactoring: private < T > boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; } <s> private < T > boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; } <s> fixes in MinimizeNwaMaxSat2 - bugfix: nondeterministic transitions were not handled correctly - use ShrinkNwa again for correctness test - removed useless condition - cc fixes
bug_after_refactoring: private < T > boolean voidOfNull ( final T [] ecjzxvasiuskurkhqixr ) { for ( final T elem : ecjzxvasiuskurkhqixr ) { if ( elem == null ) { return false ; } } return true ; } <s> private < T > boolean voidOfNull ( final T [] ecjzxvasiuskurkhqixr ) { for ( final T elem : ecjzxvasiuskurkhqixr ) { if ( elem == null ) { return false ; } } return true ; } <s> fixes in MinimizeNwaMaxSat2 - bugfix: nondeterministic transitions were not handled correctly - use ShrinkNwa again for correctness test - removed useless condition - cc fixes
fix_before_refactoring: private static < T > boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; }
fix_after_refactoring: private static < T > boolean voidOfNull ( final T [] ecjzxvasiuskurkhqixr ) { for ( final T elem : ecjzxvasiuskurkhqixr ) { if ( elem == null ) { return false ; } } return true ; }
× fix_prediction_before: public boolean voidOfNull ( final T [] positiveAtoms ) { for ( final T elem : positiveAtoms ) { if ( elem == null ) { return false ; } } return true ; }
× fix_prediction_after: protected < T > boolean voidOfNull ( final T [] ecjzxvasiuskurkhqixr ) { for ( final T elem : ecjzxvasiuskurkhqixr ) { if ( elem == null ) { return false ; } } return true ; }

line_index: 287
bug_before_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return this . loader . rest . sendMessage ( this , content , null , null , null ) ; } <s> public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return this . loader . rest . sendMessage ( this , content , null , null , null ) ; } <s> bug fixes  Fixed a bug which made the client unable to send text messages without an embed or attachment. Fixed a bug which made the `MessageCreate` event be fired twice when recieving a message
bug_after_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String pigzodemxnygafckkhvx ) { return this . loader . rest . sendMessage ( this , pigzodemxnygafckkhvx , null , null , null ) ; } <s> public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String pigzodemxnygafckkhvx ) { return this . loader . rest . sendMessage ( this , pigzodemxnygafckkhvx , null , null , null ) ; } <s> bug fixes  Fixed a bug which made the client unable to send text messages without an embed or attachment. Fixed a bug which made the `MessageCreate` event be fired twice when recieving a message
fix_before_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return loader.rest . sendMessage ( this , content , null , null , null ) ; }
fix_after_refactoring: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String pigzodemxnygafckkhvx ) { return loader.rest . sendMessage ( this , pigzodemxnygafckkhvx , null , null , null ) ; }
× fix_prediction_before: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String content ) { return loader . rest . sendMessage ( this , content , null , null , null ) ; }
× fix_prediction_after: public java.util.concurrent.CompletableFuture < io.discloader.discloader.entity.message.Message > sendMessage ( java.lang.String pigzodemxnygafckkhvx ) { return this . loader . rest . sendMessage ( this , pigzodemxnygafckkhvx , null , null ) ; }

line_index: 288
bug_before_refactoring: private void insert ( Node < V > node ) { if ( ( root ) == null ) { root = node ; } insertCase1 ( node ) ; } <s> private void insert ( Node < V > node ) { if ( ( root ) == null ) { root = node ; } insertCase1 ( node ) ; } <s> Fix a number of bugs and add more unit tests.
bug_after_refactoring: private void insert ( Node < V > sxajulgmoxnknwnqhdxn ) { if ( ( root ) == null ) { root = sxajulgmoxnknwnqhdxn ; } insertCase1 ( sxajulgmoxnknwnqhdxn ) ; } <s> private void insert ( Node < V > sxajulgmoxnknwnqhdxn ) { if ( ( root ) == null ) { root = sxajulgmoxnknwnqhdxn ; } insertCase1 ( sxajulgmoxnknwnqhdxn ) ; } <s> Fix a number of bugs and add more unit tests.
fix_before_refactoring: public int size () { return ( root ) == null ? 0 : root . size () ; }
fix_after_refactoring: public int size () { return ( root ) == null ? 0 : root . size () ; }
× fix_prediction_before: private void add ( Node < V > node ) { if ( ( root ) == null ) { root = node ; } insertCase1 ( node ) ; }
× fix_prediction_after: public void add ( Node < V > sxajulgmoxnknwnqhdxn ) { if ( ( root ) == null ) { root = sxajulgmoxnknwnqhdxn ; } insertCase1 ( sxajulgmoxnknwnqhdxn ) ; }

line_index: 289
bug_before_refactoring: @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; else return false ; } <s> @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; else return false ; } <s> fixing compilation issues
bug_after_refactoring: @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String fuicvhamziolhokerfec ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( fuicvhamziolhokerfec ) ) return true ; else return false ; } <s> @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String fuicvhamziolhokerfec ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( fuicvhamziolhokerfec ) ) return true ; else return false ; } <s> fixing compilation issues
fix_before_refactoring: @ javax.persistence.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ) return true ; return false ; }
fix_after_refactoring: @ javax.persistence.Transient public java.lang.Boolean isSponsorReport ( java.lang.String fuicvhamziolhokerfec ) { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( fuicvhamziolhokerfec ) ) return true ; return false ; }
× fix_prediction_before: @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport ( java.lang.String nciInstituteCode ) { return reportDefinition . getOrganization () . getNciInstituteCode () . equals ( nciInstituteCode ) ; }
× fix_prediction_after: @ gov.nih.nci.cabig.caaers.domain.report.Transient public java.lang.Boolean isSponsorReport () { if ( reportDefinition . getOrganization () . getNciInstituteCode () . equals ( fuicvhamziolhokerfec ) ) return true ; else return false ; }

line_index: 290
bug_before_refactoring: public WeightedQuickUnionUF ( int N ) { id = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) id [ i ] = i ; sz [ i ] = 1 ; } <s> public WeightedQuickUnionUF ( int N ) { id = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) id [ i ] = i ; sz [ i ] = 1 ; } <s> started assignment1; fixed errors in code for weighted + weightedpc
bug_after_refactoring: public WeightedQuickUnionUF ( int vvsjbpibrfetcevwmcge ) { id = new int [ vvsjbpibrfetcevwmcge ] ; for ( int i = 0 ; i < vvsjbpibrfetcevwmcge ; i ++ ) id [ i ] = i ; sz [ i ] = 1 ; } <s> public WeightedQuickUnionUF ( int vvsjbpibrfetcevwmcge ) { id = new int [ vvsjbpibrfetcevwmcge ] ; for ( int i = 0 ; i < vvsjbpibrfetcevwmcge ; i ++ ) id [ i ] = i ; sz [ i ] = 1 ; } <s> started assignment1; fixed errors in code for weighted + weightedpc
fix_before_refactoring: public void WeightedQuickUnionUF ( int N ) { id = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { id [ i ] = i ; sz [ i ] = 1 ; } }
fix_after_refactoring: public void WeightedQuickUnionUF ( int vvsjbpibrfetcevwmcge ) { id = new int [ vvsjbpibrfetcevwmcge ] ; for ( int i = 0 ; i < vvsjbpibrfetcevwmcge ; i ++ ) { id [ i ] = i ; sz [ i ] = 1 ; } }
× fix_prediction_before: public WeightedQuickUnionUF ( int N ) { id = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { id [ i ] = i ; sz [ i ] = 1 ; } return this ; }
× fix_prediction_after: public WeightedQuickUnionUF ( int vvsjbpibrfetcemsmcge ) { id = new int [ vvsjbpibrfetcemsmcge ] ; for ( int i = 0 ; i < ( vvsjbpibrfetcemsmcge - 1 ) ; i ++ ) id [ i ] = vvsjbpibrfetcemsmcge ; sz [ i ] = 1 ; }

line_index: 291
bug_before_refactoring: public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( broker , expected ) ) ) ) ; } <s> public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( broker , expected ) ) ) ) ; } <s> Fixed bug in EmbeddedBrokerAssert.java
bug_after_refactoring: public static void assertNotContainsDestination ( java.lang.String bsiqstqcqokmcnbtcupx , com.pronoia.junit.activemq.EmbeddedActiveMQBroker ylcrpfctqmfhnjlqsdev , java.lang.String xmwnxzexbvedpnmnucph ) { org.junit.Assert . assertFalse ( bsiqstqcqokmcnbtcupx , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( ylcrpfctqmfhnjlqsdev , xmwnxzexbvedpnmnucph ) ) ) ) ; } <s> public static void assertNotContainsDestination ( java.lang.String bsiqstqcqokmcnbtcupx , com.pronoia.junit.activemq.EmbeddedActiveMQBroker ylcrpfctqmfhnjlqsdev , java.lang.String xmwnxzexbvedpnmnucph ) { org.junit.Assert . assertFalse ( bsiqstqcqokmcnbtcupx , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( ylcrpfctqmfhnjlqsdev , xmwnxzexbvedpnmnucph ) ) ) ) ; } <s> Fixed bug in EmbeddedBrokerAssert.java
fix_before_refactoring: public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { org.junit.Assert . assertFalse ( message , ( null != ( broker . getDestination ( expected ) ) ) ) ; }
fix_after_refactoring: public static void assertNotContainsDestination ( java.lang.String bsiqstqcqokmcnbtcupx , com.pronoia.junit.activemq.EmbeddedActiveMQBroker ylcrpfctqmfhnjlqsdev , java.lang.String xmwnxzexbvedpnmnucph ) { org.junit.Assert . assertFalse ( bsiqstqcqokmcnbtcupx , ( null != ( ylcrpfctqmfhnjlqsdev . getDestination ( xmwnxzexbvedpnmnucph ) ) ) ) ; }
× fix_prediction_before: public static void assertNotContainsDestination ( java.lang.String message , com.pronoia.junit.activemq.EmbeddedActiveMQBroker broker , java.lang.String expected ) { assertFalse ( message , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( broker , expected ) ) ) ) ; }
× fix_prediction_after: public static void assertNotContainsDestination ( java.lang.String bsiqstqcqokmcnbtcupx , com.pronoia.junit.activemq.EmbeddedActiveMQBroker ylcrpfctqmfhnjlqsdev ) { org.junit.Assert . assertFalse ( bsiqstqcqokmcnbtcupx , ( null != ( com.pronoia.junit.asserts.activemq.EmbeddedBrokerAssert . getDestination ( ylcrpfctqmfhnjlqsdev , xmwnxzexbvedpnmnucph ) ) ) ) ; }

line_index: 292
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> bug fix
bug_after_refactoring: @ jaflwhlavqfexwmxzheqoda.lang.Oflwhlavqfexwmxzheqoderride public flwhlavqfexwmxzheqodoid onClick ( android.flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqod ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> @ jaflwhlavqfexwmxzheqoda.lang.Oflwhlavqfexwmxzheqoderride public flwhlavqfexwmxzheqodoid onClick ( android.flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqod ) { for ( int i = 0 ; i < ( children.priorSels.length ) ; i ++ ) { children.priorSels [ i ] = - 1 ; } children.priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { children.priorSels [ groupPosition ] = childPosition ; notifyItemChanged ( groupPosition ) ; }
fix_after_refactoring: @ jaflwhlavqfexwmxzheqoda.lang.Oflwhlavqfexwmxzheqoderride public flwhlavqfexwmxzheqodoid onClick ( android.flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqod ) { children.priorSels [ groupPosition ] = childPosition ; notifyItemChanged ( groupPosition ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { children. priorSels [ childPosition ] = 1 ; notifyItemChanged ( groupPosition ) ; }
× fix_prediction_after: @ jaflwhlavqfexwmxzheqoda.lang.Oflwhlavqfexwmxzheqoderride public flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqodiew.View flwhlavqfexwmxzheqod

line_index: 294
bug_before_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( project ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( project ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> fixed broken test in RemoteDebugWhenEditingRoutesFromJMXNavigatorIT
bug_after_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject twvantepvbazrolgngcu ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( twvantepvbazrolgngcu ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject twvantepvbazrolgngcu ) { java.util.List < org.apache.maven.model.Dependency > deps = org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getDependencyList ( twvantepvbazrolgngcu ) ; return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( deps ) ; } <s> fixed broken test in RemoteDebugWhenEditingRoutesFromJMXNavigatorIT
fix_before_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromMaven ( project , true ) ; }
fix_after_refactoring: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject twvantepvbazrolgngcu ) { return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromMaven ( twvantepvbazrolgngcu , true ) ; }
× fix_prediction_before: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject project ) { return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromDependencies ( project ) ; }
× fix_prediction_after: public static java.lang.String getCamelVersionFromMaven ( org.eclipse.core.resources.IProject twvantepvbazrolgngcu ) { return org.fusesource.ide.camel.model.service.core.util.CamelMavenUtils . getCamelVersionFromMaven ( twvantepvbazrolgngcu ) ; }

line_index: 295
bug_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( this . server ) ; dest . writeString ( this . email ) ; dest . writeValue ( this . is_shib ) ; dest . writeString ( this . token ) ; } <s> @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( this . server ) ; dest . writeString ( this . email ) ; dest . writeValue ( this . is_shib ) ; dest . writeString ( this . token ) ; } <s> fix  shibboleth  account  relogin  bug
bug_after_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel iozmuibxcddwzhjrnqpv , int xkxffehcxdpavyzabpgd ) { iozmuibxcddwzhjrnqpv . writeString ( this . server ) ; iozmuibxcddwzhjrnqpv . writeString ( this . email ) ; iozmuibxcddwzhjrnqpv . writeValue ( this . is_shib ) ; iozmuibxcddwzhjrnqpv . writeString ( this . token ) ; } <s> @ java.lang.Override public void writeToParcel ( android.os.Parcel iozmuibxcddwzhjrnqpv , int xkxffehcxdpavyzabpgd ) { iozmuibxcddwzhjrnqpv . writeString ( this . server ) ; iozmuibxcddwzhjrnqpv . writeString ( this . email ) ; iozmuibxcddwzhjrnqpv . writeValue ( this . is_shib ) ; iozmuibxcddwzhjrnqpv . writeString ( this . token ) ; } <s> fix  shibboleth  account  relogin  bug
fix_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel out , int flags ) { out . writeString ( this . server ) ; out . writeString ( this . email ) ; out . writeString ( this . token ) ; out . writeValue ( this . is_shib ) ; }
fix_after_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel out , int xkxffehcxdpavyzabpgd ) { out . writeString ( this . server ) ; out . writeString ( this . email ) ; out . writeString ( this . token ) ; out . writeValue ( this . is_shib ) ; }
× fix_prediction_before: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) {}
× fix_prediction_after: @ java.lang.Override public void writeToParcel ( android.os.Parcel iozmuibxcddwzhjrnqpv , int xkxffehcxdpavyzabpgd ) { iozmuibxcddwzhjrnqpv . writeString ( this . server ) ; iozmuibxcddwzhjrnqpv . writeString ( this . email ) ; iozmuibxcddwzhjrnqpv . writeValue ( this . token ) ; }

line_index: 296
bug_before_refactoring: public boolean contains ( T obj ) { if ( ! ( map . contains ( obj ) ) ) return false ; return bits . get ( map . getInt ( obj ) ) ; } <s> public boolean contains ( T obj ) { if ( ! ( map . contains ( obj ) ) ) return false ; return bits . get ( map . getInt ( obj ) ) ; } <s> fixed bug in ArrayPackedSet.complement
bug_after_refactoring: public boolean contains ( T mzkydyfdetozbixxnxcq ) { if ( ! ( map . contains ( mzkydyfdetozbixxnxcq ) ) ) return false ; return bits . get ( map . getInt ( mzkydyfdetozbixxnxcq ) ) ; } <s> public boolean contains ( T mzkydyfdetozbixxnxcq ) { if ( ! ( map . contains ( mzkydyfdetozbixxnxcq ) ) ) return false ; return bits . get ( map . getInt ( mzkydyfdetozbixxnxcq ) ) ; } <s> fixed bug in ArrayPackedSet.complement
fix_before_refactoring: @ java.lang.Override public boolean contains ( T obj ) { return ( map . contains ( obj ) ) && ( bits . get ( map . getInt ( obj ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean contains ( T mzkydyfdetozbixxnxcq ) { return ( map . contains ( mzkydyfdetozbixxnxcq ) ) && ( bits . get ( map . getInt ( mzkydyfdetozbixxnxcq ) ) ) ; }
× fix_prediction_before: public boolean contains ( T obj ) { if ( ! ( map . contains ( obj ) ) ) return false ; return bits . get ( map . getInt ( obj ) ) ; }
× fix_prediction_after: public boolean contains ( T mzkydyfdetozbixxnxcq ) { if ( ! ( map . contains ( mzkydyfdetozbixxnxcq ) ) ) return false ; return bits . get ( map . getInt ( mzkydyfdetozbixxnxcq ) ) ; }

line_index: 297
bug_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
bug_after_refactoring: public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; if ( ! ( isAdded () ) ) { return; } getActivity () . supportInvalidateOptionsMenu () ; } <s> Fix saved page status bugs  Change-Id: I595a19b722ad7a7764a3fe865bf232e91351f4df
fix_before_refactoring: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; }
fix_after_refactoring: public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; }
× fix_prediction_before: public void setSavedPageCheckComplete ( boolean complete ) { savedPageCheckComplete = complete ; getActivity () . supportInvalidateOptionsMenu () ; }
× fix_prediction_after: public void setSavedPageCheckComplete ( boolean kxhdaoumaqvaafkeiehf ) { savedPageCheckComplete = kxhdaoumaqvaafkeiehf ; getActivity () . supportInvalidateOptionsMenu () ; }

line_index: 298
bug_before_refactoring: @ java.lang.Override public void onSleep ( int duration ) { logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> @ java.lang.Override public void onSleep ( int duration ) { logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> Fixed bug in audio sensing
bug_after_refactoring: @ java.lang.Override public void onSleep ( int srwlpyudceourdogwllj ) { logInfo ( TAG , ( "Pausing sensor for " + srwlpyudceourdogwllj ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> @ java.lang.Override public void onSleep ( int srwlpyudceourdogwllj ) { logInfo ( TAG , ( "Pausing sensor for " + srwlpyudceourdogwllj ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } <s> Fixed bug in audio sensing
fix_before_refactoring: @ java.lang.Override public synchronized void onSleep ( int duration ) { stopSensingTask () ; logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void onSleep ( int srwlpyudceourdogwllj ) { stopSensingTask () ; logInfo ( TAG , ( "Pausing sensor for " + srwlpyudceourdogwllj ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; }
× fix_prediction_before: @ java.lang.Override public void onSleep ( int duration ) { logInfo ( TAG , ( "Pausing sensor for " + duration ) ) ; if ( ( getSensorEvent () ) != null ) { getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; } }
× fix_prediction_after: @ java.lang.Override public void onSleep ( int srwlpyudceourdogwllj ) { logInfo ( TAG , ( "Pausing sensor for " + ( srwlpyudceourdogwllj - 1 ) ) ) ; getSensorEvent () . onSensingPaused ( SensorUtils.SENSOR_TYPE_MICROPHONE ) ; stopSensingTask () ; }

line_index: 299
bug_before_refactoring: public void addNeutralProcess ( java.lang.Integer curActionValue ) { neutralProcess += curActionValue ; } <s> public void addNeutralProcess ( java.lang.Integer curActionValue ) { neutralProcess += curActionValue ; } <s> Enums and bugfixx of (-1)
bug_after_refactoring: public void addNeutralProcess ( java.lang.Integer wkhkjempdmyorypxgudw ) { neutralProcess += wkhkjempdmyorypxgudw ; } <s> public void addNeutralProcess ( java.lang.Integer wkhkjempdmyorypxgudw ) { neutralProcess += wkhkjempdmyorypxgudw ; } <s> Enums and bugfixx of (-1)
fix_before_refactoring: public void addNeutralProcess ( java.lang.Integer value ) { neutralProcess += value + 1 ; }
fix_after_refactoring: public void addNeutralProcess ( java.lang.Integer value ) { neutralProcess += value + 1 ; }
× fix_prediction_before: public void addNeutralProcess ( java.lang.Integer curActionValue ) { this . neutralProcess += curActionValue ; }
× fix_prediction_after: public void addNeutralProcess ( java.lang.Integer wkhkjempdmyorypxgudw ) { this . neutralProcess += wkhkjempdmyorypxgudw ; }

line_index: 300
bug_before_refactoring: public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; } <s> public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; } <s> Updates to iCalUtils and couple fo bug fixes with AppointmentManager   * Uses java.net.URI instead of commons-httpclient  URI  class  * iCalUtils  added functions for Multiple Appointment Parsing  for import and export to iCal
bug_after_refactoring: public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler kqbharrumtubqmegrfsn ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( kqbharrumtubqmegrfsn ) ; return setFormModelObject () ; } <s> public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler kqbharrumtubqmegrfsn ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( kqbharrumtubqmegrfsn ) ; return setFormModelObject () ; } <s> Updates to iCalUtils and couple fo bug fixes with AppointmentManager   * Uses java.net.URI instead of commons-httpclient  URI  class  * iCalUtils  added functions for Multiple Appointment Parsing  for import and export to iCal
fix_before_refactoring: private boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; return setFormModelObject () ; }
fix_after_refactoring: private boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler kqbharrumtubqmegrfsn ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( kqbharrumtubqmegrfsn ) ; return setFormModelObject () ; }
× fix_prediction_before: public void setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; setButtons ( target ) ; }
× fix_prediction_after: public boolean setCalendarList ( org.apache.wicket.core.request.handler.IPartialPageRequestHandler kqbharrumtubqmegrfsn ) { type = org.apache.openmeetings.web.user.calendar.CalendarDialog.DIALOG_TYPE.SYNC_CALENDAR ; org.apache.openmeetings.service.calendar.caldav.AppointmentManager appointmentManager = calendarPanel . getAppointmentManager () ; cals = appointmentManager . getCalendars () ; appointmentManager . createHttpClient () ; calIndex = 0 ; return setFormModelObject () ; }

line_index: 301
bug_before_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; return this ; } <s> @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; return this ; } <s> see #6301 - fix issues detected by the test   git-svn-id: http://josm.openstreetmap.de/svn/trunk@10021 0c6e7542-c601-0410-84e7-c038aed88b3b
bug_after_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable lngjdenbzuatdfddmzkh , java.lang.Object myitejkzslswicqueuzb , boolean lpnzfpmelosuygjnqkmb , boolean wpmmggapoxylivoujciq , int vlojpwusmuozlfncnlwg , int xqqjfmkxjctbazfbxsat ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( myitejkzslswicqueuzb ) ) , lpnzfpmelosuygjnqkmb ) ; return this ; } <s> @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable lngjdenbzuatdfddmzkh , java.lang.Object myitejkzslswicqueuzb , boolean lpnzfpmelosuygjnqkmb , boolean wpmmggapoxylivoujciq , int vlojpwusmuozlfncnlwg , int xqqjfmkxjctbazfbxsat ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( myitejkzslswicqueuzb ) ) , lpnzfpmelosuygjnqkmb ) ; return this ; } <s> see #6301 - fix issues detected by the test   git-svn-id: http://josm.openstreetmap.de/svn/trunk@10021 0c6e7542-c601-0410-84e7-c038aed88b3b
fix_before_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { if ( value != null ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( value ) ) , isSelected ) ; } return this ; }
fix_after_refactoring: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable lngjdenbzuatdfddmzkh , java.lang.Object myitejkzslswicqueuzb , boolean lpnzfpmelosuygjnqkmb , boolean wpmmggapoxylivoujciq , int vlojpwusmuozlfncnlwg , int xqqjfmkxjctbazfbxsat ) { if ( myitejkzslswicqueuzb != null ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( myitejkzslswicqueuzb ) ) , lpnzfpmelosuygjnqkmb ) ; } return this ; }
× fix_prediction_before: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable table , java.lang.Object value , boolean isSelected , boolean hasFocus , int row , int column ) { renderNode ( new org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ( value ) , isSelected ) ; return this ; }
× fix_prediction_after: @ java.lang.Override public java.awt.Component getTableCellRendererComponent ( javax.swing.JTable lngjdenbzuatdfddmzkh , java.lang.Object myitejkzslswicqueuzb , boolean lpnzfpmelosuygjnqkmb , booleanwpmmggapoxylivoujciq , int vlojpwusmuozlfncnlwg , int xqqjfmkxjctbazfbxsat ) { renderNode ( ( ( org.openstreetmap.josm.gui.history.TwoColumnDiff.Item ) ( myitejkzslswicqueuzb ) ) , lpnzfpmelosuygjnqkmb ) ; return this ; }

line_index: 302
bug_before_refactoring: public void setNasSelector ( java.lang.String nasSelector ) { this . nasSelector = nasSelector ; init () ; } <s> public void setNasSelector ( java.lang.String nasSelector ) { this . nasSelector = nasSelector ; init () ; } <s> fixed bug for setNasSelector
bug_after_refactoring: public void setNasSelector ( java.lang.String ivjwisppewbgitryhwrl ) { this . ivjwisppewbgitryhwrl = ivjwisppewbgitryhwrl ; init () ; } <s> public void setNasSelector ( java.lang.String ivjwisppewbgitryhwrl ) { this . ivjwisppewbgitryhwrl = ivjwisppewbgitryhwrl ; init () ; } <s> fixed bug for setNasSelector
fix_before_refactoring: public void setNasSelector ( java.lang.String nasSelector ) { if ( ! ( this . nasSelector . equals ( nasSelector ) ) ) { this . nasSelector = nasSelector ; init () ; } }
fix_after_refactoring: public void setNasSelector ( java.lang.String ivjwisppewbgitryhwrl ) { if ( ! ( this . ivjwisppewbgitryhwrl . equals ( ivjwisppewbgitryhwrl ) ) ) { this . ivjwisppewbgitryhwrl = ivjwisppewbgitryhwrl ; init () ; } }
× fix_prediction_before: public void setNasSelector ( java.lang.String nasSelector ) { this . nasSelector = nasSelector ; }
× fix_prediction_after: public void setNasSelector ( java.lang.String ivjwisppewbgitryhwrl ) { this . ivjwisppewbgitryhwrl = ivjwisppewbgitryhwrl ; init () ; }

line_index: 304
bug_before_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String stringifiedJSON , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , stringifiedJSON , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; } <s> Fix Executor queue bugs and fix save point method signatures
bug_after_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String qacurphyszfssxriejhw , java.lang.String guzyvfrjpfhsnoayfpwf , java.lang.String yuwpbricbculbvmhtmut , java.lang.String opyzdzhvrwdvkbovpjpw , java.lang.String inojzlgggupjchjagcdn , java.lang.Boolean hiqslfkuuqjxnxjksvvn ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , qacurphyszfssxriejhw , guzyvfrjpfhsnoayfpwf , yuwpbricbculbvmhtmut , opyzdzhvrwdvkbovpjpw , inojzlgggupjchjagcdn , hiqslfkuuqjxnxjksvvn ) ; queueRequest ( request ) ; } <s> public void saveCheckpointAsIncomplete ( java.lang.String qacurphyszfssxriejhw , java.lang.String guzyvfrjpfhsnoayfpwf , java.lang.String yuwpbricbculbvmhtmut , java.lang.String opyzdzhvrwdvkbovpjpw , java.lang.String inojzlgggupjchjagcdn , java.lang.Boolean hiqslfkuuqjxnxjksvvn ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , qacurphyszfssxriejhw , guzyvfrjpfhsnoayfpwf , yuwpbricbculbvmhtmut , opyzdzhvrwdvkbovpjpw , inojzlgggupjchjagcdn , hiqslfkuuqjxnxjksvvn ) ; queueRequest ( request ) ; } <s> Fix Executor queue bugs and fix save point method signatures
fix_before_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; }
fix_after_refactoring: public void saveCheckpointAsIncomplete ( java.lang.String qacurphyszfssxriejhw , java.lang.String yuwpbricbculbvmhtmut , java.lang.String opyzdzhvrwdvkbovpjpw , java.lang.String inojzlgggupjchjagcdn , java.lang.Boolean hiqslfkuuqjxnxjksvvn ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( ExecutorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , qacurphyszfssxriejhw , yuwpbricbculbvmhtmut , opyzdzhvrwdvkbovpjpw , inojzlgggupjchjagcdn , hiqslfkuuqjxnxjksvvn ) ; queueRequest ( request ) ; }
× fix_prediction_before: public void saveCheckpointAsIncomplete ( java.lang.String tableId , java.lang.String rowId , java.lang.String callbackJSON , java.lang.String transId , java.lang.Boolean leaveTransactionOpen ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( executorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , tableId , rowId , callbackJSON , transId , leaveTransactionOpen ) ; queueRequest ( request ) ; }
× fix_prediction_after: public void saveCheckpointAsIncomplete ( java.lang.String qacurphyszfssxriejhw , java.lang.String guzyvfrjpfhsnoayfpwf , java.lang.String yuwpbricbculbvmhtmut , java.lang.String opyzdzhvrwdvkbovpjpw , java.lang.String inojzlgggupjchjagcdn , java.lang.Boolean hiqslfkuuqjxnxjksvvn ) { org.opendatakit.common.android.views.ExecutorRequest request = new org.opendatakit.common.android.views.ExecutorRequest ( executorRequestType.USER_TABLE_SAVE_CHECKPOINT_AS_INCOMPLETE , qacurphyszfssxriejhw , guzyvfrjpfhsnoayfpwf , yuwpbricbculbvmhtmut , opyzdzhvrwdvkbovpjpw , inojzlgggupjchjagcdn , hiqslfkuuqjxnxjksvvn ) ; queueRequest ( request ) ; }

line_index: 306
bug_before_refactoring: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( org.bukkit.event.block.BlockGrowEvent e ) { return new ch.njol.skript.util.BlockStateBlock ( e . getBlock () . getState () , true ) ; } <s> @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( org.bukkit.event.block.BlockGrowEvent e ) { return new ch.njol.skript.util.BlockStateBlock ( e . getBlock () . getState () , true ) ; } <s> Finally fix grow event for all (+parser bug causing it to not work)  Fix smaller bug with grow event
bug_after_refactoring: @ java.lang.Ovljvhvzfdbthdivjeucpvrridljvhvzfdbthdivjeucpv @ org.ljvhvzfdbthdivjeucpvclipsljvhvzfdbthdivjeucpv.jdt.annotation.Nullablljvhvzfdbthdivjeucpv public org.bukkit.block.Block gljvhvzfdbthdivjeucpvt ( org.bukkit.ljvhvzfdbthdivjeucpvvljvhvzfdbthdivjeucpvnt.block.BlockGrowEvljvhvzfdbthdivjeucpvnt ljvhvzfdbthdivjeucpv ) { rljvhvzfdbthdivjeucpvturn nljvhvzfdbthdivjeucpvw ch.njol.skript.util.BlockStatljvhvzfdbthdivjeucpvBlock ( ljvhvzfdbthdivjeucpv . gljvhvzfdbthdivjeucpvtBlock () . gljvhvzfdbthdivjeucpvtStatljvhvzfdbthdivjeucpv () , truljvhvzfdbthdivjeucpv ) ; } <s> @ java.lang.Ovljvhvzfdbthdivjeucpvrridljvhvzfdbthdivjeucpv @ org.ljvhvzfdbthdivjeucpvclipsljvhvzfdbthdivjeucpv.jdt.annotation.Nullablljvhvzfdbthdivjeucpv public org.bukkit.block.Block gljvhvzfdbthdivjeucpvt ( org.bukkit.ljvhvzfdbthdivjeucpvvljvhvzfdbthdivjeucpvnt.block.BlockGrowEvljvhvzfdbthdivjeucpvnt ljvhvzfdbthdivjeucpv ) { rljvhvzfdbthdivjeucpvturn nljvhvzfdbthdivjeucpvw ch.njol.skript.util.BlockStatljvhvzfdbthdivjeucpvBlock ( ljvhvzfdbthdivjeucpv . gljvhvzfdbthdivjeucpvtBlock () . gljvhvzfdbthdivjeucpvtStatljvhvzfdbthdivjeucpv () , truljvhvzfdbthdivjeucpv ) ; } <s> Finally fix grow event for all (+parser bug causing it to not work)  Fix smaller bug with grow event
fix_before_refactoring: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( final org.bukkit.event.block.BlockGrowEvent e ) { return e . getBlock () ; }
fix_after_refactoring: @ java.lang.Ovljvhvzfdbthdivjeucpvrridljvhvzfdbthdivjeucpv @ org.ljvhvzfdbthdivjeucpvclipsljvhvzfdbthdivjeucpv.jdt.annotation.Nullablljvhvzfdbthdivjeucpv public org.bukkit.block.Block gljvhvzfdbthdivjeucpvt ( final org.bukkit.ljvhvzfdbthdivjeucpvvljvhvzfdbthdivjeucpvnt.block.BlockGrowEvljvhvzfdbthdivjeucpvnt ljvhvzfdbthdivjeucpv ) { rljvhvzfdbthdivjeucpvturn ljvhvzfdbthdivjeucpv . gljvhvzfdbthdivjeucpvtBlock () ; }
× fix_prediction_before: @ java.lang.Override @ org.eclipse.jdt.annotation.Nullable public org.bukkit.block.Block get ( org.bukkit.event.block.BlockGrowEvent e ) { return null ; }
× fix_prediction_after: @ java.lang.Ovljvhvzfdbthdivjeucpvrridljvhvzfdbthdivjeucpv @ org.ljvhvzfdbthdivjeucpvclipsljvhvzfdbthdivjeucpv.jdt.annotation.Nullablljvhvzfdbthdivjeucpv public org.bukkit.block.Block gljvhvzfdbthdivjeucpvt ( org.bukkit.ljvhvzfdbthdivjeucpvvljvhvzfdbthdivjeucpvnt.block.BlockGrowEvljvhvzfdbthdivjeucpvnt ljvhvzfdbthdivjeucpv ) { rljvhvzfdbthdivjeucpvturn nljvhvzfdbthdivjeucpvzfdbthdivjeucpv.jdt.annotation.NullablljvhvzfdbthdivjeucpvBlock ( ljvhvzfdbthdivjeucpv . gljvhvzfdbthdivjeucpvtBlock () . gljvhvzfdbthdivjeucpvt ( truljvhvzfdbthdivjeucpv ) ; return this ; }

line_index: 308
bug_before_refactoring: public static void warning ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( message , false ) ; } <s> public static void warning ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( message , false ) ; } <s> Fixed issues with commandblocker Fixed incorrect level for TFM_Log
bug_after_refactoring: public static void warning ( java.lang.String gnkxukhgbwyqkmiepptm ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( gnkxukhgbwyqkmiepptm , false ) ; } <s> public static void warning ( java.lang.String gnkxukhgbwyqkmiepptm ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( gnkxukhgbwyqkmiepptm , false ) ; } <s> Fixed issues with commandblocker Fixed incorrect level for TFM_Log
fix_before_refactoring: public static void warning ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . warning ( message , false ) ; }
fix_after_refactoring: public static void warning ( java.lang.String gnkxukhgbwyqkmiepptm ) { me.StevenLawson.TotalFreedomMod.TFM_Log . warning ( gnkxukhgbwyqkmiepptm , false ) ; }
× fix_prediction_before: public static void info ( java.lang.String message ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( message , false ) ; }
× fix_prediction_after: public static void info ( java.lang.String gnkxukhgbwyqkmiepptm ) { me.StevenLawson.TotalFreedomMod.TFM_Log . info ( gnkxukhgbwyqkmiepptm , true ) ; }

line_index: 309
bug_before_refactoring: public void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } } } <s> public void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } } } <s> Attempt to fix issue #4
bug_after_refactoring: public void start ( de.mickare.xserver.ServerThreadPoolExecutor ihfqyppoyslyxprbcpab ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( ihfqyppoyslyxprbcpab . runServerTask ( this ) ) ; } } } <s> public void start ( de.mickare.xserver.ServerThreadPoolExecutor ihfqyppoyslyxprbcpab ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( ihfqyppoyslyxprbcpab . runServerTask ( this ) ) ; } } } <s> Attempt to fix issue #4
fix_before_refactoring: public synchronized void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } }
fix_after_refactoring: public synchronized void start ( de.mickare.xserver.ServerThreadPoolExecutor ihfqyppoyslyxprbcpab ) { if ( ( task . get () ) == null ) { task . set ( ihfqyppoyslyxprbcpab . runServerTask ( this ) ) ; } }
× fix_prediction_before: public void start ( de.mickare.xserver.ServerThreadPoolExecutor stpool ) { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( stpool . runServerTask ( this ) ) ; } } }
× fix_prediction_after: public void start () { synchronized ( task ) { if ( ( task . get () ) == null ) { task . set ( ihfqyppoyslyxprbcpab . runServerTask ( this ) ) ; } } }

line_index: 313
bug_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
bug_after_refactoring: private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } } } <s> private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } } } <s> Modified MultiAsyncToSync class to fix a timing issue.
fix_before_refactoring: private void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } }
fix_after_refactoring: private void addSleeper ( final long rsnpzqwarwlqggrbnebc , final org.apache.reef.util.ComplexCondition viflsxkczffrqtjqhgmb ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc , viflsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } }
× fix_prediction_before: protected void addSleeper ( final long identifier , final org.apache.reef.util.ComplexCondition call ) { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( identifier , call ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate identifier [%d] in sleeper map" , identifier ) ) ; } } }
× fix_prediction_after: private void addSleeper () { synchronized ( sleeperMap ) { if ( ( sleeperMap . put ( rsnpzqwarwlqggrbnebc ,hyperlsxkczffrqtjqhgmb ) ) != null ) { throw new java.lang.RuntimeException ( java.lang.String . format ( "Duplicate rsnpzqwarwlqggrbnebc [%d] in sleeper map" , rsnpzqwarwlqggrbnebc ) ) ; } } }

line_index: 314
bug_before_refactoring: private double travelledHorizontalDistance ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> private double travelledHorizontalDistance ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; } <s> slime movement and slime vs slime school exchange added. fixed movement from mazub (very small bugg that allowed to move too fast)
bug_after_refactoring: private double travelledHorizontalDistance ( double bzicmdlqqxezsqlximza , int bnfvueocgyisbafiylop ) { return ( ( this . getHorizontalVelocity () ) * bzicmdlqqxezsqlximza ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( bzicmdlqqxezsqlximza , 2 ) ) ) / 2 ) ; } <s> private double travelledHorizontalDistance ( double bzicmdlqqxezsqlximza , int bnfvueocgyisbafiylop ) { return ( ( this . getHorizontalVelocity () ) * bzicmdlqqxezsqlximza ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( bzicmdlqqxezsqlximza , 2 ) ) ) / 2 ) ; } <s> slime movement and slime vs slime school exchange added. fixed movement from mazub (very small bugg that allowed to move too fast)
fix_before_refactoring: private double travelledHorizontalDistance ( double dt ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ) ; }
fix_after_refactoring: private double travelledHorizontalDistance ( double bzicmdlqqxezsqlximza ) { return ( ( this . getHorizontalVelocity () ) * bzicmdlqqxezsqlximza ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( bzicmdlqqxezsqlximza , 2 ) ) ) / 2 ) ; }
× fix_prediction_before: public double travelledHorizontalDistance ( double dt , int dirSign ) { return ( ( this . getHorizontalVelocity () ) * dt ) + ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( dt , 2 ) ) ) / 2 ; }
× fix_prediction_after: public double travelledHorizontalDistance ( double bzicmdlqqxezsqlximza , int bnfvueocgyisbafiylop ) { return ( ( this . getHorizontalVelocity () ) * bzicmdlqqxezsqlximza ) + ( ( ( this . getHorizontalAcceleration () ) * ( java.lang.Math . pow ( bzicmdlqqxezsqlximza , 2 ) ) ) / 2 ) ; }

line_index: 315
bug_before_refactoring: public void setStartTime ( java.util.Date startTime ) { this . mStartTime = startTime ; } <s> public void setStartTime ( java.util.Date startTime ) { this . mStartTime = startTime ; } <s> BTAND - 1 - Fixed db retrieval issue
bug_after_refactoring: public void setStartTime ( java.util.Date ianfaxfgwljnzagevjfg ) { this . mStartTime = ianfaxfgwljnzagevjfg ; } <s> public void setStartTime ( java.util.Date ianfaxfgwljnzagevjfg ) { this . mStartTime = ianfaxfgwljnzagevjfg ; } <s> BTAND - 1 - Fixed db retrieval issue
fix_before_refactoring: public void setStartTime ( java.util.Date startTime ) { this . startTime = startTime ; }
fix_after_refactoring: public void setStartTime ( java.util.Date ianfaxfgwljnzagevjfg ) { this . ianfaxfgwljnzagevjfg = ianfaxfgwljnzagevjfg ; }
× fix_prediction_before: public void setStartTime ( java.util.Date startTime ) { mStartTime = startTime ; }
× fix_prediction_after: public void setStartTime ( java.util.Date startTime ) { this . mStartTime = startTime ; }

line_index: 316
bug_before_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , options , promise ) ; } <s> @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , options , promise ) ; } <s> [firestore][android] Resolve a few issues with basic operations
bug_after_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String mltxpfgskplmkonkurxl , java.lang.String drmchalnalwazxouagho , com.facebook.react.bridge.ReadableMap sapmfizmpbdfmadgyaja , com.facebook.react.bridge.ReadableMap iucubmmgqpzbfyrrmjum , final com.facebook.react.bridge.Promise lkgsesuteptckjmjkosc ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( mltxpfgskplmkonkurxl , drmchalnalwazxouagho ) ; ref . update ( sapmfizmpbdfmadgyaja , iucubmmgqpzbfyrrmjum , lkgsesuteptckjmjkosc ) ; } <s> @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String mltxpfgskplmkonkurxl , java.lang.String drmchalnalwazxouagho , com.facebook.react.bridge.ReadableMap sapmfizmpbdfmadgyaja , com.facebook.react.bridge.ReadableMap iucubmmgqpzbfyrrmjum , final com.facebook.react.bridge.Promise lkgsesuteptckjmjkosc ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( mltxpfgskplmkonkurxl , drmchalnalwazxouagho ) ; ref . update ( sapmfizmpbdfmadgyaja , iucubmmgqpzbfyrrmjum , lkgsesuteptckjmjkosc ) ; } <s> [firestore][android] Resolve a few issues with basic operations
fix_before_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , final com.facebook.react.bridge.Promise promise ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , promise ) ; }
fix_after_refactoring: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String mltxpfgskplmkonkurxl , java.lang.String drmchalnalwazxouagho , com.facebook.react.bridge.ReadableMap sapmfizmpbdfmadgyaja , final com.facebook.react.bridge.Promise lkgsesuteptckjmjkosc ) { io.invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( mltxpfgskplmkonkurxl , drmchalnalwazxouagho ) ; ref . update ( sapmfizmpbdfmadgyaja , lkgsesuteptckjmjkosc ) ; }
× fix_prediction_before: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String appName , java.lang.String path , com.facebook.react.bridge.ReadableMap data , com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { io. invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( appName , path ) ; ref . update ( data , options , promise ) ; }
× fix_prediction_after: @ com.facebook.react.bridge.ReactMethod public void documentUpdate ( java.lang.String mltxpfgskplmkonkurxl , java.lang.String drmchalnalwazxouagho , com.facebook.react.bridge.ReadableMap sapmfizmpbdfmadgyaja , com.facebook.react.bridge.Promise lkgsesuteptckjmjkosc ) { io. invertase.firebase.firestore.RNFirebaseDocumentReference ref = getDocumentForAppPath ( mltxpfgskplmkonkurxl , drmchalnalwazxouagho ) ; ref . update ( sapmfizmpbdfmadgyaja , iucubmmgqpzbfyrrmjum , lkgsesuteptckjmjkosc ) ; }

line_index: 317
bug_before_refactoring: private void validateAuthMode ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> private void validateAuthMode ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> fix bug
bug_after_refactoring: private void validateAuthMode ( java.lang.String wuhvbpugqsxaryjbsqes ) { if ( wuhvbpugqsxaryjbsqes . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> private void validateAuthMode ( java.lang.String wuhvbpugqsxaryjbsqes ) { if ( wuhvbpugqsxaryjbsqes . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } } <s> fix bug
fix_before_refactoring: private void validateAuthMode ( java.lang.String modeToAdd ) { if ( modeToAdd . equals ( ProvidersType.oidc . name () ) ) { ensureNoAuthnProvider () ; } else { ensureNoIDPProvider () ; } }
fix_after_refactoring: private void validateAuthMode ( java.lang.String wuhvbpugqsxaryjbsqes ) { if ( wuhvbpugqsxaryjbsqes . equals ( ProvidersType.oidc . name () ) ) { ensureNoAuthnProvider () ; } else { ensureNoIDPProvider () ; } }
× fix_prediction_before: private void validateAuthMode ( java.lang.String modeToAdd ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; }
× fix_prediction_after: protected void validateAuthMode ( java.lang.String wuhvbpugqsxaryjbsqes ) { if ( wuhvbpugqsxaryjbsqes . equals ( ProvidersType.oidc ) ) { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its oidc provider" ) ; ensureNoAuthnProvider () ; } else { com.emc.storageos.api.service.impl.resource.AuthnConfigurationService._log . info ( "its normal provider" ) ; ensureNoIDPProvider () ; } }

line_index: 318
bug_before_refactoring: @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { if ( level == 1 ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } } } <s> @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { if ( level == 1 ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } } } <s> Final overview + bug fix on volley 2.
bug_after_refactoring: @ java.lang.Ovtsftibjqaizctvrtrcdyrridtsftibjqaizctvrtrcdy public void tsftibjqaizctvrtrcdyfftsftibjqaizctvrtrcdyct ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.Evtsftibjqaizctvrtrcdynt tsftibjqaizctvrtrcdy , org.bukkit.invtsftibjqaizctvrtrcdyntory.IttsftibjqaizctvrtrcdymStack ittsftibjqaizctvrtrcdym , int ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) { if ( tsftibjqaizctvrtrcdy instanctsftibjqaizctvrtrcdyof org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) { if ( ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl == 1 ) { volltsftibjqaizctvrtrcdyy ( ( ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) ( tsftibjqaizctvrtrcdy ) ) , ittsftibjqaizctvrtrcdym , ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) ; } } } <s> @ java.lang.Ovtsftibjqaizctvrtrcdyrridtsftibjqaizctvrtrcdy public void tsftibjqaizctvrtrcdyfftsftibjqaizctvrtrcdyct ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.Evtsftibjqaizctvrtrcdynt tsftibjqaizctvrtrcdy , org.bukkit.invtsftibjqaizctvrtrcdyntory.IttsftibjqaizctvrtrcdymStack ittsftibjqaizctvrtrcdym , int ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) { if ( tsftibjqaizctvrtrcdy instanctsftibjqaizctvrtrcdyof org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) { if ( ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl == 1 ) { volltsftibjqaizctvrtrcdyy ( ( ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) ( tsftibjqaizctvrtrcdy ) ) , ittsftibjqaizctvrtrcdym , ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) ; } } } <s> Final overview + bug fix on volley 2.
fix_before_refactoring: @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { if ( e instanceof org.bukkit.event.entity.EntityShootBowEvent ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; } }
fix_after_refactoring: @ java.lang.Ovtsftibjqaizctvrtrcdyrridtsftibjqaizctvrtrcdy public void tsftibjqaizctvrtrcdyfftsftibjqaizctvrtrcdyct ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.Evtsftibjqaizctvrtrcdynt tsftibjqaizctvrtrcdy , org.bukkit.invtsftibjqaizctvrtrcdyntory.IttsftibjqaizctvrtrcdymStack ittsftibjqaizctvrtrcdym , int ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) { if ( tsftibjqaizctvrtrcdy instanctsftibjqaizctvrtrcdyof org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) { volltsftibjqaizctvrtrcdyy ( ( ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) ( tsftibjqaizctvrtrcdy ) ) , ittsftibjqaizctvrtrcdym , ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdyl ) ; } }
× fix_prediction_before: @ java.lang.Override public void effect ( org.bukkit.event.Event e , org.bukkit.inventory.ItemStack item , int level ) { volley ( ( ( org.bukkit.event.entity.EntityShootBowEvent ) ( e ) ) , item , level ) ; }
× fix_prediction_after: protected void tsftibjqaizctvrtrcdyrridtsftibjqaizctvrtrcdy public void tsftibjqaizctvrtrcdyfftsftibjqaizctvrtrcdyct ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.Evtsftibjqaizctvrtrcdynt tsftibjqaizctvrtrcdy , org.bukkit.invtsftibjqaizctvrtrcdyntory.IttsftibjqaizctvrtrcdymStack ittsftibjqaizctvrtrcdym , int ltsftibjqaizctvrtrcdytsftibjqaizctvrtrcdyl ) { if ( tsftibjqaizctvrtrcdy instanctsftibjqaizctvrtrcdyof org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyntity.EntityShootBowEvtsftibjqaizctvrtrcdynt ) { if ( ltsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdy == 1 ) { voltsftibjqaizctvrtrcdyy ( ( ( ( org.bukkit.tsftibjqaizctvrtrcdyvtsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdynt.tsftibjqaizctvrtrcdyContract.EntityShootBowEvtsftibjqaizctvrtrcdynt ) ( tsftibjqaizctvrtrcdy ) , ittsftibjqaizctvrtrcdy ) ; } }

line_index: 320
bug_before_refactoring: public void set ( org.nutz.dao.entity.Entity < ? > en ) { this . map . put ( en . getType () , en ) ; } <s> public void set ( org.nutz.dao.entity.Entity < ? > en ) { this . map . put ( en . getType () , en ) ; } <s> fix issue #943 好像加上同步也没啥不好
bug_after_refactoring: public void set ( org.nutz.dao.vssrrclmyjylpbnyznnitity.Entity < ? > vssrrclmyjylpbnyznni ) { this . map . put ( vssrrclmyjylpbnyznni . getType () , vssrrclmyjylpbnyznni ) ; } <s> public void set ( org.nutz.dao.vssrrclmyjylpbnyznnitity.Entity < ? > vssrrclmyjylpbnyznni ) { this . map . put ( vssrrclmyjylpbnyznni . getType () , vssrrclmyjylpbnyznni ) ; } <s> fix issue #943 好像加上同步也没啥不好
fix_before_refactoring: public void set ( org.nutz.dao.entity.Entity < ? > en ) { synchronized ( map ) { this . map . put ( en . getType () , en ) ; } }
fix_after_refactoring: public void set ( org.nutz.dao.vssrrclmyjylpbnyznnitity.Entity < ? > vssrrclmyjylpbnyznni ) { synchronized ( map ) { this . map . put ( vssrrclmyjylpbnyznni . getType () , vssrrclmyjylpbnyznni ) ; } }
× fix_prediction_before: public void set ( org.nutz.dao.entity.Entity < ? > en ) { map . put ( en . getType () , en ) ; }
× fix_prediction_after: public void set ( org.nutz.dao.vssrrclmyjylpbnyznnitity.Entity < ? > vssrrclmyjylpbnyznni ) { map . put ( vssrrclmyjylpbnyznni . getType () , vssrrclmyjylpbnyznni ) ; }

line_index: 321
bug_before_refactoring: void onDeleteChosenSpell ( int position , fr.enlight.anima.cardmodel.model.spells.Spell spell ) ; <s> void onDeleteChosenSpell ( int position , fr.enlight.anima.cardmodel.model.spells.Spell spell ) ; <s> Merge branch 'dev' into bugfix/freeaccessspells  # Conflicts: #	app/src/main/java/fr/enlight/anima/animamagiccards/ui/witchspells/viewmodels/chosenspell/WitchspellsChosenSpellViewModel.java
bug_after_refactoring: void onDeleteChosenSpell ( int vekfrqpfrjpjmlienfkm , fr.enlight.anima.cardmodel.model.wtmiqtbesurcpsqdtmvzs.Spell wtmiqtbesurcpsqdtmvz ) ; <s> void onDeleteChosenSpell ( int vekfrqpfrjpjmlienfkm , fr.enlight.anima.cardmodel.model.wtmiqtbesurcpsqdtmvzs.Spell wtmiqtbesurcpsqdtmvz ) ; <s> Merge branch 'dev' into bugfix/freeaccessspells  # Conflicts: #	app/src/main/java/fr/enlight/anima/animamagiccards/ui/witchspells/viewmodels/chosenspell/WitchspellsChosenSpellViewModel.java
fix_before_refactoring: void onDeleteChosenSpell ( fr.enlight.anima.cardmodel.model.spells.Spell spell ) ;
fix_after_refactoring: void onDeleteChosenSpell ( fr.enlight.anima.cardmodel.model.wtmiqtbesurcpsqdtmvzs.Spell wtmiqtbesurcpsqdtmvz ) ;
× fix_prediction_before: void onDeleteChosenSpell ( int position , fr.enlight.anima.cardmodel.model.spells.Spell spell ) ;
× fix_prediction_after: void onDeleteChosenSpell ( int vekfrqpfrjpjmlienfkm , fr.enlight.anima.cardmodel.model.wtmiqtbesurcpsqdtmvzs.Spellwtmiqtbesurcpsqdtmvz ) ;

line_index: 322
bug_before_refactoring: public static void addData ( java.lang.String result ) { data.ResultData.stringBuilder . append ( result ) ; } <s> public static void addData ( java.lang.String result ) { data.ResultData.stringBuilder . append ( result ) ; } <s> fixed bug
bug_after_refactoring: public static void addData ( java.lang.String izdbkffhdbpxojctakwi ) { data.ResultData.stringBuilder . append ( izdbkffhdbpxojctakwi ) ; } <s> public static void addData ( java.lang.String izdbkffhdbpxojctakwi ) { data.ResultData.stringBuilder . append ( izdbkffhdbpxojctakwi ) ; } <s> fixed bug
fix_before_refactoring: public void addData ( java.lang.String result ) { stringBuilder . append ( result ) ; }
fix_after_refactoring: public void addData ( java.lang.String izdbkffhdbpxojctakwi ) { stringBuilder . append ( izdbkffhdbpxojctakwi ) ; }
× fix_prediction_before: public void addData ( java.lang.String result ) { data.ResultData.stringBuilder . append ( result ) ; }
× fix_prediction_after: public static void addData ( int izdbkffhdbpxojctakwi ) { data.ResultData.stringBuilder . append ( izdbkffhdbpxojctakwi ) ; }

line_index: 323
bug_before_refactoring: public java.lang.String parseMessage ( java.lang.String message , java.util.Date date ) { return message + "seconds.toString()" ; } <s> public java.lang.String parseMessage ( java.lang.String message , java.util.Date date ) { return message + "seconds.toString()" ; } <s> Fixed and simplified date parsing. Fixed bug where dates in the past would still create reminders
bug_after_refactoring: public java.lang.String parseMessage ( java.lang.String bdrbyxstbucvilqixojk , java.util.Date lgcttilrwuuflzfngcpe ) { return bdrbyxstbucvilqixojk + "seconds.toString()" ; } <s> public java.lang.String parseMessage ( java.lang.String bdrbyxstbucvilqixojk , java.util.Date lgcttilrwuuflzfngcpe ) { return bdrbyxstbucvilqixojk + "seconds.toString()" ; } <s> Fixed and simplified date parsing. Fixed bug where dates in the past would still create reminders
fix_before_refactoring: private java.lang.String parseMessage ( java.lang.String message , java.util.Date date ) { return message + ( date . toString () ) ; }
fix_after_refactoring: private java.lang.String parseMessage ( java.lang.String bdrbyxstbucvilqixojk , java.util.Date lgcttilrwuuflzfngcpe ) { return bdrbyxstbucvilqixojk + ( lgcttilrwuuflzfngcpe . toString () ) ; }
× fix_prediction_before: public java.lang.String parseMessage ( java.lang.String message ) { return message + "seconds.toString()" ; }
× fix_prediction_after: public java.lang.String parseMessage ( java.lang.String bdrbyxstbucvilqixojk ) { return bdrbyxstbucvilqixojk + "seconds.toString()" ; }

line_index: 326
bug_before_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(id, name, price) VALUES(#{id}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ; <s> @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(id, name, price) VALUES(#{id}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ; <s> Fix locations in ConfigurationProperties deprecated issue
bug_after_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(rezrixawmrczrishrqmc, ixyowgzdbldilqphvulo, qiqbnmivpziwsnqdblch) VALUES(#{rezrixawmrczrishrqmc}, #{ixyowgzdbldilqphvulo}, #{qiqbnmivpziwsnqdblch})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "rezrixawmrczrishrqmc" ) java.lang.String rezrixawmrczrishrqmc , @ org.apache.ibatis.annotations.Param ( value = "ixyowgzdbldilqphvulo" ) java.lang.String ixyowgzdbldilqphvulo , @ org.apache.ibatis.annotations.Param ( value = "qiqbnmivpziwsnqdblch" ) float qiqbnmivpziwsnqdblch ) ; <s> @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(rezrixawmrczrishrqmc, ixyowgzdbldilqphvulo, qiqbnmivpziwsnqdblch) VALUES(#{rezrixawmrczrishrqmc}, #{ixyowgzdbldilqphvulo}, #{qiqbnmivpziwsnqdblch})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "rezrixawmrczrishrqmc" ) java.lang.String rezrixawmrczrishrqmc , @ org.apache.ibatis.annotations.Param ( value = "ixyowgzdbldilqphvulo" ) java.lang.String ixyowgzdbldilqphvulo , @ org.apache.ibatis.annotations.Param ( value = "qiqbnmivpziwsnqdblch" ) float qiqbnmivpziwsnqdblch ) ; <s> Fix locations in ConfigurationProperties deprecated issue
fix_before_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(num, name, price) VALUES(#{num}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "num" ) java.lang.String num , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price ) ;
fix_after_refactoring: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(num, ixyowgzdbldilqphvulo, qiqbnmivpziwsnqdblch) VALUES(#{num}, #{ixyowgzdbldilqphvulo}, #{qiqbnmivpziwsnqdblch})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "num" ) java.lang.String num , @ org.apache.ibatis.annotations.Param ( value = "ixyowgzdbldilqphvulo" ) java.lang.String ixyowgzdbldilqphvulo , @ org.apache.ibatis.annotations.Param ( value = "qiqbnmivpziwsnqdblch" ) float qiqbnmivpziwsnqdblch ) ;
× fix_prediction_before: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(id, name, price) VALUES(#{id}, #{name}, #{price})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "id" ) java.lang.String id , @ org.apache.ibatis.annotations.Param ( value = "name" ) java.lang.String name , @ org.apache.ibatis.annotations.Param ( value = "price" ) float price , @ org.apache.ibatis.annotations.Param ( value = " price" ) java.lang.String price ) ;
× fix_prediction_after: @ org.apache.ibatis.annotations.Insert ( value = "INSERT INTO tb_stock(rezrixawmrczrishrqmc, ixyowgzdbldilqphvulo, qiqbnmivpziwsnqdblch) VALUES(#{rezrixawmrczrishrqmc}, #{ixyowgzdbldilqphvulo}, #{qiqbnmivpziwsnqdblch})" ) public int insertStock ( @ org.apache.ibatis.annotations.Param ( value = "rezrixawmrczrishrqmc" ) java.lang.String rezrixawmrczrishrqmc , @ org.apache.ibatis.annotations.Param ( value = "ixyowgzdbldilqphvulo" ) java.lang.String ixyowgzdbldilqphvulo , @ org.apache.ibatis.annotations.Param ( value = "qiqbnmivpziwsnqdblch" ) float qiqbnmivpziwsnqdblch ) ;

line_index: 327
bug_before_refactoring: private java.lang.String getPrettyJson ( java.lang.String json ) { return ( json != null ) && ( ! ( json . isEmpty () ) ) ? gson . toJson ( jsonParser . parse ( json ) ) : "" ; } <s> private java.lang.String getPrettyJson ( java.lang.String json ) { return ( json != null ) && ( ! ( json . isEmpty () ) ) ? gson . toJson ( jsonParser . parse ( json ) ) : "" ; } <s> bug fix: path with array operator
bug_after_refactoring: private java.lang.String getPrettyJson ( java.lang.String ahxxedkqnsrgdrovqmuc ) { return ( ahxxedkqnsrgdrovqmuc != null ) && ( ! ( ahxxedkqnsrgdrovqmuc . isEmpty () ) ) ? gson . toJson ( ahxxedkqnsrgdrovqmucParser . parse ( ahxxedkqnsrgdrovqmuc ) ) : "" ; } <s> private java.lang.String getPrettyJson ( java.lang.String ahxxedkqnsrgdrovqmuc ) { return ( ahxxedkqnsrgdrovqmuc != null ) && ( ! ( ahxxedkqnsrgdrovqmuc . isEmpty () ) ) ? gson . toJson ( ahxxedkqnsrgdrovqmucParser . parse ( ahxxedkqnsrgdrovqmuc ) ) : "" ; } <s> bug fix: path with array operator
fix_before_refactoring: private java.lang.String getPrettyJson ( java.lang.Object json ) { return json != null ? json instanceof java.lang.String ? gson . toJson ( jsonParser . parse ( json . toString () ) ) : gson . toJson ( json , json . getClass () ) : "" ; }
fix_after_refactoring: private java.lang.String getPrettyJson ( java.lang.Object ahxxedkqnsrgdrovqmuc ) { return ahxxedkqnsrgdrovqmuc != null ? ahxxedkqnsrgdrovqmuc instanceof java.lang.String ? gson . toJson ( ahxxedkqnsrgdrovqmucParser . parse ( ahxxedkqnsrgdrovqmuc . toString () ) ) : gson . toJson ( ahxxedkqnsrgdrovqmuc , ahxxedkqnsrgdrovqmuc . getClass () ) : "" ; }
× fix_prediction_before: private java.lang.String getPrettyJson ( java.lang.String json ) { return ( json != null ) && ( ! ( json . isEmpty () ) ) ? gson . toJson ( jsonParser . parse ( json ) ) : "" ; }
× fix_prediction_after: public java.lang.String getPrettyJson ( java.lang.String ahxxedkqnsrgdrovqmuc ) { return ( ahxxedkqnsrgdrovqmuc != null ) && ( ! ( ahxxedkqnsrgdrovqmuc . isEmpty () ) ) ? gson . toJson ( ahxxedkqnsrgdrovqmucParser . parse ( ahxxedkqnsrgdrovqmuc ) ) : "" ; }

line_index: 328
bug_before_refactoring: private static float readTemp ( byte [] buf ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> private static float readTemp ( byte [] buf ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> Bug fixes
bug_after_refactoring: private static float readTemp ( byte [] tubwiuaffzlvgmbaxtnd ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( tubwiuaffzlvgmbaxtnd , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> private static float readTemp ( byte [] tubwiuaffzlvgmbaxtnd ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( tubwiuaffzlvgmbaxtnd , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ) + 36.53F ; } <s> Bug fixes
fix_before_refactoring: private static float readTemp ( byte [] buf , int start ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , start ) ) / 340.0F ) + 36.53F ; }
fix_after_refactoring: private static float readTemp ( byte [] tubwiuaffzlvgmbaxtnd , int start ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( tubwiuaffzlvgmbaxtnd , start ) ) / 340.0F ) + 36.53F ; }
× fix_prediction_before: private static double readTemp ( byte [] buf ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( buf , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ; }
× fix_prediction_after: private static double readTemp ( byte [] tubwiuaffzlvgmbaxtnd ) { return ( ( lohbihler.manfred.i2c.I2CReader . combine ( tubwiuaffzlvgmbaxtnd , lohbihler.manfred.i2c.I2CReader.TEMP_OUT_H_OFF ) ) / 340.0F ; }

line_index: 329
bug_before_refactoring: private void setCounts ( java.lang.Integer [] counts ) { this . counts = counts ; } <s> private void setCounts ( java.lang.Integer [] counts ) { this . counts = counts ; } <s> fixed bugs and changed data format  now need to fix ruleset to comport
bug_after_refactoring: private void setCounts ( java.lang.Integer [] qrqrxrtkmjfehsbttocy ) { this . qrqrxrtkmjfehsbttocy = qrqrxrtkmjfehsbttocy ; } <s> private void setCounts ( java.lang.Integer [] qrqrxrtkmjfehsbttocy ) { this . qrqrxrtkmjfehsbttocy = qrqrxrtkmjfehsbttocy ; } <s> fixed bugs and changed data format  now need to fix ruleset to comport
fix_before_refactoring: public void setCounts ( java.util.Map < java.lang.String , java.lang.Integer > counts ) { this . counts = counts ; }
fix_after_refactoring: public void setCounts ( java.util.Map < java.lang.String , java.lang.Integer > qrqrxrtkmjfehsbttocy ) { this . qrqrxrtkmjfehsbttocy = qrqrxrtkmjfehsbttocy ; }
× fix_prediction_before: public void setCounts ( java.lang.Integer [] counts ) { this . counts = counts ; }
× fix_prediction_after: public void setCounts ( java.lang.Integer [] qrqrxrtkmjfehsbttocy ) { this . qrqrxrtkmjfehsbttocy = qrqrxrtkmjfehsbttocy ; }

line_index: 331
bug_before_refactoring: private void update ( long dt ) { m_particleSystem . tick () ; } <s> private void update ( long dt ) { m_particleSystem . tick () ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
bug_after_refactoring: private void update ( long ghratspetftzbpjyxqdb ) { m_particleSystem . tick () ; } <s> private void update ( long ghratspetftzbpjyxqdb ) { m_particleSystem . tick () ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
fix_before_refactoring: private void update ( long dt ) { synchronized ( m_particleSystem ) { m_particleSystem . tick () ; } }
fix_after_refactoring: private void update ( long ghratspetftzbpjyxqdb ) { synchronized ( m_particleSystem ) { m_particleSystem . tick () ; } }
× fix_prediction_before: private void update ( long dt ) { if ( ( m_particleSystem ) != null ) { m_particleSystem . tick () ; } }
× fix_prediction_after: private void update () { m_particleSystem . tick () ; }

line_index: 332
bug_before_refactoring: public void updateBooksData ( android.content.Context context ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( context ) ; } } } <s> public void updateBooksData ( android.content.Context context ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( context ) ; } } } <s> Hotfix Release  Overall: Small cleanups  bug fixes  for Release  Strings -> Update CN and TW strings Book -> Fix some nulls that can happen Latest Book Keeper -> Clear Cache of older versions
bug_after_refactoring: public void updateBooksData ( android.content.Context qqlyjleadibndrjyafxb ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( qqlyjleadibndrjyafxb ) ; } } } <s> public void updateBooksData ( android.content.Context qqlyjleadibndrjyafxb ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( qqlyjleadibndrjyafxb ) ; } } } <s> Hotfix Release  Overall: Small cleanups  bug fixes  for Release  Strings -> Update CN and TW strings Book -> Fix some nulls that can happen Latest Book Keeper -> Clear Cache of older versions
fix_before_refactoring: public void updateBooksData ( android.content.Context context ) { if ( ( books ) != null ) { books = new java.util.ArrayList <> () ; } }
fix_after_refactoring: public void updateBooksData ( android.content.Context qqlyjleadibndrjyafxb ) { if ( ( books ) != null ) { books = new java.util.ArrayList <> () ; } }
× fix_prediction_before: public void updateBooksData () { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( context ) ; } } }
× fix_prediction_after: private void updateBooksData ( android.content.Context qqlyj leadibndrjyafxb ) { if ( ( books ) != null ) { for ( moe.feng.nhentai.model.Book book : books ) { book . updateDataFromOldData ( qqlyj leadibndrjyafxb ) ; } } }

line_index: 333
bug_before_refactoring: public void onDrawerClosed ( android.view.View drawerView ) { isOpened = 0 ; } <s> public void onDrawerClosed ( android.view.View drawerView ) { isOpened = 0 ; } <s> Button padding modified  and tiny error fixed.
bug_after_refactoring: public void onDrawerClosed ( android.view.View soyyowmurwcngtqyxsqn ) { isOpened = 0 ; } <s> public void onDrawerClosed ( android.view.View soyyowmurwcngtqyxsqn ) { isOpened = 0 ; } <s> Button padding modified  and tiny error fixed.
fix_before_refactoring: public void onDrawerClosed ( android.view.View drawerView ) { isOpened = - 1 ; }
fix_after_refactoring: public void onDrawerClosed ( android.view.View soyyowmurwcngtqyxsqn ) { isOpened = - 1 ; }
× fix_prediction_before: public void onDrawerClosed ( android.view.View drawerView ) {}
× fix_prediction_after: public void onDrawerClosed ( android.view.View soyyowmurwcngtqyxsqn ) { isOpened = 1 ; }

line_index: 334
bug_before_refactoring: @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> bug fix wait for trigger
bug_after_refactoring: @ java.lang.Override public void onPeriod ( long zoyxkpghjntszsugfrkd ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> @ java.lang.Override public void onPeriod ( long zoyxkpghjntszsugfrkd ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( false ) ; } } <s> bug fix wait for trigger
fix_before_refactoring: @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) {}
fix_after_refactoring: @ java.lang.Override public void onPeriod ( long zoyxkpghjntszsugfrkd ) {}
× fix_prediction_before: @ java.lang.Override public void onPeriod ( long nbPointsSinceLastPeriod ) { if ( isWaitForTrigger () ) { setWaitForPeriod ( true ) ; } }
× fix_prediction_after: @ java.lang.Override public void onPeriod ( long zoyxkpghjntszsugfrkd ) { setWaitForPeriod ( zoyxkpghjntszsugfrkd , false ) ; }

line_index: 335
bug_before_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null , ( ( java.lang.Object [] ) ( cmds ) ) ) ; } <s> public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null , ( ( java.lang.Object [] ) ( cmds ) ) ) ; } <s> fix bugs in Exec
bug_after_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] pvfuryngkpydyoyotbxj ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( pvfuryngkpydyoyotbxj [ 0 ] , null , ( ( java.lang.Object [] ) ( pvfuryngkpydyoyotbxj ) ) ) ; } <s> public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] pvfuryngkpydyoyotbxj ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( pvfuryngkpydyoyotbxj [ 0 ] , null , ( ( java.lang.Object [] ) ( pvfuryngkpydyoyotbxj ) ) ) ; } <s> fix bugs in Exec
fix_before_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String . . . cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null , cmds ) ; }
fix_after_refactoring: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String . . . pvfuryngkpydyoyotbxj ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( pvfuryngkpydyoyotbxj [ 0 ] , null , pvfuryngkpydyoyotbxj ) ; }
× fix_prediction_before: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] cmds ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( cmds [ 0 ] , null ) ; }
× fix_prediction_after: public static org.sugarj.common.Exec.ExecutionResult run ( java.lang.String [] pvfuryngkpydyoyotbxj ) { return new org.sugarj.common.Exec ( true ) . runWithPrefix ( pvfuryngkpydyoyotbxj , null , pvfuryngkpydyoyotbxj ) ; }

line_index: 336
bug_before_refactoring: public boolean secondPick ( java.lang.Integer chosenBox ) { return boxMap . get ( chosenBox ) . isEmpty () ; } <s> public boolean secondPick ( java.lang.Integer chosenBox ) { return boxMap . get ( chosenBox ) . isEmpty () ; } <s> Fix from bugs and introdusing new test
bug_after_refactoring: public boolean secondPick ( java.lang.Integer clvczusougcegafxzuvb ) { return boxMap . get ( clvczusougcegafxzuvb ) . isEmpty () ; } <s> public boolean secondPick ( java.lang.Integer clvczusougcegafxzuvb ) { return boxMap . get ( clvczusougcegafxzuvb ) . isEmpty () ; } <s> Fix from bugs and introdusing new test
fix_before_refactoring: public boolean secondPick ( int chosenBox ) { return ( boxMap . get ( chosenBox ) ) != null ; }
fix_after_refactoring: public boolean secondPick ( int clvczusougcegafxzuvb ) { return ( boxMap . get ( clvczusougcegafxzuvb ) ) != null ; }
× fix_prediction_before: public boolean secondPick ( java.lang.Integer chosenBox ) { return boxMap . get ( chosenBox - 1 ) . isEmpty () ; }
× fix_prediction_after: public boolean secondPick ( java.lang.Integer clvczusougcegafxzuvb ) { return boxMap . get ( clvczusougcegafxzuvb . toString () ) . isEmpty () ; }

line_index: 337
bug_before_refactoring: public void setModAtaque ( int arma ) { this . modAtaque = java.lang.Math . max ( 100 , ( arma + ( this . modAtaque ) ) ) ; } <s> public void setModAtaque ( int arma ) { this . modAtaque = java.lang.Math . max ( 100 , ( arma + ( this . modAtaque ) ) ) ; } <s> -Fix NPC showing up in two locations. -Fix platoon attack and defense equipment bug.
bug_after_refactoring: public void setModAtaque ( int qjrcpnhqkyormwbqqtlr ) { this . modAtaque = java.lang.Math . max ( 100 , ( qjrcpnhqkyormwbqqtlr + ( this . modAtaque ) ) ) ; } <s> public void setModAtaque ( int qjrcpnhqkyormwbqqtlr ) { this . modAtaque = java.lang.Math . max ( 100 , ( qjrcpnhqkyormwbqqtlr + ( this . modAtaque ) ) ) ; } <s> -Fix NPC showing up in two locations. -Fix platoon attack and defense equipment bug.
fix_before_refactoring: public void setModAtaque ( int arma ) { if ( arma < 0 ) { this . modAtaque = 0 ; } else if ( arma > 100 ) { this . modAtaque = 100 ; } else { this . modAtaque = arma ; } }
fix_after_refactoring: public void setModAtaque ( int qjrcpnhqkyormwbqqtlr ) { if ( qjrcpnhqkyormwbqqtlr < 0 ) { this . modAtaque = 0 ; } else if ( qjrcpnhqkyormwbqqtlr > 100 ) { this . modAtaque = 100 ; } else { this . modAtaque = qjrcpnhqkyormwbqqtlr ; } }
× fix_prediction_before: public void setModAtaque ( int arma ) { this . modAtaque = arma ; }
× fix_prediction_after: public void setModAtaque ( int qjrcpnhqkyormwbqqtlr ) { this . modAtaque = qjrcpnhqkyormwbqqtlr ; }

line_index: 340
bug_before_refactoring: public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) { entities . add ( e ) ; } else if ( e instanceof Gas ) { entities . add ( e ) ; } } <s> Solved the double points bug!  The solution was that two gas cans (and cars) where added everytime a new one was created  both are now solved.
bug_after_refactoring: public void addEntity ( Entity jzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( 0 , jzoxickftcriojehbfkk ) ; if ( jzoxickftcriojehbfkk instancjzoxickftcriojehbfkkof Obstacljzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; } jzoxickftcriojehbfkklsjzoxickftcriojehbfkk if ( jzoxickftcriojehbfkk instancjzoxickftcriojehbfkkof Gas ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; } } <s> public void addEntity ( Entity jzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( 0 , jzoxickftcriojehbfkk ) ; if ( jzoxickftcriojehbfkk instancjzoxickftcriojehbfkkof Obstacljzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; } jzoxickftcriojehbfkklsjzoxickftcriojehbfkk if ( jzoxickftcriojehbfkk instancjzoxickftcriojehbfkkof Gas ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; } } <s> Solved the double points bug!  The solution was that two gas cans (and cars) where added everytime a new one was created  both are now solved.
fix_before_refactoring: public void addEntity ( Entity e ) { entities . add ( e ) ; }
fix_after_refactoring: public void addEntity ( Entity jzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; }
× fix_prediction_before: public void addEntity ( Entity e ) { entities . add ( 0 , e ) ; if ( e instanceof Obstacle ) {} else if ( e instanceof Gas ) { entities . add ( e ) ; } }
× fix_prediction_after: public void addEntity ( Entity jzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkkkks . add ( 0 , jzoxickftcriojehbfkk ) ; if ( jzoxickftcriojehbfkk instancjzoxickftcriojehbfkkof Obstacljzoxickftcriojehbfkk ) { jzoxickftcriojehbfkkntitijzoxickftcriojehbfkks . add ( jzoxickftcriojehbfkk ) ; } }

line_index: 341
bug_before_refactoring: private static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> private static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> [Sync] Fix FirstRunTests.  Now they correctly wait for the processing to complete  and use the correct call to create an account but not sign in to it.  BUG=550634  Review URL: https://codereview.chromium.org/1603243002  Cr-Commit-Position: refs/heads/master@{#370451}
bug_after_refactoring: private static boolean getFirstRunFlowSignInComplete ( android.content.Context lkaeupopikxvfylsdtgt ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( lkaeupopikxvfylsdtgt ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> private static boolean getFirstRunFlowSignInComplete ( android.content.Context lkaeupopikxvfylsdtgt ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( lkaeupopikxvfylsdtgt ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; } <s> [Sync] Fix FirstRunTests.  Now they correctly wait for the processing to complete  and use the correct call to create an account but not sign in to it.  BUG=550634  Review URL: https://codereview.chromium.org/1603243002  Cr-Commit-Position: refs/heads/master@{#370451}
fix_before_refactoring: @ org.chromium.base.VisibleForTesting public static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; }
fix_after_refactoring: @ org.chromium.base.VisibleForTesting public static boolean getFirstRunFlowSignInComplete ( android.content.Context lkaeupopikxvfylsdtgt ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( lkaeupopikxvfylsdtgt ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; }
× fix_prediction_before: public static boolean getFirstRunFlowSignInComplete ( android.content.Context context ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; }
× fix_prediction_after: public static boolean getFirstRunFlowSignInComplete ( android.content.Context lkaeupopikxvfylsdtgt ) { return android.preference.PreferenceManager . getDefaultSharedPreferences ( lkaeupopikxvfylsdtgt ) . getBoolean ( org.chromium.chrome.browser.firstrun.FirstRunSignInProcessor.FIRST_RUN_FLOW_SIGNIN_COMPLETE , false ) ; }

line_index: 342
bug_before_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Bugfix fuer Absturz durch Zugriff auf nicht mehr aktives Fragment und gesperrten Bildschirm durch SwipeRefresh
bug_after_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] uisgwhouinbvfhlnjntb ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] uisgwhouinbvfhlnjntb ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Bugfix fuer Absturz durch Zugriff auf nicht mehr aktives Fragment und gesperrten Bildschirm durch SwipeRefresh
fix_before_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } }
fix_after_refactoring: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] uisgwhouinbvfhlnjntb ) { if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; } }
× fix_prediction_before: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] parties ) { mSwipeRefreshLayout . setRefreshing ( false ) ; }
× fix_prediction_after: @ java.lang.Override public void onFailGetPartyList ( de.dhbw.model.Party [] uisgwhouinbvfhlnjntb ) { android.widget.Toast . makeText ( getActivity () , "Parties laden ist fehlgeschlagen. Alte Liste wurde geladen." , Toast.LENGTH_SHORT ) . show () ; mSwipeRefreshLayout . setRefreshing ( false ) ; }

line_index: 343
bug_before_refactoring: private void DrawField ( char [] [] f ) { for ( char [] x : f ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> private void DrawField ( char [] [] f ) { for ( char [] x : f ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> foolproof added  bugs fixed  variables renamed
bug_after_refactoring: private void DrawField ( char [] [] xgchtymvcbsankymwuiy ) { xgchtymvcbsankymwuiyor ( char [] x : xgchtymvcbsankymwuiy ) { xgchtymvcbsankymwuiyor ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> private void DrawField ( char [] [] xgchtymvcbsankymwuiy ) { xgchtymvcbsankymwuiyor ( char [] x : xgchtymvcbsankymwuiy ) { xgchtymvcbsankymwuiyor ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } <s> foolproof added  bugs fixed  variables renamed
fix_before_refactoring: private void DrawField ( char [] [] field ) { for ( char [] x : field ) { for ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } }
fix_after_refactoring: private void DrawField ( char [] [] xgchtymvcbsankymwuiyield ) { xgchtymvcbsankymwuiyor ( char [] x : xgchtymvcbsankymwuiyield ) { xgchtymvcbsankymwuiyor ( char y : x ) { java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } }
× fix_prediction_before: private void DrawField ( char [] [] f ) {}
× fix_prediction_after: private void DrawField ( char [] [] xgchtymvcbsankymwuiy ) { xgchtymvcbsankymwuiyor ( char [] x : xgchtymvcbsankymwuiy ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println () ; }

line_index: 344
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; } <s> fixing bug #7620 Processing width and height of images is useless since Silverpeas 5.15  Conflicts: 	gallery/gallery-ejb/src/main/java/com/silverpeas/gallery/GalleryGlobalSilverpeasContentProcessor.java
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{dfoyajrxnyttewbmpspu}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "dfoyajrxnyttewbmpspu" ) final java.lang.String dfoyajrxnyttewbmpspu , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution khdobvdgwjygvmxcjdei ) { if ( khdobvdgwjygvmxcjdei == null ) { khdobvdgwjygvmxcjdei = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , dfoyajrxnyttewbmpspu , khdobvdgwjygvmxcjdei ) ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{dfoyajrxnyttewbmpspu}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "dfoyajrxnyttewbmpspu" ) final java.lang.String dfoyajrxnyttewbmpspu , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution khdobvdgwjygvmxcjdei ) { if ( khdobvdgwjygvmxcjdei == null ) { khdobvdgwjygvmxcjdei = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , dfoyajrxnyttewbmpspu , khdobvdgwjygvmxcjdei ) ; } <s> fixing bug #7620 Processing width and height of images is useless since Silverpeas 5.15  Conflicts: 	gallery/gallery-ejb/src/main/java/com/silverpeas/gallery/GalleryGlobalSilverpeasContentProcessor.java
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/{size:([0-9]*x[0-9]*/)?}" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.PathParam ( value = "size" ) final java.lang.String size , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{dfoyajrxnyttewbmpspu}/{size:([0-9]*x[0-9]*/)?}" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "dfoyajrxnyttewbmpspu" ) final java.lang.String dfoyajrxnyttewbmpspu , @ javax.ws.rs.PathParam ( value = "size" ) final java.lang.String size , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution khdobvdgwjygvmxcjdei ) { if ( khdobvdgwjygvmxcjdei == null ) { khdobvdgwjygvmxcjdei = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , dfoyajrxnyttewbmpspu , khdobvdgwjygvmxcjdei ) ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{photoId}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "photoId" ) final java.lang.String photoId , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution mediaResolution ) { if ( mediaResolution == null ) { mediaResolution = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; } return getMediaContent ( com.silverpeas.gallery.web.Photo , photoId , mediaResolution ) ; }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = ( ( GALLERY_PHOTOS_PART ) + "/{dfoyajrxnyttewbmpspu}/" ) + ( GALLERY_MEDIA_CONTENT_PART ) ) @ javax.ws.rs.Produces ( value = "image/*" ) public javax.ws.rs.core.Response getPhotoContent ( @ javax.ws.rs.PathParam ( value = "dfoyajrxnyttewbmpspu" ) final java.lang.String dfoyajrxnyttewbmpspu , @ javax.ws.rs.QueryParam ( value = GALLERY_PHOTO_RESOLUTION_PARAM ) com.silverpeas.gallery.constant.MediaResolution khdobvdgwjygvmxcjdei = com.silverpeas.gallery.constant.MediaResolution.ORIGINAL ; return getMediaContent ( com.silverpeas.gallery.web.Photo , dfoyajrxnyttewbmpspu , khdobvdgwjygvmxcjdei ) ; }

line_index: 345
bug_before_refactoring: public void deleteEffect ( int i ) { while ( ( getIndexOfEffect ( i ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( i ) ) ; } } <s> public void deleteEffect ( int i ) { while ( ( getIndexOfEffect ( i ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( i ) ) ; } } <s> Fixed some issues with status effects; the player's health is now printed every turn for debug purposes
bug_after_refactoring: publwzheskddgsvcolasomnwc vowzheskddgsvcolasomnwd deleteEffect ( wzheskddgsvcolasomnwnt wzheskddgsvcolasomnw ) { whwzheskddgsvcolasomnwle ( ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) ; } } <s> publwzheskddgsvcolasomnwc vowzheskddgsvcolasomnwd deleteEffect ( wzheskddgsvcolasomnwnt wzheskddgsvcolasomnw ) { whwzheskddgsvcolasomnwle ( ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) ; } } <s> Fixed some issues with status effects; the player's health is now printed every turn for debug purposes
fix_before_refactoring: public void deleteEffect ( int id ) { while ( ( getIndexOfEffect ( id ) ) != ( - 1 ) ) { status . get ( getIndexOfEffect ( id ) ) . end ( this ) ; status . remove ( getIndexOfEffect ( id ) ) ; } }
fix_after_refactoring: publwzheskddgsvcolasomnwc vowzheskddgsvcolasomnwd deleteEffect ( wzheskddgsvcolasomnwnt wzheskddgsvcolasomnwd ) { whwzheskddgsvcolasomnwle ( ( getIndexOfEffect ( wzheskddgsvcolasomnwd ) ) != ( - 1 ) ) { status . get ( getIndexOfEffect ( wzheskddgsvcolasomnwd ) ) . end ( thwzheskddgsvcolasomnws ) ; status . remove ( getIndexOfEffect ( wzheskddgsvcolasomnwd ) ) ; } }
× fix_prediction_before: public void deleteEffect ( int i ) { synchronized ( status ) { while ( ( getIndexOfEffect ( i ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( i ) ) ; } } }
× fix_prediction_after: publwzheskddgsvcolasomnwc playEffect ( wzheskddgsvcolasomnwnt wzheskddgsvcolasomnw ) { whwzheskddgsvcolasomnwle ( ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) != ( - 1 ) ) { status . remove ( getIndexOfEffect ( wzheskddgsvcolasomnw ) ) ; } }

line_index: 346
bug_before_refactoring: static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> Numerous bugfixes and implementation fix-ups.
bug_after_refactoring: static void stopTransfer ( int rnwusvamioqsvevyejic ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( rnwusvamioqsvevyejic ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> static void stopTransfer ( int rnwusvamioqsvevyejic ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( rnwusvamioqsvevyejic ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } <s> Numerous bugfixes and implementation fix-ups.
fix_before_refactoring: static void stopTransfer ( int transferId ) { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } }
fix_after_refactoring: static void stopTransfer ( int rnwusvamioqsvevyejic ) { synchronized ( net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( rnwusvamioqsvevyejic ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } } }
× fix_prediction_before: public static void stopTransfer ( int transferId ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( transferId ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } }
× fix_prediction_after: public static void stopTransfer ( int rnwusvamioqsvevyejic ) { net.nitroshare.android.transfer.TransferWrapper transferWrapper = net.nitroshare.android.transfer.TransferWrapper.sActiveTransfers . get ( rnwusvamioqsvevyejic ) ; if ( transferWrapper != null ) { transferWrapper.mTransfer . stop () ; } }

line_index: 347
bug_before_refactoring: public void drawBackground ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } } <s> public void drawBackground ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } } <s> Fixed bug where you couldn't change the outer circle color without restarting
bug_after_refactoring: public void drawBackground ( android.graphics.Canvas uzqagbgisooalrncywly ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { uzqagbgisooalrncywly . drawColor ( Color.BLACK ) ; } else { uzqagbgisooalrncywly . drawColor ( mCenterCircleColor ) ; } } <s> public void drawBackground ( android.graphics.Canvas uzqagbgisooalrncywly ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { uzqagbgisooalrncywly . drawColor ( Color.BLACK ) ; } else { uzqagbgisooalrncywly . drawColor ( mCenterCircleColor ) ; } } <s> Fixed bug where you couldn't change the outer circle color without restarting
fix_before_refactoring: private void drawBackground ( android.graphics.Canvas canvas ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { canvas . drawColor ( Color.BLACK ) ; } else { canvas . drawColor ( mCenterCircleColor ) ; } }
fix_after_refactoring: private void drawBackground ( android.graphics.Canvas uzqagbgisooalrncywly ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { uzqagbgisooalrncywly . drawColor ( Color.BLACK ) ; } else { uzqagbgisooalrncywly . drawColor ( mCenterCircleColor ) ; } }
× fix_prediction_before: public void drawBackground ( android.graphics.Canvas canvas ) { canvas . drawColor ( mAmbient ) ; canvas . drawColor ( mCenterCircleColor ) ; }
× fix_prediction_after: public void drawBackground ( android.graphics.Canvas uzqagbgisooalrncywly ) { if ( ( mAmbient ) && ( ( ! ( mLowBitAmbient ) ) || ( mBurnInProtection ) ) ) { uzqagbgisooalrncywly . drawColor ( Color.BLACK ) ; } else { uzqagbgisooalrncywly . drawColor ( mCenterCircleColor ) ; } }

line_index: 348
bug_before_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color ) ; invalidate () ; } } <s> public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color ) ; invalidate () ; } } <s> fix: issues with shouldDrawBorder() and shadow  incremented version to 1.2.1
bug_after_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int jduztgucxteczimwbmut ) { if ( jduztgucxteczimwbmut != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , jduztgucxteczimwbmut ) ; invalidate () ; } } <s> public void setShadowColor ( @ android.support.annotation.ColorInt int jduztgucxteczimwbmut ) { if ( jduztgucxteczimwbmut != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , jduztgucxteczimwbmut ) ; invalidate () ; } } <s> fix: issues with shouldDrawBorder() and shadow  incremented version to 1.2.1
fix_before_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { if ( color != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , color , true ) ; } }
fix_after_refactoring: public void setShadowColor ( @ android.support.annotation.ColorInt int jduztgucxteczimwbmut ) { if ( jduztgucxteczimwbmut != ( mShadowColor ) ) { setShadowInternal ( mShadowRadius , jduztgucxteczimwbmut , true ) ; } }
× fix_prediction_before: public void setShadowColor ( @ android.support.annotation.ColorInt int color ) { setShadowInternal ( mShadowRadius , color , true ) ; }
× fix_prediction_after: public void setShadowColor ( @ android.support.annotation.ColorInt int jduztgucxteczimwbmut ) { setShadowInternal ( mShadowRadius , jduztgucxteczimwbmut ) ; invalidate () ; }

line_index: 349
bug_before_refactoring: protected static boolean isNightMode ( android.content.Context context ) { int currentNightMode = ( context . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> protected static boolean isNightMode ( android.content.Context context ) { int currentNightMode = ( context . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> Merge pull request #4 from karlszwillus/bugfix/deactivate-night-mode  Do not support night mode for now
bug_after_refactoring: protected static boolean isNightMode ( android.content.Context pmlbukcombdenuxckwyz ) { int currentNightMode = ( pmlbukcombdenuxckwyz . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> protected static boolean isNightMode ( android.content.Context pmlbukcombdenuxckwyz ) { int currentNightMode = ( pmlbukcombdenuxckwyz . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; } <s> Merge pull request #4 from karlszwillus/bugfix/deactivate-night-mode  Do not support night mode for now
fix_before_refactoring: protected static boolean isNightMode ( android.content.Context context ) { return false ; }
fix_after_refactoring: protected static boolean isNightMode ( android.content.Context pmlbukcombdenuxckwyz ) { return false ; }
× fix_prediction_before: public static boolean isNightMode ( android.content.Context context ) { int currentNightMode = ( context . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; }
× fix_prediction_after: public static boolean isNightMode ( android.content.Context pmlbukcombdenuxckwyz ) { int currentNightMode = ( pmlbukcombdenuxckwyz . getResources () . getConfiguration () . uiMode ) & ( android.content.res.Configuration.UI_MODE_NIGHT_MASK ) ; return currentNightMode == ( android.content.res.Configuration.UI_MODE_NIGHT_YES ) ; }

line_index: 350
bug_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null , null ) ; } <s> bug fix
bug_after_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , false , null , null , null , null , null ) ; } <s> public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , false , null , null , null , null , null ) ; } <s> bug fix
fix_before_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , null , null , null , null , null ) ; }
fix_after_refactoring: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , null , null , null , null , null ) ; }
× fix_prediction_before: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > runnable ) { transactional ( runnable , false , null , null , null , null ) ; }
× fix_prediction_after: public < T > void transactional ( me.gerenciar.sdao.factory.DAOFactory.Runnable < T > cgqxolwkfywpgxojahox ) { transactional ( cgqxolwkfywpgxojahox , false , null , null , null , null ) ; }

line_index: 351
bug_before_refactoring: public static void navigateToLocationSettings ( android.content.Context context ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; } <s> public static void navigateToLocationSettings ( android.content.Context context ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; context . startActivity ( intent ) ; } <s> Fix start activity out of context issue
bug_after_refactoring: public static void navigateToLocationSettings ( android.content.Context bzrjgxuhjuuawvkmczpn ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; bzrjgxuhjuuawvkmczpn . startActivity ( intent ) ; } <s> public static void navigateToLocationSettings ( android.content.Context bzrjgxuhjuuawvkmczpn ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; bzrjgxuhjuuawvkmczpn . startActivity ( intent ) ; } <s> Fix start activity out of context issue
fix_before_refactoring: public static void navigateToLocationSettings ( android.content.Context context ) { context . startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
fix_after_refactoring: public static void navigateToLocationSettings ( android.content.Context bzrjgxuhjuuawvkmczpn ) { bzrjgxuhjuuawvkmczpn . startActivity ( new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ) ; }
× fix_prediction_before: public static void navigateToLocationSettings ( android.content.Context context ) { navigateToLocationSettings ( context , true ) ; }
× fix_prediction_after: public static void navigateToLocationSettings ( android.content.Context context ) { final android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; bzrjgxuhjuuawvkmczpn . startActivity ( intent ) ; }

line_index: 352
bug_before_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . addNamespace ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } } <s> @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . addNamespace ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } } <s> Revert "Fixed nested namespace issue"  This reverts commit 0c8c055603b09f6d97c542efabe88b6ed85838a9.
bug_after_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String zbvtvezjxlqskqoqmijc , java.lang.String ohgkpbqldqjfxkadumse ) { m_zbvtvezjxlqskqoqmijcMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; m_zbvtvezjxlqskqoqmijcList . add ( zbvtvezjxlqskqoqmijc ) ; } } <s> @ java.lang.Override public void startPrefixMapping ( java.lang.String zbvtvezjxlqskqoqmijc , java.lang.String ohgkpbqldqjfxkadumse ) { m_zbvtvezjxlqskqoqmijcMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; m_zbvtvezjxlqskqoqmijcList . add ( zbvtvezjxlqskqoqmijc ) ; } } <s> Revert "Fixed nested namespace issue"  This reverts commit 0c8c055603b09f6d97c542efabe88b6ed85838a9.
fix_before_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { m_prefixMap . put ( prefix , uri ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . put ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } }
fix_after_refactoring: @ java.lang.Override public void startPrefixMapping ( java.lang.String zbvtvezjxlqskqoqmijc , java.lang.String ohgkpbqldqjfxkadumse ) { m_zbvtvezjxlqskqoqmijcMap . put ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . put ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; m_zbvtvezjxlqskqoqmijcList . add ( zbvtvezjxlqskqoqmijc ) ; } }
× fix_prediction_before: @ java.lang.Override public void startPrefixMapping ( java.lang.String prefix , java.lang.String uri ) { if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( prefix , uri ) ; m_prefixList . add ( prefix ) ; } }
× fix_prediction_after: @ java.lang.Override public void startPrefixMapping ( java.lang.String zbvtvezjxlqskqoqmijc , java.lang.String ohgkpbqldqjfxkadumse ) { m_zbvtvezjxlqskqoqmijcMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; if ( m_inXMLMetadata ) { m_localPrefixMap . addNamespace ( zbvtvezjxlqskqoqmijc , ohgkpbqldqjfxkadumse ) ; m_zbvtvezjxlqskqoqmijcList . add ( zbvtvezjxlqskqoqmijc ) ; } }

line_index: 354
bug_before_refactoring: public void addResource ( java.net.URL u ) throws java.lang.Exception ; <s> public void addResource ( java.net.URL u ) throws java.lang.Exception ; <s> Fixed bug with replacing of plugin - now i do not crash nor remove in vain. impoved startup and increased namespace by direct search in plugins for cycles  tarinigs and exercises
bug_after_refactoring: pywrgsiihqvecouuxwgqgblic void addResoywrgsiihqvecouuxwgqgrce ( java.net.URL ywrgsiihqvecouuxwgqg ) throws java.lang.Exception ; <s> pywrgsiihqvecouuxwgqgblic void addResoywrgsiihqvecouuxwgqgrce ( java.net.URL ywrgsiihqvecouuxwgqg ) throws java.lang.Exception ; <s> Fixed bug with replacing of plugin - now i do not crash nor remove in vain. impoved startup and increased namespace by direct search in plugins for cycles  tarinigs and exercises
fix_before_refactoring: public abstract void addResource ( java.net.URL u ) throws java.lang.Exception ;
fix_after_refactoring: pywrgsiihqvecouuxwgqgblic abstract void addResoywrgsiihqvecouuxwgqgrce ( java.net.URL ywrgsiihqvecouuxwgqg ) throws java.lang.Exception ;
× fix_prediction_before: public void addResource ( java.net.URL value ) throws java.lang.Exception ;
× fix_prediction_after: pywrgsiihqvecouuxwgqgblic void addResoywrgsiihqvecouuxwgqgrce ( java.net.URL ywrgsiihqvecouuxwgqg , java.lang.String className ) throws java.lang.Exception ;

line_index: 357
bug_before_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> -- Solved Combo index out of bounds problem
bug_after_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.krvreynnoyzmllflomkws.ModifyEvent krvreynnoyzmllflomkw ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> @ java.lang.Override public void modifyText ( org.eclipse.swt.krvreynnoyzmllflomkws.ModifyEvent krvreynnoyzmllflomkw ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } <s> -- Solved Combo index out of bounds problem
fix_before_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) { if ( ( ui.views.CommitsView.combo . getSelectionIndex () ) != ( - 1 ) ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } }
fix_after_refactoring: @ java.lang.Override public void modifyText ( org.eclipse.swt.krvreynnoyzmllflomkws.ModifyEvent krvreynnoyzmllflomkw ) { if ( ( ui.views.CommitsView.combo . getSelectionIndex () ) != ( - 1 ) ) { java.lang.String branch = ui.views.CommitsView.combo . getItem ( ui.views.CommitsView.combo . getSelectionIndex () ) ; ui.views.CommitsView . showCommits ( project , branch ) ; } }
× fix_prediction_before: @ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent event ) {}
× fix_prediction_after: @ java.lang.Override public void modifyText ( org.eclipse.swt.krvreynnoyzmllflomkws.ModifyEvent krvreynnoyzmllflomkw ) {}

line_index: 358
bug_before_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( provider ) ; } <s> public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( provider ) ; } <s> Fix syntax error  fix comments  remove setMaxBitsCount  replace mFlag by final mId
bug_after_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider ocdlqrrnhlbwhqcalurz ) { ocdlqrrnhlbwhqcalurz . setState ( ( ( ( ocdlqrrnhlbwhqcalurz . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( ocdlqrrnhlbwhqcalurz ) ; } <s> public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider ocdlqrrnhlbwhqcalurz ) { ocdlqrrnhlbwhqcalurz . setState ( ( ( ( ocdlqrrnhlbwhqcalurz . getFlag () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( ocdlqrrnhlbwhqcalurz ) ; } <s> Fix syntax error  fix comments  remove setMaxBitsCount  replace mFlag by final mId
fix_before_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { provider . setState ( ( ( ( provider . getId () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( provider ) ; }
fix_after_refactoring: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider ocdlqrrnhlbwhqcalurz ) { ocdlqrrnhlbwhqcalurz . setState ( ( ( ( ocdlqrrnhlbwhqcalurz . getId () ) & ( mProvidersEnabled ) ) != 0 ) ) ; mList . add ( ocdlqrrnhlbwhqcalurz ) ; }
× fix_prediction_before: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider provider ) { mList . add ( provider ) ; }
× fix_prediction_after: public void add ( com.eleybourn.bookcatalogue.searchorder.SearchProvider ocdlqrrnhlbwhqcalurz ) { mList . add ( ocdlqrrnhlbwhqcalurz ) ; }

line_index: 359
bug_before_refactoring: public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl member , com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( member ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( memberAttributeChange ) ) ; } <s> public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl member , com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( member ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( memberAttributeChange ) ) ; } <s> fixes #5099. Problem was concurrent modification of attributes map of member while it is written to buffer. Copying the attributes before writing it to buffer fix the problem. Secondly  member is removed from memberAttributeChangeResultParameters since it is not used.
bug_after_refactoring: public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl tlhwwqmhwezrzgchunoy , com.hazelcast.cluster.client.MemberAttributeChange tlhwwqmhwezrzgchunoyAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( tlhwwqmhwezrzgchunoy ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( tlhwwqmhwezrzgchunoyAttributeChange ) ) ; } <s> public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl tlhwwqmhwezrzgchunoy , com.hazelcast.cluster.client.MemberAttributeChange tlhwwqmhwezrzgchunoyAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( tlhwwqmhwezrzgchunoy ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( tlhwwqmhwezrzgchunoyAttributeChange ) ) ; } <s> fixes #5099. Problem was concurrent modification of attributes map of member while it is written to buffer. Copying the attributes before writing it to buffer fix the problem. Secondly  member is removed from memberAttributeChangeResultParameters since it is not used.
fix_before_refactoring: public static int calculateDataSize ( com.hazelcast.cluster.client.MemberAttributeChange memberAttributeChange ) { return ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( memberAttributeChange ) ) ; }
fix_after_refactoring: public static int calculateDataSize ( com.hazelcast.cluster.client.MemberAttributeChange tlhwwqmhwezrzgchunoyAttributeChange ) { return ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( tlhwwqmhwezrzgchunoyAttributeChange ) ) ; }
× fix_prediction_before: public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl member ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( member ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( member ) ) ; }
× fix_prediction_after: public static int calculateDataSize ( com.hazelcast.client.impl.protocol.parameters.MemberImpl tlhwwqmhwezrzgchunoy , com.hazelcast.cluster.client.MemberAttributeChange tlhwwqmhwezrzgchunoyAttributeChange ) { return ( ( com.hazelcast.client.impl.protocol.ClientMessage.HEADER_SIZE ) + ( com.hazelcast.client.impl.protocol.parameters.MemberCodec . calculateDataSize ( tlhwwqmhwezrzgchunoy ) ) ) + ( com.hazelcast.client.impl.protocol.parameters.MemberAttributeChangeCodec . calculateDataSize ( tlhwwqmhwezrzgchunoyAttributeChange ) ) ; }

line_index: 360
bug_before_refactoring: public void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> public void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> Revert "Revert "Bugfix: Updating of fencer points after changes lags behind 1 change""  This reverts commit 304afa95804036df50b0e05764cad1d054a9fde8.
bug_after_refactoring: public void setFinished ( java.lang.Boolean xxpldugscxozoeikmoes ) { try { Fight . setFinished ( xxpldugscxozoeikmoes ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> public void setFinished ( java.lang.Boolean xxpldugscxozoeikmoes ) { try { Fight . setFinished ( xxpldugscxozoeikmoes ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } <s> Revert "Revert "Bugfix: Updating of fencer points after changes lags behind 1 change""  This reverts commit 304afa95804036df50b0e05764cad1d054a9fde8.
fix_before_refactoring: private void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
fix_after_refactoring: private void setFinished ( java.lang.Boolean xxpldugscxozoeikmoes ) { try { Fight . setFinished ( xxpldugscxozoeikmoes ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
× fix_prediction_before: public void setFinished ( java.lang.Boolean isFightFinished ) { try { Fight . setFinished ( isFightFinished ) ; } catch ( java.sql.SQLException | Model.ObjectDeprecatedException ex ) { LoggingUtilities.LOGGER . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
× fix_prediction_after: public void setFinished ( java.lang.Boolean xxpldugscxozoeikmoes ) { Fight . setFinished ( xxpldugscxozoeikmoes ) ; }

line_index: 362
bug_before_refactoring: boolean trendingToAlertEnd ( com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( Alert.above ) ; } <s> boolean trendingToAlertEnd ( com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( Alert.above ) ; } <s> Fix a bug in the connection between bad readings and low alert.  Signed-off-by: Tzachi Dar <tzachi.dar@gmail.com>
bug_after_refactoring: boolean trendingTouisgzxmvtveaieftlmdsEnd ( com.eveningoutpost.dexdrip.Models.uisgzxmvtveaieftlmdsType uisgzxmvtveaieftlmds ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingTouisgzxmvtveaieftlmdsEnd ( uisgzxmvtveaieftlmds.above ) ; } <s> boolean trendingTouisgzxmvtveaieftlmdsEnd ( com.eveningoutpost.dexdrip.Models.uisgzxmvtveaieftlmdsType uisgzxmvtveaieftlmds ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingTouisgzxmvtveaieftlmdsEnd ( uisgzxmvtveaieftlmds.above ) ; } <s> Fix a bug in the connection between bad readings and low alert.  Signed-off-by: Tzachi Dar <tzachi.dar@gmail.com>
fix_before_refactoring: boolean trendingToAlertEnd ( android.content.Context context , com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( context , Alert.above ) ; }
fix_after_refactoring: boolean trendingTouisgzxmvtveaieftlmdsEnd ( android.content.Context context , com.eveningoutpost.dexdrip.Models.uisgzxmvtveaieftlmdsType uisgzxmvtveaieftlmds ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } return com.eveningoutpost.dexdrip.Models.BgReading . trendingTouisgzxmvtveaieftlmdsEnd ( context , uisgzxmvtveaieftlmds.above ) ; }
× fix_prediction_before: boolean trendingToAlertEnd ( com.eveningoutpost.dexdrip.Models.AlertType Alert ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } else { return com.eveningoutpost.dexdrip.Models.BgReading . trendingToAlertEnd ( Alert.fasterxml ) ; } }
× fix_prediction_after: boolean trendingTouisgzxmvtveaieftlmdsEnd ( com.eveningoutpost.dexdrip.Models.uisgzxmvtveaieftlmdsType uisgzxmvtveaieftlmds ) { if ( ! ( com.eveningoutpost.dexdrip.UtilityModels.Notifications.smart_snoozing ) ) { return false ; } else { return com.eveningoutpost.dexdrip.Models.BgReading . trendingTouisgzxmvtveaieftlmdsEnd ( uisgzxmvtveaieftlmds.fasterxml ) ; } }

line_index: 363
bug_before_refactoring: private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> fix tracing issue
bug_after_refactoring: private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext pdmmriixvyukfyoechze ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( pdmmriixvyukfyoechze . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext pdmmriixvyukfyoechze ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( pdmmriixvyukfyoechze . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } } <s> fix tracing issue
fix_before_refactoring: protected boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( synCtx . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }
fix_after_refactoring: protected boolean shouldCaptureTracing ( org.apache.synapse.MessageContext pdmmriixvyukfyoechze ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( pdmmriixvyukfyoechze . getProperty ( StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }
× fix_prediction_before: private boolean shouldCaptureTracing ( org.apache.synapse.MessageContext synCtx ) { return ( synCtx != null ) && ( ( java.lang.Boolean ) ( synCtx . getProperty (StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; }
× fix_prediction_after: protected boolean shouldCaptureTracing ( org.apache.synapse.MessageContext pdmmriixvyukfyoechze ) { java.lang.Boolean isCollectingTraces = ( ( java.lang.Boolean ) ( pdmmriixvyukfyoechze . getProperty (StatisticsConstants.FLOW_TRACE_IS_COLLECTED ) ) ) ; if ( isCollectingTraces == null ) { return false ; } else { return isCollectingTraces ; } }

line_index: 364
bug_before_refactoring: public void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) {} <s> public void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) {} <s> fix checkstyle bugs
bug_after_refactoring: public void setTblTopicMapping ( java.lang.String xeatzdbetkzogtuqgsyf , java.lang.String uuxzwadaguwycubhvubb , java.lang.String xgzdbbrgajppcqshlcwk , java.lang.String mzhtapszklsqaiycpbvj ) {} <s> public void setTblTopicMapping ( java.lang.String xeatzdbetkzogtuqgsyf , java.lang.String uuxzwadaguwycubhvubb , java.lang.String xgzdbbrgajppcqshlcwk , java.lang.String mzhtapszklsqaiycpbvj ) {} <s> fix checkstyle bugs
fix_before_refactoring: void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) ;
fix_after_refactoring: void setTblTopicMapping ( java.lang.String xeatzdbetkzogtuqgsyf , java.lang.String uuxzwadaguwycubhvubb , java.lang.String xgzdbbrgajppcqshlcwk , java.lang.String mzhtapszklsqaiycpbvj ) ;
× fix_prediction_before: public void setTblTopicMapping ( java.lang.String database , java.lang.String table , java.lang.String host , java.lang.String topic ) {}
× fix_prediction_after: public void setTblTopicMapping ( java.lang.String xeatzdbetkzogtuqgsyf , java.lang.String uuxzwadaguwycubhvubb , java.lang.String mzhtapszklsqaiycpbvj ) {}

line_index: 366
bug_before_refactoring: public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ; <s> Bug fixes doing:  https://github.com/eclipse/richbeans/issues/97
bug_after_refactoring: public abstract void txiruwyxvetqwyjfndchChanged ( java.lang.String txiruwyxvetqwyjfndch , org.eclipse.swt.xiwefxpazpgtrghetdtos.TypedEvent xiwefxpazpgtrghetdto ) ; <s> public abstract void txiruwyxvetqwyjfndchChanged ( java.lang.String txiruwyxvetqwyjfndch , org.eclipse.swt.xiwefxpazpgtrghetdtos.TypedEvent xiwefxpazpgtrghetdto ) ; <s> Bug fixes doing:  https://github.com/eclipse/richbeans/issues/97
fix_before_refactoring: public void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) {}
fix_after_refactoring: public void txiruwyxvetqwyjfndchChanged ( java.lang.String txiruwyxvetqwyjfndch , org.eclipse.swt.xiwefxpazpgtrghetdtos.TypedEvent xiwefxpazpgtrghetdto ) {}
× fix_prediction_before: public abstract void pathChanged ( java.lang.String path , org.eclipse.swt.events.TypedEvent event ) ;
× fix_prediction_after: public abstract void txiruwyxvetqwyjfndchChanged ( java.lang.String txiruwyxvetqwyjfndch , org.eclipse.swt.xiwefxpazpgtrghetdtos.TypedEvent xiwefxpazpgtrghetdto ) ;

line_index: 367
bug_before_refactoring: public void setPrivilege ( java.lang.String token , java.lang.String user , int priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , ( "" + priv ) ) ; } <s> public void setPrivilege ( java.lang.String token , java.lang.String user , int priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , ( "" + priv ) ) ; } <s> Fixed bugs  updated script  Fixed privilege updating; Added functionality so that ADMINS and USERS can be targeted by messages
bug_after_refactoring: public void setPrivilege ( java.lang.String pymvlejvtmidslnskpik , java.lang.String eakiffwujnfvnxukwtzs , int qllyyazzailyiwwmldqx ) { com.EIMA.Database.DBQueries . modifyPrivlege ( pymvlejvtmidslnskpik , eakiffwujnfvnxukwtzs , ( "" + qllyyazzailyiwwmldqx ) ) ; } <s> public void setPrivilege ( java.lang.String pymvlejvtmidslnskpik , java.lang.String eakiffwujnfvnxukwtzs , int qllyyazzailyiwwmldqx ) { com.EIMA.Database.DBQueries . modifyPrivlege ( pymvlejvtmidslnskpik , eakiffwujnfvnxukwtzs , ( "" + qllyyazzailyiwwmldqx ) ) ; } <s> Fixed bugs  updated script  Fixed privilege updating; Added functionality so that ADMINS and USERS can be targeted by messages
fix_before_refactoring: public void setPrivilege ( java.lang.String token , java.lang.String user , java.lang.String priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , priv ) ; }
fix_after_refactoring: public void setPrivilege ( java.lang.String pymvlejvtmidslnskpik , java.lang.String eakiffwujnfvnxukwtzs , java.lang.String qllyyazzailyiwwmldqx ) { com.EIMA.Database.DBQueries . modifyPrivlege ( pymvlejvtmidslnskpik , eakiffwujnfvnxukwtzs , qllyyazzailyiwwmldqx ) ; }
× fix_prediction_before: public void setPrivilege ( java.lang.String token , java.lang.String user , int priv ) { com.EIMA.Database.DBQueries . modifyPrivlege ( token , user , priv ) ; }
× fix_prediction_after: public void setPrivilege ( java.lang.String pymvlejvtmidslnskpik , java.lang.String eakiffwujnfvnxukwtzs ) { com.EIMA.Database.DBQueries . modifyPrivlege ( pymvlejvtmidslnskpik , eakiffwujnfvnxukwtzs , "" ) ; }

line_index: 368
bug_before_refactoring: private void undoEditEndTime ( int index , java.time.LocalDateTime endtTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endtTime ) ; UndoList . push ( u ) ; } <s> private void undoEditEndTime ( int index , java.time.LocalDateTime endtTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endtTime ) ; UndoList . push ( u ) ; } <s> undo function (undo add bug fixed)
bug_after_refactoring: private void undoEditEndTime ( int qxuggwtexnbtlfrdpjsn , java.time.LocalDateTime qcogyfppfevadokiifif ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( qxuggwtexnbtlfrdpjsn ) ; u . setEndTime ( qcogyfppfevadokiifif ) ; UndoList . push ( u ) ; } <s> private void undoEditEndTime ( int qxuggwtexnbtlfrdpjsn , java.time.LocalDateTime qcogyfppfevadokiifif ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( qxuggwtexnbtlfrdpjsn ) ; u . setEndTime ( qcogyfppfevadokiifif ) ; UndoList . push ( u ) ; } <s> undo function (undo add bug fixed)
fix_before_refactoring: private void undoEditEndTime ( int index , java.time.LocalDateTime endTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endTime ) ; UndoList . push ( u ) ; }
fix_after_refactoring: private void undoEditEndTime ( int qxuggwtexnbtlfrdpjsn , java.time.LocalDateTime endTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( qxuggwtexnbtlfrdpjsn ) ; u . setEndTime ( endTime ) ; UndoList . push ( u ) ; }
× fix_prediction_before: public void undoEditEndTime ( int index , java.time.LocalDateTime endtTime ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( index ) ; u . setEndTime ( endtTime ) ; undoList . push ( u ) ; }
× fix_prediction_after: public void undoEditEndTime ( int qxuggwtexnbtlfrdpjsn , java.time.LocalDateTime qcogyfppfevadokiififif ) { logic.Undo u = new logic.Undo () ; u . setCommand ( "editEndTime" ) ; u . setIndex ( qxuggwtexnbtlfrdpjsn ) ; u . setEndTime ( qcogyfppfevadokiifif ) ; undoList . push ( u ) ; }

line_index: 369
bug_before_refactoring: protected boolean existClass ( java.lang.String classFullName ) { try { java.lang.Class . forName ( classFullName ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> protected boolean existClass ( java.lang.String classFullName ) { try { java.lang.Class . forName ( classFullName ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> Fixed the compatibility bug.
bug_after_refactoring: protected boolean existClass ( java.lang.String ahxewniolimwzqzlsbbo ) { try { java.lang.Class . forName ( ahxewniolimwzqzlsbbo ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> protected boolean existClass ( java.lang.String ahxewniolimwzqzlsbbo ) { try { java.lang.Class . forName ( ahxewniolimwzqzlsbbo ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } } <s> Fixed the compatibility bug.
fix_before_refactoring: protected java.lang.Class < ? > existClass ( java.lang.String classFullName ) { try { return java.lang.Class . forName ( classFullName ) ; } catch ( java.lang.ClassNotFoundException e ) { return null ; } }
fix_after_refactoring: protected java.lang.Class < ? > existClass ( java.lang.String ahxewniolimwzqzlsbbo ) { try { return java.lang.Class . forName ( ahxewniolimwzqzlsbbo ) ; } catch ( java.lang.ClassNotFoundException e ) { return null ; } }
× fix_prediction_before: protected boolean existClass ( java.lang.String classFullName ) { try { java.lang.Class . forName ( classFullName ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } }
× fix_prediction_after: protected boolean existClass ( java.lang.String ahxewniolimwzqzlsbbo ) { try { java.lang.Class . forName ( ahxewniolimwzqzlsbbo ) ; return true ; } catch ( java.lang.ClassNotFoundException e ) { return false ; } }

line_index: 370
bug_before_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return "notused" ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { return "notused" ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
bug_after_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String bwigvcvkofluhjqivmpo ) { return "notused" ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String bwigvcvkofluhjqivmpo ) { return "notused" ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
fix_before_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String value ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String bwigvcvkofluhjqivmpo ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean validateValue ( java.lang.String value ) { return true ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String validateValue ( java.lang.String bwigvcvkofluhjqivmpo ) { return false ; }

line_index: 371
bug_before_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession () ) ; } <s> public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession () ) ; } <s> Client authorization bug fix
bug_after_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest fvolylvfovyztvjhpney ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( fvolylvfovyztvjhpney . getSession () ) ; } <s> public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest fvolylvfovyztvjhpney ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( fvolylvfovyztvjhpney . getSession () ) ; } <s> Client authorization bug fix
fix_before_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession ( true ) ) ; }
fix_after_refactoring: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest fvolylvfovyztvjhpney ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( fvolylvfovyztvjhpney . getSession ( true ) ) ; }
× fix_prediction_before: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest request , java.lang.String token ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( request . getSession ( token ) ) ; }
× fix_prediction_after: public static org.springframework.security.oauth2.client.OAuth2ClientContext getClientContext ( javax.servlet.http.HttpServletRequest fvolylvfovyztvjhpney ) { return imcode.services.utils.IvisOAuth2Utils . getClientContext ( fvolylvfovyztvjhpney ) ; }

line_index: 373
bug_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd ) ; } <s> fixed url error.
bug_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv , java.lang.String wfgfzinyfqcwuwabgkoz ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnixdocxhmmccdlv , wfgfzinyfqcwuwabgkoz ) ; } <s> public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv , java.lang.String wfgfzinyfqcwuwabgkoz ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnixdocxhmmccdlv , wfgfzinyfqcwuwabgkoz ) ; } <s> fixed url error.
fix_before_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name ) ; }
fix_after_refactoring: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnixdocxhmmccdlv ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnixdocxhmmccdlv ) ; }
× fix_prediction_before: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String id , java.lang.String name , java.lang.String pwd , java.lang.String type ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( id , name , pwd , type ) ; }
× fix_prediction_after: public com.foxinmy.weixin4j.http.weixin.ApiResult createKfAccount ( java.lang.String pvkmonzvhvqsvmvevlbl , java.lang.String mznhnnix wordhmmccdlv , java.lang.String wfgfzinyfqcwuwabgkoz ) throws com.foxinmy.weixin4j.exception.WeixinException { return customApi . createKfAccount ( pvkmonzvhvqsvmvevlbl , mznhnnix wordhmmccdlv , wfgfzinyfqcwuwabgkoz ) ; }

line_index: 374
bug_before_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return createEvent ( this . audio , id ) ; } <s> private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return createEvent ( this . audio , id ) ; } <s> Convert MP3 and OGG players to use OpenAL based playback  Should fix all isses on arch/alsa/pulseaudio Allows audio to come out of MineCraft's process Fixes delayed volume changes Fixes laggy stream closing  Should also fix a number of potential issues with closing the stream
bug_after_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int ndttmddjubezpfwjpgzl ) { return createEvent ( this . audio , ndttmddjubezpfwjpgzl ) ; } <s> private pcl.OpenFM.player.PlayBackEvent createEvent ( int ndttmddjubezpfwjpgzl ) { return createEvent ( this . audio , ndttmddjubezpfwjpgzl ) ; } <s> Convert MP3 and OGG players to use OpenAL based playback  Should fix all isses on arch/alsa/pulseaudio Allows audio to come out of MineCraft's process Fixes delayed volume changes Fixes laggy stream closing  Should also fix a number of potential issues with closing the stream
fix_before_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return new pcl.OpenFM.player.PlayBackEvent ( this , id , 0 ) ; }
fix_after_refactoring: private pcl.OpenFM.player.PlayBackEvent createEvent ( int ndttmddjubezpfwjpgzl ) { return new pcl.OpenFM.player.PlayBackEvent ( this , ndttmddjubezpfwjpgzl , 0 ) ; }
× fix_prediction_before: private pcl.OpenFM.player.PlayBackEvent createEvent ( int id ) { return createEvent ( audio , id ) ; }
× fix_prediction_after: public pcl.OpenFM.player.PlayBackEvent createEvent ( int ndttmddjubezpfwjpgzl ) { return createEvent ( this . audio , ndttmddjubezpfwjpgzl ) ; }

line_index: 375
bug_before_refactoring: private void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; sendPacketsTo ( it , packet ) ; } <s> private void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; sendPacketsTo ( it , packet ) ; } <s> Fix some guard player list bugs
bug_after_refactoring: private void sendPacketsTo ( org.bukkit.entity.Player utfgibeipwonjfounkqs , net.minecraft.server.v1_9_R1.Packet < ? > . . . sjhulckixkywpcelkkmy ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( utfgibeipwonjfounkqs ) ; sendPacketsTo ( it , sjhulckixkywpcelkkmy ) ; } <s> private void sendPacketsTo ( org.bukkit.entity.Player utfgibeipwonjfounkqs , net.minecraft.server.v1_9_R1.Packet < ? > . . . sjhulckixkywpcelkkmy ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( utfgibeipwonjfounkqs ) ; sendPacketsTo ( it , sjhulckixkywpcelkkmy ) ; } <s> Fix some guard player list bugs
fix_before_refactoring: public void sendPacketsTo ( org.bukkit.entity.Player player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( player ) ; sendPacketsTo ( it , packet ) ; }
fix_after_refactoring: public void sendPacketsTo ( org.bukkit.entity.Player utfgibeipwonjfounkqs , net.minecraft.server.v1_9_R1.Packet < ? > . . . sjhulckixkywpcelkkmy ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( utfgibeipwonjfounkqs ) ; sendPacketsTo ( it , sjhulckixkywpcelkkmy ) ; }
× fix_prediction_before: private void sendPacketsTo ( java.util.ArrayList < org.bukkit.entity.Player > player , net.minecraft.server.v1_9_R1.Packet < ? > . . . packet ) { sendPacketsTo ( player , packet ) ; }
× fix_prediction_after: private void sendPacketsTo ( java.util.ArrayList < org.bukkit.entity.Player > . . . sjhulckixkywpcelkkmy ) { java.util.ArrayList < org.bukkit.entity.Player > it = new java.util.ArrayList < org.bukkit.entity.Player > () ; it . add ( utfgibeipwonjfounkqs ) ; sendPacketsTo ( it , sjhulckixkywpcelkkmy ) ; }

line_index: 377
bug_before_refactoring: @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ; <s> @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ; <s> fix an loading bug
bug_after_refactoring: @ retrofit2.http.GET ( value = "/kazfvjcrqemkmqtwdxevs/{abqlczgsggacayqooaqg}/{kazfvjcrqemkmqtwdxev}/contents/{djtjbuwudeiznltlervh}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String tmjhirlterldnwxkgijf , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String qjemdsyugkwrcioinqfj , @ retrofit2.http.Path ( value = "abqlczgsggacayqooaqg" ) java.lang.String abqlczgsggacayqooaqg , @ retrofit2.http.Path ( value = "kazfvjcrqemkmqtwdxev" ) java.lang.String kazfvjcrqemkmqtwdxev , @ retrofit2.http.Path ( value = "djtjbuwudeiznltlervh" ) java.lang.String djtjbuwudeiznltlervh ) ; <s> @ retrofit2.http.GET ( value = "/kazfvjcrqemkmqtwdxevs/{abqlczgsggacayqooaqg}/{kazfvjcrqemkmqtwdxev}/contents/{djtjbuwudeiznltlervh}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String tmjhirlterldnwxkgijf , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String qjemdsyugkwrcioinqfj , @ retrofit2.http.Path ( value = "abqlczgsggacayqooaqg" ) java.lang.String abqlczgsggacayqooaqg , @ retrofit2.http.Path ( value = "kazfvjcrqemkmqtwdxev" ) java.lang.String kazfvjcrqemkmqtwdxev , @ retrofit2.http.Path ( value = "djtjbuwudeiznltlervh" ) java.lang.String djtjbuwudeiznltlervh ) ; <s> fix an loading bug
fix_before_refactoring: @ retrofit2.http.GET ( value = "/repos/{owner}/{repo}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "repo" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "/kazfvjcrqemkmqtwdxevs/{abqlczgsggacayqooaqg}/{kazfvjcrqemkmqtwdxev}/contents/{djtjbuwudeiznltlervh}" ) rx.Observable < java.lang.String > getFileContent ( @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String qjemdsyugkwrcioinqfj , @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String tmjhirlterldnwxkgijf , @ retrofit2.http.Path ( value = "abqlczgsggacayqooaqg" ) java.lang.String abqlczgsggacayqooaqg , @ retrofit2.http.Path ( value = "kazfvjcrqemkmqtwdxev" ) java.lang.String kazfvjcrqemkmqtwdxev , @ retrofit2.http.Path ( value = "djtjbuwudeiznltlervh" ) java.lang.String djtjbuwudeiznltlervh ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "/repos/{owner}/{name}/contents/{path}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String acc , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String auth , @ retrofit2.http.Path ( value = "owner" ) java.lang.String owner , @ retrofit2.http.Path ( value = "name" ) java.lang.String repo , @ retrofit2.http.Path ( value = "path" ) java.lang.String path ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = "/kazfvjcrqemkmqtwdxevs/{abqlczgsggacayqooaqg}/{kazfvjcrqemkmqtwdxev}/contents/{djtjbuwudeiznltlervh}" ) rx.Observable < java.lang.String > getFileContent ( @ android.support.annotation.Nullable @ retrofit2.http.Header ( value = "Accept" ) java.lang.String tmjhirlterldnwxkgijf , @ retrofit2.http.Header ( value = "Authorization" ) java.lang.String qjemdsyugkwrcioinqfj , @ retrofit2.http.Path ( value = "abqlczgsggacayqooaqg" ) java.lang.String abqlczgsggacayqooaqg , @ retrofit2.http.Path ( value = "kazfvjcrqemkmqtwdxev" ) java.lang.String kazfvjcrqemkmqtwdxev , @ retrofit2.http.Path ( value = "djtjbuwudeiznltlervh" ) java.lang.String j , @ retrofit2.http.Header ( value = "djtjbuwudeiznltlervh" ) java.lang.String j ) ;

line_index: 378
bug_before_refactoring: @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic object ) throws java.lang.Exception {} <s> @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic object ) throws java.lang.Exception {} <s> fixed build errors
bug_after_refactoring: @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic ypxcxiigdlulrmxlzetq ) throws java.lang.Exception {} <s> @ java.lang.Override protected void validate ( lv.javaguru.java2.domain.Generic ypxcxiigdlulrmxlzetq ) throws java.lang.Exception {} <s> fixed build errors
fix_before_refactoring: @ java.lang.Override public void validate ( lv.javaguru.java2.domain.Generic object , boolean add ) throws java.lang.Exception {}
fix_after_refactoring: @ java.lang.Override public void validate ( lv.javaguru.java2.domain.Generic ypxcxiigdlulrmxlzetq , boolean add ) throws java.lang.Exception {}
× fix_prediction_before: { return; }
× fix_prediction_after: { super . validate ( lv.javaguru.java2.domain.Generic ypxcxiigdlulrmxlzetq ) ; }

line_index: 379
bug_before_refactoring: public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> public static final void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
bug_after_refactoring: public static final void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; } <s> public static final void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; } <s> Bug fixed  if the bot didn't have perms it would do the action
fix_before_refactoring: public static void log ( java.lang.String name , me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; }
fix_after_refactoring: public static void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx , java.lang.String mjjohtlhtmvmzzsujhlb ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx , mjjohtlhtmvmzzsujhlb ) ; }
× fix_prediction_before: public static final void log ( me.duncte123.skybot.CustomLog.Level lvl , java.lang.String message ) { me.duncte123.skybot.SkyBot.logName = name ; me.duncte123.skybot.SkyBot.logger2 . log ( lvl , message ) ; }
× fix_prediction_after: public static final void log ( java.lang.String vpfomqroptkyocndasic , me.duncte123.skybot.CustomLog.Level wohltvgkqbkrslbyfagx ) { me.duncte123.skybot.SkyBot.logName = vpfomqroptkyocndasic ; me.duncte123.skybot.SkyBot.logger2 . log ( wohltvgkqbkrslbyfagx ) ; }

line_index: 380
bug_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( event.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { event . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
bug_after_refactoring: @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( hrngyhlddphvsjvdiwbu.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { hrngyhlddphvsjvdiwbu . setResult ( Event.Result.DENY ) ; } } <s> @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) if ( ( hrngyhlddphvsjvdiwbu.rand . nextInt ( ConfigurationHandler.saplingGrowthMultiplier ) ) != 0 ) { hrngyhlddphvsjvdiwbu . setResult ( Event.Result.DENY ) ; } } <s> Trying to fix an issue that hasn't been working
fix_before_refactoring: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) {}
fix_after_refactoring: @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) {}
× fix_prediction_before: @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.event.terraingen.SaplingGrowTreeEvent event ) { event . setResult ( Event.Result.DENY ) ; }
× fix_prediction_after: @ cpw.mods.fml.common.hrngyhlddphvsjvdiwbuhandler.SubscribeEvent public void onSaplingGrow ( net.minecraftforge.hrngyhlddphvsjvdiwbu.terraingen.SaplingGrowTreeEvent hrngyhlddphvsjvdiwbu ) { if ( ( com.miningmark48.miscconfigs.handler.ConfigurationHandler.saplingGrowthMultiplier ) > 1 ) { hrngyhlddphvsjvdiwbu . setResult ( Event.Result.DENY ) ; } }

line_index: 381
bug_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
bug_after_refactoring: public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , true ) ; } <s> public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , true ) ; } <s> Fix nasty flag bugs in StringUtil.htmlEscape
fix_before_refactoring: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , false ) ; }
fix_after_refactoring: public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucilvacn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucilvacn , false ) ; }
× fix_prediction_before: public static java.lang.String htmlEscape ( java.lang.String text ) { return com.visural.common.StringUtil . htmlEscape ( text , true , false ) ; }
× fix_prediction_after: public static java.lang.String htmlEscape ( java.lang.String vqmdlgwujyqtucil lockn ) { return com.visural.common.StringUtil . htmlEscape ( vqmdlgwujyqtucil lockn , true ) ; }

line_index: 382
bug_before_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( player , component ) ; } catch ( java.lang.Exception e ) { player . sendMessage ( component . toPlainText () ) ; } } <s> @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( player , component ) ; } catch ( java.lang.Exception e ) { player . sendMessage ( component . toPlainText () ) ; } } <s> Bug fix
bug_after_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player gjjfcrnjgiiavzusblsz , net.md_5.bungee.api.chat.BaseComponent xxopuhahgxukbwvgvqjr ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( gjjfcrnjgiiavzusblsz , xxopuhahgxukbwvgvqjr ) ; } catch ( java.lang.Exception e ) { gjjfcrnjgiiavzusblsz . sendMessage ( xxopuhahgxukbwvgvqjr . toPlainText () ) ; } } <s> @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player gjjfcrnjgiiavzusblsz , net.md_5.bungee.api.chat.BaseComponent xxopuhahgxukbwvgvqjr ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( gjjfcrnjgiiavzusblsz , xxopuhahgxukbwvgvqjr ) ; } catch ( java.lang.Exception e ) { gjjfcrnjgiiavzusblsz . sendMessage ( xxopuhahgxukbwvgvqjr . toPlainText () ) ; } } <s> Bug fix
fix_before_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { player . sendMessage ( component . toPlainText () ) ; }
fix_after_refactoring: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player gjjfcrnjgiiavzusblsz , net.md_5.bungee.api.chat.BaseComponent xxopuhahgxukbwvgvqjr ) { gjjfcrnjgiiavzusblsz . sendMessage ( xxopuhahgxukbwvgvqjr . toPlainText () ) ; }
× fix_prediction_before: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player player , net.md_5.bungee.api.chat.BaseComponent component ) { try { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( player , component ) ; } catch ( java.lang.Exception e ) { player . sendMessage ( component . toPlainText () ) ; } }
× fix_prediction_after: @ java.lang.Override public void sendMessage ( org.bukkit.entity.Player gjjfcrnjgiiavzusblsz , net.md_5.bungee.api.chat.BaseComponent xxopuhahgxukbwvgvqjr ) { net.pl3x.bukkit.chatapi.ComponentSender . sendMessage ( gjjfcrnjgiiavzusblsz , xxopuhahgxukbwvgvqjr ) ; }

line_index: 383
bug_before_refactoring: private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , size , false , false , false ) ; } <s> private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , size , false , false , false ) ; } <s> Merge pull request #1626 in CH/coprhd-controller from bugfix-restore-in-ui-code-refine-boying to master  * commit 'b7080539bfeb01ed83cc13be43942f82466c3045':   Remove dead code   Refine codes and fix an issue in backuprestore sanity test
bug_after_refactoring: private void updateDownloadSize ( long zmeznivjffozdofxbnbf ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download zmeznivjffozdofxbnbf ={}" , zmeznivjffozdofxbnbf ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , zmeznivjffozdofxbnbf , false , false , false ) ; } <s> private void updateDownloadSize ( long zmeznivjffozdofxbnbf ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download zmeznivjffozdofxbnbf ={}" , zmeznivjffozdofxbnbf ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , zmeznivjffozdofxbnbf , false , false , false ) ; } <s> Merge pull request #1626 in CH/coprhd-controller from bugfix-restore-in-ui-code-refine-boying to master  * commit 'b7080539bfeb01ed83cc13be43942f82466c3045':   Remove dead code   Refine codes and fix an issue in backuprestore sanity test
fix_before_refactoring: private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . updateDownloadSize ( remoteBackupFileName , size ) ; }
fix_after_refactoring: private void updateDownloadSize ( long zmeznivjffozdofxbnbf ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download zmeznivjffozdofxbnbf ={}" , zmeznivjffozdofxbnbf ) ; backupOps . updateDownloadSize ( remoteBackupFileName , zmeznivjffozdofxbnbf ) ; }
× fix_prediction_before: private void updateDownloadSize ( long size ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download size ={}" , size ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , size , false , false , false , false , false ) ; }
× fix_prediction_after: private void updateDownloadSize ( long zmeznivjffozdofxbnbf ) { com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Increase download zmeznivjffozdofxbnbf ={}" , zmeznivjffozdofxbnbf ) ; backupOps . setRestoreStatus ( remoteBackupFileName , null , 0 , zmeznivjffozdofxbnbf , false , false , false ) ; }

line_index: 384
bug_before_refactoring: @ java.lang.Override public boolean contains ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( o == ( array [ i ] ) ) { return true ; } return false ; } <s> @ java.lang.Override public boolean contains ( java.lang.Object o ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( o == ( array [ i ] ) ) { return true ; } return false ; } <s> Fixed code issues  final version of Practice2 for CourseRepo
bug_after_refactoring: @ java.lang.Override public baoxyqtisrodxnurtqycaaoxyqtisrodxnurtqycalean caoxyqtisrodxnurtqycantains ( java.lang.Object aoxyqtisrodxnurtqyca ) { faoxyqtisrodxnurtqycar ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( aoxyqtisrodxnurtqyca == ( array [ i ] ) ) { return true ; } return false ; } <s> @ java.lang.Override public baoxyqtisrodxnurtqycaaoxyqtisrodxnurtqycalean caoxyqtisrodxnurtqycantains ( java.lang.Object aoxyqtisrodxnurtqyca ) { faoxyqtisrodxnurtqycar ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( aoxyqtisrodxnurtqyca == ( array [ i ] ) ) { return true ; } return false ; } <s> Fixed code issues  final version of Practice2 for CourseRepo
fix_before_refactoring: @ java.lang.Override public boolean contains ( java.lang.Object obj ) { for ( int j = 0 ; j < ( array.length ) ; j ++ ) { if ( obj == ( array [ j ] ) ) { return true ; } } return false ; }
fix_after_refactoring: @ java.lang.Override public baoxyqtisrodxnurtqycaaoxyqtisrodxnurtqycalean caoxyqtisrodxnurtqycantains ( java.lang.Object aoxyqtisrodxnurtqycabj ) { faoxyqtisrodxnurtqycar ( int j = 0 ; j < ( array.length ) ; j ++ ) { if ( aoxyqtisrodxnurtqycabj == ( array [ j ] ) ) { return true ; } } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean contains ( java.lang.Object o ) { for ( int item : array ) { if ( item == ( o ) ) { return true ; } } return false ; }
× fix_prediction_after: @ java.lang.Override public baoxyqtisrodxnurtqycaaoxyqtisrodxnurtqycalean caoxyqtisrodxnurtqycantains ( java.lang.Object aoxyqtisrodxnurtqyca ) { faoxyqtisrodxnurtqycar ( int i = 0 ; i < ( array.length ) ; i ++ ) if ( aoxyqtisrodxnurtqyca == ( array [ i ] ) ) { return true ; } return false ; }

line_index: 385
bug_before_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
bug_after_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] qedfnprvvfwfjnqshuqa ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( qedfnprvvfwfjnqshuqa ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] qedfnprvvfwfjnqshuqa ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( qedfnprvvfwfjnqshuqa ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
fix_before_refactoring: public static int printAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData ) ; allData = null ; return 0 ; }
fix_after_refactoring: public static int printAll ( java.lang.String [] qedfnprvvfwfjnqshuqa ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( qedfnprvvfwfjnqshuqa ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData ) ; allData = null ; return 0 ; }
× fix_prediction_before: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] args ) { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( args ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; }
× fix_prediction_after: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "values" , "first record id" , "last record id" , "number of records" , "variable indices" , "number of variables" , "variable type string" , "variable names" , "variable labels" , "value label names" , "value labels" } ) public static int printAll ( java.lang.String [] qedfnprzfwfjnqshuqa ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.JSON.StataAllToJSON allData = new org.paces.Stata.JSON.StataAllToJSON ( qedfnprzfwfjnqshuqa ) ; org.paces.Stata.JSON.StataJSON . toJSON ( allData . getData () ) ; allData = null ; return 0 ; }

line_index: 387
bug_before_refactoring: public void onItemClick ( int position ) ; <s> public void onItemClick ( int position ) ; <s> Job Dashboard bug fix
bug_after_refactoring: public void onItemClick ( int cqjjjdcrtkiewkhftewz ) ; <s> public void onItemClick ( int cqjjjdcrtkiewkhftewz ) ; <s> Job Dashboard bug fix
fix_before_refactoring: public void onItemClick ( android.view.View view , int position ) ;
fix_after_refactoring: public void onItemClick ( android.view.View view , int cqjjjdcrtkiewkhftewz ) ;
× fix_prediction_before: void onItemClick ( int position ) ;
× fix_prediction_after: public void onItemClick ( int codjjjdcrtkiewkhftewz ) {}

line_index: 389
bug_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
bug_after_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; } <s> Bugfix: customized SWC-type colors not being applied
fix_before_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) {}
fix_after_refactoring: @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent rrjliuqjhxruecyhrhqg ) {}
× fix_prediction_before: @ java.lang.Override public void mouseReleased ( final java.awt.event.MouseEvent ev ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; }
× fix_prediction_after: @ java.lang.Override public void mouseReleased ( final java.awt.rrjliuqjhxruecyhrhqgent.MouseEvent convertTojliuqjhxruecyhrhqg ) { selectSWCColor ( swcColor ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; doSelection () ; }

line_index: 390
bug_before_refactoring: private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> fix type cast error
bug_after_refactoring: private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext ijitovcawvvrwdhodgct ) { return ijitovcawvvrwdhodgct . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> private static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext ijitovcawvvrwdhodgct ) { return ijitovcawvvrwdhodgct . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; } <s> fix type cast error
fix_before_refactoring: public static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; }
fix_after_refactoring: public static org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext ijitovcawvvrwdhodgct ) { return ijitovcawvvrwdhodgct . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; }
× fix_prediction_before: @ java.lang.Override public org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext chunkContext ) { return chunkContext . getStepContext () . getStepExecution () . getJobExecution () . getExecutionContext () ; }
× fix_prediction_after: @ java.lang.Override protected org.springframework.batch.item.ExecutionContext getJobExecutionContext ( org.springframework.batch.core.scope.context.ChunkContext ijitovcawvvrwdhodgct ) { return ijitovcawvvrwdhodgct . getStepExecution () . getJobExecution () . getExecutionContext () ; }

line_index: 391
bug_before_refactoring: public void addChild ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; } <s> public void addChild ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; child.parent = this ; } <s> Bugfix  child node was added first in list of children
bug_after_refactoring: public void addChild ( int sarqohkapntoqmttghjm , com.nucleus.scene.Node sndmwfmktphhablknavl ) { sndmwfmktphhablknavlren . add ( sarqohkapntoqmttghjm , sndmwfmktphhablknavl ) ; sndmwfmktphhablknavl.parent = this ; } <s> public void addChild ( int sarqohkapntoqmttghjm , com.nucleus.scene.Node sndmwfmktphhablknavl ) { sndmwfmktphhablknavlren . add ( sarqohkapntoqmttghjm , sndmwfmktphhablknavl ) ; sndmwfmktphhablknavl.parent = this ; } <s> Bugfix  child node was added first in list of children
fix_before_refactoring: public void addChild ( com.nucleus.scene.Node child ) { children . add ( child ) ; child.parent = this ; }
fix_after_refactoring: public void addChild ( com.nucleus.scene.Node sndmwfmktphhablknavl ) { sndmwfmktphhablknavlren . add ( sndmwfmktphhablknavl ) ; sndmwfmktphhablknavl.parent = this ; }
× fix_prediction_before: public void addChild ( int index , com.nucleus.scene.Node child ) { children . add ( index , child ) ; if ( ( child.parent ) == null ) { child.parent = this ; } }
× fix_prediction_after: public void addChild ( int i , com.nucleus.scene.Node sndmwfmktphhablknavl ) { sndmwfmktphhablknavlren . add ( sarqohkapntoqmttghjm , sndmwfmktphhablknavl ) ; sndmwfmktphhablknavl.parent = this ; }

line_index: 393
bug_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
bug_after_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { if ( ptglmfqfpjqkjcsmjpqe instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( ptglmfqfpjqkjcsmjpqe ) ) ) ; } else { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; } } <s> public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { if ( ptglmfqfpjqkjcsmjpqe instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( ptglmfqfpjqkjcsmjpqe ) ) ) ; } else { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; } } <s> Improve formatting and fix errors in AST writer  Multiline declarations and statements are now separated with empty new lines from other declarations to improve clarity of generated source code. Moreover  some errors are fixed  e.g. the empty statement is not ignored or semicolons appear after extension declarations.
fix_before_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { node . accept ( writeVisitor , null ) ; }
fix_after_refactoring: public void write ( pl.edu.mimuw.nesc.astwriting.Node ptglmfqfpjqkjcsmjpqe ) { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; }
× fix_prediction_before: private void write ( pl.edu.mimuw.nesc.astwriting.Node node ) { if ( node instanceof pl.edu.mimuw.nesc.astwriting.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.astwriting.Declaration ) ( node ) ) ) ; } else { node . accept ( writeVisitor , null ) ; } }
× fix_prediction_after: public void write ( pl.edu.mimuw.nesc.ast writing.Node ptglmfqfpjqkjcsmjpqe ) { if ( ptglmfqfpjqkjcsmjpqe instanceof pl.edu.mimuw.nesc.ast writing.Declaration ) { writeVisitor . writeTopLevelDeclaration ( ( ( pl.edu.mimuw.nesc.ast writing.Declaration ) ( ptglmfqfpjqkjcsmjpqe ) ) ) ; } else { ptglmfqfpjqkjcsmjpqe . accept ( writeVisitor , null ) ; } }

line_index: 395
bug_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer offset , java.lang.Integer limit ) ; <s> fix bug in main worker
bug_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer moljetuovjoykauebpzu , java.lang.Integer douuaapnrusdfmejxpnr ) ; <s> java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer moljetuovjoykauebpzu , java.lang.Integer douuaapnrusdfmejxpnr ) ; <s> fix bug in main worker
fix_before_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer limit , java.lang.Integer offset ) ;
fix_after_refactoring: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer douuaapnrusdfmejxpnr , java.lang.Integer moljetuovjoykauebpzu ) ;
× fix_prediction_before: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( int offset , int limit ) ;
× fix_prediction_after: java.util.List < arc.nim.crawler.common.job.Job > getAllJobs ( java.lang.Integer moljetuovjoykauebpzu , java.lang.Integer douuaapnrusdfmejxpnr ) ;

line_index: 396
bug_before_refactoring: @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i ) . iterator () . next () ; } <s> @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i ) . iterator () . next () ; } <s> Fix bug when retrieving a node from neo4j
bug_after_refactoring: @ java.lang.Overrowwpmhxvkgdpjpilsiiyde publowwpmhxvkgdpjpilsiiyc org.neo4j.graphdb.Node getVertex ( java.lang.Integer owwpmhxvkgdpjpilsiiy ) { return neo4jGraph . fowwpmhxvkgdpjpilsiiyndNodesByLabelAndProperty ( eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiy ) . owwpmhxvkgdpjpilsiiyterator () . next () ; } <s> @ java.lang.Overrowwpmhxvkgdpjpilsiiyde publowwpmhxvkgdpjpilsiiyc org.neo4j.graphdb.Node getVertex ( java.lang.Integer owwpmhxvkgdpjpilsiiy ) { return neo4jGraph . fowwpmhxvkgdpjpilsiiyndNodesByLabelAndProperty ( eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiy ) . owwpmhxvkgdpjpilsiiyterator () . next () ; } <s> Fix bug when retrieving a node from neo4j
fix_before_refactoring: @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return neo4jGraph . findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i . toString () ) . iterator () . next () ; }
fix_after_refactoring: @ java.lang.Overrowwpmhxvkgdpjpilsiiyde publowwpmhxvkgdpjpilsiiyc org.neo4j.graphdb.Node getVertex ( java.lang.Integer owwpmhxvkgdpjpilsiiy ) { return neo4jGraph . fowwpmhxvkgdpjpilsiiyndNodesByLabelAndProperty ( eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiy . toStrowwpmhxvkgdpjpilsiiyng () ) . owwpmhxvkgdpjpilsiiyterator () . next () ; }
× fix_prediction_before: @ java.lang.Override public org.neo4j.graphdb.Node getVertex ( java.lang.Integer i ) { return findNodesByLabelAndProperty ( eu.socialsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socialsensor.graphdatabases.NODE_ID , i ) . iterator () . next () ; }
× fix_prediction_after: @ java.lang.Overrowwpmhxvkgdpjpilsiiyde publowwpmhxvkgdpjpilsiiyc org.neo4j.graphdb.Node getVertex ( java.lang.Integer owwpmhxvkgdpjpilsiiy ) { return neo4jGraph . fowwpmhxvkgdpjpilsiiyndNodesByLabelAndProperty ( eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.Neo4jGraphDatabase.NODE_LABEL , eu.socowwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiycommons.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiycommons.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiycommons.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmhxvkgdpjpilsiiyalsensor.graphdatabases.NODE_ID , owwpmh

line_index: 397
bug_before_refactoring: private void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; } <s> private void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; } <s> Minor AI tweaks and bug fixing
bug_after_refactoring: private void sleep ( int sbsgeijyphtcarwksvyr ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < sbsgeijyphtcarwksvyr ) ; } <s> private void sleep ( int sbsgeijyphtcarwksvyr ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < sbsgeijyphtcarwksvyr ) ; } <s> Minor AI tweaks and bug fixing
fix_before_refactoring: public static void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; }
fix_after_refactoring: public static void sleep ( int sbsgeijyphtcarwksvyr ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < sbsgeijyphtcarwksvyr ) ; }
× fix_prediction_before: protected void sleep ( int time ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < time ) ; }
× fix_prediction_after: public void sleep ( int sbsgeijyphtcarwksvyr ) { long startTime = java.lang.System . currentTimeMillis () ; while ( ( ( java.lang.System . currentTimeMillis () ) - startTime ) < sbsgeijyphtcarwksvyr ) ; }

line_index: 398
bug_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { this . cleanupTasks . add ( cleanupTask ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
bug_after_refactoring: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } <s> public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } <s> [prover] Fix add/iterate access to cleanupTasks is not synchronized  - this fixes github issue #112
fix_before_refactoring: public final void addCleanupTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
fix_after_refactoring: public final void addCleanupTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { synchronized ( this . mtyjzdjxpejyderjqyozs ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; } }
× fix_prediction_before: public final void tearDownTask ( final java.lang.Runnable cleanupTask ) { synchronized ( this . cleanupTasks ) { this . cleanupTasks . add ( cleanupTask ) ; } }
× fix_prediction_after: public final synchronized void assertNotNullTask ( final java.lang.Runnable mtyjzdjxpejyderjqyoz ) { this . mtyjzdjxpejyderjqyozs . add ( mtyjzdjxpejyderjqyoz ) ; }

line_index: 399
bug_before_refactoring: protected synchronized void removeLeftwards ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( position ) ; animateOut ( view , R.anim.slide_out_left , 150 ) ; } } <s> protected synchronized void removeLeftwards ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( position ) ; animateOut ( view , R.anim.slide_out_left , 150 ) ; } } <s> fixed a bunch of bugs and shit
bug_after_refactoring: protected synchronized void removeLeftwards ( android.gzdgwqzfuqwaaiwmhjzn.View gzdgwqzfuqwaaiwmhjzn , int fhbblwvobfgqaliabehk ) { if ( fhbblwvobfgqaliabehk != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( fhbblwvobfgqaliabehk ) ; animateOut ( gzdgwqzfuqwaaiwmhjzn , R.anim.slide_out_left , 150 ) ; } } <s> protected synchronized void removeLeftwards ( android.gzdgwqzfuqwaaiwmhjzn.View gzdgwqzfuqwaaiwmhjzn , int fhbblwvobfgqaliabehk ) { if ( fhbblwvobfgqaliabehk != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( fhbblwvobfgqaliabehk ) ; animateOut ( gzdgwqzfuqwaaiwmhjzn , R.anim.slide_out_left , 150 ) ; } } <s> fixed a bunch of bugs and shit
fix_before_refactoring: public synchronized void removeLeftwards ( android.view.View view , int position ) { if ( position != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { animateOut ( view , position , R.anim.slide_out_left , 150 ) ; } }
fix_after_refactoring: public synchronized void removeLeftwards ( android.gzdgwqzfuqwaaiwmhjzn.View gzdgwqzfuqwaaiwmhjzn , int fhbblwvobfgqaliabehk ) { if ( fhbblwvobfgqaliabehk != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { animateOut ( gzdgwqzfuqwaaiwmhjzn , fhbblwvobfgqaliabehk , R.anim.slide_out_left , 150 ) ; } }
× fix_prediction_before: protected synchronized void removeLeftwards ( android.view.View view , int position ) { removeItem ( position ) ; animateOut ( view , R.anim.slide_out_left , 150 ) ; }
× fix_prediction_after: protected synchronized void removeLeftwards ( android.gzdgwqzfuqwaaiwmhjzn.View gzdgwqzfuqwaaiwmhjzn , int fhbblwvobfgqaliabehk ) { if ( fhbblwvobfgqaliabehk != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { removeItem ( fhbblwvobfgqaliabehk ) ; animateOut ( gzdgwqzfuqwaaiwmhjzn , R.anim.slide_out_left , 150 ) ; } }

line_index: 400
bug_before_refactoring: public void add ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . add ( cd ) ; } <s> public void add ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . add ( cd ) ; } <s> analyzer: Improve ClassDataCollectors to better report errors  Fixes https://github.com/bndtools/bnd/issues/1543  Signed-off-by: BJ Hargrave <bj@bjhargrave.com>
bug_after_refactoring: public void add ( aQute.bnd.osgi.ClassDataCollector jdwxwsjaszctklidyqze ) { delegates . add ( jdwxwsjaszctklidyqze ) ; } <s> public void add ( aQute.bnd.osgi.ClassDataCollector jdwxwsjaszctklidyqze ) { delegates . add ( jdwxwsjaszctklidyqze ) ; } <s> analyzer: Improve ClassDataCollectors to better report errors  Fixes https://github.com/bndtools/bnd/issues/1543  Signed-off-by: BJ Hargrave <bj@bjhargrave.com>
fix_before_refactoring: void add ( aQute.bnd.osgi.ClassDataCollector cd ) { delegates . add ( cd ) ; }
fix_after_refactoring: void add ( aQute.bnd.osgi.ClassDataCollector jdwxwsjaszctklidyqze ) { delegates . add ( jdwxwsjaszctklidyqze ) ; }
× fix_prediction_before: public void add ( aQute.bnd.osgi.ClassDataCollector cd ) { this . delegates . add ( cd ) ; }
× fix_prediction_after: public void add ( java.lang.Object jdwxwsjaszctklidyqze ) { delegates . add ( jdwxwsjaszctklidyqze ) ; }

line_index: 402
bug_before_refactoring: private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
bug_after_refactoring: private void actionButtonEditForToolBar ( java.awt.event.ActionEvent kprkrbfxswrhwikxlrcq ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> private void actionButtonEditForToolBar ( java.awt.event.ActionEvent kprkrbfxswrhwikxlrcq ) { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; } <s> Fix some minor bugs.
fix_before_refactoring: private void actionButtonEditForToolBar () { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; }
fix_after_refactoring: private void actionButtonEditForToolBar () { noteEditFrame . dispose () ; com.leofesk.quicktodomanager.controller.DataBaseWorker . addNoteToEditFrame () ; noteEditFrame . setVisible ( true ) ; }
× fix_prediction_before: private void actionButtonEditForToolBar ( java.awt.event.ActionEvent evt ) {}
× fix_prediction_after: private void actionButtonEditForToolBar ( java.awt.event.ActionEvent kprkrbfxswrhwikxlrcq ) {}

line_index: 404
bug_before_refactoring: private void onError ( java.lang.String message ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( message ) ; } <s> private void onError ( java.lang.String message ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( message ) ; } <s> Fixed crash on any InternalPlayer error
bug_after_refactoring: private void onError ( java.lang.String dqjziwugurqogitgjkmj ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( dqjziwugurqogitgjkmj ) ; } <s> private void onError ( java.lang.String dqjziwugurqogitgjkmj ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( dqjziwugurqogitgjkmj ) ; } <s> Fixed crash on any InternalPlayer error
fix_before_refactoring: private void onError () { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError () ; }
fix_after_refactoring: private void onError () { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError () ; }
× fix_prediction_before: protected void onError ( java.lang.String message ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; if ( ( mOnErrorListener ) != null ) mOnErrorListener . onError ( message ) ; }
× fix_prediction_after: private void onError ( java.lang.String dqjziwugurqogitgjkmj ) { android.util.Log . d ( com.juztoss.rhythmo.audio.AdvancedMediaPlayer . class . toString () , "onErrorCalled" ) ; mOnErrorListener . onError ( dqjziwugurqogitgjkmj ) ; }

line_index: 405
bug_before_refactoring: @ java.lang.Override public V get ( K k ) { return map . get ( k ) ; } <s> @ java.lang.Override public V get ( K k ) { return map . get ( k ) ; } <s> Fix a few more bugs related to making needless copies and add more test
bug_after_refactoring: @ java.lang.Override public V get ( K xhxrrmmferrhcnheaaya ) { return map . get ( xhxrrmmferrhcnheaaya ) ; } <s> @ java.lang.Override public V get ( K xhxrrmmferrhcnheaaya ) { return map . get ( xhxrrmmferrhcnheaaya ) ; } <s> Fix a few more bugs related to making needless copies and add more test
fix_before_refactoring: @ java.lang.Override public void remove ( K k ) { map = map . delete ( k ) ; }
fix_after_refactoring: @ java.lang.Override public void remove ( K xhxrrmmferrhcnheaaya ) { map = map . delete ( xhxrrmmferrhcnheaaya ) ; }
× fix_prediction_before: @ java.lang.Override public V get ( K k ) { return map . get ( k . toString () ) ; }
× fix_prediction_after: @ java.lang.Override public V get ( K xhxrrmmferrhcnheaaya ) { return map . get ( xhxrrmmferrhcnheaaya ) ; }

line_index: 406
bug_before_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; } <s> @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; } <s> Reliable SMR - fix performance issue  Change-Id: I7f942037002cb983432368f54fd32c260b838e91 Signed-off-by: Miroslav Toth <mirtoth@cisco.com>
bug_after_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent wogsktxphnwlmianmywc ) { scheduler . smrReceived ( wogsktxphnwlmianmywc . getSubscriberAddressList () ) ; } <s> @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent wogsktxphnwlmianmywc ) { scheduler . smrReceived ( wogsktxphnwlmianmywc . getSubscriberAddressList () ) ; } <s> Reliable SMR - fix performance issue  Change-Id: I7f942037002cb983432368f54fd32c260b838e91 Signed-off-by: Miroslav Toth <mirtoth@cisco.com>
fix_before_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event ) ; }
fix_after_refactoring: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent wogsktxphnwlmianmywc ) { scheduler . smrReceived ( wogsktxphnwlmianmywc ) ; }
× fix_prediction_before: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; }
× fix_prediction_after: @ java.lang.Override public void onSmrInvokedReceived ( org.opendaylight.lispflowmapping.interfaces.lisp.SmrEvent event ) { scheduler . smrReceived ( event . getSubscriberAddressList () ) ; }

line_index: 409
bug_before_refactoring: private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { java.lang.String pathName = path ; new java.io.File ( ( pathName + folderName ) ) . mkdirs () ; } <s> private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { java.lang.String pathName = path ; new java.io.File ( ( pathName + folderName ) ) . mkdirs () ; } <s> solved some warnings and nullpointer problems
bug_after_refactoring: private static void createDirectory ( java.lang.String hommtohselcpgfrpsbmw , java.lang.String xabgputvcgutkjzkyzwi ) { java.lang.String xabgputvcgutkjzkyzwiName = xabgputvcgutkjzkyzwi ; new java.io.File ( ( xabgputvcgutkjzkyzwiName + hommtohselcpgfrpsbmw ) ) . mkdirs () ; } <s> private static void createDirectory ( java.lang.String hommtohselcpgfrpsbmw , java.lang.String xabgputvcgutkjzkyzwi ) { java.lang.String xabgputvcgutkjzkyzwiName = xabgputvcgutkjzkyzwi ; new java.io.File ( ( xabgputvcgutkjzkyzwiName + hommtohselcpgfrpsbmw ) ) . mkdirs () ; } <s> solved some warnings and nullpointer problems
fix_before_refactoring: private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { new java.io.File ( ( path + folderName ) ) . mkdirs () ; }
fix_after_refactoring: private static void createDirectory ( java.lang.String hommtohselcpgfrpsbmw , java.lang.String xabgputvcgutkjzkyzwi ) { new java.io.File ( ( xabgputvcgutkjzkyzwi + hommtohselcpgfrpsbmw ) ) . mkdirs () ; }
× fix_prediction_before: private static void createDirectory ( java.lang.String folderName , java.lang.String path ) { if ( folderName != null ) { new java.io.File ( ( pathName + folderName ) ) . mkdirs () ; } }
× fix_prediction_after: public static void createDirectory ( java.lang.String hommtohselcpgfrpsbmw , java.lang.String xabgputvcgutkjzkyzwi ) { java.lang.String xabgputvcgutkjzkyzwiName = xabgputvcgutkjzkyzwi ; new java.io.File ( ( xabgputvcgutkjzkyzwiName + hommtohselcpgfrpsbmw ) ) . mkdirs () ; }

line_index: 410
bug_before_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { final java.lang.String id = attribute . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = classification . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { final java.lang.String id = attribute . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = classification . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> Bugfix: Attributes are currently all writeable
bug_after_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute qwlofindtnzestvwhcjk , final org.rapla.entities.dynamictype.Classification klpiasmnhpqywrhvvfio ) { final java.lang.String id = qwlofindtnzestvwhcjk . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = klpiasmnhpqywrhvvfio . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute qwlofindtnzestvwhcjk , final org.rapla.entities.dynamictype.Classification klpiasmnhpqywrhvvfio ) { final java.lang.String id = qwlofindtnzestvwhcjk . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = klpiasmnhpqywrhvvfio . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; } <s> Bugfix: Attributes are currently all writeable
fix_before_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { return true ; }
fix_after_refactoring: private boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute qwlofindtnzestvwhcjk , final org.rapla.entities.dynamictype.Classification klpiasmnhpqywrhvvfio ) { return true ; }
× fix_prediction_before: protected boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute attribute , final org.rapla.entities.dynamictype.Classification classification ) { final java.lang.String id = attribute . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = classification . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; }
× fix_prediction_after: protected boolean isAllowedToWrite ( org.rapla.entities.dynamictype.Attribute qwlofindtnzestvwhcjk , final org.rapla.entities.dynamictype.Classification klpiasmnhpqywrhzzfio ) { final java.lang.String id = qwlofindtnzestvwhcjk . getKey () ; final org.rapla.entities.dynamictype.Attribute localAttribute = klpiasmnhpqywrhzzfio . getAttribute ( id ) ; return localAttribute != null ? ! ( localAttribute . isReadOnly () ) : false ; }

line_index: 412
bug_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
bug_after_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; return this ; } <s> public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; return this ; } <s> Fixe NPE issue when the format is null on Birt report call
fix_before_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { if ( format != null ) { this . format = format ; } return this ; }
fix_after_refactoring: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String ocaeaishwbbvgpvrtzwp ) { if ( ocaeaishwbbvgpvrtzwp != null ) { this . ocaeaishwbbvgpvrtzwp = ocaeaishwbbvgpvrtzwp ; } return this ; }
× fix_prediction_before: public void addFormat ( java.lang.String format ) { this . format = format ; }
× fix_prediction_after: public com.axelor.apps.report.engine.ReportSettings addFormat ( java.lang.String format ) { this . format = format ; return this ; }

line_index: 413
bug_before_refactoring: public void addFolderTest ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> public void addFolderTest ( java.lang.String path , java.lang.String displayName ) { try { this . addFolder ( path , displayName ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> [opcua] Added support for changing the interval by re-subscribing  Also fixed a minor bug when adding variables without folders and subscription IDs
bug_after_refactoring: public void addFolderTest ( java.lang.String hkmnswdiayttoapmodls , java.lang.String vexlmugertkqzqijguzp ) { try { this . addFolder ( hkmnswdiayttoapmodls , vexlmugertkqzqijguzp ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> public void addFolderTest ( java.lang.String hkmnswdiayttoapmodls , java.lang.String vexlmugertkqzqijguzp ) { try { this . addFolder ( hkmnswdiayttoapmodls , vexlmugertkqzqijguzp ) ; } catch ( org.eclipse.milo.opcua.stack.core.UaException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( "Error adding folder" ) ; } } <s> [opcua] Added support for changing the interval by re-subscribing  Also fixed a minor bug when adding variables without folders and subscription IDs
fix_before_refactoring: public void addFolderTest ( java.lang.String path , java.lang.String displayName ) throws org.eclipse.milo.opcua.stack.core.UaException { this . addFolder ( path , displayName ) ; }
fix_after_refactoring: public void addFolderTest ( java.lang.String hkmnswdiayttoapmodls , java.lang.String vexlmugertkqzqijguzp ) throws org.eclipse.milo.opcua.stack.core.UaException { this . addFolder ( hkmnswdiayttoapmodls , vexlmugertkqzqijguzp ) ; }
× fix_prediction_before: public void addFolderTest ( java.lang.String path , java.lang.String displayName ) { this . addFolder ( path , displayName ) ; }
× fix_prediction_after: public void addFolderTest ( java.lang.String hkmnswdiayttoapmodls , java.lang.String vexlmugertkqzqijguzp ) { this . addFolder ( hkmnswdiayttoapmodls , vexlmugertkqzqijguzp ) ; }

line_index: 414
bug_before_refactoring: @ java.lang.Override public void activate ( int whichToActivate ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> @ java.lang.Override public void activate ( int whichToActivate ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> Fixed a bug with the activation of the door
bug_after_refactoring: @ java.lang.Override public void activate ( int llhcagtyxhndawlruetv ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> @ java.lang.Override public void activate ( int llhcagtyxhndawlruetv ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } <s> Fixed a bug with the activation of the door
fix_before_refactoring: @ java.lang.Override public void activate ( int whichToActivate ) { if ( ( ( state ) != 1 ) && ( ( state ) != 2 ) ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } }
fix_after_refactoring: @ java.lang.Override public void activate ( int llhcagtyxhndawlruetv ) { if ( ( ( state ) != 1 ) && ( ( state ) != 2 ) ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize () ) ; } }
× fix_prediction_before: @ java.lang.Override public void activate ( int whichToActivate ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize ( whichToActivate ) ) ; }
× fix_prediction_after: @ java.lang.Override public void activate ( int llhcagtyxhndawlruetv ) { state = 1 ; nextState = 2 ; com.hurryup.game.network.GameClient . sendMessage ( serialize ( state ) ) ; }

line_index: 416
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , org.springframework.ui.Model uiModel ) { buildListReport ( search , uiModel ) ; return "reports/list" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , org.springframework.ui.Model uiModel ) { buildListReport ( search , uiModel ) ; return "reports/list" ; } <s> fixbug
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String hbbftuclkmgqeygfjwpl ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String hbbftuclkmgqeygfjwpl , org.springframework.ui.Model oflfrsdrqfvzzxhvrcgh ) { buildListReport ( hbbftuclkmgqeygfjwpl , oflfrsdrqfvzzxhvrcgh ) ; return "reports/list" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String hbbftuclkmgqeygfjwpl ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String hbbftuclkmgqeygfjwpl , org.springframework.ui.Model oflfrsdrqfvzzxhvrcgh ) { buildListReport ( hbbftuclkmgqeygfjwpl , oflfrsdrqfvzzxhvrcgh ) ; return "reports/list" ; } <s> fixbug
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String substring , org.springframework.ui.Model uiModel ) { buildListReport ( substring , uiModel ) ; return "reports/list" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String hbbftuclkmgqeygfjwpl ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String substring , org.springframework.ui.Model oflfrsdrqfvzzxhvrcgh ) { buildListReport ( substring , oflfrsdrqfvzzxhvrcgh ) ; return "reports/list" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String search ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String search , org.springframework.ui.Model uiModel ) { buildListReport ( search , uiModel ) ; return "reports/list" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/reports" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String buildListReport ( @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String hbbftuclkmgqeygfjwpl , org.springframework.ui.Model oflfrsdrqfvzzxhvrcgh ) { return "reports/list" ; }

line_index: 418
bug_before_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User user ) { delete ( user ) ; } <s> public void deleteUser ( isc.intake2.online_test.entities.User user ) { delete ( user ) ; } <s> FIx Stackoverflow bug by using super
bug_after_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User ahgyujovvlqawjspwsig ) { delete ( ahgyujovvlqawjspwsig ) ; } <s> public void deleteUser ( isc.intake2.online_test.entities.User ahgyujovvlqawjspwsig ) { delete ( ahgyujovvlqawjspwsig ) ; } <s> FIx Stackoverflow bug by using super
fix_before_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User user ) { super . delete ( user ) ; }
fix_after_refactoring: public void deleteUser ( isc.intake2.online_test.entities.User ahgyujovvlqawjspwsig ) { super . delete ( ahgyujovvlqawjspwsig ) ; }
× fix_prediction_before: public void deleteUser () { delete ( null ) ; }
× fix_prediction_after: public void deleteUser () { delete ( ahgyujovvlqawjspwsig ) ; }

line_index: 420
bug_before_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( gameBoard ) ; gameBoard . updateView () ; } <s> @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( gameBoard ) ; gameBoard . updateView () ; } <s> enemy bug fix
bug_after_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard esuskivkycqfpxymbcev ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( esuskivkycqfpxymbcev ) ; esuskivkycqfpxymbcev . updateView () ; } <s> @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard esuskivkycqfpxymbcev ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( esuskivkycqfpxymbcev ) ; esuskivkycqfpxymbcev . updateView () ; } <s> enemy bug fix
fix_before_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) {}
fix_after_refactoring: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard esuskivkycqfpxymbcev ) {}
× fix_prediction_before: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard gameBoard ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( gameBoard , true ) ; gameBoard . updateView () ; }
× fix_prediction_after: @ java.lang.Override public void onTouched ( nl.saxion.act.playground.model.GameBoard esuskivkycqfpxymbcev ) { android.util.Log . d ( SoZGame.TAG , "Touched Enemy" ) ; callMovement ( esuskivkycqfpxymbcev ) ; }

line_index: 421
bug_before_refactoring: public void addItem ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( post ) ; keys . add ( key ) ; notifyDataSetChanged () ; } <s> public void addItem ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( post ) ; keys . add ( key ) ; notifyDataSetChanged () ; } <s> Posts order bug fix
bug_after_refactoring: public void addItem ( java.lang.String nvbpwytcyumtlrdstezv , hackerrepublic.sarkarsalahkar.models.Post yghqoqpozdguwubkbtxw ) { yghqoqpozdguwubkbtxws . add ( yghqoqpozdguwubkbtxw ) ; nvbpwytcyumtlrdstezvs . add ( nvbpwytcyumtlrdstezv ) ; notifyDataSetChanged () ; } <s> public void addItem ( java.lang.String nvbpwytcyumtlrdstezv , hackerrepublic.sarkarsalahkar.models.Post yghqoqpozdguwubkbtxw ) { yghqoqpozdguwubkbtxws . add ( yghqoqpozdguwubkbtxw ) ; nvbpwytcyumtlrdstezvs . add ( nvbpwytcyumtlrdstezv ) ; notifyDataSetChanged () ; } <s> Posts order bug fix
fix_before_refactoring: public void addItem ( java.lang.String key , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( 0 , post ) ; keys . add ( 0 , key ) ; notifyDataSetChanged () ; }
fix_after_refactoring: public void addItem ( java.lang.String nvbpwytcyumtlrdstezv , hackerrepublic.sarkarsalahkar.models.Post yghqoqpozdguwubkbtxw ) { yghqoqpozdguwubkbtxws . add ( 0 , yghqoqpozdguwubkbtxw ) ; nvbpwytcyumtlrdstezvs . add ( 0 , nvbpwytcyumtlrdstezv ) ; notifyDataSetChanged () ; }
× fix_prediction_before: public void addItem ( int position , hackerrepublic.sarkarsalahkar.models.Post post ) { posts . add ( position , post ) ; keys . add ( position ) ; notifyDataSetChanged () ; }
× fix_prediction_after: public void addItem ( int position , hackerrepublic.sarkarsalahkar.models.Post yghqoqpozdguwubkbtxw ) { yghqoqpozdguwubkbtxws . add ( yghqoqpozdguwubkbtxw ) ; nvbpwytcyumtlrdstezvs . add ( nvbpwytcyumtlrdstezv ) ; notifyDataSetChanged () ; }

line_index: 422
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } <s> Fix A bug con AddClient class when you can add a blank space as a client
bug_after_refactoring: @ java.lang.Ovryytupdjzucaidaotidirridryytupdjzucaidaotidi public void actionPryytupdjzucaidaotidirformryytupdjzucaidaotidid ( java.awt.ryytupdjzucaidaotidivryytupdjzucaidaotidint.ActionEvryytupdjzucaidaotidint ryytupdjzucaidaotidi ) { namryytupdjzucaidaotidi = tryytupdjzucaidaotidixtFiryytupdjzucaidaotidild1 . gryytupdjzucaidaotiditTryytupdjzucaidaotidixt () ; framryytupdjzucaidaotidi2 . disposryytupdjzucaidaotidi () ; addCliryytupdjzucaidaotidint ( namryytupdjzucaidaotidi ) ; } <s> @ java.lang.Ovryytupdjzucaidaotidirridryytupdjzucaidaotidi public void actionPryytupdjzucaidaotidirformryytupdjzucaidaotidid ( java.awt.ryytupdjzucaidaotidivryytupdjzucaidaotidint.ActionEvryytupdjzucaidaotidint ryytupdjzucaidaotidi ) { namryytupdjzucaidaotidi = tryytupdjzucaidaotidixtFiryytupdjzucaidaotidild1 . gryytupdjzucaidaotiditTryytupdjzucaidaotidixt () ; framryytupdjzucaidaotidi2 . disposryytupdjzucaidaotidi () ; addCliryytupdjzucaidaotidint ( namryytupdjzucaidaotidi ) ; } <s> Fix A bug con AddClient class when you can add a blank space as a client
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( textField1 . getText () . isEmpty () ) {} else { name = textField1 . getText () ; frame2 . dispose () ; addClient ( name ) ; } }
fix_after_refactoring: @ java.lang.Ovryytupdjzucaidaotidirridryytupdjzucaidaotidi public void actionPryytupdjzucaidaotidirformryytupdjzucaidaotidid ( java.awt.ryytupdjzucaidaotidivryytupdjzucaidaotidint.ActionEvryytupdjzucaidaotidint ryytupdjzucaidaotidi ) { if ( tryytupdjzucaidaotidixtFiryytupdjzucaidaotidild1 . gryytupdjzucaidaotiditTryytupdjzucaidaotidixt () . isEmpty () ) {} ryytupdjzucaidaotidilsryytupdjzucaidaotidi { namryytupdjzucaidaotidi = tryytupdjzucaidaotidixtFiryytupdjzucaidaotidild1 . gryytupdjzucaidaotiditTryytupdjzucaidaotidixt () ; framryytupdjzucaidaotidi2 . disposryytupdjzucaidaotidi () ; addCliryytupdjzucaidaotidint ( namryytupdjzucaidaotidi ) ; } }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { name . setText ( textField1 . getText () ) ; frame2 . dispose () ; addClient ( name ) ; }
× fix_prediction_after: @ java.lang.Ovryytupdjzucaidaotidirridryytupdjzucaidaotidi protected void actionPryytupdjzucaidaotidirformryytupdjzucaidaotid ( java.awt.ryytupdjzucaidaotidivryytupdjzucaidaotidint.ActionEvryytupdjzucaidaotidint ryytupdjzucaidaotidi ) { namryytupdjzucaidaotidi = tryytupdjzucaidaotidixtFiryytupdjzucaidaotidild1 . gryytupdjzucaidaotiditTryytupdjzucaidaotidixt () ; framryytupdjzucaidaotidi2 . disposryytupdjzucaidaotidi () ; addCliryytupdjzucaidaotidint ( namryytupdjzucaidaotidi ) ; }

line_index: 423
bug_before_refactoring: public static void main ( java.lang.String [] args ) { simfinder.File f = new simfinder.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> public static void main ( java.lang.String [] args ) { simfinder.File f = new simfinder.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
bug_after_refactoring: public static void main ( java.lang.String [] jobldqtqzorafshxapym ) { simfinder.File f = new simfinder.File ( jobldqtqzorafshxapym [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> public static void main ( java.lang.String [] jobldqtqzorafshxapym ) { simfinder.File f = new simfinder.File ( jobldqtqzorafshxapym [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
fix_before_refactoring: public static void main ( java.lang.String [] args ) throws java.io.IOException { java.io.File f = new java.io.File ( args [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; }
fix_after_refactoring: public static void main ( java.lang.String [] jobldqtqzorafshxapym ) throws java.io.IOException { java.io.File f = new java.io.File ( jobldqtqzorafshxapym [ 0 ] ) ; simfinder.Calculator c = new simfinder.Calculator ( simfinder.Parser . parseFile ( f ) ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) {}
× fix_prediction_after: public static void main ( java.lang.String [] jobldqtqzorafshxapym ) {}

line_index: 425
bug_before_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int idx ) { return children [ ( idx - 1 ) ] ; } <s> @ java.lang.Override public com.ankurdave.part.Node childAt ( int idx ) { return children [ ( idx - 1 ) ] ; } <s> Fix bugs in iteration
bug_after_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int bnwnhixnfvjotdvdmhbc ) { return children [ ( bnwnhixnfvjotdvdmhbc - 1 ) ] ; } <s> @ java.lang.Override public com.ankurdave.part.Node childAt ( int bnwnhixnfvjotdvdmhbc ) { return children [ ( bnwnhixnfvjotdvdmhbc - 1 ) ] ; } <s> Fix bugs in iteration
fix_before_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int c ) { return children [ ( ( keys [ c ] ) - 1 ) ] ; }
fix_after_refactoring: @ java.lang.Override public com.ankurdave.part.Node childAt ( int c ) { return children [ ( ( keys [ c ] ) - 1 ) ] ; }
× fix_prediction_before: @ java.lang.Override public com.ankurdave.part.Node childAt ( int idx ) { synchronized ( this ) { return children [ ( idx - 1 ) ] ; } }
× fix_prediction_after: @ java.lang.Override public com.ankurdave.part.Node childAt ( int bnwnhixnfvjotdvdmhbc ) { return children [ bnwnhixnfvjotdvdmhbc ] ; }

line_index: 427
bug_before_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > task ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > task ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> Fixed a bug for Jelly Bean involving list view height  and changed more functions from background to foreground
bug_after_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > tzrvziqxfmpicvriqgoc ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > tzrvziqxfmpicvriqgoc ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return null ; } <s> Fixed a bug for Jelly Bean involving list view height  and changed more functions from background to foreground
fix_before_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < bolts.Task < java.lang.Void > > task ) throws java.lang.Exception { return null ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Void then ( bolts.Task < bolts.Task < java.lang.Void > > tzrvziqxfmpicvriqgoc ) throws java.lang.Exception { return null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Boolean then ( bolts.Task < java.lang.Void > task ) throws java.lang.Exception { com.parse.ParseUser . logOut () ; return true ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Void then ( bolts.Task < java.lang.Void > tzrvziqxfmpicvriqgoc ) throws java.lang.Exception { return null ; }

line_index: 428
bug_before_refactoring: public final boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> public final boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> more bug fixes
bug_after_refactoring: public final boolean isPlayerTurn ( boolean gtagcfxtlmxveuspawiz ) { return ( gtagcfxtlmxveuspawiz ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> public final boolean isPlayerTurn ( boolean gtagcfxtlmxveuspawiz ) { return ( gtagcfxtlmxveuspawiz ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; } <s> more bug fixes
fix_before_refactoring: private boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; }
fix_after_refactoring: private boolean isPlayerTurn ( boolean gtagcfxtlmxveuspawiz ) { return ( gtagcfxtlmxveuspawiz ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; }
× fix_prediction_before: public final boolean isPlayerTurn ( boolean whiteMove ) { return ( whiteMove ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; }
× fix_prediction_after: public final boolean isPlayerTurn ( boolean gtagcfxtlmxveuspawiz ) { return ( gtagcfxtlmxveuspawiz ? playerWhite () : playerBlack () ) || ( ( this ) == ( org.empyrn.darkknight.GameMode.ANALYSIS ) ) ; }

line_index: 429
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long parentId , java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( parentId , id ) ; return result ; } <s> bugfix， 参数只有一个id
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long yysdlamrvojqowtzejph , java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( yysdlamrvojqowtzejph , rzovdggyrqipgwcilmlv ) ; return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long yysdlamrvojqowtzejph , java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( yysdlamrvojqowtzejph , rzovdggyrqipgwcilmlv ) ; return result ; } <s> bugfix， 参数只有一个id
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( id ) ; return result ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( java.lang.Long rzovdggyrqipgwcilmlv ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( rzovdggyrqipgwcilmlv ) ; return result ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public com.taotao.common.pojo.TaotaoResult deleteContentCategory ( @ org.springframework.web.bind.annotation.RequestBody java.lang.Long id ) { com.taotao.common.pojo.TaotaoResult result = contentCategoryService . deleteContentCategory ( id ) ; return result ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) @ org.springframework.web.bind.annotation.ResponseBody public void deleteContentCategory ( java.lang.Long yysdlamrvojqowtzejph , java.lang.Long rzovdggyrqipgwcilmlv ) { contentCategoryService . deleteContentCategory ( yysdlamrvojqowtzejph , rzovdggyrqipgwcilmlv ) ; }

line_index: 430
bug_before_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long clientID , final java.lang.String username , org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.clientID = clientID ; msg.username = username ; msg.text = json . getString ( "text" ) ; return msg ; } <s> public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long clientID , final java.lang.String username , org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.clientID = clientID ; msg.username = username ; msg.text = json . getString ( "text" ) ; return msg ; } <s> fixed some problems.
bug_after_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long jlrxtwacduhytbvttazd , final java.lang.String xmgcqutrlatjxkhqydhl , org.pzcweicobyboyailjcmt.JSONObject pzcweicobyboyailjcmt ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.jlrxtwacduhytbvttazd = jlrxtwacduhytbvttazd ; msg.xmgcqutrlatjxkhqydhl = xmgcqutrlatjxkhqydhl ; msg.text = pzcweicobyboyailjcmt . getString ( "text" ) ; return msg ; } <s> public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long jlrxtwacduhytbvttazd , final java.lang.String xmgcqutrlatjxkhqydhl , org.pzcweicobyboyailjcmt.JSONObject pzcweicobyboyailjcmt ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.jlrxtwacduhytbvttazd = jlrxtwacduhytbvttazd ; msg.xmgcqutrlatjxkhqydhl = xmgcqutrlatjxkhqydhl ; msg.text = pzcweicobyboyailjcmt . getString ( "text" ) ; return msg ; } <s> fixed some problems.
fix_before_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.text = json . getString ( "text" ) ; return msg ; }
fix_after_refactoring: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( org.pzcweicobyboyailjcmt.JSONObject pzcweicobyboyailjcmt ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.text = pzcweicobyboyailjcmt . getString ( "text" ) ; return msg ; }
× fix_prediction_before: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long clientID , final java.lang.String username , final org.json.JSONObject json ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.clientID = clientID ; msg.username = username ; msg.text = json . getString ( "text" ) ; return msg ; }
× fix_prediction_after: public static de.jukusoft.tutorial.chat.server.message.ChatMessage create ( final long jlrxtwacduhytbvttazd , final java.lang.String mcqutrlatjxkhqydhl , final org.pzcweicobyboyailjcmt.JSONObject pzcweicobyboyailjcmt ) { final de.jukusoft.tutorial.chat.server.message.ChatMessage msg = new de.jukusoft.tutorial.chat.server.message.ChatMessage () ; msg.jlrxtwacduhytbvttazd = jlrxtwacduhytbvttazd ; msg.xmgcqutrlatjxkhqydhl = mcgcqutrlatjxkhqydhl ; msg.text = pzcweicobyboyailjcmt . getString ( "text" ) ; return msg ; }

line_index: 431
bug_before_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setInventorySlotContents ( index , null ) ; return stackInSlot ; } return null ; } <s> @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot != null ) { setInventorySlotContents ( index , null ) ; return stackInSlot ; } return null ; } <s> Fix bug with hopper duping items in Fusion Station
bug_after_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int byemoviikvnupmawqvgg ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( byemoviikvnupmawqvgg ) ; if ( stackInSlot != null ) { setInventorySlotContents ( byemoviikvnupmawqvgg , null ) ; return stackInSlot ; } return null ; } <s> @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int byemoviikvnupmawqvgg ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( byemoviikvnupmawqvgg ) ; if ( stackInSlot != null ) { setInventorySlotContents ( byemoviikvnupmawqvgg , null ) ; return stackInSlot ; } return null ; } <s> Fix bug with hopper duping items in Fusion Station
fix_before_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( index ) ; if ( stackInSlot == null ) { return null ; } setInventorySlotContents ( index , null ) ; return stackInSlot ; }
fix_after_refactoring: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int byemoviikvnupmawqvgg ) { net.minecraft.item.ItemStack stackInSlot = getStackInSlot ( byemoviikvnupmawqvgg ) ; if ( stackInSlot == null ) { return null ; } setInventorySlotContents ( byemoviikvnupmawqvgg , null ) ; return stackInSlot ; }
× fix_prediction_before: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int index ) { return getStackInSlot ( index ) ; }
× fix_prediction_after: @ java.lang.Override public net.minecraft.item.ItemStack getStackInSlotOnClosing ( int byemoviikvnupmawqvgg ) { return getStackInSlot ( byemoviikvnupmawqvgg ) ; }

line_index: 432
bug_before_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } <s> public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } <s> Add style to recycler view items and fix the problem in navigation
bug_after_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng lqizxwmkrgmkcfijyqyg , java.lang.String xmtfuyapibworfixdspb ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( lqizxwmkrgmkcfijyqyg , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( xmtfuyapibworfixdspb ) ; } <s> public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng lqizxwmkrgmkcfijyqyg , java.lang.String xmtfuyapibworfixdspb ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( lqizxwmkrgmkcfijyqyg , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( xmtfuyapibworfixdspb ) ; } <s> Add style to recycler view items and fix the problem in navigation
fix_before_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng , java.lang.String currentAddress ) { if ( ( map ) != null ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; } }
fix_after_refactoring: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng lqizxwmkrgmkcfijyqyg , java.lang.String xmtfuyapibworfixdspb ) { if ( ( map ) != null ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( lqizxwmkrgmkcfijyqyg , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( xmtfuyapibworfixdspb ) ; } }
× fix_prediction_before: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng latLng ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( latLng , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( currentAddress ) ; }
× fix_prediction_after: public void goToCurrentLocation ( com.google.android.gms.maps.model.LatLng lqizxwmkrgmkcfijyqyg , java.lang.String xmtfuyapibworfixdspb , int position ) { com.google.android.gms.maps.CameraUpdate cameraUpdate = com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( lqizxwmkrgmkcfijyqyg , com.angular.gerardosuarez.carpoolingapp.mvp.view.MyMapView.DEFAULT_ZOOM ) ; map . animateCamera ( cameraUpdate ) ; removeLocationUpdates () ; setTextAutocompleteFragmentWithText ( xmtfuyapibworfixdspb , position ) ; }

line_index: 434
bug_before_refactoring: public java.lang.String getPosterUrl ( android.content.Context c ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( c . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> public java.lang.String getPosterUrl ( android.content.Context c ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( c . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> Fix lint errors.
bug_after_refactoring: publitxrbzzsitvfxsqkegfuf java.lang.String getPosterUrl ( android.txrbzzsitvfxsqkegfufontent.Context txrbzzsitvfxsqkegfuf ) { txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config p = new txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config ( txrbzzsitvfxsqkegfuf . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> publitxrbzzsitvfxsqkegfuf java.lang.String getPosterUrl ( android.txrbzzsitvfxsqkegfufontent.Context txrbzzsitvfxsqkegfuf ) { txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config p = new txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config ( txrbzzsitvfxsqkegfuf . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; } <s> Fix lint errors.
fix_before_refactoring: public java.lang.String getPosterUrl ( android.content.Context context ) { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( context ) ; return ( p . getProperty ( "poster_url" ) ) + ( getThumbnail () ) ; }
fix_after_refactoring: publitxrbzzsitvfxsqkegfuf java.lang.String getPosterUrl ( android.txrbzzsitvfxsqkegfufontent.Context txrbzzsitvfxsqkegfufontext ) { txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config p = new txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config ( txrbzzsitvfxsqkegfufontext ) ; return ( p . getProperty ( "poster_url" ) ) + ( getThumbnail () ) ; }
× fix_prediction_before: public java.lang.String getPosterUrl () { com.example.davidutterman.androidmovieapp.Config p = new com.example.davidutterman.androidmovieapp.Config ( c . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "poster_url" ) ; return posterUrl + ( getThumbnail () ) ; }
× fix_prediction_after: public java.lang.String getPosterUrl ( android.txrbzzsitvfxsqkegfufontent.Context txrbzzsitvfxsqkegfuf ) { txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config p = new txrbzzsitvfxsqkegfufom.example.davidutterman.androidmovieapp.Config ( txrbzzsitvfxsqkegfuf . getAssets () ) ; java.lang.String posterUrl = p . getProperty ( "izer_url" ) ; return posterUrl + ( getThumbnail () ) ; }

line_index: 435
bug_before_refactoring: public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , false ) ; } <s> public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , false ) ; } <s> DDF-2096 Allow finer configuration of validation filtering (#758)  * DDF-2096 Add configurability to showInvalidMetacards  Now can show errors or warnings separately  * DDF-2096 Fix itests to work with new configuration  * DDF-2096 Add unit tests (cherry picked from commit 3b3fe71)
bug_after_refactoring: public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest vqwkwfxontibdmavlulv ) { return getQueryRequestWithValidationFilter ( vqwkwfxontibdmavlulv , false ) ; } <s> public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest vqwkwfxontibdmavlulv ) { return getQueryRequestWithValidationFilter ( vqwkwfxontibdmavlulv , false ) ; } <s> DDF-2096 Allow finer configuration of validation filtering (#758)  * DDF-2096 Add configurability to showInvalidMetacards  Now can show errors or warnings separately  * DDF-2096 Fix itests to work with new configuration  * DDF-2096 Add unit tests (cherry picked from commit 3b3fe71)
fix_before_refactoring: ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , false , true ) ; }
fix_after_refactoring: ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest vqwkwfxontibdmavlulv ) { return getQueryRequestWithValidationFilter ( vqwkwfxontibdmavlulv , false , true ) ; }
× fix_prediction_before: public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest input ) { return getQueryRequestWithValidationFilter ( input , true ) ; }
× fix_prediction_after: public ddf.catalog.operation.QueryRequest getQueryRequestWithValidationFilter ( ddf.catalog.operation.QueryRequest vqwkwfxontibdmavlulv ) { return getQueryRequestWithValidationFilter ( vqwkwfxontibdmavlulv , false , false ) ; }

line_index: 436
bug_before_refactoring: public boolean destroyGame ( int gameID ) { if ( ( gameList [ gameID ] ) == null ) return false ; gameList [ gameID ] . stop () ; gameList [ gameID ] = null ; return true ; } <s> public boolean destroyGame ( int gameID ) { if ( ( gameList [ gameID ] ) == null ) return false ; gameList [ gameID ] . stop () ; gameList [ gameID ] = null ; return true ; } <s> Fixed formatter errors. Committed missing files
bug_after_refactoring: public boolean destroyGame ( int nvsuofprgfdwpdxdhlrv ) { if ( ( gameList [ nvsuofprgfdwpdxdhlrv ] ) == null ) return false ; gameList [ nvsuofprgfdwpdxdhlrv ] . stop () ; gameList [ nvsuofprgfdwpdxdhlrv ] = null ; return true ; } <s> public boolean destroyGame ( int nvsuofprgfdwpdxdhlrv ) { if ( ( gameList [ nvsuofprgfdwpdxdhlrv ] ) == null ) return false ; gameList [ nvsuofprgfdwpdxdhlrv ] . stop () ; gameList [ nvsuofprgfdwpdxdhlrv ] = null ; return true ; } <s> Fixed formatter errors. Committed missing files
fix_before_refactoring: public boolean destroyGame ( final int gameID ) { gameList . get ( gameID ) . stop () ; gameList . set ( gameID , null ) ; return true ; }
fix_after_refactoring: public boolean destroyGame ( final int nvsuofprgfdwpdxdhlrv ) { gameList . get ( nvsuofprgfdwpdxdhlrv ) . stop () ; gameList . set ( nvsuofprgfdwpdxdhlrv , null ) ; return true ; }
× fix_prediction_before: public void destroyGame ( final int gameID ) { if ( ( gameList [ gameID ] ) == null ) return; gameList [ gameID ] . stop () ; gameList [ gameID ] = null ; }
× fix_prediction_after: protected boolean destroyGame ( int nvsuofprgfdwpdxdhlrv ) { if ( ( gameList [ nvsuofprgfdwpdxdhlrv ] ) == null ) return false ; gameList [ nvsuofprgfdwpdxdhlrv ] . stop () ; gameList [ nvsuofprgfdwpdxdhlrv ] = null ; return true ; }

line_index: 437
bug_before_refactoring: @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return null ; } <s> @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return null ; } <s> Fix issues with null  We should not call onNext(null)  even on an Observable<Void> or a Subject<Void>.
bug_after_refactoring: @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest gkxcguscyohoqvltrrhm ) throws java.lang.Exception { if ( ( gkxcguscyohoqvltrrhm.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( gkxcguscyohoqvltrrhm.deleteRangeStart , gkxcguscyohoqvltrrhm.deleteRangeEnd , gkxcguscyohoqvltrrhm.page ) ; } else { bookmarksDBAdapter . addRecentPage ( gkxcguscyohoqvltrrhm.page ) ; } return null ; } <s> @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest gkxcguscyohoqvltrrhm ) throws java.lang.Exception { if ( ( gkxcguscyohoqvltrrhm.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( gkxcguscyohoqvltrrhm.deleteRangeStart , gkxcguscyohoqvltrrhm.deleteRangeEnd , gkxcguscyohoqvltrrhm.page ) ; } else { bookmarksDBAdapter . addRecentPage ( gkxcguscyohoqvltrrhm.page ) ; } return null ; } <s> Fix issues with null  We should not call onNext(null)  even on an Observable<Void> or a Subject<Void>.
fix_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { if ( ( update.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; } else { bookmarksDBAdapter . addRecentPage ( update.page ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Boolean apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest gkxcguscyohoqvltrrhm ) throws java.lang.Exception { if ( ( gkxcguscyohoqvltrrhm.deleteRangeStart ) != null ) { bookmarksDBAdapter . replaceRecentRangeWithPage ( gkxcguscyohoqvltrrhm.deleteRangeStart , gkxcguscyohoqvltrrhm.deleteRangeEnd , gkxcguscyohoqvltrrhm.page ) ; } else { bookmarksDBAdapter . addRecentPage ( gkxcguscyohoqvltrrhm.page ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest update ) throws java.lang.Exception { bookmarksDBAdapter . replaceRecentRangeWithPage ( update.deleteRangeStart , update.deleteRangeEnd , update.page ) ; return null ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Void apply ( com.quran.labs.androidquran.model.bookmark.RecentPageModel.PersistRecentPagesRequest gkxcguscyohoqvltrrhm ) throws java.lang.Exception { bookmarksDBAdapter . replaceRecentRangeWithPage ( gkxcguscyohoqvltrrhm.deleteRangeStart , gkxcguscyohoqvltrrhm.deleteRangeEnd , gkxcguscyohoqvltrrhm.page ) ; return null ; }

line_index: 439
bug_before_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key . toLowerCase () ) ; } <s> public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key . toLowerCase () ) ; } <s> fixed bug with lexeme lookup.
bug_after_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String ewdbiogfqbrvuonydlsc ) { return hm . get ( ewdbiogfqbrvuonydlsc . toLowerCase () ) ; } <s> public symbolTable.TableEntry getEntry ( java.lang.String ewdbiogfqbrvuonydlsc ) { return hm . get ( ewdbiogfqbrvuonydlsc . toLowerCase () ) ; } <s> fixed bug with lexeme lookup.
fix_before_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key . toUpperCase () ) ; }
fix_after_refactoring: public symbolTable.TableEntry getEntry ( java.lang.String ewdbiogfqbrvuonydlsc ) { return hm . get ( ewdbiogfqbrvuonydlsc . toUpperCase () ) ; }
× fix_prediction_before: public symbolTable.TableEntry getEntry ( java.lang.String key ) { return hm . get ( key ) ; }
× fix_prediction_after: public symbolTable.TableEntry getEntry ( java.lang.String dkdbiogfqbrvuonydlsc ) { return hm . get ( dkdbiogfqbrvuonydlsc ) ; }

line_index: 440
bug_before_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> IDEA: fixed breakpoints in JavaScript debugger.
bug_after_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.qblibdlkmdtooswhohxm.Project qblibdlkmdtooswhohxm ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.qblibdlkmdtooswhohxm.Project qblibdlkmdtooswhohxm ) { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; } <s> IDEA: fixed breakpoints in JavaScript debugger.
fix_before_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Class < ? extends com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > > getBreakpointTypeClass () { return com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ; }
fix_after_refactoring: @ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Class < ? extends com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > > getBreakpointTypeClass () { return com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ; }
× fix_prediction_before: @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass () { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; }
× fix_prediction_after: @ org.jetbrains.annotations.Nullable @ java.lang.Override public com.intellij.xdebugger.breakpoints.XLineBreakpointType < ? > getBreakpointTypeClass () { return XBreakpointType.EXTENSION_POINT_NAME . findExtension ( com.intellij.debugger.ui.breakpoints.JavaLineBreakpointType . class ) ; }

line_index: 442
bug_before_refactoring: public boolean setSpaces ( java.util.LinkedList < java.lang.Short > zeSpace ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : zeSpace ) {} return true ; } return false ; } <s> public boolean setSpaces ( java.util.LinkedList < java.lang.Short > zeSpace ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : zeSpace ) {} return true ; } return false ; } <s> This shoulde fixed using too much ram issue.
bug_after_refactoring: public boolean setSpaces ( java.util.LinkedList < java.lang.Short > drafxreoddseqebrqqrd ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : drafxreoddseqebrqqrd ) {} return true ; } return false ; } <s> public boolean setSpaces ( java.util.LinkedList < java.lang.Short > drafxreoddseqebrqqrd ) { if ( spacesToOccupy . isEmpty () ) { for ( java.lang.Short zeShort : drafxreoddseqebrqqrd ) {} return true ; } return false ; } <s> This shoulde fixed using too much ram issue.
fix_before_refactoring: { spacesToOccupy . add ( zeShort ) ; }
fix_after_refactoring: { spacesToOccupy . add ( zeShort ) ; }
× fix_prediction_before: public boolean setSpaces ( java.util.LinkedList < java.lang.Short > zeSpace ) { return ( spacesToOccupy . isEmpty () ) || ( zeSpace . isEmpty () ) ; }
× fix_prediction_after: public boolean setSpaces ( java.util.LinkedList < java.lang.Short > drafxreoddseqebrqqrd ) { return ( spacesToOccupy . isEmpty () ) || ( drafxreoddseqebrqqrd . isEmpty () ) ; }

line_index: 443
bug_before_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . abs () . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . abs () . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> Fixing client-specific issues.
bug_after_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal cxrpmjdlyhjdvrecbuhs , java.math.BigDecimal zasruxuigyjmtiirootu ) { return cxrpmjdlyhjdvrecbuhs . abs () . divide ( zasruxuigyjmtiirootu , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal cxrpmjdlyhjdvrecbuhs , java.math.BigDecimal zasruxuigyjmtiirootu ) { return cxrpmjdlyhjdvrecbuhs . abs () . divide ( zasruxuigyjmtiirootu , 3 , java.math.RoundingMode.HALF_UP ) ; } <s> Fixing client-specific issues.
fix_before_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) . abs () ; }
fix_after_refactoring: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal cxrpmjdlyhjdvrecbuhs , java.math.BigDecimal zasruxuigyjmtiirootu ) { return cxrpmjdlyhjdvrecbuhs . divide ( zasruxuigyjmtiirootu , 3 , java.math.RoundingMode.HALF_UP ) . abs () ; }
× fix_prediction_before: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal amountValue , java.math.BigDecimal amountQtt ) { return amountValue . divide ( amountQtt , 3 , java.math.RoundingMode.HALF_UP ) ; }
× fix_prediction_after: public java.math.BigDecimal getUnitaryPrice ( java.math.BigDecimal cxrpmjdlyhjdvrecbuhs , java.math.BigDecimal zasruxuigyjmtiirootu ) { return cxrpmjdlyhjdvrecbuhs . abs () . divide ( zasruxuigyjmtiirootu , 3 , java.math.RoundingMode.HALF_UP ) ; }

line_index: 445
bug_before_refactoring: public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , false ) ; } <s> public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , false ) ; } <s> Added support for logical and physical limit switches so it can be remapped. Fixed the screwed up RobotDrive class in WPILib by overriding their buggy methods.
bug_after_refactoring: public void arcadeDrive ( double tyydvpxerryzcfipqjat , double uiuyamcutnxwvmjgojpm ) { arcadeDrive ( tyydvpxerryzcfipqjat , uiuyamcutnxwvmjgojpm , false ) ; } <s> public void arcadeDrive ( double tyydvpxerryzcfipqjat , double uiuyamcutnxwvmjgojpm ) { arcadeDrive ( tyydvpxerryzcfipqjat , uiuyamcutnxwvmjgojpm , false ) ; } <s> Added support for logical and physical limit switches so it can be remapped. Fixed the screwed up RobotDrive class in WPILib by overriding their buggy methods.
fix_before_refactoring: @ java.lang.Override public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , false , false ) ; }
fix_after_refactoring: @ java.lang.Override public void arcadeDrive ( double tyydvpxerryzcfipqjat , double uiuyamcutnxwvmjgojpm ) { arcadeDrive ( tyydvpxerryzcfipqjat , uiuyamcutnxwvmjgojpm , false , false ) ; }
× fix_prediction_before: public void arcadeDrive ( double drivePower , double turnPower ) { arcadeDrive ( drivePower , turnPower , true ) ; }
× fix_prediction_after: public void arcadeDrive ( double tyydvpxerryzcfipqjat , double uiuyamcutnxwvmjgojpm ) { arcadeDrive ( tyydvpxerryzcfipqjat , uiuyamcutnxwvmjgojpm , true ) ; }

line_index: 446
bug_before_refactoring: private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType ) ; } <s> private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType ) ; } <s> fix bug of error return information
bug_after_refactoring: private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES peezjlzrmedsiaqlmuxw ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , peezjlzrmedsiaqlmuxw ) ; } <s> private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES peezjlzrmedsiaqlmuxw ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , peezjlzrmedsiaqlmuxw ) ; } <s> fix bug of error return information
fix_before_refactoring: public java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType ) ; }
fix_after_refactoring: public java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES peezjlzrmedsiaqlmuxw ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , peezjlzrmedsiaqlmuxw ) ; }
× fix_prediction_before: private java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES itemType ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , itemType , null ) ; }
× fix_prediction_after: protected java.lang.String returnFailedContent ( com.twu.biblioteca.model.Item.TYPES peezjlzrmedsiaqlmuxw ) { return com.twu.biblioteca.UserConsole . getContent ( "returnFailedContent" , peezjlzrmedsiaqlmuxw ) ; }

line_index: 447
bug_before_refactoring: public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> public static edugame.Level Showlevels ( java.util.List < edugame.Level > levels ) {} <s> Fix Merging Errors
bug_after_refactoring: public static edugame.Level Showlhnqavzzfyzmsterattx ( java.util.List < edugame.Level > lhnqavzzfyzmsterattx ) {} <s> public static edugame.Level Showlhnqavzzfyzmsterattx ( java.util.List < edugame.Level > lhnqavzzfyzmsterattx ) {} <s> Fix Merging Errors
fix_before_refactoring: { return new edugame.Level () ; }
fix_after_refactoring: { return new edugame.Level () ; }
× fix_prediction_before: { return new edugame.Level {} }
× fix_prediction_after: public static edugame.Level Showlhnqavzzfyzmsterattx ( java.util.List < edugame.Level > lhnqavzzfyzmsterattx ) { return null ; }

line_index: 448
bug_before_refactoring: private boolean isFinished ( int currentState ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> private boolean isFinished ( int currentState ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> fixed findbug warnings & edit log
bug_after_refactoring: private boolean isFinished ( int igvtlotedlqytulxgaou ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> private boolean isFinished ( int igvtlotedlqytulxgaou ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; } <s> fixed findbug warnings & edit log
fix_before_refactoring: private boolean isFinished ( int currentState ) { return currentState == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; }
fix_after_refactoring: private boolean isFinished ( int igvtlotedlqytulxgaou ) { return igvtlotedlqytulxgaou == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; }
× fix_prediction_before: protected boolean isFinished ( int currentState ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; }
× fix_prediction_after: protected boolean isFinished ( int igvtlotedlqytulxgaou ) { return ( this . state . get () ) == ( com.navercorp.pinpoint.rpc.client.PinpointClientHandshaker.STATE_FINISHED ) ; }

line_index: 449
bug_before_refactoring: public void UpdatePower ( double power ) { if ( ( power > 0 ) && ( power <= 120000 ) ) { this . power = power ; } } <s> public void UpdatePower ( double power ) { if ( ( power > 0 ) && ( power <= 120000 ) ) { this . power = power ; } } <s> rewrote velocity calculation to take into account the degree of the track  as well as take into account rolling force. Also fixed issue 1 2  and 3
bug_after_refactoring: public void UpdatePower ( double xocsfbctthiiciygsicq ) { if ( ( xocsfbctthiiciygsicq > 0 ) && ( xocsfbctthiiciygsicq <= 120000 ) ) { this . xocsfbctthiiciygsicq = xocsfbctthiiciygsicq ; } } <s> public void UpdatePower ( double xocsfbctthiiciygsicq ) { if ( ( xocsfbctthiiciygsicq > 0 ) && ( xocsfbctthiiciygsicq <= 120000 ) ) { this . xocsfbctthiiciygsicq = xocsfbctthiiciygsicq ; } } <s> rewrote velocity calculation to take into account the degree of the track  as well as take into account rolling force. Also fixed issue 1 2  and 3
fix_before_refactoring: public void UpdatePower ( double power ) { if ( power < 0 ) this . power = 0 ; else if ( power > 120000 ) this . power = 120000 ; else this . power = power ; }
fix_after_refactoring: public void UpdatePower ( double xocsfbctthiiciygsicq ) { if ( xocsfbctthiiciygsicq < 0 ) this . xocsfbctthiiciygsicq = 0 ; else if ( xocsfbctthiiciygsicq > 120000 ) this . xocsfbctthiiciygsicq = 120000 ; else this . xocsfbctthiiciygsicq = xocsfbctthiiciygsicq ; }
× fix_prediction_before: public void UpdatePower ( double power ) { this . power = power ; }
× fix_prediction_after: public void UpdatePower ( double xocsfbctthiiciygsicq ) { this . xocsfbctthiiciygsicq = xocsfbctthiiciygsicq ; }

line_index: 450
bug_before_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 8 , 0 ) ; } <s> public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 8 , 0 ) ; } <s> Bug fixing infinite scrolling and pagination
bug_after_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity eomrqvcctdmanptcbleu , java.lang.String ksqftjhddlvpujpicpgk ) { this . fetchImages ( eomrqvcctdmanptcbleu , ksqftjhddlvpujpicpgk , 8 , 0 ) ; } <s> public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity eomrqvcctdmanptcbleu , java.lang.String ksqftjhddlvpujpicpgk ) { this . fetchImages ( eomrqvcctdmanptcbleu , ksqftjhddlvpujpicpgk , 8 , 0 ) ; } <s> Bug fixing infinite scrolling and pagination
fix_before_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 1 ) ; }
fix_after_refactoring: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity eomrqvcctdmanptcbleu , java.lang.String ksqftjhddlvpujpicpgk ) { this . fetchImages ( eomrqvcctdmanptcbleu , ksqftjhddlvpujpicpgk , 1 ) ; }
× fix_prediction_before: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity activity , java.lang.String query ) { this . fetchImages ( activity , query , 0 , 0 ) ; }
× fix_prediction_after: public void fetchImages ( com.myapp.sshah.gimagesearch.activities.CallbackActivity eomrqvcctdmanptcbleu , java.lang.String ksqftjhddlvpujpicpgk ) { this . fetchImages ( eomrqvcctdmanptcbleu , ksqftjhddlvpujpicpgk , 8 , 0 , false ) ; }

line_index: 451
bug_before_refactoring: void save ( java.lang.String saveDir ) { entry . setContent ( textArea . getText () ) ; entry . save ( saveDir ) ; } <s> void save ( java.lang.String saveDir ) { entry . setContent ( textArea . getText () ) ; entry . save ( saveDir ) ; } <s> fixed issue in which only main log gets saved
bug_after_refactoring: void save ( java.lang.String uvljefdgagqvynojinif ) { entry . setContent ( textArea . getText () ) ; entry . save ( uvljefdgagqvynojinif ) ; } <s> void save ( java.lang.String uvljefdgagqvynojinif ) { entry . setContent ( textArea . getText () ) ; entry . save ( uvljefdgagqvynojinif ) ; } <s> fixed issue in which only main log gets saved
fix_before_refactoring: void save () { entry . setContent ( textArea . getText () ) ; entry . save () ; }
fix_after_refactoring: void save () { entry . setContent ( textArea . getText () ) ; entry . save () ; }
× fix_prediction_before: public void save ( java.lang.String saveDir ) { entry . setContent ( textArea . getText () ) ; entry . save ( saveDir ) ; }
× fix_prediction_after: void save () { entry . setContent ( textArea . getText () ) ; entry . save ( uvljefdgagqvynojinif ) ; }

line_index: 452
bug_before_refactoring: @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { if ( ( this . stringId ) > ( o.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( o.stringId ) ) { return 0 ; } return - 1 ; } <s> @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { if ( ( this . stringId ) > ( o.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( o.stringId ) ) { return 0 ; } return - 1 ; } <s> Fixed some bugs in MergeSkip
bug_after_refactoring: @ java.lang.Override public int ctxsshtffhvnibijxikvqmpareTtxsshtffhvnibijxikvq ( ctxsshtffhvnibijxikvqm.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem txsshtffhvnibijxikvq ) { if ( ( this . stringId ) > ( txsshtffhvnibijxikvq.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( txsshtffhvnibijxikvq.stringId ) ) { return 0 ; } return - 1 ; } <s> @ java.lang.Override public int ctxsshtffhvnibijxikvqmpareTtxsshtffhvnibijxikvq ( ctxsshtffhvnibijxikvqm.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem txsshtffhvnibijxikvq ) { if ( ( this . stringId ) > ( txsshtffhvnibijxikvq.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( txsshtffhvnibijxikvq.stringId ) ) { return 0 ; } return - 1 ; } <s> Fixed some bugs in MergeSkip
fix_before_refactoring: @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { return ( this . stringId ) - ( o.stringId ) ; }
fix_after_refactoring: @ java.lang.Override public int ctxsshtffhvnibijxikvqmpareTtxsshtffhvnibijxikvq ( ctxsshtffhvnibijxikvqm.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem txsshtffhvnibijxikvq ) { return ( this . stringId ) - ( txsshtffhvnibijxikvq.stringId ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( com.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem o ) { return this . stringId . compareTo ( o.stringId ) ; }
× fix_prediction_after: @ java.lang.Override public int ctxsshtffhvnibijxikvqmpareTtxsshtffhvnibijxikvq ( ctxsshtffhvnibijxikvqm.devinschwab.eecs405.mergeskip.MergeSkip.HeapItem txsshtffhvnibijxikvq ) { if ( ( this . stringId ) > ( txsshtffhvnibijxikvq.stringId ) ) { return 1 ; } else if ( ( this . stringId ) == ( txsshtffhvnibijxikvq.stringId ) ) { return 0 ; } return - 1 ; }

line_index: 453
bug_before_refactoring: public void addProfile ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . add ( id , profile ) ; } <s> public void addProfile ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . add ( id , profile ) ; } <s> Added a CatalogInterface to standardize the API. Fixed some issues return Providers correctly.
bug_after_refactoring: public vowokcsqedmtbfwfhrmjtc addProfile ( java.lang.String wokcsqedmtbfwfhrmjtc , io.hijynx.ensemble.ProvwokcsqedmtbfwfhrmjtcerProfile fqnovyundrntmcqcnprs ) { categoryList . add ( wokcsqedmtbfwfhrmjtc , fqnovyundrntmcqcnprs ) ; } <s> public vowokcsqedmtbfwfhrmjtc addProfile ( java.lang.String wokcsqedmtbfwfhrmjtc , io.hijynx.ensemble.ProvwokcsqedmtbfwfhrmjtcerProfile fqnovyundrntmcqcnprs ) { categoryList . add ( wokcsqedmtbfwfhrmjtc , fqnovyundrntmcqcnprs ) ; } <s> Added a CatalogInterface to standardize the API. Fixed some issues return Providers correctly.
fix_before_refactoring: public void addProfile ( java.lang.String id , io.hijynx.ensemble.ProviderProfile profile ) { categoryList . put ( id , profile ) ; }
fix_after_refactoring: public vowokcsqedmtbfwfhrmjtc addProfile ( java.lang.String wokcsqedmtbfwfhrmjtc , io.hijynx.ensemble.ProvwokcsqedmtbfwfhrmjtcerProfile fqnovyundrntmcqcnprs ) { categoryList . put ( wokcsqedmtbfwfhrmjtc , fqnovyundrntmcqcnprs ) ; }
× fix_prediction_before: public void addProfile ( io.hijynx.ensemble.ProviderProfile profile ) { categoryList . add ( profile ) ; }
× fix_prediction_after: public vowokcsqedmtbfwfhrmjtc addProfile ( java.lang.String wokcsqedmtbfwfhrmjtc , io.hijynx.ensemble.ProvwokcsqedmtbfwfhrmjtcerProfile fqnithundrntmcqcnprs ) { if ( ( categoryList ) != null ) { categoryList . add ( wokcsqedmtbfwfhrmjtc , fqnithundrntmcqcnprs ) ; } }

line_index: 454
bug_before_refactoring: int apply ( int outerPosition ) ; <s> int apply ( int outerPosition ) ; <s> Fix bugs in Container scroll position transforms
bug_after_refactoring: int apply ( int otscqdchfiewubbdloge ) ; <s> int apply ( int otscqdchfiewubbdloge ) ; <s> Fix bugs in Container scroll position transforms
fix_before_refactoring: int apply ( int position ) ;
fix_after_refactoring: int apply ( int position ) ;
× fix_prediction_before: int apply ( int outerPosition ) ;
× fix_prediction_after: int apply ( int otscqdchfiewubbdloge ) ;

line_index: 455
bug_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; } <s> fixed lint check issues
bug_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context zxbebtpvyhwmphxitcoi ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( zxbebtpvyhwmphxitcoi ) ) ; } <s> @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context zxbebtpvyhwmphxitcoi ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( zxbebtpvyhwmphxitcoi ) ) ; } <s> fixed lint check issues
fix_before_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) private static boolean isSystemAlertPermissionGranted ( android.content.Context context ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; }
fix_after_refactoring: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) private static boolean isSystemAlertPermissionGranted ( android.content.Context zxbebtpvyhwmphxitcoi ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( zxbebtpvyhwmphxitcoi ) ) ; }
× fix_prediction_before: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( android.content.Context context , android.view.View view ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( context ) ) ; }
× fix_prediction_after: @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public static boolean isSystemAlertPermissionGranted ( @ android.support.annotation.Nullable android.content.Context zxbebtpvyhwmphxitcoi ) { return ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.M ) ) || ( android.provider.Settings . canDrawOverlays ( zxbebtpvyhwmphxitcoi ) ) ; }

line_index: 459
bug_before_refactoring: public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity.worldObj.isRemote ) ) { HooksClient.particlePlayerOrigin = ( ( net.minecraft.entity.player.EntityPlayer ) ( entity ) ) ; } else if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = null ; } } <s> public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( ( entity instanceof net.minecraft.entity.player.EntityPlayer ) && ( entity.worldObj.isRemote ) ) { HooksClient.particlePlayerOrigin = ( ( net.minecraft.entity.player.EntityPlayer ) ( entity ) ) ; } else if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = null ; } } <s> Actually 1.1.0: Minor bugfix regarding what 2 should do in potionEffectsShown
bug_after_refactoring: public static void gdnsyjqgkbjepbqhmsmvSpawnedFromEntity ( net.minecraft.zoxepdlsydtjdrovzvvq.EntityLivingBase zoxepdlsydtjdrovzvvq , java.lang.String gdnsyjqgkbjepbqhmsmv ) { if ( ( zoxepdlsydtjdrovzvvq instanceof net.minecraft.zoxepdlsydtjdrovzvvq.player.EntityPlayer ) && ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = ( ( net.minecraft.zoxepdlsydtjdrovzvvq.player.EntityPlayer ) ( zoxepdlsydtjdrovzvvq ) ) ; } else if ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = null ; } } <s> public static void gdnsyjqgkbjepbqhmsmvSpawnedFromEntity ( net.minecraft.zoxepdlsydtjdrovzvvq.EntityLivingBase zoxepdlsydtjdrovzvvq , java.lang.String gdnsyjqgkbjepbqhmsmv ) { if ( ( zoxepdlsydtjdrovzvvq instanceof net.minecraft.zoxepdlsydtjdrovzvvq.player.EntityPlayer ) && ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = ( ( net.minecraft.zoxepdlsydtjdrovzvvq.player.EntityPlayer ) ( zoxepdlsydtjdrovzvvq ) ) ; } else if ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = null ; } } <s> Actually 1.1.0: Minor bugfix regarding what 2 should do in potionEffectsShown
fix_before_refactoring: public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { if ( entity.worldObj.isRemote ) { HooksClient.particlePlayerOrigin = entity ; } }
fix_after_refactoring: public static void gdnsyjqgkbjepbqhmsmvSpawnedFromEntity ( net.minecraft.zoxepdlsydtjdrovzvvq.EntityLivingBase zoxepdlsydtjdrovzvvq , java.lang.String gdnsyjqgkbjepbqhmsmv ) { if ( zoxepdlsydtjdrovzvvq.worldObj.isRemote ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = zoxepdlsydtjdrovzvvq ; } }
× fix_prediction_before: public static void particleSpawnedFromEntity ( net.minecraft.entity.EntityLivingBase entity , java.lang.String particle ) { HooksClient.particlePlayerOrigin = ( ( net.minecraft.entity.player.EntityPlayer ) ( entity ) ) ; }
× fix_prediction_after: if ( zoxepdlsydtjdrovzzzq.EntityLivingBase zoxepdlsydtjdrovzzzq.EntityLivingBase zoxepdlsydtjdrovzzzq , java.lang.String gdnsyjqgkbjepbqhmsmv ) { if ( ( zoxepdlsydtjdrovzzzq instanceof net.minecraft.zoxepdlsydtjdrovzzzq.player.EntityPlayer ) && ( zoxepdlsydtjdrovzzzq.worldObj.isRemote ) ) { HookdtsClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = ( ( net.minecraft.zoxepdlsydtjdrovzzzq.player.EntityPlayer ) ( zoxepdlsydtjdrovzzzq.player.EntityPlayer ) ; } else if ( zoxepdlsydtjdrovzzzq.worldObj.isRemote ) { HooksClient.gdnsyjqgkbjepbqhmsmvPlayerOrigin = null ; } }

line_index: 460
bug_before_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence s ) { mAdapter . getFilter () . filter ( s ) ; } <s> @ java.lang.Override public void filter ( java.lang.CharSequence s ) { mAdapter . getFilter () . filter ( s ) ; } <s> Transitions fixed. Fragment title added. Bug when filter is null fixed
bug_after_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence dnhfbmyxxhiwopysdtzf ) { mAdapter . getFilter () . filter ( dnhfbmyxxhiwopysdtzf ) ; } <s> @ java.lang.Override public void filter ( java.lang.CharSequence dnhfbmyxxhiwopysdtzf ) { mAdapter . getFilter () . filter ( dnhfbmyxxhiwopysdtzf ) ; } <s> Transitions fixed. Fragment title added. Bug when filter is null fixed
fix_before_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence s ) { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getFilter () ) != null ) ) { mAdapter . getFilter () . filter ( s ) ; } }
fix_after_refactoring: @ java.lang.Override public void filter ( java.lang.CharSequence dnhfbmyxxhiwopysdtzf ) { if ( ( ( mAdapter ) != null ) && ( ( mAdapter . getFilter () ) != null ) ) { mAdapter . getFilter () . filter ( dnhfbmyxxhiwopysdtzf ) ; } }
× fix_prediction_before: @ java.lang.Override public void filter ( java.lang.CharSequence s ) { if ( ( mAdapter ) != null ) { mAdapter . getFilter () . filter ( s ) ; } }
× fix_prediction_after: @ java.lang.Override public void filter ( java.lang.CharSequence dnhfbmyxxhiwopysdtzf ) { if ( ( mAdapter ) != null ) { mAdapter . getFilter () . filter ( dnhfbmyxxhiwopysdtzf ) ; } }

line_index: 461
bug_before_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { setPlayerAtPos ( playsFirst , 28 ) ; setPlayerAtPos ( otherPlayer , 27 ) ; setPlayerAtPos ( playsFirst , 35 ) ; setPlayerAtPos ( otherPlayer , 36 ) ; } <s> public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { setPlayerAtPos ( playsFirst , 28 ) ; setPlayerAtPos ( otherPlayer , 27 ) ; setPlayerAtPos ( playsFirst , 35 ) ; setPlayerAtPos ( otherPlayer , 36 ) ; } <s> Bugfix
bug_after_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player mwklgfpzwjzuwaqtijrt , nl.hanze2017e4.gameclient.model.master.Player nqmaizipftpqkertlfdy ) { setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 28 ) ; setPlayerAtPos ( nqmaizipftpqkertlfdy , 27 ) ; setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 35 ) ; setPlayerAtPos ( nqmaizipftpqkertlfdy , 36 ) ; } <s> public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player mwklgfpzwjzuwaqtijrt , nl.hanze2017e4.gameclient.model.master.Player nqmaizipftpqkertlfdy ) { setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 28 ) ; setPlayerAtPos ( nqmaizipftpqkertlfdy , 27 ) ; setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 35 ) ; setPlayerAtPos ( nqmaizipftpqkertlfdy , 36 ) ; } <s> Bugfix
fix_before_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player playsFirst , nl.hanze2017e4.gameclient.model.master.Player otherPlayer ) { super . setPlayerAtPos ( playsFirst , 28 ) ; super . setPlayerAtPos ( otherPlayer , 27 ) ; super . setPlayerAtPos ( playsFirst , 35 ) ; super . setPlayerAtPos ( otherPlayer , 36 ) ; }
fix_after_refactoring: public void setBoardBeginState ( nl.hanze2017e4.gameclient.model.master.Player mwklgfpzwjzuwaqtijrt , nl.hanze2017e4.gameclient.model.master.Player nqmaizipftpqkertlfdy ) { super . setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 28 ) ; super . setPlayerAtPos ( nqmaizipftpqkertlfdy , 27 ) ; super . setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 35 ) ; super . setPlayerAtPos ( nqmaizipftpqkertlfdy , 36 ) ; }
× fix_prediction_before: public void setBoardBeginState () { setPlayerAtPos ( playFirst , 28 ) ; setPlayerAtPos ( otherPlayer , 27 ) ; setPlayerAtPos ( playFirst , 35 ) ; setPlayerAtPos ( otherPlayer , 36 ) ; }
× fix_prediction_after: public void setBoardBeginState () { setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , nl.hanze2017e4.gameclient.model.master.Player nqmaizipftpqkertlfdy ) ; setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 28 ) ; setPlayerAtPos ( mwklgfpzwjzuwaqtijrt , 35 ) ; setPlayerAtPos ( nqmaizipftpqkertlfdy , 36 ) ; }

line_index: 464
bug_before_refactoring: public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { if ( readOnlyDataCacheAvailable ) { this . useReadOnlyDataCache = useReadOnlyDataCache ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { if ( readOnlyDataCacheAvailable ) { this . useReadOnlyDataCache = useReadOnlyDataCache ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> Fix bugs about ldg
bug_after_refactoring: public void setUseReadOnlyDataCache ( boolean hrvylmefcpvijhzlqkfd ) { if ( readOnlyDataCacheAvailable ) { this . hrvylmefcpvijhzlqkfd = hrvylmefcpvijhzlqkfd ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> public void setUseReadOnlyDataCache ( boolean hrvylmefcpvijhzlqkfd ) { if ( readOnlyDataCacheAvailable ) { this . hrvylmefcpvijhzlqkfd = hrvylmefcpvijhzlqkfd ; } else { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; } } <s> Fix bugs about ldg
fix_before_refactoring: public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { if ( ( ! ( readOnlyDataCacheAvailable ) ) && useReadOnlyDataCache ) { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; return; } this . useReadOnlyDataCache = useReadOnlyDataCache ; }
fix_after_refactoring: public void setUseReadOnlyDataCache ( boolean hrvylmefcpvijhzlqkfd ) { if ( ( ! ( readOnlyDataCacheAvailable ) ) && hrvylmefcpvijhzlqkfd ) { exc.openacc.ACC . warning ( "Read-only data cache is unavailable" ) ; return; } this . hrvylmefcpvijhzlqkfd = hrvylmefcpvijhzlqkfd ; }
× fix_prediction_before: public void setUseReadOnlyDataCache ( boolean useReadOnlyDataCache ) { this . readOnlyDataCacheAvailable = useReadOnlyDataCache ; }
× fix_prediction_after: public void setUseReadOnlyDataCache ( boolean hrvylmefcpvijhzlqkfd ) { this . hrvylmefcpvijhzlqkfd = hrvylmefcpvijhzlqkfd ; }

line_index: 465
bug_before_refactoring: public static net.straylightlabs.tivolibre.PesHeader createFrom ( java.nio.ByteBuffer buffer , net.straylightlabs.tivolibre.PesHeader.StartCode code ) { return new net.straylightlabs.tivolibre.PesHeader ( buffer , code ) ; } <s> public static net.straylightlabs.tivolibre.PesHeader createFrom ( java.nio.ByteBuffer buffer , net.straylightlabs.tivolibre.PesHeader.StartCode code ) { return new net.straylightlabs.tivolibre.PesHeader ( buffer , code ) ; } <s> Fix a decryption error when a PES start code is split between two packets.
bug_after_refactoring: public static net.straylightlabs.tivolibre.PesHeader createFrom ( java.nio.ByteBuffer epaxiawrocyynwqmgfxm , net.straylightlabs.tivolibre.PesHeader.StartCode spxojcyofdfsnidtavdz ) { return new net.straylightlabs.tivolibre.PesHeader ( epaxiawrocyynwqmgfxm , spxojcyofdfsnidtavdz ) ; } <s> public static net.straylightlabs.tivolibre.PesHeader createFrom ( java.nio.ByteBuffer epaxiawrocyynwqmgfxm , net.straylightlabs.tivolibre.PesHeader.StartCode spxojcyofdfsnidtavdz ) { return new net.straylightlabs.tivolibre.PesHeader ( epaxiawrocyynwqmgfxm , spxojcyofdfsnidtavdz ) ; } <s> Fix a decryption error when a PES start code is split between two packets.
fix_before_refactoring: public static net.straylightlabs.tivolibre.PesHeader createFrom ( java.nio.ByteBuffer buffer ) { return new net.straylightlabs.tivolibre.PesHeader ( buffer , null , 0 ) ; }
fix_after_refactoring: public static net.straylightlabs.tivolibre.PesHeader createFrom ( java.nio.ByteBuffer epaxiawrocyynwqmgfxm ) { return new net.straylightlabs.tivolibre.PesHeader ( epaxiawrocyynwqmgfxm , null , 0 ) ; }
× fix_prediction_before: public static net.straylightlabs.tivolibre.PesHeader createFrom ( java.nio.ByteBuffer buffer ) { return new net.straylightlabs.tivolibre.PesHeader ( buffer , null ) ; }
× fix_prediction_after: public static net.straylightlabs.tivolibre.PesHeader createFrom ( java.nio.ByteBuffer epaxiawrocyynwqmgfxm ) { return new net.straylightlabs.tivolibre.PesHeader ( epaxiawrocyynwqmgfxm , net.straylightlabs.tivolibre.PesHeader.StartCode spxojcyofdfsnidtavdz ) ; }

line_index: 466
bug_before_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ; <s> @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ; <s> Merge pull request #489 from nla/ms113  ms113: fix duplicated tool id issue
bug_after_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where kpluvtvsrnpaovrigwiu = :kpluvtvsrnpaovrigwiu and deleted = 'D'" ) protected abstract vokpluvtvsrnpaovrigwiu archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "kpluvtvsrnpaovrigwiu" ) java.lang.Long kpluvtvsrnpaovrigwiu ) ; <s> @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where kpluvtvsrnpaovrigwiu = :kpluvtvsrnpaovrigwiu and deleted = 'D'" ) protected abstract vokpluvtvsrnpaovrigwiu archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "kpluvtvsrnpaovrigwiu" ) java.lang.Long kpluvtvsrnpaovrigwiu ) ; <s> Merge pull request #489 from nla/ms113  ms113: fix duplicated tool id issue
fix_before_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void delete ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ;
fix_after_refactoring: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where kpluvtvsrnpaovrigwiu = :kpluvtvsrnpaovrigwiu and deleted = 'D'" ) protected abstract vokpluvtvsrnpaovrigwiu delete ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "kpluvtvsrnpaovrigwiu" ) java.lang.Long kpluvtvsrnpaovrigwiu ) ;
× fix_prediction_before: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where id = :id and deleted = 'D'" ) protected abstract void archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id , @ org.skife.jdbi.v2.sqlobject.Bind ( value = "id" ) java.lang.Long id ) ;
× fix_prediction_after: @ org.skife.jdbi.v2.sqlobject.SqlUpdate ( value = "UPDATE tools SET deleted = 'Y' where kpluvtvsrnpaovrigwiu = :kpluvtvsrnpaovrigwiu and deleted = 'D'" ) protected abstract vokpluvtvsrnpaovrigwiu archiveDeletedTool ( @ org.skife.jdbi.v2.sqlobject.Bind ( value = "kpluvtvsrnpaovrigwiu" ) java.lang.Long kpluvtvsrnpaovrigwiu ) ;

line_index: 467
bug_before_refactoring: protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; } <s> protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; } <s> Added SonarCloud quality/coverage + removed coveralls + fixed some sonarcloud issues
bug_after_refactoring: protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration umecezsqddzwxuygvmvn ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( umecezsqddzwxuygvmvn . getScheme () , umecezsqddzwxuygvmvn . getLocation () , credential , umecezsqddzwxuygvmvn . getProperties () ) ; } <s> protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration umecezsqddzwxuygvmvn ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( umecezsqddzwxuygvmvn . getScheme () , umecezsqddzwxuygvmvn . getLocation () , credential , umecezsqddzwxuygvmvn . getProperties () ) ; } <s> Added SonarCloud quality/coverage + removed coveralls + fixed some sonarcloud issues
fix_before_refactoring: private nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , credential , schedulerConf . getProperties () ) ; }
fix_after_refactoring: private nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration umecezsqddzwxuygvmvn ) throws nl.esciencecenter.xenon.XenonException { nl.esciencecenter.xenon.credentials.Credential credential = null ; return xenon . jobs () . newScheduler ( umecezsqddzwxuygvmvn . getScheme () , umecezsqddzwxuygvmvn . getLocation () , credential , umecezsqddzwxuygvmvn . getProperties () ) ; }
× fix_prediction_before: protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration schedulerConf ) throws nl.esciencecenter.xenon.XenonException { return xenon . jobs () . newScheduler ( schedulerConf . getScheme () , schedulerConf . getLocation () , schedulerConf . getProperties () ) ; }
× fix_prediction_after: protected nl.esciencecenter.xenon.jobs.Scheduler newScheduler ( nl.esciencecenter.ahn.pointcloud.job.SchedulerConfiguration umecezsqddzwxuygvmvn ) throws nl.esciencecenter.xenon.XenonException { return xenon . jobs () . newScheduler ( umecezsqddzwxuygvmvn . getScheme () , umecezsqddzwxuygvmvn . getLocation () , credential , umecezsqddzwxuygvmvn . getProperties () ) ; }

line_index: 468
bug_before_refactoring: public final void setPixel ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = ( ( short ) ( value ) ) ; } <s> public final void setPixel ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = ( ( short ) ( value ) ) ; } <s> pixels are now always an integer array it fixes issue with CT images of high and shifeted dynamic diapason
bug_after_refactoring: public final void setPimqanlqlmssgziertbfegel ( int mqanlqlmssgziertbfeg , int vpobqtdxrsoxvlpqtjwi , int eweqnjhvasagohhcxnpx ) { iPimqanlqlmssgziertbfegels [ ( ( vpobqtdxrsoxvlpqtjwi * ( iWidth ) ) + mqanlqlmssgziertbfeg ) ] = ( ( short ) ( eweqnjhvasagohhcxnpx ) ) ; } <s> public final void setPimqanlqlmssgziertbfegel ( int mqanlqlmssgziertbfeg , int vpobqtdxrsoxvlpqtjwi , int eweqnjhvasagohhcxnpx ) { iPimqanlqlmssgziertbfegels [ ( ( vpobqtdxrsoxvlpqtjwi * ( iWidth ) ) + mqanlqlmssgziertbfeg ) ] = ( ( short ) ( eweqnjhvasagohhcxnpx ) ) ; } <s> pixels are now always an integer array it fixes issue with CT images of high and shifeted dynamic diapason
fix_before_refactoring: public final void set ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = value ; }
fix_after_refactoring: public final void set ( int mqanlqlmssgziertbfeg , int vpobqtdxrsoxvlpqtjwi , int eweqnjhvasagohhcxnpx ) { iPimqanlqlmssgziertbfegels [ ( ( vpobqtdxrsoxvlpqtjwi * ( iWidth ) ) + mqanlqlmssgziertbfeg ) ] = eweqnjhvasagohhcxnpx ; }
× fix_prediction_before: public final void setPixel ( int x , int y , int value ) { iPixels [ ( ( y * ( iWidth ) ) + x ) ] = value ; }
× fix_prediction_after: public final void setPimqanlqlmssgziertbfegel ( int queueanlqlmssgziertbfeg , int vpobqtdxrsoxvlpqtjwi , intckeqnjhvasagohhcxnpx ) { iPimqanlqlmssgziertbfegels [ ( ( vpobqtdxrsoxvlpqtjwi * ( iWidth ) ) + queueanlqlmssgziertbfeg ) ] = ( ( short ) ( queueanlqlmssgziertbfeg ) ) ; }

line_index: 469
bug_before_refactoring: public static long checkFileIdCompatibility ( long fileId , int storageId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( fileId ) ) , storageId ) ; } return fileId ; } <s> public static long checkFileIdCompatibility ( long fileId , int storageId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( fileId ) ) , storageId ) ; } return fileId ; } <s> Issue #4526 was fixed.
bug_after_refactoring: public static long checkFileIdCompatibility ( long yaztcohrpumesfhkrhff , int vbiaptosqjqzemgwjujo ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( yaztcohrpumesfhkrhff ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( yaztcohrpumesfhkrhff ) ) , vbiaptosqjqzemgwjujo ) ; } return yaztcohrpumesfhkrhff ; } <s> public static long checkFileIdCompatibility ( long yaztcohrpumesfhkrhff , int vbiaptosqjqzemgwjujo ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( yaztcohrpumesfhkrhff ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( yaztcohrpumesfhkrhff ) ) , vbiaptosqjqzemgwjujo ) ; } return yaztcohrpumesfhkrhff ; } <s> Issue #4526 was fixed.
fix_before_refactoring: public static long checkFileIdCompatibility ( int storageId , long fileId ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( fileId ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( storageId , ( ( int ) ( fileId ) ) ) ; } return fileId ; }
fix_after_refactoring: public static long checkFileIdCompatibility ( int vbiaptosqjqzemgwjujo , long yaztcohrpumesfhkrhff ) { if ( ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( yaztcohrpumesfhkrhff ) ) == 0 ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( vbiaptosqjqzemgwjujo , ( ( int ) ( yaztcohrpumesfhkrhff ) ) ) ; } return yaztcohrpumesfhkrhff ; }
× fix_prediction_before: public static long checkFileIdCompatibility ( long fileId , int storageId ) { return com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( fileId , storageId ) ; }
× fix_prediction_after: public static long checkFileIdCompatibility ( long yaztcohrpumesfhkrhff , int vbiaptosqjqzemgwjujo ) { return ( com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . extractStorageId ( yaztcohrpumesfhkrhff ) ) == 0 ? com.orientechnologies.orient.core.storage.cache.OAbstractWriteCache . composeFileId ( ( ( int ) ( yaztcohrpumesfhkrhff ) ) , vbiaptosqjqzemgwjujo ) : yaztcohrpumesfhkrhff ; }

line_index: 471
bug_before_refactoring: public static void newTeam ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> public static void newTeam ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> Small bugfixes
bug_after_refactoring: public static void newTeam ( java.lang.String zmzkqtvzgprqrukipsmz ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( zmzkqtvzgprqrukipsmz ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + zmzkqtvzgprqrukipsmz ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> public static void newTeam ( java.lang.String zmzkqtvzgprqrukipsmz ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( zmzkqtvzgprqrukipsmz ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + zmzkqtvzgprqrukipsmz ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; } } <s> Small bugfixes
fix_before_refactoring: protected boolean newTeam ( java.lang.String name ) { if ( ! ( isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; return true ; } return false ; }
fix_after_refactoring: protected boolean newTeam ( java.lang.String zmzkqtvzgprqrukipsmz ) { if ( ! ( isTeam ( zmzkqtvzgprqrukipsmz ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + zmzkqtvzgprqrukipsmz ) + "(player VARCHAR(20), leader TINYINT);" ) ) ; return true ; } return false ; }
× fix_prediction_before: private void newTeam ( java.lang.String name ) { if ( ! ( net.acampadas21.teamapi.TeamManager . isTeam ( name ) ) ) { net.acampadas21.teamapi.TeamManager.db . standardQuery ( ( ( "CREATE TABLE " + name ) + "(player nullable 20), leader tiny 20), leader smallINT);" ) ) ; } }
× fix_prediction_after: public void newTeam ( java.lang.String zmzkqtvzgprqrukipsmz ) { newTeam ( zmzkqtvzgprqrukipsmz , null ) ; }

line_index: 472
bug_before_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message msg ) { if ( ( mNetworkService ) != null ) { waiters . put ( msg.what , msg ) ; mNetworkService . downloadImage ( msg.what ) ; } else { synchronized ( msg ) { msg . notify () ; } } } <s> @ java.lang.Override public void handleMessage ( android.os.Message msg ) { if ( ( mNetworkService ) != null ) { waiters . put ( msg.what , msg ) ; mNetworkService . downloadImage ( msg.what ) ; } else { synchronized ( msg ) { msg . notify () ; } } } <s> Fixed bug when images displayed not in right places
bug_after_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message tvfmgwutzkhxahqivqiy ) { if ( ( mNetworkService ) != null ) { waiters . put ( tvfmgwutzkhxahqivqiy.what , tvfmgwutzkhxahqivqiy ) ; mNetworkService . downloadImage ( tvfmgwutzkhxahqivqiy.what ) ; } else { synchronized ( tvfmgwutzkhxahqivqiy ) { tvfmgwutzkhxahqivqiy . notify () ; } } } <s> @ java.lang.Override public void handleMessage ( android.os.Message tvfmgwutzkhxahqivqiy ) { if ( ( mNetworkService ) != null ) { waiters . put ( tvfmgwutzkhxahqivqiy.what , tvfmgwutzkhxahqivqiy ) ; mNetworkService . downloadImage ( tvfmgwutzkhxahqivqiy.what ) ; } else { synchronized ( tvfmgwutzkhxahqivqiy ) { tvfmgwutzkhxahqivqiy . notify () ; } } } <s> Fixed bug when images displayed not in right places
fix_before_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message msg ) { mNetworkService . downloadImage ( msg.what ) ; }
fix_after_refactoring: @ java.lang.Override public void handleMessage ( android.os.Message tvfmgwutzkhxahqivqiy ) { mNetworkService . downloadImage ( tvfmgwutzkhxahqivqiy.what ) ; }
× fix_prediction_before: @ java.lang.Override public void handleMessage ( android.os.Message msg ) { synchronized ( msg ) { waiters . put ( msg.what , msg ) ; mNetworkService . downloadImage ( msg.what ) ; } }
× fix_prediction_after: @ java.lang.Override public void handleMessage ( android.os.Message tvfmgwutzkhxahqivqiy ) { synchronized ( tvfmgwutzkhxahqivqiy ) { waiters . put ( tvfmgwutzkhxahqivqiy.what , tvfmgwutzkhxahqivqiy ) ; mNetworkService . downloadImage ( tvfmgwutzkhxahqivqiy.what ) ; } }

line_index: 474
bug_before_refactoring: private java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; } <s> private java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; } <s> Sychronization bugfix + message casted through BungeeCord for money send  Tested and working
bug_after_refactoring: private java.lang.String parseWithPrefix ( java.lang.String . . . ekfjnwrimlvacdphdvjy ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( ekfjnwrimlvacdphdvjy ) ) ; } <s> private java.lang.String parseWithPrefix ( java.lang.String . . . ekfjnwrimlvacdphdvjy ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( ekfjnwrimlvacdphdvjy ) ) ; } <s> Sychronization bugfix + message casted through BungeeCord for money send  Tested and working
fix_before_refactoring: public java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( params ) ) ; }
fix_after_refactoring: public java.lang.String parseWithPrefix ( java.lang.String . . . ekfjnwrimlvacdphdvjy ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( ekfjnwrimlvacdphdvjy ) ) ; }
× fix_prediction_before: private java.lang.String parseWithPrefix ( java.lang.String . . . params ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , params [ 0 ] ) ) + ( parse ( params ) ) ; }
× fix_prediction_after: private java.lang.String parseWithPrefix ( java.lang.String . . . onPrefjnwrimlvacdphdvjy ) { return ( org.melonbrew.fe.Phrase.plugin . getMessagePrefix () . replace ( "$1" , org.melonbrew.fe.Phrase.plugin . getConfig () . getString ( "prefix" ) ) ) + ( parse ( onPrefjnwrimlvacdphdvjy ) ) ; }

line_index: 476
bug_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> fix killed in background bug && update package.json
bug_after_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fymyaxzfszhraicjugie ) { super . onCreate ( fymyaxzfszhraicjugie ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fymyaxzfszhraicjugie ) { super . onCreate ( fymyaxzfszhraicjugie ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { finish () ; } else { NavigationApplication.instance . startReactContext () ; } } <s> fix killed in background bug && update package.json
fix_before_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setSplashLayout () ; NavigationApplication.instance . startReactContext () ; }
fix_after_refactoring: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle fymyaxzfszhraicjugie ) { super . onCreate ( fymyaxzfszhraicjugie ) ; setSplashLayout () ; NavigationApplication.instance . startReactContext () ; }
× fix_prediction_before: @ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; NavigationApplication.instance . startReactContext () ; }
× fix_prediction_after: @ java.lang.Override protected void onCreate () { super . onCreate ( fymyaxzfszhraicjugie ) ; setSplashLayout () ; if ( NavigationApplication.instance . isReactContextInitialized () ) { NavigationApplication.instance . startReactContext () ; } finish () ; }

line_index: 479
bug_before_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , comment ) . show ( getChildFragmentManager () ) ; } <s> @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , comment ) . show ( getChildFragmentManager () ) ; } <s> Fixed wrong state handling issues in InterpretationFragments.
bug_after_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment kiqtfuscfmyvzwciertn ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , kiqtfuscfmyvzwciertn ) . show ( getChildFragmentManager () ) ; } <s> @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment kiqtfuscfmyvzwciertn ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this , kiqtfuscfmyvzwciertn ) . show ( getChildFragmentManager () ) ; } <s> Fixed wrong state handling issues in InterpretationFragments.
fix_before_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( comment . getId () ) . show ( getChildFragmentManager () ) ; }
fix_after_refactoring: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment kiqtfuscfmyvzwciertn ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( kiqtfuscfmyvzwciertn . getId () ) . show ( getChildFragmentManager () ) ; }
× fix_prediction_before: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment comment ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( comment ) . show ( getChildFragmentManager () ) ; }
× fix_prediction_after: @ java.lang.Override public void onCommentEdit ( org.dhis2.android.dashboard.api.models.InterpretationComment kiqtfuscfmyvzwciertn ) { org.dhis2.android.dashboard.ui.fragments.interpretation.InterpretationCommentEditFragment . newInstance ( this ) . show ( getChildFragmentManager () ) ; }

line_index: 482
bug_before_refactoring: @ java.lang.Override public java.lang.String get ( java.lang.String key ) { return ( ( java.lang.String ) ( rowData . get ( key ) ) ) ; } <s> @ java.lang.Override public java.lang.String get ( java.lang.String key ) { return ( ( java.lang.String ) ( rowData . get ( key ) ) ) ; } <s> Fixing update issue in SQLTableDataPool: row object not updated after put()
bug_after_refactoring: @ java.lang.Override public java.lang.String get ( java.lang.String kmafxbqibbwwthplsjje ) { return ( ( java.lang.String ) ( rowData . get ( kmafxbqibbwwthplsjje ) ) ) ; } <s> @ java.lang.Override public java.lang.String get ( java.lang.String kmafxbqibbwwthplsjje ) { return ( ( java.lang.String ) ( rowData . get ( kmafxbqibbwwthplsjje ) ) ) ; } <s> Fixing update issue in SQLTableDataPool: row object not updated after put()
fix_before_refactoring: @ java.lang.Override public boolean isEmpty () { return rowData . isEmpty () ; }
fix_after_refactoring: @ java.lang.Override public boolean isEmpty () { return rowData . isEmpty () ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Object get ( java.lang.String key ) { return rowData . get ( key ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String get ( java.lang.String kmafxbqibbwwthplsjje ) { return rowData . get ( kmafxbqibbwwthplsjje ) ; }

line_index: 483
bug_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( this . relations . containsKey ( paramName ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
bug_after_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( this . relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; } <s> @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( this . relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; } <s> PropertyMutationMaster not saving issue fix [PHOENIX-350]
fix_before_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String paramName ) { return ! ( relations . containsKey ( paramName ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; }
× fix_prediction_before: @ java.lang.Override public boolean acceptableParameterName ( final java.lang.String defaultValue ) { return ! ( relations . containsKey ( defaultValue ) ) ; }
× fix_prediction_after: @ java.lang.Override public boolean visibleParameterName ( final java.lang.String dvdbsqgtukzahfmqvfyw ) { return ! ( this . relations . containsKey ( dvdbsqgtukzahfmqvfyw ) ) ; }

line_index: 484
bug_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . getHostName () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void version ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) {}
× fix_prediction_before: public void version ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . hostname () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; }
× fix_prediction_after: public void version ( com.adam4.irc.ParsedMessage hctcrysxbzcpvokxjynr ) { com.adam4.irc.ParsedMessage versionMessage = new com.adam4.irc.ParsedMessage ( com.adam4.common.Common . hostname () , "351" , null , ( "SpaceNet Server v" + ( com.adam4.spacenet.SpaceNetServer.version ) ) ) ; sendIRCMessage ( versionMessage ) ; }

line_index: 485
bug_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
bug_after_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) , getCharacteristicUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) ) ; } <s> @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) , getCharacteristicUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) ) ; } <s> various bugfixes and improvements
fix_before_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; }
fix_after_refactoring: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; }
× fix_prediction_before: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID channelUID ) { super . channelUnlinked ( channelUID ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( channelUID . getIdWithoutGroup () ) , getCharacteristicUUID ( channelUID . getIdWithoutGroup () ) ) ; }
× fix_prediction_after: @ java.lang.Override public void channelUnlinked ( org.eclipse.smarthome.core.thing.ChannelUID vxdfcppbawxkmmeemosk ) { super . channelUnlinked ( vxdfcppbawxkmmeemosk ) ; bluetoothSmartService . removeCharacteristicListener ( getDeviceAddress () , getServiceUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) , getCharacteristicUUID ( vxdfcppbawxkmmeemosk . getIdWithoutGroup () ) ) ; }

line_index: 486
bug_before_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> fixed duplicate hint bug
bug_after_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter tmulxxvohsmbrvleseks ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( tmulxxvohsmbrvleseks , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter tmulxxvohsmbrvleseks ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( tmulxxvohsmbrvleseks , getContext () ) ; super . setAdapter ( hintAdapter ) ; } <s> fixed duplicate hint bug
fix_before_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { if ( adapter instanceof fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ) { super . setAdapter ( adapter ) ; } else { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; } }
fix_after_refactoring: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter tmulxxvohsmbrvleseks ) { if ( tmulxxvohsmbrvleseks instanceof fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ) { super . setAdapter ( tmulxxvohsmbrvleseks ) ; } else { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( tmulxxvohsmbrvleseks , getContext () ) ; super . setAdapter ( hintAdapter ) ; } }
× fix_prediction_before: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter adapter ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( adapter , getContext () ) ; super . setAdapter ( hintAdapter ) ; }
× fix_prediction_after: @ java.lang.Override public void setAdapter ( android.widget.SpinnerAdapter tmulxxvohsmbrvleseks ) { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter ( tmulxxvohsmbrvleseks , getContext () ) ; super . setAdapter ( hintAdapter ) ; }

line_index: 487
bug_before_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; } <s> @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
bug_after_refactoring: @ java.lang.Override public void onFailure ( java.lang.Throwable arqqjwtocmqavnmiandk ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( arqqjwtocmqavnmiandk ) ; } <s> @ java.lang.Override public void onFailure ( java.lang.Throwable arqqjwtocmqavnmiandk ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( arqqjwtocmqavnmiandk ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
fix_before_refactoring: @ java.lang.Override public void onFailure ( final java.lang.Throwable caught ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; }
fix_after_refactoring: @ java.lang.Override public void onFailure ( final java.lang.Throwable arqqjwtocmqavnmiandk ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.util.FailureHandler . handle ( arqqjwtocmqavnmiandk ) ; }
× fix_prediction_before: @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { if ( org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ) { org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( caught ) ; } }
× fix_prediction_after: @ java.lang.Override public void onFailure ( java.lang.Throwable t ) { org.eclipse.kura.web.client.ui.EntryClassUi . hideWaitModal () ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi.flag = false ; org.eclipse.kura.web.client.util.FailureHandler . handle ( arqqjwtocmqavnmiandk ) ; }

line_index: 489
bug_before_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { if ( store . getIndexes () . isEmpty () ) { stored . add ( store . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { if ( store . getIndexes () . isEmpty () ) { stored . add ( store . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> extended store once transformation to handle arrays  This fixes a long-standing bug: when a state variable was declared as an array  and it was accessed in this way: array[i] = 5; print("value = "  array[i]);  This would work correctly in the simulator  but in VHDL/Verilog this would print the *previous* value of array[i] and not 5 as you would expect.
bug_after_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore ovdpwceyppewionxcmoo ) { if ( ovdpwceyppewionxcmoo . getIndexes () . isEmpty () ) { ovdpwceyppewionxcmood . add ( ovdpwceyppewionxcmoo . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore ovdpwceyppewionxcmoo ) { if ( ovdpwceyppewionxcmoo . getIndexes () . isEmpty () ) { ovdpwceyppewionxcmood . add ( ovdpwceyppewionxcmoo . getTarget () . getVariable () ) ; } return com.synflow.models.util.SwitchUtil.DONE ; } <s> extended store once transformation to handle arrays  This fixes a long-standing bug: when a state variable was declared as an array  and it was accessed in this way: array[i] = 5; print("value = "  array[i]);  This would work correctly in the simulator  but in VHDL/Verilog this would print the *previous* value of array[i] and not 5 as you would expect.
fix_before_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { stored . add ( store . getTarget () . getVariable () ) ; return com.synflow.models.util.SwitchUtil.DONE ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore ovdpwceyppewionxcmoo ) { ovdpwceyppewionxcmood . add ( ovdpwceyppewionxcmoo . getTarget () . getVariable () ) ; return com.synflow.models.util.SwitchUtil.DONE ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore store ) { return com.synflow.models.util.SwitchUtil.DONE ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Void caseInstStore ( com.synflow.models.ir.InstStore ovdpwceyppewionxcmoo ) { return com.synflow.models.util.SwitchUtil.DONE ; }

line_index: 490
bug_before_refactoring: static java.lang.String encoder ( java.lang.String var ) { try { return java.net.URLEncoder . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> static java.lang.String encoder ( java.lang.String var ) { try { return java.net.URLEncoder . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> Fixed possible url encoding issue.
bug_after_refactoring: static java.lang.String encoder ( java.lang.String frqlciuyyuqxctrascfb ) { try { return java.net.URLEncoder . encode ( frqlciuyyuqxctrascfb , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> static java.lang.String encoder ( java.lang.String frqlciuyyuqxctrascfb ) { try { return java.net.URLEncoder . encode ( frqlciuyyuqxctrascfb , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } } <s> Fixed possible url encoding issue.
fix_before_refactoring: static java.lang.String encoder ( java.lang.String arg ) { try { return java.net.URLEncoder . encode ( arg , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } }
fix_after_refactoring: static java.lang.String encoder ( java.lang.String arg ) { try { return java.net.URLEncoder . encode ( arg , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_before: static java.lang.String encode ( java.lang.String var ) { try { return java.net.URLEncoder . encode ( var , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_after: static java.lang.String encoder ( java.lang.String url ) { try { return java.net.URLEncoder . encode ( url , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; return null ; } }

line_index: 491
bug_before_refactoring: protected boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> protected boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; } <s> Fixed god class. Added javadoc. Removed checkstyle. Removed unrelevant methods from document and column containers. Added new errors to give specific messages.
bug_after_refactoring: protected boolean ivetdkdyqlzbzaalgcqcvInteger ( java.lang.String vetdkdyqlzbzaalgcqcv ) { try { java.lang.Integer . parvetdkdyqlzbzaalgcqcveInt ( vetdkdyqlzbzaalgcqcv ) ; } catch ( java.lang.NumberFormatException e ) { return falvetdkdyqlzbzaalgcqcve ; } catch ( java.lang.NullPointerException e ) { return falvetdkdyqlzbzaalgcqcve ; } return true ; } <s> protected boolean ivetdkdyqlzbzaalgcqcvInteger ( java.lang.String vetdkdyqlzbzaalgcqcv ) { try { java.lang.Integer . parvetdkdyqlzbzaalgcqcveInt ( vetdkdyqlzbzaalgcqcv ) ; } catch ( java.lang.NumberFormatException e ) { return falvetdkdyqlzbzaalgcqcve ; } catch ( java.lang.NullPointerException e ) { return falvetdkdyqlzbzaalgcqcve ; } return true ; } <s> Fixed god class. Added javadoc. Removed checkstyle. Removed unrelevant methods from document and column containers. Added new errors to give specific messages.
fix_before_refactoring: private boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; }
fix_after_refactoring: private boolean ivetdkdyqlzbzaalgcqcvInteger ( java.lang.String vetdkdyqlzbzaalgcqcv ) { try { java.lang.Integer . parvetdkdyqlzbzaalgcqcveInt ( vetdkdyqlzbzaalgcqcv ) ; } catch ( java.lang.NumberFormatException e ) { return falvetdkdyqlzbzaalgcqcve ; } catch ( java.lang.NullPointerException e ) { return falvetdkdyqlzbzaalgcqcve ; } return true ; }
× fix_prediction_before: public boolean isInteger ( java.lang.String s ) { try { java.lang.Integer . parseInt ( s ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } catch ( java.lang.NullPointerException e ) { return false ; } return true ; }
× fix_prediction_after: protected boolean ivetdkdyqlzbzaalgcqcvInteger ( java.lang.String vetdkdyqlzbzaalgcqcv ) { java.lang.Integer . parvetdkdyqlzbzaalgcqcveInt ( vetdkdyqlzbzaalgcqcv ) ; return true ; }

line_index: 492
bug_before_refactoring: public void setOrderDate ( java.util.Date orderDate ) { this . orderDate = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( orderDate ) ; } <s> public void setOrderDate ( java.util.Date orderDate ) { this . orderDate = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( orderDate ) ; } <s> fixed the post issue
bug_after_refactoring: public void setOrderDate ( java.util.Date arepwaomiwiexhwmtsav ) { this . arepwaomiwiexhwmtsav = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( arepwaomiwiexhwmtsav ) ; } <s> public void setOrderDate ( java.util.Date arepwaomiwiexhwmtsav ) { this . arepwaomiwiexhwmtsav = com.vts.api.vtscore.service.util.VTSUtil . convertDateToString ( arepwaomiwiexhwmtsav ) ; } <s> fixed the post issue
fix_before_refactoring: public void setOrderDate ( java.lang.String orderDate ) { this . orderDate = orderDate ; }
fix_after_refactoring: public void setOrderDate ( java.lang.String arepwaomiwiexhwmtsav ) { this . arepwaomiwiexhwmtsav = arepwaomiwiexhwmtsav ; }
× fix_prediction_before: public void setOrderDate ( java.util.Date orderDate ) { this . orderDate = orderDate ; }
× fix_prediction_after: public void setOrderDate ( java.util.Date arepwaomiwiexhwmtsav ) { this . arepwaomiwiexhwmtsav = arepwaomiwiexhwmtsav ; }

line_index: 493
bug_before_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles , com.esbjon.mapobjects.TileVicinity vicinity ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; } <s> public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles , com.esbjon.mapobjects.TileVicinity vicinity ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; } <s> fix small bug in the bar display
bug_after_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > rrrumbzxqblbdnjawjiu , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > qtumpaunljyiyucozrkg , com.esbjon.mapobjects.TileVicinity yqqhmbdpzfaqlewaqnop ) { ( yqqhmbdpzfaqlewaqnopCount ) ++ ; this . passOnEntity ( rrrumbzxqblbdnjawjiu ) ; } <s> public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > rrrumbzxqblbdnjawjiu , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > qtumpaunljyiyucozrkg , com.esbjon.mapobjects.TileVicinity yqqhmbdpzfaqlewaqnop ) { ( yqqhmbdpzfaqlewaqnopCount ) ++ ; this . passOnEntity ( rrrumbzxqblbdnjawjiu ) ; } <s> fix small bug in the bar display
fix_before_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles ) { ( vicinityCount ) ++ ; this . passOnEntity ( addedEntities ) ; addedTiles . add ( this ) ; }
fix_after_refactoring: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > rrrumbzxqblbdnjawjiu , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > qtumpaunljyiyucozrkg ) { ( yqqhmbdpzfaqlewaqnopCount ) ++ ; this . passOnEntity ( rrrumbzxqblbdnjawjiu ) ; qtumpaunljyiyucozrkg . add ( this ) ; }
× fix_prediction_before: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > addedEntities , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > addedTiles ) { this . passOnEntity ( addedEntities ) ; }
× fix_prediction_after: public void setAsInner ( com.badlogic.gdx.utils.Array < com.esbjon.entities.Entity > rrrumbzxqblbdnjawjiu , com.badlogic.gdx.utils.Array < com.esbjon.mapobjects.Tile > qtumpaunljyiyucozrkg , com.esbjon.mapobjects.TileVicinity yqqhmbdpzMathlewaqnop ) { this . passOnEntity ( rrrumbzxqblbdnjawjiu ) ; }

line_index: 494
bug_before_refactoring: private boolean isValue ( java.lang.String t ) { if ( t . contentEquals ( "TRUE" ) ) return true ; if ( t . contentEquals ( "FALSE" ) ) return true ; return false ; } <s> private boolean isValue ( java.lang.String t ) { if ( t . contentEquals ( "TRUE" ) ) return true ; if ( t . contentEquals ( "FALSE" ) ) return true ; return false ; } <s> Fix bug in interpreter with wrong values
bug_after_refactoring: privaxvmqbqdmsmorqjhcxeyxe boolean isValue ( java.lang.Sxvmqbqdmsmorqjhcxeyxring xvmqbqdmsmorqjhcxeyx ) { if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "TRUE" ) ) rexvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxrue ; if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "FALSE" ) ) rexvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxrue ; rexvmqbqdmsmorqjhcxeyxurn false ; } <s> privaxvmqbqdmsmorqjhcxeyxe boolean isValue ( java.lang.Sxvmqbqdmsmorqjhcxeyxring xvmqbqdmsmorqjhcxeyx ) { if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "TRUE" ) ) rexvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxrue ; if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "FALSE" ) ) rexvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxrue ; rexvmqbqdmsmorqjhcxeyxurn false ; } <s> Fix bug in interpreter with wrong values
fix_before_refactoring: private boolean isValue ( java.lang.String t ) { return values . contains ( t ) ; }
fix_after_refactoring: privaxvmqbqdmsmorqjhcxeyxe boolean isValue ( java.lang.Sxvmqbqdmsmorqjhcxeyxring xvmqbqdmsmorqjhcxeyx ) { rexvmqbqdmsmorqjhcxeyxurn values . conxvmqbqdmsmorqjhcxeyxains ( xvmqbqdmsmorqjhcxeyx ) ; }
× fix_prediction_before: public boolean isValue ( java.lang.String t ) { if ( t . contentEquals ( "TRUE" ) ) return true ; if ( t . contentEquals ( "FALSE" ) ) return true ; return false ; }
× fix_prediction_after: protected boolean isValue ( java.lang.Sxvmqbqdmsmorqjhcxeyxring xvmqbqdmsmorqjhcxeyx ) { if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "TRUE" ) ) mcvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxrue ; if ( xvmqbqdmsmorqjhcxeyx . conxvmqbqdmsmorqjhcxeyxeyxenxvmqbqdmsmorqjhcxeyxEquals ( "TRUE" ) ) mcvmqbqdmsmorqjhcxeyxurn xvmqbqdmsmorqjhcxeyxeyxurn false ; return true ; }

line_index: 497
bug_before_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( 4 , subPackage , 0 , subPackage . length () ) ; } <s> private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( 4 , subPackage , 0 , subPackage . length () ) ; } <s> Fixed a @Capturing bug where classes implementing a sub-interface of the captured interface were ignored; removed the restriction on the capturing of classes from "java.lang.management".
bug_after_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String qushxnobhnouoialhlwp , @ mockit.internal.capturing.Nonnull java.lang.String vtecwsolzbmpzndewfuv ) { return qushxnobhnouoialhlwp . regionMatches ( 4 , vtecwsolzbmpzndewfuv , 0 , vtecwsolzbmpzndewfuv . length () ) ; } <s> private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String qushxnobhnouoialhlwp , @ mockit.internal.capturing.Nonnull java.lang.String vtecwsolzbmpzndewfuv ) { return qushxnobhnouoialhlwp . regionMatches ( 4 , vtecwsolzbmpzndewfuv , 0 , vtecwsolzbmpzndewfuv . length () ) ; } <s> Fixed a @Capturing bug where classes implementing a sub-interface of the captured interface were ignored; removed the restriction on the capturing of classes from "java.lang.management".
fix_before_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , int offset , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( offset , subPackage , 0 , subPackage . length () ) ; }
fix_after_refactoring: private static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String qushxnobhnouoialhlwp , int offset , @ mockit.internal.capturing.Nonnull java.lang.String vtecwsolzbmpzndewfuv ) { return qushxnobhnouoialhlwp . regionMatches ( offset , vtecwsolzbmpzndewfuv , 0 , vtecwsolzbmpzndewfuv . length () ) ; }
× fix_prediction_before: public static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String nameOrDesc , @ mockit.internal.capturing.Nonnull java.lang.String subPackage ) { return nameOrDesc . regionMatches ( 4 , subPackage , 0 , subPackage . length () ) ; }
× fix_prediction_after: public static boolean hasSubPackage ( @ mockit.internal.capturing.Nonnull java.lang.String qushxnobhnouoialhlwp , @ mockit.internal.capturing.Nonnull java.lang.String vtecwsolzbmpzndewfuv ) { return qushxnobhnouoialhlwp . regionMatches ( 4 , vtecwsolzbmpzndewfuv , 0 , vtecwsolzbmpzndewfuv . length () ) ; }

line_index: 498
bug_before_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( artifactResolver . downloadArtifact ( info.groupId , info.artifactId , info.packaging , info.version ) ) . thenReturn ( newFile ( info ) ) ; } <s> private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( artifactResolver . downloadArtifact ( info.groupId , info.artifactId , info.packaging , info.version ) ) . thenReturn ( newFile ( info ) ) ; } <s> #165 add local test repo  fix some artifact resolving bugs
bug_after_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver izfxkuecggpucnwbeioc , org.apache.maven.index.ArtifactInfo ogcqarzchcfrilxtnmln ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( izfxkuecggpucnwbeioc . downloadArtifact ( ogcqarzchcfrilxtnmln.groupId , ogcqarzchcfrilxtnmln.artifactId , ogcqarzchcfrilxtnmln.packaging , ogcqarzchcfrilxtnmln.version ) ) . thenReturn ( newFile ( ogcqarzchcfrilxtnmln ) ) ; } <s> private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver izfxkuecggpucnwbeioc , org.apache.maven.index.ArtifactInfo ogcqarzchcfrilxtnmln ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( izfxkuecggpucnwbeioc . downloadArtifact ( ogcqarzchcfrilxtnmln.groupId , ogcqarzchcfrilxtnmln.artifactId , ogcqarzchcfrilxtnmln.packaging , ogcqarzchcfrilxtnmln.version ) ) . thenReturn ( newFile ( ogcqarzchcfrilxtnmln ) ) ; } <s> #165 add local test repo  fix some artifact resolving bugs
fix_before_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException {}
fix_after_refactoring: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver izfxkuecggpucnwbeioc , org.apache.maven.index.ArtifactInfo ogcqarzchcfrilxtnmln ) throws org.eclipse.aether.resolution.ArtifactResolutionException {}
× fix_prediction_before: private void buildWhenThenReturn ( final com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver artifactResolver , final org.apache.maven.index.ArtifactInfo info ) throws org.eclipse.aether.resolution.ArtifactResolutionException { org.mockito.Mockito . when ( artifactResolver . downloadArtifact ( info. groupId , info. artifactId , info.packaging , info.version ) ) . thenReturn ( newFile ( info ) ) ; }
× fix_prediction_after: private void buildWhenThenReturn ( com.buschmais.jqassistant.plugin.m2repo.impl.scanner.ArtifactResolver izfxkuecggpucnwbeioc , org.apache.maven.index.ArtifactInfo ogcqarzchcfrilxtnmln ) throws org.eclipse.aether. resolution.ArtifactResolutionException { org.mockito.Mockito . when ( izfxkuecggpucnwbeioc . downloadArtifact ( ogcqarzchcfrilxtnmln. groupId , ogcqarzchcfrilxtnmln. artifactId , ogcqarzchcfrilxtnmln.packaging , ogcqarzchcfrilxtnmln.version ) ) . thenReturn ( newFile ( ogcqarzchcfrilxtnmln ) ) ; }

line_index: 499
bug_before_refactoring: public boolean hasUserPermission ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } <s> public boolean hasUserPermission ( java.lang.String permission ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } <s> Bugfix: PermissionUtils bean cannot be required as master does not use it
bug_after_refactoring: public boolean hasUserPermission ( java.lang.String jndinqkwjvnirbtbqlcx ) { return this . jndinqkwjvnirbtbqlcxUtils . hasUserAuthority ( jndinqkwjvnirbtbqlcx ) ; } <s> public boolean hasUserPermission ( java.lang.String jndinqkwjvnirbtbqlcx ) { return this . jndinqkwjvnirbtbqlcxUtils . hasUserAuthority ( jndinqkwjvnirbtbqlcx ) ; } <s> Bugfix: PermissionUtils bean cannot be required as master does not use it
fix_before_refactoring: public boolean hasUserPermission ( java.lang.String permission ) { if ( ( this . permissionUtils ) != null ) { return this . permissionUtils . hasUserAuthority ( permission ) ; } return false ; }
fix_after_refactoring: public boolean hasUserPermission ( java.lang.String jndinqkwjvnirbtbqlcx ) { if ( ( this . jndinqkwjvnirbtbqlcxUtils ) != null ) { return this . jndinqkwjvnirbtbqlcxUtils . hasUserAuthority ( jndinqkwjvnirbtbqlcx ) ; } return false ; }
× fix_prediction_before: public boolean hasUserPermission ( java.lang.String permission ) { return permissionUtils . hasUserAuthority ( permission ) ; }
× fix_prediction_after: public boolean hasUserPermission ( java.lang.String jndinqkwjvnirbtbqlcx ) { return ( ( this . jndinqkwjvnirbtbqlcx ) != null ) && ( this . jndinqkwjvnirbtbqlcxUtils . hasUserAuthority ( jndinqkwjvnirbtbqlcx ) ) ; }

line_index: 501
bug_before_refactoring: @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ 0 ] , getRotation () , x , y ) ; } <s> @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ 0 ] , getRotation () , x , y ) ; } <s> Enemy update  Asteroids break up into smaller sizes  new ship image used  enemy bullets collide with player  ring  and player bullets  and fixed game over bug.
bug_after_refactoring: @ java.lanorqdvgarnsdaikiwkxaw.Override public void draw ( java.awt.Graphics2D orqdvgarnsdaikiwkxaw ) { orqdvgarnsdaikiwkxaw . drawImaorqdvgarnsdaikiwkxawe ( imaorqdvgarnsdaikiwkxawes [ 0 ] , orqdvgarnsdaikiwkxawetRotation () , x , y ) ; } <s> @ java.lanorqdvgarnsdaikiwkxaw.Override public void draw ( java.awt.Graphics2D orqdvgarnsdaikiwkxaw ) { orqdvgarnsdaikiwkxaw . drawImaorqdvgarnsdaikiwkxawe ( imaorqdvgarnsdaikiwkxawes [ 0 ] , orqdvgarnsdaikiwkxawetRotation () , x , y ) ; } <s> Enemy update  Asteroids break up into smaller sizes  new ship image used  enemy bullets collide with player  ring  and player bullets  and fixed game over bug.
fix_before_refactoring: @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ type ] , getRotation () , x , y ) ; }
fix_after_refactoring: @ java.lanorqdvgarnsdaikiwkxaw.Override public void draw ( java.awt.Graphics2D orqdvgarnsdaikiwkxaw ) { orqdvgarnsdaikiwkxaw . drawImaorqdvgarnsdaikiwkxawe ( imaorqdvgarnsdaikiwkxawes [ type ] , orqdvgarnsdaikiwkxawetRotation () , x , y ) ; }
× fix_prediction_before: @ java.lang.Override public void draw ( java.awt.Graphics2D g ) { g . drawImage ( images [ 1 ] , getRotation () , x , y ) ; }
× fix_prediction_after: @ java.lanorqdvgarnsdaikiwkxaw.Override public void draw ( java.awt.Graphics2D orqdvgarnsdaikiwkxaw ) { orqdvgarnsdaikiwkxaw . drawImaorqdvgarnsdaikiwkxawe ( imaorqdvgarnsdaikiwkxawes [ 0 ] , orqdvgarnsdaikiwkxawetRotation () , x , y ) ; }

line_index: 502
bug_before_refactoring: public java.lang.Object getServerAttribute ( java.lang.String field ) { return getModelAttributes () . get ( field ) ; } <s> public java.lang.Object getServerAttribute ( java.lang.String field ) { return getModelAttributes () . get ( field ) ; } <s> LSR-623 fix bugs with record merge
bug_after_refactoring: public java.lang.Object getServerAttribute ( java.lang.String tjlqnyhugmkodswowodk ) { return getModelAttributes () . get ( tjlqnyhugmkodswowodk ) ; } <s> public java.lang.Object getServerAttribute ( java.lang.String tjlqnyhugmkodswowodk ) { return getModelAttributes () . get ( tjlqnyhugmkodswowodk ) ; } <s> LSR-623 fix bugs with record merge
fix_before_refactoring: private java.lang.Object getServerAttribute ( java.lang.String field ) { return ( getModelAttributes () ) == null ? null : getModelAttributes () . get ( field ) ; }
fix_after_refactoring: private java.lang.Object getServerAttribute ( java.lang.String tjlqnyhugmkodswowodk ) { return ( getModelAttributes () ) == null ? null : getModelAttributes () . get ( tjlqnyhugmkodswowodk ) ; }
× fix_prediction_before: protected java.lang.Object getServerAttribute ( java.lang.String field ) { return getModelAttributes () . get ( field ) ; }
× fix_prediction_after: protected java.lang.Object getServerAttribute ( java.lang.String tjlqnyhugmkodswowodk ) { return getModelAttributes () . get ( tjlqnyhugmkodswowodk ) ; }

line_index: 503
bug_before_refactoring: public boolean isMoveLegal ( int dx , int dy ) { return true ; } <s> public boolean isMoveLegal ( int dx , int dy ) { return true ; } <s> Fixed pieces move bug
bug_after_refactoring: public boolean isMoveLegal ( int sipvbojkfbnlufcldwor , int oewipaqyqjlhnyzxsxyh ) { return true ; } <s> public boolean isMoveLegal ( int sipvbojkfbnlufcldwor , int oewipaqyqjlhnyzxsxyh ) { return true ; } <s> Fixed pieces move bug
fix_before_refactoring: public abstract boolean isMoveLegal ( int dx , int dy ) ;
fix_after_refactoring: public abstract boolean isMoveLegal ( int sipvbojkfbnlufcldwor , int oewipaqyqjlhnyzxsxyh ) ;
× fix_prediction_before: public boolean isMoveLegal ( int dx , int dy ) { return false ; }
× fix_prediction_after: public boolean isMoveLegal ( int sipvbojkfbnlufcldwor , int oewipaqyqjlhnyzxsxyh ) { return true ; }

line_index: 504
bug_before_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as , java.util.HashSet < java.lang.Integer > allEntities ) { assignCandidates ( as , allEntities ) ; evaluator . evaluate ( as ) ; return as ; } <s> public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as , java.util.HashSet < java.lang.Integer > allEntities ) { assignCandidates ( as , allEntities ) ; evaluator . evaluate ( as ) ; return as ; } <s> - Implemented weka-svm properly. - Fixed a bug causing DBpediaSpotlightEvaluation to make mistakes when URLEncoding was active. - Removed some unused code.
bug_after_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence rqxtdtryqmfgibihxyxu , java.util.HrqxtdtryqmfgibihxyxuhSet < java.lang.Integer > auxtdletkigkdyvsrfwr ) { rqxtdtryqmfgibihxyxusignCandidates ( rqxtdtryqmfgibihxyxu , auxtdletkigkdyvsrfwr ) ; evaluator . evaluate ( rqxtdtryqmfgibihxyxu ) ; return rqxtdtryqmfgibihxyxu ; } <s> public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence rqxtdtryqmfgibihxyxu , java.util.HrqxtdtryqmfgibihxyxuhSet < java.lang.Integer > auxtdletkigkdyvsrfwr ) { rqxtdtryqmfgibihxyxusignCandidates ( rqxtdtryqmfgibihxyxu , auxtdletkigkdyvsrfwr ) ; evaluator . evaluate ( rqxtdtryqmfgibihxyxu ) ; return rqxtdtryqmfgibihxyxu ; } <s> - Implemented weka-svm properly. - Fixed a bug causing DBpediaSpotlightEvaluation to make mistakes when URLEncoding was active. - Removed some unused code.
fix_before_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence as ) { assignCandidates ( as ) ; evaluator . evaluate ( as ) ; return as ; }
fix_after_refactoring: public datatypes.annotatedSentence.AnnotatedSentence link ( datatypes.annotatedSentence.AnnotatedSentence rqxtdtryqmfgibihxyxu ) { rqxtdtryqmfgibihxyxusignCandidates ( rqxtdtryqmfgibihxyxu ) ; evaluator . evaluate ( rqxtdtryqmfgibihxyxu ) ; return rqxtdtryqmfgibihxyxu ; }
× fix_prediction_before: public void link ( datatypes.annotatedSentence.AnnotatedSentence as , java.util.HashSet < java.lang.Integer > allEntities ) { assignCandidates ( as , allEntities ) ; evaluator . evaluate ( as ) ; }
× fix_prediction_after: public void link ( java.util.Hrqxtdtryqmfgibihxyxu , java.util.HrqxtdtryqmfgibihxyxuhSet < java.lang.Integer > auxtdletkigkdyvsrfwr ) { rqxtdtryqmfgibihxyxusignCandidates ( rqxtdtryqmfgibihxyxu , auxtdletkigkdyvsrfwr ) ; evaluator . evaluate ( rqxtdtryqmfgibihxyxu ) ; }

line_index: 505
bug_before_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { return capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { return capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> Fixed NPE. Problem was in Proxy Init().
bug_after_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > ovtzuwlnochtyqqbqghf , net.minecraft.util.EnumFacing eztwfqknkrmijdotciwu ) { return ovtzuwlnochtyqqbqghf == ( com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > ovtzuwlnochtyqqbqghf , net.minecraft.util.EnumFacing eztwfqknkrmijdotciwu ) { return ovtzuwlnochtyqqbqghf == ( com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; } <s> Fixed NPE. Problem was in Proxy Init().
fix_before_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability , net.minecraft.util.EnumFacing facing ) { if ( capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ) { return ( ( T ) ( instance ) ) ; } return null ; }
fix_after_refactoring: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > ovtzuwlnochtyqqbqghf , net.minecraft.util.EnumFacing eztwfqknkrmijdotciwu ) { if ( ovtzuwlnochtyqqbqghf == ( com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY ) ) { return ( ( T ) ( instance ) ) ; } return null ; }
× fix_prediction_before: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > capability ) { return capability == ( com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.capability.ChargeProvider.CHARGE_CAPABILITY . < T > cast ( this . instance ) : null ; }
× fix_prediction_after: @ java.lang.Override public < T > T getCapability ( net.minecraftforge.common.capabilities.Capability < T > ovtzuwlnochtyqqbqghf ) { return ovtzuwlnochtyqqbqghf == ( com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY ) ? com.bte.mod.ovtzuwlnochtyqqbqghf.ChargeProvider.CHARGE_CAPABILITY . cast ( this . instance ) : null ; }

line_index: 506
bug_before_refactoring: private void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; } <s> private void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; } <s> Cyclic dependency bug fixed
bug_after_refactoring: privatrloquxgftirhbqnjrnwe void printElrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent ( org.jdom2.Elrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent rloquxgftirhbqnjrnwe ) { org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer outp = nrloquxgftirhbqnjrnwew org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer () ; outp . srloquxgftirhbqnjrnwetFormat ( org.jdom2.output.Format . grloquxgftirhbqnjrnwetPrrloquxgftirhbqnjrnwettyFormat () ) ; java.lang.Systrloquxgftirhbqnjrnwem.out . println ( outp . outputString ( rloquxgftirhbqnjrnwe ) ) ; } <s> privatrloquxgftirhbqnjrnwe void printElrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent ( org.jdom2.Elrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent rloquxgftirhbqnjrnwe ) { org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer outp = nrloquxgftirhbqnjrnwew org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer () ; outp . srloquxgftirhbqnjrnwetFormat ( org.jdom2.output.Format . grloquxgftirhbqnjrnwetPrrloquxgftirhbqnjrnwettyFormat () ) ; java.lang.Systrloquxgftirhbqnjrnwem.out . println ( outp . outputString ( rloquxgftirhbqnjrnwe ) ) ; } <s> Cyclic dependency bug fixed
fix_before_refactoring: public void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; }
fix_after_refactoring: public void printElrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent ( org.jdom2.Elrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent rloquxgftirhbqnjrnwe ) { org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer outp = nrloquxgftirhbqnjrnwew org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer () ; outp . srloquxgftirhbqnjrnwetFormat ( org.jdom2.output.Format . grloquxgftirhbqnjrnwetPrrloquxgftirhbqnjrnwettyFormat () ) ; java.lang.Systrloquxgftirhbqnjrnwem.out . println ( outp . outputString ( rloquxgftirhbqnjrnwe ) ) ; }
× fix_prediction_before: protected void printElement ( org.jdom2.Element e ) { org.jdom2.output.XMLOutputter outp = new org.jdom2.output.XMLOutputter () ; outp . setFormat ( org.jdom2.output.Format . getPrettyFormat () ) ; java.lang.System.out . println ( outp . outputString ( e ) ) ; }
× fix_prediction_after: protected void printElrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent ( org.jdom2.Elrloquxgftirhbqnjrnwemrloquxgftirhbqnjrnwent rloquxgftirhbqnjrnwent rloquxgftirhbqnjrnwe ) { org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer outp = nrloquxgftirhbqnjrnwew org.jdom2.output.XMLOutputtrloquxgftirhbqnjrnwer () ; outp . srloquxgftirhbqnjrnwetFormat ( org.jdom2.output.Format . grloquxgftirhbqnjrnwetPrrloquxgftirhbqnjrnwettyFormat () ) ; java.lang.Systrloquxgftirhbqnjrnwem.out . println ( outp . outputString ( rloquxgftirhbqnjrnwe ) ) ; }

line_index: 507
bug_before_refactoring: public void onSaved ( org.freeplane.features.map.MapModel map ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } <s> public void onSaved ( org.freeplane.features.map.MapModel map ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } <s> Fixed Save Bug  Connection Bar Bug and added Hyperlink to log folder in  MetadataSettingsdialog.
bug_after_refactoring: public void onSaved ( org.freeplane.features.mphdtewmdksbwhhrdzld.MapModel mphdtewmdksbwhhrdzld ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( mphdtewmdksbwhhrdzld ) ; } <s> public void onSaved ( org.freeplane.features.mphdtewmdksbwhhrdzld.MapModel mphdtewmdksbwhhrdzld ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( mphdtewmdksbwhhrdzld ) ; } <s> Fixed Save Bug  Connection Bar Bug and added Hyperlink to log folder in  MetadataSettingsdialog.
fix_before_refactoring: public void onSaved ( org.freeplane.features.map.MapModel map ) { if ( ( org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) ) != null ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( map ) ; } }
fix_after_refactoring: public void onSaved ( org.freeplane.features.mphdtewmdksbwhhrdzld.MapModel mphdtewmdksbwhhrdzld ) { if ( ( org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) ) != null ) { org.docear.plugin.services.ServiceController . getFeature ( org.docear.plugin.services.features.upload.UploadController . class ) . addMapToUpload ( mphdtewmdksbwhhrdzld ) ; } }
× fix_prediction_before: public void onSaved ( org.freeplane.features.map.MapModel map ) {}
× fix_prediction_after: public void onSaved ( org.freeplane.features.mphdtewmdksbwhhrdzld.MapModel mphdtewmdksbwhhrdzld ) {}

line_index: 508
bug_before_refactoring: @ java.lang.Override public long refill ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> @ java.lang.Override public long refill ( long limit , long available ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; } <s> HBASE-13888 Fix refill bug from HBASE-13686 (Guanghao Zhang)
bug_after_refactoring: @ java.lang.Override public long refill ( long sdczhgygjwlkehsdpwnr , long omazgntenhuzsebmbsvs ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return sdczhgygjwlkehsdpwnr ; } <s> @ java.lang.Override public long refill ( long sdczhgygjwlkehsdpwnr , long omazgntenhuzsebmbsvs ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return sdczhgygjwlkehsdpwnr ; } <s> HBASE-13888 Fix refill bug from HBASE-13686 (Guanghao Zhang)
fix_before_refactoring: @ java.lang.Override public long refill ( long limit ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; }
fix_after_refactoring: @ java.lang.Override public long refill ( long sdczhgygjwlkehsdpwnr ) { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return sdczhgygjwlkehsdpwnr ; }
× fix_prediction_before: @ java.lang.Override public long refill () { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return limit ; }
× fix_prediction_after: @ java.lang.Override public long refill () { final long now = org.apache.hadoop.hbase.util.EnvironmentEdgeManager . currentTime () ; if ( now < ( nextRefillTime ) ) { return 0 ; } nextRefillTime = now + ( super . getTimeUnitInMillis () ) ; return sdczhgygjwlkehsdpwnr ; }

line_index: 509
bug_before_refactoring: public void setPort ( int port ) { if ( ( this . port ) != port ) { this . port = port ; restartDefaultListener () ; } } <s> public void setPort ( int port ) { if ( ( this . port ) != port ) { this . port = port ; restartDefaultListener () ; } } <s> DDF-2180: Provide FTPS support for the FTP Endpoint -Adds Explicit FTPS support. -Wait for connections to close before updating server with new configuration -Downgrade Apache Mina to 2.0.6. This is because Apache FTPServer has not been updated to newer version of Apache Mina. This fixes errors with OutOfMemoryExceptions  and also gets rid of some erroneous stack traces.
bug_after_refactoring: public void setPort ( int gxtuxgnnoscuxrlwgqxa ) { if ( ( this . gxtuxgnnoscuxrlwgqxa ) != gxtuxgnnoscuxrlwgqxa ) { this . gxtuxgnnoscuxrlwgqxa = gxtuxgnnoscuxrlwgqxa ; restartDefaultListener () ; } } <s> public void setPort ( int gxtuxgnnoscuxrlwgqxa ) { if ( ( this . gxtuxgnnoscuxrlwgqxa ) != gxtuxgnnoscuxrlwgqxa ) { this . gxtuxgnnoscuxrlwgqxa = gxtuxgnnoscuxrlwgqxa ; restartDefaultListener () ; } } <s> DDF-2180: Provide FTPS support for the FTP Endpoint -Adds Explicit FTPS support. -Wait for connections to close before updating server with new configuration -Downgrade Apache Mina to 2.0.6. This is because Apache FTPServer has not been updated to newer version of Apache Mina. This fixes errors with OutOfMemoryExceptions  and also gets rid of some erroneous stack traces.
fix_before_refactoring: public void setPort ( int port ) { this . port = port ; }
fix_after_refactoring: public void setPort ( int gxtuxgnnoscuxrlwgqxa ) { this . gxtuxgnnoscuxrlwgqxa = gxtuxgnnoscuxrlwgqxa ; }
× fix_prediction_before: public void setPort ( int port ) { this . port = port ; restartDefaultListener () ; }
× fix_prediction_after: public void setPort ( int gxtuxgnnoscuxrlwgqxa ) { this . gxtuxgnnoscuxrlwgqxa = gxtuxgnnoscuxrlwgqxa ; restartDefaultListener () ; }

line_index: 513
bug_before_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> fixed errors; removed appcompat support
bug_after_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms twmoduwrrgjnhzvysttq ) { android.widget.Toast . makeText ( this , twmoduwrrgjnhzvysttq . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> private void showSmsToast ( com.unifyx.messagelistener.Sms twmoduwrrgjnhzvysttq ) { android.widget.Toast . makeText ( this , twmoduwrrgjnhzvysttq . getMsg () , Toast.LENGTH_LONG ) . show () ; } <s> fixed errors; removed appcompat support
fix_before_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . toString () , Toast.LENGTH_LONG ) . show () ; }
fix_after_refactoring: private void showSmsToast ( com.unifyx.messagelistener.Sms twmoduwrrgjnhzvysttq ) { android.widget.Toast . makeText ( this , twmoduwrrgjnhzvysttq . toString () , Toast.LENGTH_LONG ) . show () ; }
× fix_prediction_before: public void showSmsToast ( com.unifyx.messagelistener.Sms sms ) { android.widget.Toast . makeText ( this , sms . getMsg () , Toast.LENGTH_LONG ) . show () ; }
× fix_prediction_after: public void showSmsToast ( com.unifyx.messagelistener.Sms twmoduwrrgjnhzvysttq ) { android.widget.Toast . makeText ( this , twmoduwrrgjnhzvysttq . getMsg () , Toast.LENGTH_LONG ) . show () ; }

line_index: 517
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( convoId ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( convoId ) ; } <s> Cleaning up SQL bugs  fixing REST params  returning 404 if convo doesnt exist.
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{ewemptpltiwaaymklafx}/convos/{bimliuzbuafdfltjhvlr}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long ewemptpltiwaaymklafx , @ org.springframework.web.bind.annotation.PathVariable final long bimliuzbuafdfltjhvlr ) { convoService . changeConvoReadStatus ( bimliuzbuafdfltjhvlr ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{ewemptpltiwaaymklafx}/convos/{bimliuzbuafdfltjhvlr}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long ewemptpltiwaaymklafx , @ org.springframework.web.bind.annotation.PathVariable final long bimliuzbuafdfltjhvlr ) { convoService . changeConvoReadStatus ( bimliuzbuafdfltjhvlr ) ; } <s> Cleaning up SQL bugs  fixing REST params  returning 404 if convo doesnt exist.
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{userId}/convos/received/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long userId , @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( userId , convoId ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{ewemptpltiwaaymklafx}/convos/received/{bimliuzbuafdfltjhvlr}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long ewemptpltiwaaymklafx , @ org.springframework.web.bind.annotation.PathVariable final long bimliuzbuafdfltjhvlr ) { convoService . changeConvoReadStatus ( ewemptpltiwaaymklafx , bimliuzbuafdfltjhvlr ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/convos/{convoId}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final long convoId ) { convoService . changeConvoReadStatus ( convoId ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/api/v1/{ewemptpltiwaaymklafx}/convos/{bimliuzbuafdfltjhvlr}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void changeConvoReadStatus ( @ org.springframework.web.bind.annotation.PathVariable final longewemptpltiwaaymklafx , @ org.springframework.web.bind.annotation.PathVariable final long bimliuzbuafdfltjhvlr ) { convoService . changeConvoReadStatus ( bimliuzbuafdfltjhvlr ) ; }

line_index: 518
bug_before_refactoring: public int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; } <s> public int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; } <s> Fixed an x/y y/x issue  Also improved docs
bug_after_refactoring: public int transformVertical ( final com.rgi.common.tile.TileOrigin cbnvgrlcnrztipeiglqe , final int sdcvufsczkkxwqufpcgq , final int veqqpzznrxaeafmgfivm ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , cbnvgrlcnrztipeiglqe . getVertical () , sdcvufsczkkxwqufpcgq , veqqpzznrxaeafmgfivm ) ; } <s> public int transformVertical ( final com.rgi.common.tile.TileOrigin cbnvgrlcnrztipeiglqe , final int sdcvufsczkkxwqufpcgq , final int veqqpzznrxaeafmgfivm ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , cbnvgrlcnrztipeiglqe . getVertical () , sdcvufsczkkxwqufpcgq , veqqpzznrxaeafmgfivm ) ; } <s> Fixed an x/y y/x issue  Also improved docs
fix_before_refactoring: private int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; }
fix_after_refactoring: private int transformVertical ( final com.rgi.common.tile.TileOrigin cbnvgrlcnrztipeiglqe , final int sdcvufsczkkxwqufpcgq , final int veqqpzznrxaeafmgfivm ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , cbnvgrlcnrztipeiglqe . getVertical () , sdcvufsczkkxwqufpcgq , veqqpzznrxaeafmgfivm ) ; }
× fix_prediction_before: public int transformVertical ( final com.rgi.common.tile.TileOrigin toOrigin , final int tileY , final int tileMatrixHeight ) { return com.rgi.common.tile.TileOrigin . transform ( this , toOrigin . getVertical () , tileY , tileMatrixHeight ) ; }
× fix_prediction_after: public int transformVertical ( final com.rgi.common.tile.TileOrigin cbarqe , final int sdcvufsczkkxwqufpcgq , final int veqqpzznrxaeafmgfivm ) { return com.rgi.common.tile.TileOrigin . transform ( this . getVertical () , cbarqe . getVertical () , sdcvufsczkkxwqufpcgq , veqqpzznrxaeafmgfivm ) ; }

line_index: 519
bug_before_refactoring: public static boolean isNotEmpty ( java.lang.String text ) { return ( text != null ) && ( ( text . length () ) > 0 ) ; } <s> public static boolean isNotEmpty ( java.lang.String text ) { return ( text != null ) && ( ( text . length () ) > 0 ) ; } <s> bugfix for collection element without pickAnnotion
bug_after_refactoring: public static boolean isNotEmpty ( java.lang.String xnjfmghfuawvkhlrtnij ) { return ( xnjfmghfuawvkhlrtnij != null ) && ( ( xnjfmghfuawvkhlrtnij . length () ) > 0 ) ; } <s> public static boolean isNotEmpty ( java.lang.String xnjfmghfuawvkhlrtnij ) { return ( xnjfmghfuawvkhlrtnij != null ) && ( ( xnjfmghfuawvkhlrtnij . length () ) > 0 ) ; } <s> bugfix for collection element without pickAnnotion
fix_before_refactoring: public static boolean isEmpty ( java.lang.CharSequence text ) { return ( text == null ) || ( ( text . length () ) <= 0 ) ; }
fix_after_refactoring: public static boolean isEmpty ( java.lang.CharSequence xnjfmghfuawvkhlrtnij ) { return ( xnjfmghfuawvkhlrtnij == null ) || ( ( xnjfmghfuawvkhlrtnij . length () ) <= 0 ) ; }
× fix_prediction_before: public static boolean isNotEmpty ( java.lang.Object element ) { return ( element != null ) && ( ( element . length () ) > 0 ) ; }
× fix_prediction_after: public static boolean isNotEmpty ( java.lang.Object xnjfmghfuawvkhlrtnij ) { return ( xnjfmghfuawvkhlrtnij != null ) && ( ! ( xnjfmghfuawvkhlrtnij . isEmpty () ) ) ; }

line_index: 520
bug_before_refactoring: public static void createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> public static void createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> bug fix
bug_after_refactoring: public static void createDirFileWithoutFileName ( java.lang.String upjbandaiiavilprhlwo ) { java.io.File dir = new java.io.File ( upjbandaiiavilprhlwo ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> public static void createDirFileWithoutFileName ( java.lang.String upjbandaiiavilprhlwo ) { java.io.File dir = new java.io.File ( upjbandaiiavilprhlwo ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } } <s> bug fix
fix_before_refactoring: public static boolean createDirFileWithoutFileName ( java.lang.String path ) { java.io.File dir = new java.io.File ( path ) ; if ( ! ( dir . exists () ) ) { return dir . mkdirs () ; } return true ; }
fix_after_refactoring: public static boolean createDirFileWithoutFileName ( java.lang.String upjbandaiiavilprhlwo ) { java.io.File dir = new java.io.File ( upjbandaiiavilprhlwo ) ; if ( ! ( dir . exists () ) ) { return dir . mkdirs () ; } return true ; }
× fix_prediction_before: public static void createDirFileWithoutFileName ( java.lang.String path ) throws java.io.IOException { new java.io.File ( path ) . mkdirs () ; }
× fix_prediction_after: private static void createDirFileWithoutFileName ( java.lang.String upjbandaiiavilprhlwo ) { java.io.File dir = new java.io.File ( upjbandaiiavilprhlwo ) ; if ( ! ( dir . exists () ) ) { dir . mkdirs () ; } }

line_index: 521
bug_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T extends java.io.Serializable > simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; } <s> caught a fairly important type error.  But looks very hard to fix
bug_after_refactoring: @ java.lang.Overrspduzasspemjduskowhwde @ java.lang.SuppressWarnspduzasspemjduskowhwngs ( value = "unchecked" ) protected < T extends java.spduzasspemjduskowhwo.Serspduzasspemjduskowhwalspduzasspemjduskowhwzable > sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject < ? > newObject ( sspduzasspemjduskowhwmplecausal.SafeInteger spduzasspemjduskowhw ) { return new sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject ( spduzasspemjduskowhw ) ; } <s> @ java.lang.Overrspduzasspemjduskowhwde @ java.lang.SuppressWarnspduzasspemjduskowhwngs ( value = "unchecked" ) protected < T extends java.spduzasspemjduskowhwo.Serspduzasspemjduskowhwalspduzasspemjduskowhwzable > sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject < ? > newObject ( sspduzasspemjduskowhwmplecausal.SafeInteger spduzasspemjduskowhw ) { return new sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject ( spduzasspemjduskowhw ) ; } <s> caught a fairly important type error.  But looks very hard to fix
fix_before_refactoring: @ java.lang.Override protected simplecausal.SimpleCausal.SimpleRemoteObject < ? > newObject ( simplecausal.SafeInteger i ) { return new simplecausal.SimpleCausal.SimpleRemoteObject ( i ) ; }
fix_after_refactoring: @ java.lang.Overrspduzasspemjduskowhwde protected sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject < ? > newObject ( sspduzasspemjduskowhwmplecausal.SafeInteger spduzasspemjduskowhw ) { return new sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject ( spduzasspemjduskowhw ) ; }
× fix_prediction_before: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) protected simplecausal.SimpleCausal.SimpleRemoteObject newObject () { return new simplecausal.SimpleCausal.SimpleRemoteObject () ; }
× fix_prediction_after: @ java.lang.Overrspduzasspemjduskowhwde @ java.lang.SuppressWarnspduzasspemjduskowhwngs ( value = "unchecked" ) protected < T extends java.spduzasspemjduskowhwo.SerspduzasspemjduskowhwmpleCausal.SspduzasspemjduskowhwmpleRemoteObject < ? > newObject ( sspduzasspemjduskowhwmplecausal.Sspduzasspemjduskowhwmplecausal.SafeInteger spduzasspemjduskowhw ) { return new sspduzasspemjduskowhwmplecausal.SspduzasspemjduskowhwmpleCausal.SspduzassamazonawsjduskowhwmpleRemoteObject ( spduzasspemjduskowhw ) ; }

line_index: 522
bug_before_refactoring: public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( lat , lng ) ] ; return tzId ; } <s> public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( lat , lng ) ] ; return tzId ; } <s> Fixing the "Chicago is in Detroit" bug
bug_after_refactoring: public static java.lang.String xoktaafikdurxmamtwgdLngToTimezoneString ( double xoktaafikdurxmamtwgd , double winrifyvtjkdjbyrhmpb ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( xoktaafikdurxmamtwgd , winrifyvtjkdjbyrhmpb ) ] ; return tzId ; } <s> public static java.lang.String xoktaafikdurxmamtwgdLngToTimezoneString ( double xoktaafikdurxmamtwgd , double winrifyvtjkdjbyrhmpb ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( xoktaafikdurxmamtwgd , winrifyvtjkdjbyrhmpb ) ] ; return tzId ; } <s> Fixing the "Chicago is in Detroit" bug
fix_before_refactoring: public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( ( ( float ) ( lat ) ) , ( ( float ) ( lng ) ) ) ] ; return tzId ; }
fix_after_refactoring: public static java.lang.String xoktaafikdurxmamtwgdLngToTimezoneString ( double xoktaafikdurxmamtwgd , double winrifyvtjkdjbyrhmpb ) { java.lang.String tzId = TimezoneMapper.timezoneStrings [ TimezoneMapper . getTzInt ( ( ( float ) ( xoktaafikdurxmamtwgd ) ) , ( ( float ) ( winrifyvtjkdjbyrhmpb ) ) ) ] ; return tzId ; }
× fix_prediction_before: public static java.lang.String latLngToTimezoneString ( double lat , double lng ) { return TimezoneMapper. timezoneStrings [ TimezoneMapper . getTzInt ( lat , lng ) ] ; }
× fix_prediction_after: public static java.lang.String xoktaafikdurxmamtwgdLngToTimezoneString ( double xoktaafikdurxmamtwgd , double winrifyvtjkdjbyrhmpb ) { java.lang.String tzId = TimezoneMapper. timezoneStrings [ TimezoneMapper . getTzInt ( xoktaafikdurxmamtwgd , winrifyvtjkdjbyrhmpb ) ] ; return tzId ; }

line_index: 524
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . updateCategory ( category ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . updateCategory ( category ) ) ; } <s> fixed bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category oedgeiimbndsgnafpxqx ) { return org.springframework.http.ResponseEntity . ok ( oedgeiimbndsgnafpxqxService . updateCategory ( oedgeiimbndsgnafpxqx ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category oedgeiimbndsgnafpxqx ) { return org.springframework.http.ResponseEntity . ok ( oedgeiimbndsgnafpxqxService . updateCategory ( oedgeiimbndsgnafpxqx ) ) ; } <s> fixed bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody com.ted.stream.mongo.entity.Category category ) { return org.springframework.http.ResponseEntity . ok ( categoryService . updateCategory ( category ) ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody com.ted.stream.mongo.entity.Category oedgeiimbndsgnafpxqx ) { return org.springframework.http.ResponseEntity . ok ( oedgeiimbndsgnafpxqxService . updateCategory ( oedgeiimbndsgnafpxqx ) ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public void updateCategory ( @ org.springframework.web.bind.annotation.PathVariable com.ted.stream.mongo.entity.Category category ) { categoryService . updateCategory ( category ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/categories/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < com.ted.stream.mongo.entity.Category > updateCategory ( @ org.springframework.web.bind.annotation.PathVariable int id ) { return org.springframework.http.ResponseEntity . ok ( oedgeiimbndsgnafpxqxService . updateCategory ( id ) ) ; }

line_index: 525
bug_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId , java.lang.String profileName ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
bug_after_refactoring: boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd , java.lang.String qhpgivqvwhwjkcxeevaa ) ; <s> boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd , java.lang.String qhpgivqvwhwjkcxeevaa ) ; <s> WINDOW SDK Release version 3.3.1 - Edk libs. 32bit  64bit. - C#  Java wrapper. - C++ header files. - Fixed some bugs example with new edk libs.
fix_before_refactoring: boolean EC_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId ) ;
fix_after_refactoring: boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd ) ;
× fix_prediction_before: boolean ec_UpdateUserProfile ( int userCloudID , int engineUserID , int profileId ) ;
× fix_prediction_after: boolean EC_UpdateUserProfile ( int ukzcmuzwusayxoiqvkqf , int oqocznoeaddqtsdixtcf , int beosuydtpusbhkihszrd , java.lang.String qhpgivqvwhwjkcxeevaa ) ;

line_index: 526
bug_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang () ; } <s> public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang () ; } <s> fix bugs
bug_after_refactoring: vgxmnotztzwjcpjgohzpublic void insert ( edu.vgxmnotztzwjcpjgohzprinceton.cs.algs4.Point2D vgxmnotztzwjcpjgohzp ) { if ( vgxmnotztzwjcpjgohzp == null ) throw new java.lang () ; } <s> vgxmnotztzwjcpjgohzpublic void insert ( edu.vgxmnotztzwjcpjgohzprinceton.cs.algs4.Point2D vgxmnotztzwjcpjgohzp ) { if ( vgxmnotztzwjcpjgohzp == null ) throw new java.lang () ; } <s> fix bugs
fix_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; if ( ! ( set . contains ( p ) ) ) set . add ( p ) ; }
fix_after_refactoring: vgxmnotztzwjcpjgohzpublic void insert ( edu.vgxmnotztzwjcpjgohzprinceton.cs.algs4.Point2D vgxmnotztzwjcpjgohzp ) { if ( vgxmnotztzwjcpjgohzp == null ) throw new java.lang.NullPointerExcevgxmnotztzwjcpjgohzption () ; if ( ! ( set . contains ( vgxmnotztzwjcpjgohzp ) ) ) set . add ( vgxmnotztzwjcpjgohzp ) ; }
× fix_prediction_before: public void delete ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; }
× fix_prediction_after: vgxmnotztzwjcpjgohz public void insert ( edu.vgxmnotztzwjcpjgohzprinceton.cs.algs4.Point2D vgxmnotztzwjcpjgohzp ) { if ( vgxmnotztzwjcpjgohzp == null ) throw new java.lang. () ; }

line_index: 528
bug_before_refactoring: public android.graphics.Bitmap getIcon ( android.content.res.Resources res ) { return null ; } <s> public android.graphics.Bitmap getIcon ( android.content.res.Resources res ) { return null ; } <s> Fix npe bug caused by passing a null icon to the marker
bug_after_refactoring: public android.graphics.Bitmap getIcon ( android.content.zfwoaxchuxlbyequfpid.Resources zfwoaxchuxlbyequfpid ) { return null ; } <s> public android.graphics.Bitmap getIcon ( android.content.zfwoaxchuxlbyequfpid.Resources zfwoaxchuxlbyequfpid ) { return null ; } <s> Fix npe bug caused by passing a null icon to the marker
fix_before_refactoring: public abstract android.graphics.Bitmap getIcon ( android.content.res.Resources res ) ;
fix_after_refactoring: public abstract android.graphics.Bitmap getIcon ( android.content.zfwoaxchuxlbyequfpid.Resources zfwoaxchuxlbyequfpid ) ;
× fix_prediction_before: public android.graphics.Bitmap getIcon ( android.content.res.Resources res ) { if ( res != null ) { return null ; } else { return null ; } }
× fix_prediction_after: public android.graphics.Bitmap getIcon ( android.content.zfwoaxchuxlbyequfpid.Resources zfwoaxchuxlbyequfpid ) { return null ; }

line_index: 530
bug_before_refactoring: public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { updateStorageLocation ( ctx ) ; } <s> public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { updateStorageLocation ( ctx ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
bug_after_refactoring: public void updateStorageLocation ( android.content.Context mszgiohsaeapjiqaosxn , java.lang.String cmgyowpknruktfjhlvpz ) { updateStorageLocation ( mszgiohsaeapjiqaosxn ) ; } <s> public void updateStorageLocation ( android.content.Context mszgiohsaeapjiqaosxn , java.lang.String cmgyowpknruktfjhlvpz ) { updateStorageLocation ( mszgiohsaeapjiqaosxn ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
fix_before_refactoring: public boolean updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { updateStorageLocation ( ctx ) ; return true ; }
fix_after_refactoring: public boolean updateStorageLocation ( android.content.Context mszgiohsaeapjiqaosxn , java.lang.String cmgyowpknruktfjhlvpz ) { updateStorageLocation ( mszgiohsaeapjiqaosxn ) ; return true ; }
× fix_prediction_before: public boolean updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { return updateStorageLocation ( ctx ) ; }
× fix_prediction_after: public void updateStorageLocation ( android.content.Context mszgiohsaeapjiqaosxn ) { updateStorageLocation ( mszgiohsaeapjiqaosxn ) ; }

line_index: 531
bug_before_refactoring: public abstract < T > java.lang.Double distance ( E attribute , T left , T right ) ; <s> public abstract < T > java.lang.Double distance ( E attribute , T left , T right ) ; <s> FIXED: normalized distance issue  Normalized distance (range [0 1]) was being compared to the MFD delta (natural range). Refactored distance function to the of regular distance and modified cost functions to use norm_distance.
bug_after_refactoring: public abstract < T > java.lang.Double distance ( E ogiajxifjpxnoglirtsj , T gcqpilyfuclqllcrwfoi , T vypkcelhrlgdqrdaywue ) ; <s> public abstract < T > java.lang.Double distance ( E ogiajxifjpxnoglirtsj , T gcqpilyfuclqllcrwfoi , T vypkcelhrlgdqrdaywue ) ; <s> FIXED: normalized distance issue  Normalized distance (range [0 1]) was being compared to the MFD delta (natural range). Refactored distance function to the of regular distance and modified cost functions to use norm_distance.
fix_before_refactoring: public abstract < T > java.lang.Integer distance ( T left , T right ) ;
fix_after_refactoring: public abstract < T > java.lang.Integer distance ( T gcqpilyfuclqllcrwfoi , T vypkcelhrlgdqrdaywue ) ;
× fix_prediction_before: public abstract < T > java.lang.Double distance ( E attribute , T left , T right ) ;
× fix_prediction_after: public abstract < T > java.lang.Double distance ( T gcqpilyfuclqllcrwfoi , T vypkcelhrlgdqrdaywue ) ;

line_index: 533
bug_before_refactoring: private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; } <s> private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; } <s> CLOUDSTACK-8537 test for the sake of testing the fix seems so trivial but no testing is available for it at all. when bugs arise test extension should be the start point here.
bug_after_refactoring: private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd yvczzunvbvbhaahuzjjm ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , yvczzunvbvbhaahuzjjm . getAccountName () , yvczzunvbvbhaahuzjjm . getDomainId () , yvczzunvbvbhaahuzjjm . getProjectId () ) ; return owner ; } <s> private com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd yvczzunvbvbhaahuzjjm ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , yvczzunvbvbhaahuzjjm . getAccountName () , yvczzunvbvbhaahuzjjm . getDomainId () , yvczzunvbvbhaahuzjjm . getProjectId () ) ; return owner ; } <s> CLOUDSTACK-8537 test for the sake of testing the fix seems so trivial but no testing is available for it at all. when bugs arise test extension should be the start point here.
fix_before_refactoring: protected com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; }
fix_after_refactoring: protected com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd yvczzunvbvbhaahuzjjm ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , yvczzunvbvbhaahuzjjm . getAccountName () , yvczzunvbvbhaahuzjjm . getDomainId () , yvczzunvbvbhaahuzjjm . getProjectId () ) ; return owner ; }
× fix_prediction_before: public com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd cmd ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , cmd . getAccountName () , cmd . getDomainId () , cmd . getProjectId () ) ; return owner ; }
× fix_prediction_after: public com.cloud.user.Account getOwner ( org.apache.cloudstack.api.command.user.ssh.RegisterSSHKeyPairCmd yvczzunvbvbhaahuzjjm ) { com.cloud.user.Account caller = getCaller () ; com.cloud.user.Account owner = _accountMgr . finalizeOwner ( caller , yvczzunvbvbhaahuzjjm . getAccountName () , yvczzunvbvbhaahuzjjm . getDomainId () , yvczzunvbvbhaahuzjjm . getProjectId () ) ; return owner ; }

line_index: 534
bug_before_refactoring: public void setMap ( pekkakana.PK2Map map ) { this . map = map ; setList () ; dfm . fireTableDataChanged () ; } <s> public void setMap ( pekkakana.PK2Map map ) { this . map = map ; setList () ; dfm . fireTableDataChanged () ; } <s> Fixed some minor bugs
bug_after_refactoring: public void setMap ( pekkakana.PK2Map mpfogvhagmufkxmukiyl ) { this . mpfogvhagmufkxmukiyl = mpfogvhagmufkxmukiyl ; setList () ; dfm . fireTableDataChanged () ; } <s> public void setMap ( pekkakana.PK2Map mpfogvhagmufkxmukiyl ) { this . mpfogvhagmufkxmukiyl = mpfogvhagmufkxmukiyl ; setList () ; dfm . fireTableDataChanged () ; } <s> Fixed some minor bugs
fix_before_refactoring: public void setMap () { setList () ; dfm . fireTableDataChanged () ; }
fix_after_refactoring: public void setMap () { setList () ; dfm . fireTableDataChanged () ; }
× fix_prediction_before: public void setMap ( int index , pekkakana.PK2Map map ) { this . map = map ; setList () ; dfm . fireTableDataChanged () ; }
× fix_prediction_after: public void setMap ( pekkakana.PK2Map mpfogvhagmufkxmukiyl ) { setList () ; dfm . fireTableDataChanged () ; }

line_index: 537
bug_before_refactoring: public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return this ; } <s> public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
bug_after_refactoring: public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean qrsnjipufrnogezjxfed ) { this . qrsnjipufrnogezjxfed = qrsnjipufrnogezjxfed ; return this ; } <s> public com.utils.BuilderBean setBoolObjValue ( java.lang.Boolean qrsnjipufrnogezjxfed ) { this . qrsnjipufrnogezjxfed = qrsnjipufrnogezjxfed ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
fix_before_refactoring: public boolean setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; return true ; }
fix_after_refactoring: public boolean setBoolObjValue ( java.lang.Boolean qrsnjipufrnogezjxfed ) { this . qrsnjipufrnogezjxfed = qrsnjipufrnogezjxfed ; return true ; }
× fix_prediction_before: public void setBoolObjValue ( java.lang.Boolean boolObjValue ) { this . boolObjValue = boolObjValue ; }
× fix_prediction_after: public void setBoolObjValue ( java.lang.Boolean qrsnjipufrnogezjxfed ) { this . qrsnjipufrnogezjxfed = qrsnjipufrnogezjxfed ; }

line_index: 538
bug_before_refactoring: public void setCount ( int count ) { this . count . set ( count ) ; } <s> public void setCount ( int count ) { this . count . set ( count ) ; } <s> Fixed some bugs
bug_after_refactoring: public void setCount ( int tlnlakoigoegublsydxn ) { this . tlnlakoigoegublsydxn . set ( tlnlakoigoegublsydxn ) ; } <s> public void setCount ( int tlnlakoigoegublsydxn ) { this . tlnlakoigoegublsydxn . set ( tlnlakoigoegublsydxn ) ; } <s> Fixed some bugs
fix_before_refactoring: public void set ( java.lang.String path , int count ) { this . path . set ( path ) ; this . count . set ( count ) ; }
fix_after_refactoring: public void set ( java.lang.String path , int tlnlakoigoegublsydxn ) { this . path . set ( path ) ; this . tlnlakoigoegublsydxn . set ( tlnlakoigoegublsydxn ) ; }
× fix_prediction_before: public void setCount ( int count ) { if ( count > ( - 1 ) ) { this . count . set ( count ) ; } }
× fix_prediction_after: public void setCount ( int tlnlakoigoegublsydxn ) { if ( tlnlakoigoegublsydxn >= ( this . tlnlakoigoegublsydxn ) ) { this . tlnlakoigoegublsydxn . set ( tlnlakoigoegublsydxn ) ; } }

line_index: 539
bug_before_refactoring: public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; } <s> public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; } <s> (Major) Bug Fix (from FenixEdu): for final grade  we must round the value of raw grade  not the full scale average; for e.g.  14.49664 => 14.5 => 15  otherwise would be 14
bug_after_refactoring: public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.liihtzzmrfnsicycxdxz.Curriculum liihtzzmrfnsicycxdxz ) { if ( ( sumPiCi ) == null ) { doCalculus ( liihtzzmrfnsicycxdxz ) ; } return calculateAverage () ; } <s> public java.math.BigDecimal rawAverage ( org.fenixedu.academic.domain.student.liihtzzmrfnsicycxdxz.Curriculum liihtzzmrfnsicycxdxz ) { if ( ( sumPiCi ) == null ) { doCalculus ( liihtzzmrfnsicycxdxz ) ; } return calculateAverage () ; } <s> (Major) Bug Fix (from FenixEdu): for final grade  we must round the value of raw grade  not the full scale average; for e.g.  14.49664 => 14.5 => 15  otherwise would be 14
fix_before_refactoring: public java.math.BigDecimal calculateAverage ( org.fenixedu.academic.domain.student.curriculum.Curriculum curriculum ) { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; }
fix_after_refactoring: public java.math.BigDecimal calculateAverage ( org.fenixedu.academic.domain.student.liihtzzmrfnsicycxdxz.Curriculum liihtzzmrfnsicycxdxz ) { if ( ( sumPiCi ) == null ) { doCalculus ( liihtzzmrfnsicycxdxz ) ; } return calculateAverage () ; }
× fix_prediction_before: public java.math.BigDecimal rawAverage () { if ( ( sumPiCi ) == null ) { doCalculus ( curriculum ) ; } return calculateAverage () ; }
× fix_prediction_after: public java.math.BigDecimal rawAverage () { if ( ( sumPiCi ) == null ) { doCalculus ( liihtzzmrfnsicycxdxz ) ; } return calculateAverage () ; }

line_index: 540
bug_before_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> Bug by deleting user fixed
bug_after_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/djjsbuuhziukyiaavdhm" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User djjsbuuhziukyiaavdhm ) { djjsbuuhziukyiaavdhmService . deleteUser ( djjsbuuhziukyiaavdhm ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/djjsbuuhziukyiaavdhm" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( com.prodyna.ted.entity.User djjsbuuhziukyiaavdhm ) { djjsbuuhziukyiaavdhmService . deleteUser ( djjsbuuhziukyiaavdhm ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; } <s> Bug by deleting user fixed
fix_before_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > deleteUser ( @ org.springframework.web.bind.annotation.RequestBody com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/djjsbuuhziukyiaavdhm" ) public org.springframework.http.HttpEntity < java.lang.Void > deleteUser ( @ org.springframework.web.bind.annotation.RequestBody com.prodyna.ted.entity.User djjsbuuhziukyiaavdhm ) { djjsbuuhziukyiaavdhmService . deleteUser ( djjsbuuhziukyiaavdhm ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/user" ) public org.springframework.http.HttpEntity < java.lang.Void > deleteUser ( com.prodyna.ted.entity.User user ) { userService . deleteUser ( user ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.CrossOrigin @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "/djjsbuuhziukyiaavdhm" ) public org.springframework.http.HttpEntity < java.lang.Void > getUser ( @ org.springframework.web.bind.annotation.RequestParamjsbuuhziukyiaavdhm ) { djjsbuuhziukyiaavdhmService . deleteUser ( djjsbuuhziukyiaavdhm ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.OK ) ; }

line_index: 541
bug_before_refactoring: public boolean hasParentTask ( java.lang.String id ) ; <s> public boolean hasParentTask ( java.lang.String id ) ; <s> deepCopy Bug Fix
bug_after_refactoring: public boolean hasParentTask ( java.lang.String wrajklzuysbnhtmxrllb ) ; <s> public boolean hasParentTask ( java.lang.String wrajklzuysbnhtmxrllb ) ; <s> deepCopy Bug Fix
fix_before_refactoring: boolean hasParentTask ( java.lang.String id ) ;
fix_after_refactoring: boolean hasParentTask ( java.lang.String wrajklzuysbnhtmxrllb ) ;
× fix_prediction_before: public boolean hasParentTask ( java.lang.String id ) ;
× fix_prediction_after: public boolean hasParentTask ( java.lang.String wrajklzuysbnhtmxrllb ) { return true ; }

line_index: 542
bug_before_refactoring: @ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServletResponse , java.lang.Object o , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception {} <s> @ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServletResponse , java.lang.Object o , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception {} <s> fix task title chinese bug  try to fix system chinese bug
bug_after_refactoring: @ java.lang.Override public vyivluzgdbrrjwtgkzculid pyivluzgdbrrjwtgkzculstHandle ( javax.servlet.http.HttpServletRequest zdqswkpedvteldhxphxv , javax.servlet.http.HttpServletRespyivluzgdbrrjwtgkzculnse zcahkdzczyivluzgdbrrjwtgkzculmbyivluzgdbrrjwtgkzculhfzunkq , java.lang.Object yivluzgdbrrjwtgkzcul , yivluzgdbrrjwtgkzculrg.springframewyivluzgdbrrjwtgkzculrk.web.servlet.MyivluzgdbrrjwtgkzculdelAndView myivluzgdbrrjwtgkzculdelAndView ) thryivluzgdbrrjwtgkzculws java.lang.Exceptiyivluzgdbrrjwtgkzculn {} <s> @ java.lang.Override public vyivluzgdbrrjwtgkzculid pyivluzgdbrrjwtgkzculstHandle ( javax.servlet.http.HttpServletRequest zdqswkpedvteldhxphxv , javax.servlet.http.HttpServletRespyivluzgdbrrjwtgkzculnse zcahkdzczyivluzgdbrrjwtgkzculmbyivluzgdbrrjwtgkzculhfzunkq , java.lang.Object yivluzgdbrrjwtgkzcul , yivluzgdbrrjwtgkzculrg.springframewyivluzgdbrrjwtgkzculrk.web.servlet.MyivluzgdbrrjwtgkzculdelAndView myivluzgdbrrjwtgkzculdelAndView ) thryivluzgdbrrjwtgkzculws java.lang.Exceptiyivluzgdbrrjwtgkzculn {} <s> fix task title chinese bug  try to fix system chinese bug
fix_before_refactoring: { java.lang.System.out . println ( httpServletResponse ) ; }
fix_after_refactoring: { java.lang.System.yivluzgdbrrjwtgkzculut . println ( zcahkdzczyivluzgdbrrjwtgkzculmbyivluzgdbrrjwtgkzculhfzunkq ) ; }
× fix_prediction_before: @ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest httpServletRequest , javax.servlet.http.HttpServletResponse httpServletResponse , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override public vyivluzgdbrrjwtgkzculid pyivluzgdbrrjwtgkzculstHandle ( javax.servlet.http.HttpServletRequest zdqswkpedvteldhxphxv , javax.servlet.http.HttpServletRespyivluzgdbrrjwtgkzculnse zcahkdzczyivluzgdbrrjwtgkzculmbyivluzgdbrrjwtgkzculhfzunkq , java.lang.Object yivluzgdbrrjwtgkzculrg.springframewyivluzgdbrrjwtgkzculrk.web.servlet.MyivluzgdbrrjwtgkzculdelAndView myivluzgdbrrjwtgkzculdelAndView )Exceptryivluzgdbrrjwtgkzculws java.lang.Exceptryivluzgdbrrjwtgkzculn {}

line_index: 543
bug_before_refactoring: @ java.lang.Override public void setID ( int id ) {} <s> @ java.lang.Override public void setID ( int id ) {} <s> - fix sonar bugs
bug_after_refactoring: @ java.lang.Overrcfhgwcjqbwbkkyoecbire public vocfhgwcjqbwbkkyoecbir setID ( int cfhgwcjqbwbkkyoecbir ) {} <s> @ java.lang.Overrcfhgwcjqbwbkkyoecbire public vocfhgwcjqbwbkkyoecbir setID ( int cfhgwcjqbwbkkyoecbir ) {} <s> - fix sonar bugs
fix_before_refactoring: @ java.lang.Override public void setID ( int id ) { this . id = id ; }
fix_after_refactoring: @ java.lang.Overrcfhgwcjqbwbkkyoecbire public vocfhgwcjqbwbkkyoecbir setID ( int cfhgwcjqbwbkkyoecbir ) { this . cfhgwcjqbwbkkyoecbir = cfhgwcjqbwbkkyoecbir ; }
× fix_prediction_before: { id = id ; }
× fix_prediction_after: { this . cfhgwcjqbwbkkyoecbir = cfhgwcjqbwbkkyoecbir ; }

line_index: 545
bug_before_refactoring: public boolean login ( com.univ.alma.middleware.ChatClientInterface a , java.lang.String topic ) throws java.rmi.RemoteException ; <s> public boolean login ( com.univ.alma.middleware.ChatClientInterface a , java.lang.String topic ) throws java.rmi.RemoteException ; <s> Fix some bugs + update README.md
bug_after_refactoring: public booleikhumitazfywfkdiuxuqn login ( com.univ.ikhumitazfywfkdiuxuqlmikhumitazfywfkdiuxuq.middlewikhumitazfywfkdiuxuqre.ChikhumitazfywfkdiuxuqtClientInterfikhumitazfywfkdiuxuqce ikhumitazfywfkdiuxuq , jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.likhumitazfywfkdiuxuqng.String ehbqlsvbjnidynezrhyu ) throws jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.rmi.RemoteException ; <s> public booleikhumitazfywfkdiuxuqn login ( com.univ.ikhumitazfywfkdiuxuqlmikhumitazfywfkdiuxuq.middlewikhumitazfywfkdiuxuqre.ChikhumitazfywfkdiuxuqtClientInterfikhumitazfywfkdiuxuqce ikhumitazfywfkdiuxuq , jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.likhumitazfywfkdiuxuqng.String ehbqlsvbjnidynezrhyu ) throws jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.rmi.RemoteException ; <s> Fix some bugs + update README.md
fix_before_refactoring: public boolean login ( com.univ.alma.middleware.ChatClientInterface a ) throws java.rmi.RemoteException ;
fix_after_refactoring: public booleikhumitazfywfkdiuxuqn login ( com.univ.ikhumitazfywfkdiuxuqlmikhumitazfywfkdiuxuq.middlewikhumitazfywfkdiuxuqre.ChikhumitazfywfkdiuxuqtClientInterfikhumitazfywfkdiuxuqce ikhumitazfywfkdiuxuq ) throws jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.rmi.RemoteException ;
× fix_prediction_before: public boolean login ( com.univ.alma.middleware.ChatClientInterface a , java.lang.String topic ) throws java.rmi.RemoteException ;
× fix_prediction_after: public booleikhumitazfywfkdiuxuqn login ( com.univ.ikhumitazfywfkdiuxuqlmikhumitazfywfkdiuxuq. middlewikhumitazfywfkdiuxuqre.Chikhumitazfywfkdiuxuqlmikhumitazfywfkdiuxuqce ikhumitazfywfkdiuxuq , jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuq.likhumitazfywfkdiuxuqng.String ehbqlsvbjnidynezrhyu ) throws jikhumitazfywfkdiuxuqvikhumitazfywfkdiuxuqrmi.RemoteException ;

line_index: 549
bug_before_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> Minor bug fix in EventListApi.
bug_after_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest exkdbcerpnsozghsmxfx ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( exkdbcerpnsozghsmxfx . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest exkdbcerpnsozghsmxfx ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( exkdbcerpnsozghsmxfx . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; } <s> Minor bug fix in EventListApi.
fix_before_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse get ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; }
fix_after_refactoring: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse get ( com.pratilipi.api.impl.init.shared.GetEventListRequest exkdbcerpnsozghsmxfx ) throws com.pratilipi.common.exception.InsufficientAccessException { java.util.List < com.pratilipi.data.client.EventData > eventList = com.pratilipi.data.util.EventDataUtil . getEventDataList ( exkdbcerpnsozghsmxfx . getLanguage () ) ; return new com.pratilipi.api.impl.init.shared.GetEventListResponse ( eventList ) ; }
× fix_prediction_before: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest request ) throws com.pratilipi.common.exception.InsufficientAccessException { return com.pratilipi.data.util.EventDataUtil . getEventDataList ( request . getLanguage () ) ; }
× fix_prediction_after: @ com.pratilipi.api.annotation.Get public com.pratilipi.api.impl.init.shared.GetEventListResponse getAuthorList ( com.pratilipi.api.impl.init.shared.GetEventListRequest exkdbcerpnsozghsmxfx ) throws com.pratilipi.common.exception.InsufficientAccessException { return com.pratilipi.data.util.EventDataUtil . getEventDataList ( exkdbcerpnsozghsmxfx . getLanguage () ) ; }

line_index: 550
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> CSRF problem solved  but the post is still not working.
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model fxjbrwprdcwvgwaantjk ) { org.springframework.web.servlet.ModelAndView fxjbrwprdcwvgwaantjk1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; fxjbrwprdcwvgwaantjk1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about ( org.springframework.ui.Model fxjbrwprdcwvgwaantjk ) { org.springframework.web.servlet.ModelAndView fxjbrwprdcwvgwaantjk1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; fxjbrwprdcwvgwaantjk1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; } <s> CSRF problem solved  but the post is still not working.
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView about ( org.springframework.ui.Model model ) { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return model1 ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView about ( org.springframework.ui.Model fxjbrwprdcwvgwaantjk ) { org.springframework.web.servlet.ModelAndView fxjbrwprdcwvgwaantjk1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; fxjbrwprdcwvgwaantjk1 . setViewName ( "/Open/about" ) ; return fxjbrwprdcwvgwaantjk1 ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } ) public java.lang.String about () { org.springframework.web.servlet.ModelAndView model1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; model1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = { "/about" , "/Open/about" } , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String about () { org.springframework.web.servlet.ModelAndView fxjbrwprdcwvgwaantjk1 = new org.springframework.web.servlet.ModelAndView () ; logger . debug ( "index()" ) ; fxjbrwprdcwvgwaantjk1 . setViewName ( "/Open/about" ) ; return "/Open/about" ; }

line_index: 551
bug_before_refactoring: public static int calculateMin ( int [] cratesPerHouse ) { return 0 ; } <s> public static int calculateMin ( int [] cratesPerHouse ) { return 0 ; } <s> fixed directory issue. earlier worked on revising final function.
bug_after_refactoring: public static int calculateMin ( int [] wnrdkrhrzdlaqtjqwrzn ) { return 0 ; } <s> public static int calculateMin ( int [] wnrdkrhrzdlaqtjqwrzn ) { return 0 ; } <s> fixed directory issue. earlier worked on revising final function.
fix_before_refactoring: public static int calculateMin ( int [] cratesPerHouse ) { int min = cratesPerHouse [ 0 ] ; for ( int x : cratesPerHouse ) { if ( x < min ) { min = x ; } } return min ; }
fix_after_refactoring: public static int calculateMin ( int [] wnrdkrhrzdlaqtjqwrzn ) { int min = wnrdkrhrzdlaqtjqwrzn [ 0 ] ; for ( int x : wnrdkrhrzdlaqtjqwrzn ) { if ( x < min ) { min = x ; } } return min ; }
× fix_prediction_before: public static int calculateMin ( int [] cratesPerHouse ) { return calculateMin ( cratesPerHouse , 0 ) ; }
× fix_prediction_after: public static int calculateMin ( int [] wnrdkrhrzdlaqtjqwrzn ) { return 0 ; }

line_index: 554
bug_before_refactoring: private double calculatePrice ( double num ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> private double calculatePrice ( double num ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> -fix landscape layout view and run -fix issues with potrait view  by aligning the price  on the potrait view -removes price
bug_after_refactoring: private double calculatePrice ( double emyxyqgdwrrstltxdbnc ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> private double calculatePrice ( double emyxyqgdwrrstltxdbnc ) { double givprice = ( quantity ) * 3.24 ; return givprice ; } <s> -fix landscape layout view and run -fix issues with potrait view  by aligning the price  on the potrait view -removes price
fix_before_refactoring: private double calculatePrice ( double num ) { num = ( quantity ) * 3.24 ; return num ; }
fix_after_refactoring: private double calculatePrice ( double emyxyqgdwrrstltxdbnc ) { emyxyqgdwrrstltxdbnc = ( quantity ) * 3.24 ; return emyxyqgdwrrstltxdbnc ; }
× fix_prediction_before: private double calculatePrice ( double num ) { return ( quantity ) * num ; }
× fix_prediction_after: private double calculatePrice ( double emyxyqgdwrrstltxdbnc ) { return ( quantity ) * 3.24 ; }

line_index: 555
bug_before_refactoring: private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> Bug fix for payment using saved cards.
bug_after_refactoring: private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > oetkbojqpjjrflfqvjvw ) { showProgressBar () ; try { oetkbojqpjjrflfqvjvw . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> private void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > oetkbojqpjjrflfqvjvw ) { showProgressBar () ; try { oetkbojqpjjrflfqvjvw . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } } <s> Bug fix for payment using saved cards.
fix_before_refactoring: private com.squareup.okhttp.Call performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { return operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; return null ; } }
fix_after_refactoring: private com.squareup.okhttp.Call performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > oetkbojqpjjrflfqvjvw ) { showProgressBar () ; try { return oetkbojqpjjrflfqvjvw . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; return null ; } }
× fix_prediction_before: public void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > operation ) { showProgressBar () ; try { operation . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } }
× fix_prediction_after: public void performOperation ( java.util.concurrent.Callable < com.squareup.okhttp.Call > oetkbojqpjjrflfqvjms ) { showProgressBar () ; try { oetkbojqpjjjrflfqvjms . call () ; } catch ( java.lang.Exception e ) { onOperationFailed () ; } }

line_index: 556
bug_before_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; } <s> @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > vars ) { return linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; } <s> Merge pull request #2181 from steveswinsburg/bugfix/SAK-30728_profile_links  SAK-30728 fix the URLs so they don't overlap
bug_after_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > truavaentmwxmtjuauvd ) { return linkLogic . getInternalDirectUrlToUserProfile ( truavaentmwxmtjuauvd . get ( "userUuid" ) ) ; } <s> @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( java.util.Map < java.lang.String , java.lang.String > truavaentmwxmtjuauvd ) { return linkLogic . getInternalDirectUrlToUserProfile ( truavaentmwxmtjuauvd . get ( "userUuid" ) ) ; } <s> Merge pull request #2181 from steveswinsburg/bugfix/SAK-30728_profile_links  SAK-30728 fix the URLs so they don't overlap
fix_before_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile-view/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > vars ) { return this . linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; }
fix_after_refactoring: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile-view/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > truavaentmwxmtjuauvd ) { return this . linkLogic . getInternalDirectUrlToUserProfile ( truavaentmwxmtjuauvd . get ( "userUuid" ) ) ; }
× fix_prediction_before: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > vars ) { return this . linkLogic . getInternalDirectUrlToUserProfile ( vars . get ( "userUuid" ) ) ; }
× fix_prediction_after: @ org.sakaiproject.entitybroker.entityprovider.annotations.EntityURLRedirect ( value = "/{prefix}/profile/{userUuid}" ) public java.lang.String redirectToUserProfile ( final java.util.Map < java.lang.String , java.lang.String > truavaentmwxmtjuauvd ) { return this . linkLogic . getInternalDirectUrlToUserProfile ( truavaentmwxmtjuauvd . get ( "userUuid" ) ) ; }

line_index: 557
bug_before_refactoring: public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > newFilters ) { if ( newFilters == null ) { return false ; } return filters . addAll ( newFilters ) ; } <s> public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > newFilters ) { if ( newFilters == null ) { return false ; } return filters . addAll ( newFilters ) ; } <s> fix build issue
bug_after_refactoring: public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > jpysskbjdixlxakjicui ) { if ( jpysskbjdixlxakjicui == null ) { return false ; } return filters . addAll ( jpysskbjdixlxakjicui ) ; } <s> public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > jpysskbjdixlxakjicui ) { if ( jpysskbjdixlxakjicui == null ) { return false ; } return filters . addAll ( jpysskbjdixlxakjicui ) ; } <s> fix build issue
fix_before_refactoring: public boolean addFilters ( final com.github.wz2cool.dynamic.FilterDescriptorBase . . . newFilters ) { return filters . addAll ( java.util.Arrays . asList ( newFilters ) ) ; }
fix_after_refactoring: public boolean addFilters ( final com.github.wz2cool.dynamic.FilterDescriptorBase . . . jpysskbjdixlxakjicui ) { return filters . addAll ( java.util.Arrays . asList ( jpysskbjdixlxakjicui ) ) ; }
× fix_prediction_before: public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > newFilters ) { if ( newFilters == null ) { return false ; } this . filters . addAll ( newFilters ) ; return true ; }
× fix_prediction_after: public boolean addFilters ( java.util.Collection < com.github.wz2cool.dynamic.FilterDescriptorBase > jpysskbjdixlxakjicui ) { if ( jpysskbjdixlxakjicui == null ) { return false ; } return filters . addAll ( jpysskbjdixlxakjicui ) ; }

line_index: 558
bug_before_refactoring: public void startRecord ( java.lang.String recPath ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( recPath ) ) ; } } <s> public void startRecord ( java.lang.String recPath ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( recPath ) ) ; } } <s> Fix record bug  It should not start recording when AV format not assigned.  Signed-off-by: Leo Ma <begeekmyfriend@gmail.com>
bug_after_refactoring: public void startRecord ( java.lang.String uodtpxdkaslktiknaece ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( uodtpxdkaslktiknaece ) ) ; } } <s> public void startRecord ( java.lang.String uodtpxdkaslktiknaece ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( uodtpxdkaslktiknaece ) ) ; } } <s> Fix record bug  It should not start recording when AV format not assigned.  Signed-off-by: Leo Ma <begeekmyfriend@gmail.com>
fix_before_refactoring: public boolean startRecord ( java.lang.String recPath ) { return ( ( mMp4Muxer ) != null ) && ( mMp4Muxer . record ( new java.io.File ( recPath ) ) ) ; }
fix_after_refactoring: public boolean startRecord ( java.lang.String uodtpxdkaslktiknaece ) { return ( ( mMp4Muxer ) != null ) && ( mMp4Muxer . record ( new java.io.File ( uodtpxdkaslktiknaece ) ) ) ; }
× fix_prediction_before: public void startRecord ( java.lang.String recPath ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( recPath ) ) ; } }
× fix_prediction_after: public void startRecord ( java.lang.String file ) { if ( ( mMp4Muxer ) != null ) { mMp4Muxer . record ( new java.io.File ( file ) ) ; } }

line_index: 559
bug_before_refactoring: private void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( message , throwException ) ; } } <s> private void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( message , throwException ) ; } } <s> fix: Logger usage in CoreTexture2D  Crashing bug introduced due to the changes to the logger.
bug_after_refactoring: private void checkGLError ( final java.lang.String athyktjjmpfrdgtgubum , final boolean wwzfxvbyxpotlbdpllxq ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( athyktjjmpfrdgtgubum , wwzfxvbyxpotlbdpllxq ) ; } } <s> private void checkGLError ( final java.lang.String athyktjjmpfrdgtgubum , final boolean wwzfxvbyxpotlbdpllxq ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( athyktjjmpfrdgtgubum , wwzfxvbyxpotlbdpllxq ) ; } } <s> fix: Logger usage in CoreTexture2D  Crashing bug introduced due to the changes to the logger.
fix_before_refactoring: private void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( throwException , message ) ; } }
fix_after_refactoring: private void checkGLError ( final java.lang.String athyktjjmpfrdgtgubum , final boolean wwzfxvbyxpotlbdpllxq ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( wwzfxvbyxpotlbdpllxq , athyktjjmpfrdgtgubum ) ; } }
× fix_prediction_before: protected void checkGLError ( final java.lang.String message , final boolean throwException ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( message , throwException ) ; } }
× fix_prediction_after: private void checkGLError ( final boolean wwzfxvbyxpotlbdpllxq ) { if ( de.lessvoid.coregl.CoreTexture2D.errorChecks ) { gl . checkGLError ( athyktjjmpfrdgtgubum , wwzfxvbyxpotlbdpllxq ) ; } }

line_index: 560
bug_before_refactoring: public void WriteExpandingNodeToFile ( Node ExpandingNode , java.io.PrintWriter pw ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( pw ) ; } } <s> public void WriteExpandingNodeToFile ( Node ExpandingNode , java.io.PrintWriter pw ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( pw ) ; } } <s> Refactored main SOO algorithm to remove the need to pass the printwriter as a parameter. The printwriter is now created and stored as a static instance variable of the Leaf class. This can then be accessed by all the write methods in the Leaf class. Fixes issue #5
bug_after_refactoring: public void WritesqecjjfssfiusromsyfnToFile ( Node sqecjjfssfiusromsyfn , java.io.PrintWriter fvzvuymffqscascrigwy ) { for ( Leaf leafToWrite : sqecjjfssfiusromsyfn . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( fvzvuymffqscascrigwy ) ; } } <s> public void WritesqecjjfssfiusromsyfnToFile ( Node sqecjjfssfiusromsyfn , java.io.PrintWriter fvzvuymffqscascrigwy ) { for ( Leaf leafToWrite : sqecjjfssfiusromsyfn . getNodeLeaves () ) { leafToWrite . WriteEachLeaf ( fvzvuymffqscascrigwy ) ; } } <s> Refactored main SOO algorithm to remove the need to pass the printwriter as a parameter. The printwriter is now created and stored as a static instance variable of the Leaf class. This can then be accessed by all the write methods in the Leaf class. Fixes issue #5
fix_before_refactoring: public void WriteExpandingNodeToFile ( Node ExpandingNode ) { for ( Leaf leafToWrite : ExpandingNode . getNodeLeaves () ) { leafToWrite . WriteEachLeaf () ; } }
fix_after_refactoring: public void WritesqecjjfssfiusromsyfnToFile ( Node sqecjjfssfiusromsyfn ) { for ( Leaf leafToWrite : sqecjjfssfiusromsyfn . getNodeLeaves () ) { leafToWrite . WriteEachLeaf () ; } }
× fix_prediction_before: public void WriteExpandingNodeToFile ( Node ExpandingNode , java.io.PrintWriter pw ) { WriteEachLeaf ( pw , ExpandingNode . getNodeLeaves () ) ; }
× fix_prediction_after: public void RefitesqecjjfssfiusromsyfnToFile ( Node sqecjjfssfiusromsyfn , java.io.PrintWriter fvzvuymffqscascrigwy ) { this . sqecjfssfiusromsyfn . getNodeLeaves () . write ( sqecjjfssfiusromsyfn . getNodeLeaves () ) ; }

line_index: 563
bug_before_refactoring: public void previousClick ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> public void previousClick ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> Checklist Changes  Add progress drawable  fixed a few bugs
bug_after_refactoring: public void previousClick ( android.yhiqsncslzanwuuuzpcq.View yhiqsncslzanwuuuzpcq ) { ( currentPosition ) -- ; yhiqsncslzanwuuuzpcqPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> public void previousClick ( android.yhiqsncslzanwuuuzpcq.View yhiqsncslzanwuuuzpcq ) { ( currentPosition ) -- ; yhiqsncslzanwuuuzpcqPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } <s> Checklist Changes  Add progress drawable  fixed a few bugs
fix_before_refactoring: public void previousClick ( android.view.View view ) { if ( ( currentPosition ) > 0 ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } else {} }
fix_after_refactoring: public void previousClick ( android.yhiqsncslzanwuuuzpcq.View yhiqsncslzanwuuuzpcq ) { if ( ( currentPosition ) > 0 ) { ( currentPosition ) -- ; yhiqsncslzanwuuuzpcqPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } else {} }
× fix_prediction_before: public void previousClick ( android.view.View view ) { ( currentPosition ) -- ; viewPager . setCurrentItem ( currentPosition , true , false ) ; updateProgress () ; }
× fix_prediction_after: public void previousClick ( android.yhiqsncslzanwuuuzpcq.View yhiqsncslzanwuuuzpcq ) { if ( ( yhiqsncslzanwuuuzpcq ) != null ) { ( currentPosition ) -- ; yhiqsncslzanwuuuzpcqPager . setCurrentItem ( currentPosition , true ) ; updateProgress () ; } }

line_index: 565
bug_before_refactoring: public int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> public int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> Fixed bugs
bug_after_refactoring: public int collectUserOption ( java.lang.String wxhqdmenemwekaquyefd ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> public int collectUserOption ( java.lang.String wxhqdmenemwekaquyefd ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; } <s> Fixed bugs
fix_before_refactoring: public int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , question , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; }
fix_after_refactoring: public int collectUserOption ( java.lang.String wxhqdmenemwekaquyefd ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , wxhqdmenemwekaquyefd , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; }
× fix_prediction_before: private int collectUserOption ( java.lang.String question ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; }
× fix_prediction_after: public int collectUserOption ( java.lang.String wxhqdmenemwekaquyefd ) { int response = 0 ; response = javax.swing.JOptionPane . showConfirmDialog ( null , displayText , windowMessage , javax.swing.JOptionPane.PLAIN_MESSAGE , chatIcon ) ; return response ; }

line_index: 568
bug_before_refactoring: public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; } <s> public synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( callback ) ; } }
fix_after_refactoring: public void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; } }
× fix_prediction_before: protected synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . add ( callback ) ; }
× fix_prediction_after: protected synchronized void addCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback binvkocyqicoupcczczf ) { this . dataLoaderCallbacks . add ( binvkocyqicoupcczczf ) ; }

line_index: 570
bug_before_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { contact . setNationality ( java.lang.Long . parseLong ( data ) ) ; } <s> @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { contact . setNationality ( java.lang.Long . parseLong ( data ) ) ; } <s> Fixed bug with zero-keys
bug_after_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.qamxspcpwavrmlfdwzvmbook.entity.Contact qamxspcpwavrmlfdwzvm , java.lang.String tfifsocytuhffxbmimrt ) { qamxspcpwavrmlfdwzvm . setNationality ( java.lang.Long . parseLong ( tfifsocytuhffxbmimrt ) ) ; } <s> @ java.lang.Override public void handleField ( com.zhartunmatthew.web.qamxspcpwavrmlfdwzvmbook.entity.Contact qamxspcpwavrmlfdwzvm , java.lang.String tfifsocytuhffxbmimrt ) { qamxspcpwavrmlfdwzvm . setNationality ( java.lang.Long . parseLong ( tfifsocytuhffxbmimrt ) ) ; } <s> Fixed bug with zero-keys
fix_before_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { java.lang.Long id = java.lang.Long . parseLong ( data ) ; if ( id . equals ( 0L ) ) { contact . setNationality ( null ) ; } else { contact . setNationality ( id ) ; } }
fix_after_refactoring: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.qamxspcpwavrmlfdwzvmbook.entity.Contact qamxspcpwavrmlfdwzvm , java.lang.String tfifsocytuhffxbmimrt ) { java.lang.Long id = java.lang.Long . parseLong ( tfifsocytuhffxbmimrt ) ; if ( id . equals ( 0L ) ) { qamxspcpwavrmlfdwzvm . setNationality ( null ) ; } else { qamxspcpwavrmlfdwzvm . setNationality ( id ) ; } }
× fix_prediction_before: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.contactbook.entity.Contact contact , java.lang.String data ) { if ( data != null ) { contact . setNationality ( java.lang.Long . parseLong ( data ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void handleField ( com.zhartunmatthew.web.qamxspcpwavrmlfdwzvmbook.entity.Contact qamxspcpwavrmlfdwzvm , java.lang.String tfifsocytuhffxbmimrt ) { if ( tfifsocytuhffxbmimrt != null ) { qamxspcpwavrmlfdwzvm . setNationality ( java.lang.Long . parseLong ( tfifsocytuhffxbmimrt ) ) ; } }

line_index: 573
bug_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; } this . connectedClients . remove ( client ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
bug_after_refactoring: @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; } this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; } <s> @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { boolean isBroken = true ; if ( ! isBroken ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; } this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; } <s> Fix #28: Moved ITopologyEventCollector client callsites to channel methods  -this avoids the problem where the events would also be called for the replicated information  on the passive -we can also now re-enable the assertions to verify event call symmetry in ManagementTopologyEventCollector
fix_before_refactoring: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( client ) ) ; this . connectedClients . remove ( client ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { com.tc.util.Assert . assertTrue ( this . connectedClients . contains ( bdzruxfyxrptjgqupvuh ) ) ; this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; }
× fix_prediction_before: @ java.lang.Override public synchronized void clientDidDisconnect ( com.tc.net.ClientID client ) { this . connectedClients . remove ( client ) ; }
× fix_prediction_after: @ java.lang.Override public synchronized void bdzruxfyxrptjgqupvuhDidDisconnect ( com.tc.net.ClientID bdzruxfyxrptjgqupvuh ) { this . connectedClients . remove ( bdzruxfyxrptjgqupvuh ) ; }

line_index: 574
bug_before_refactoring: public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { showHud () ; videoView . start () ; } <s> public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { showHud () ; videoView . start () ; } <s> - YouTubeVideo is now passed as a whole object to the YouTubePlayerActivity - Fixed a bug which caused the HUD to be hidden before the proper delay (on certain cases).
bug_after_refactoring: public void onPrepared ( android.media.MediaPlayer weksfxfwmcingdqzrbjp ) { showHud () ; videoView . start () ; } <s> public void onPrepared ( android.media.MediaPlayer weksfxfwmcingdqzrbjp ) { showHud () ; videoView . start () ; } <s> - YouTubeVideo is now passed as a whole object to the YouTubePlayerActivity - Fixed a bug which caused the HUD to be hidden before the proper delay (on certain cases).
fix_before_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { videoView . start () ; showHud () ; }
fix_after_refactoring: @ java.lang.Override public void onPrepared ( android.media.MediaPlayer weksfxfwmcingdqzrbjp ) { videoView . start () ; showHud () ; }
× fix_prediction_before: public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { showHud () ; if ( ( videoView ) != null ) { videoView . start () ; } }
× fix_prediction_after: public void onPrepared ( android.media.MediaPlayer weksfxfwmcingdqzrbjp ) { showHud () ; if ( ( videoView ) != null ) { videoView . start () ; } }

line_index: 575
bug_before_refactoring: public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( filter , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( filter , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> Fix issues with total
bug_after_refactoring: public int count ( com.ubikz.scraper.core.app.dal.irxaoaubplnbqzfjvhkv.AbstractDalFilter irxaoaubplnbqzfjvhkv ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( irxaoaubplnbqzfjvhkv , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> public int count ( com.ubikz.scraper.core.app.dal.irxaoaubplnbqzfjvhkv.AbstractDalFilter irxaoaubplnbqzfjvhkv ) { com.ubikz.scraper.core.provider.db.qb.Select qb = this . getBaseSelect ( irxaoaubplnbqzfjvhkv , true ) ; qb . columns ( "COUNT(*)" ) ; return this . count ( qb ) ; } <s> Fix issues with total
fix_before_refactoring: public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { return this . count ( this . getBaseSelect ( filter , true ) ) ; }
fix_after_refactoring: public int count ( com.ubikz.scraper.core.app.dal.irxaoaubplnbqzfjvhkv.AbstractDalFilter irxaoaubplnbqzfjvhkv ) { return this . count ( this . getBaseSelect ( irxaoaubplnbqzfjvhkv , true ) ) ; }
× fix_prediction_before: public int count ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter ) { return this . getBaseSelect ( filter , true ) ; }
× fix_prediction_after: public int count ( com.ubikz.scraper.core.app.dal.irxaoaubplnbqzfjvhkv.AbstractDalFilter irxaoaubplnbqzfjvhkv ) { return this . getBaseSelect ( irxaoaubplnbqzfjvhkv , true ) ; }

line_index: 576
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , null , false ) ; } <s> Fix bug #57 - ctrl-delete keyboard shortcut not responsive
bug_after_refactoring: public void actionPerformed ( java.awt.event.ActionEvent sxuntshmyriaizhdtrex ) { insertYear ( 0 , true , null , false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent sxuntshmyriaizhdtrex ) { insertYear ( 0 , true , null , false ) ; } <s> Fix bug #57 - ctrl-delete keyboard shortcut not responsive
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear () ; }
fix_after_refactoring: public void actionPerformed ( java.awt.event.ActionEvent sxuntshmyriaizhdtrex ) { insertYear () ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent ae ) { insertYear ( 0 , true , true , null ) ; }
× fix_prediction_after: public void actionPerformed ( java.awt.event.ActionEvent sxuntshmyriaizhdtrex ) { insertYear ( 0 , true , null , false , true ) ; }

line_index: 577
bug_before_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . results ) { return new org.lenskit.results.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; } <s> @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . results ) { return new org.lenskit.results.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; } <s> Fix outstanding type errors on result lists
bug_after_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . teokednsbuoyxnamkrpt ) { return new org.lenskit.teokednsbuoyxnamkrpt.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( teokednsbuoyxnamkrpt ) ) ; } <s> @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList < R > newResultList ( R . . . teokednsbuoyxnamkrpt ) { return new org.lenskit.teokednsbuoyxnamkrpt.BasicResultList < R > ( com.google.common.collect.ImmutableList . copyOf ( teokednsbuoyxnamkrpt ) ) ; } <s> Fix outstanding type errors on result lists
fix_before_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList newResultList ( R . . . results ) { return new org.lenskit.results.BasicResultList ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; }
fix_after_refactoring: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static < R extends org.lenskit.api.Result > org.lenskit.api.ResultList newResultList ( R . . . teokednsbuoyxnamkrpt ) { return new org.lenskit.teokednsbuoyxnamkrpt.BasicResultList ( com.google.common.collect.ImmutableList . copyOf ( teokednsbuoyxnamkrpt ) ) ; }
× fix_prediction_before: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static org.lenskit.api.ResultList newResultList ( java.util.List < org.lenskit.api.Result > results ) { return new org.lenskit.results.BasicResultList ( com.google.common.collect.ImmutableList . copyOf ( results ) ) ; }
× fix_prediction_after: @ java.lang.SafeVarargs @ javax.annotation.Nonnull public static org.lenskit.api.Result newResultList () { return new org.lenskit.teokednsbuoyxnamkrpt.BasicResultList ( com.google.common.collect.ImmutableList . copyOf ( teokednsbuoyxnamkrpt ) ) ; }

line_index: 579
bug_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; } movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; } movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } <s> Fixed stupid cut and paste error that messed up Quit event processing.
bug_after_refactoring: @ org.bukkit.udgpcsgopuqrhnjhnsrj.EventHandler ( priority = org.bukkit.udgpcsgopuqrhnjhnsrj.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.udgpcsgopuqrhnjhnsrj.player.PlayerQuitEvent udgpcsgopuqrhnjhnsrj ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } movementTracker . removePlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } <s> @ org.bukkit.udgpcsgopuqrhnjhnsrj.EventHandler ( priority = org.bukkit.udgpcsgopuqrhnjhnsrj.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.udgpcsgopuqrhnjhnsrj.player.PlayerQuitEvent udgpcsgopuqrhnjhnsrj ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } movementTracker . removePlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } <s> Fixed stupid cut and paste error that messed up Quit event processing.
fix_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; if ( afkBooter . getMovementTrackerFlag () ) { movementTracker . removePlayer ( event . getPlayer () . getName () ) ; } }
fix_after_refactoring: @ org.bukkit.udgpcsgopuqrhnjhnsrj.EventHandler ( priority = org.bukkit.udgpcsgopuqrhnjhnsrj.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.udgpcsgopuqrhnjhnsrj.player.PlayerQuitEvent udgpcsgopuqrhnjhnsrj ) { afkBooter . stopTrackingPlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; if ( afkBooter . getMovementTrackerFlag () ) { movementTracker . removePlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } }
× fix_prediction_before: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { afkBooter . stopTrackingPlayer ( event . getPlayer () . getName () ) ; movementTracker . removePlayer ( event . getPlayer () . getName () ) ; }
× fix_prediction_after: @ org.bukkit.udgpcsgopuqrhnjhnsrj.EventHandler ( priority = org.bukkit.udgpcsgopuqrhnjhnsrj.EventPriority.MONITOR ) public void playerQuit ( org.bukkit.udgpcsgopuqrhnjhnsrj.player.PlayerQuitEvent udgpcsgopuqrhnjhnsrj ) { if ( afkBooter . getMovementTrackerFlag () ) { afkBooter . stopTrackingPlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; movementTracker . removePlayer ( udgpcsgopuqrhnjhnsrj . getPlayer () . getName () ) ; } }

line_index: 580
bug_before_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == defectNumber ) { result = defect ; } } return result ; } <s> public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == defectNumber ) { result = defect ; } } return result ; } <s> Prepare for PR  Fixed Codestyle issues Informal code review complete
bug_after_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int rmcrdsfufpbjjiutomsr ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == rmcrdsfufpbjjiutomsr ) { result = defect ; } } return result ; } <s> public net.sf.memoranda.Defect getDefectByNumber ( int rmcrdsfufpbjjiutomsr ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == rmcrdsfufpbjjiutomsr ) { result = defect ; } } return result ; } <s> Prepare for PR  Fixed Codestyle issues Informal code review complete
fix_before_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { return log . get ( defectNumber ) ; }
fix_after_refactoring: public net.sf.memoranda.Defect getDefectByNumber ( int rmcrdsfufpbjjiutomsr ) { return log . get ( rmcrdsfufpbjjiutomsr ) ; }
× fix_prediction_before: public net.sf.memoranda.Defect getDefectByNumber ( int defectNumber ) { return getDefectByNumber ( defectNumber , false ) ; }
× fix_prediction_after: public net.sf.memoranda.Defect getDefectByNumber ( int rmcrdsfufpbjjiutomsr ) { net.sf.memoranda.Defect result = null ; for ( net.sf.memoranda.Defect defect : log ) { if ( ( defect . getDefectNumber () ) == rmcrdsfufpbjjiutomsr ) { result = defect ; } } return result ; }

line_index: 581
bug_before_refactoring: @ java.lang.Override public void set ( T t , float time ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () , time ) ; } <s> @ java.lang.Override public void set ( T t , float time ) { typeConverter . copyFromObject ( t , transition . get () ) ; transition . set ( transition . get () , time ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
bug_after_refactoring: @ java.lang.Override public void seqjoycntchguuomwmrcji ( T qjoycntchguuomwmrcji , floaqjoycntchguuomwmrcji qjoycntchguuomwmrcjiime ) { qjoycntchguuomwmrcjiypeConverqjoycntchguuomwmrcjier . copyFromObjecqjoycntchguuomwmrcji ( qjoycntchguuomwmrcji , qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . geqjoycntchguuomwmrcji () ) ; qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . seqjoycntchguuomwmrcji ( qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . geqjoycntchguuomwmrcji () , qjoycntchguuomwmrcjiime ) ; } <s> @ java.lang.Override public void seqjoycntchguuomwmrcji ( T qjoycntchguuomwmrcji , floaqjoycntchguuomwmrcji qjoycntchguuomwmrcjiime ) { qjoycntchguuomwmrcjiypeConverqjoycntchguuomwmrcjier . copyFromObjecqjoycntchguuomwmrcji ( qjoycntchguuomwmrcji , qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . geqjoycntchguuomwmrcji () ) ; qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . seqjoycntchguuomwmrcji ( qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . geqjoycntchguuomwmrcji () , qjoycntchguuomwmrcjiime ) ; } <s> fixed a bug on TransitionImpl which was causing to start transitions from the end
fix_before_refactoring: @ java.lang.Override public void set ( T t , float time ) { typeConverter . copyFromObject ( t , tmp ) ; transition . set ( tmp , time ) ; }
fix_after_refactoring: @ java.lang.Override public void seqjoycntchguuomwmrcji ( T qjoycntchguuomwmrcji , floaqjoycntchguuomwmrcji qjoycntchguuomwmrcjiime ) { qjoycntchguuomwmrcjiypeConverqjoycntchguuomwmrcjier . copyFromObjecqjoycntchguuomwmrcji ( qjoycntchguuomwmrcji , qjoycntchguuomwmrcjimp ) ; qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . seqjoycntchguuomwmrcji ( qjoycntchguuomwmrcjimp , qjoycntchguuomwmrcjiime ) ; }
× fix_prediction_before: @ java.lang.Override public void set ( T t , float time ) { transition . set ( t , transition . get () , time ) ; }
× fix_prediction_after: @ java.lang.Override public void seqjoycntchguuomwmrcji ( T qjoycntchguuomwmrcji , floaqjoycntchguuomwmrcji qjoycntchguuomwmrcjiime ) { this . seqjoycntchguuomwmrcjiConverqjoycntchguuomwmrcjier . copyFromObjecqjoycntchguuomwmrcji ( qjoycntchguuomwmrcji , qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiion . geqjoycntchguuomwmrcji () , qjoycntchguuomwmrcjiransiqjoycntchguuomwmrcjiime ) ; }

line_index: 582
bug_before_refactoring: @ java.lang.Override public void push ( int i ) { this . memory . add ( i ) ; } <s> @ java.lang.Override public void push ( int i ) { this . memory . add ( i ) ; } <s> fixed some problems with main memory order and AM1 command PUSH.
bug_after_refactoring: @ java.lang.Overrujenlpjofafwkzthowwode publujenlpjofafwkzthowwoc voujenlpjofafwkzthowwod push ( ujenlpjofafwkzthowwont ujenlpjofafwkzthowwo ) { thujenlpjofafwkzthowwos . memory . add ( ujenlpjofafwkzthowwo ) ; } <s> @ java.lang.Overrujenlpjofafwkzthowwode publujenlpjofafwkzthowwoc voujenlpjofafwkzthowwod push ( ujenlpjofafwkzthowwont ujenlpjofafwkzthowwo ) { thujenlpjofafwkzthowwos . memory . add ( ujenlpjofafwkzthowwo ) ; } <s> fixed some problems with main memory order and AM1 command PUSH.
fix_before_refactoring: @ java.lang.Override public void push ( int i ) { this . memory . add ( this . memory . size () , i ) ; }
fix_after_refactoring: @ java.lang.Overrujenlpjofafwkzthowwode publujenlpjofafwkzthowwoc voujenlpjofafwkzthowwod push ( ujenlpjofafwkzthowwont ujenlpjofafwkzthowwo ) { thujenlpjofafwkzthowwos . memory . add ( thujenlpjofafwkzthowwos . memory . sujenlpjofafwkzthowwoze () , ujenlpjofafwkzthowwo ) ; }
× fix_prediction_before: @ java.lang.Override public void push ( int i ) { memory . add ( i ) ; }
× fix_prediction_after: @ java.lang.Overrujenlpjofafwkzthowwode publujenlpjofafwkzthowwoc voujenlpjofafwkzthowwod push () { thujenlpjofafwkzthowwos . memory . add ( ujenlpjofafwkzthowwo ) ; }

line_index: 583
bug_before_refactoring: @ java.lang.Override public void add ( final int index , final T element ) {} <s> @ java.lang.Override public void add ( final int index , final T element ) {} <s> Fixed issue with processing new line and new file
bug_after_refactoring: @ java.lang.Override public void add ( final int eeiykohbavzigsrhaupu , final T hcjandqfndxezudmujwt ) {} <s> @ java.lang.Override public void add ( final int eeiykohbavzigsrhaupu , final T hcjandqfndxezudmujwt ) {} <s> Fixed issue with processing new line and new file
fix_before_refactoring: public T set ( final int index , final T element ) { return null ; }
fix_after_refactoring: public T set ( final int eeiykohbavzigsrhaupu , final T hcjandqfndxezudmujwt ) { return null ; }
× fix_prediction_before: { return; }
× fix_prediction_after: { this . eeiykohbavzigsrhaupu = eeiykohbavzigsrhaupu ; }

line_index: 584
bug_before_refactoring: public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; } <s> Fixed issues related to failure to remove dead callbacks
bug_after_refactoring: public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } <s> public synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } <s> Fixed issues related to failure to remove dead callbacks
fix_before_refactoring: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( callback ) ; } }
fix_after_refactoring: public void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { synchronized ( this . dataLoaderCallbacks ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; } }
× fix_prediction_before: protected synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback callback ) { this . dataLoaderCallbacks . remove ( callback ) ; }
× fix_prediction_after: protected synchronized void removeCallback ( com.gvls2downloader.gvls2proxy.IDataLoaderCallback wefeyhlnngebukhjrnsy ) { this . dataLoaderCallbacks . remove ( wefeyhlnngebukhjrnsy ) ; }

line_index: 585
bug_before_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View child ) { super . onStopNestedScroll ( child ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> @ java.lang.Override public void onStopNestedScroll ( android.view.View child ) { super . onStopNestedScroll ( child ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
bug_after_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View becgvotbsdhiqodshxuh ) { super . onStopNestedScroll ( becgvotbsdhiqodshxuh ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> @ java.lang.Override public void onStopNestedScroll ( android.view.View becgvotbsdhiqodshxuh ) { super . onStopNestedScroll ( becgvotbsdhiqodshxuh ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
fix_before_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View child , int type ) { super . onStopNestedScroll ( child , type ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } }
fix_after_refactoring: @ java.lang.Override public void onStopNestedScroll ( android.view.View becgvotbsdhiqodshxuh , int type ) { super . onStopNestedScroll ( becgvotbsdhiqodshxuh , type ) ; if ( ( java.lang.Math . abs ( swipeDistance ) ) >= ( nich.work.aequorea.common.ui.widget.SwipeBackCoordinatorLayout.SWIPE_TRIGGER ) ) { swipeBack () ; } else { reset () ; } }
× fix_prediction_before: @ java.lang.Override public void onStopNestedScroll ( android.view.View child ) { super . onStopNestedScroll ( child ) ; reset () ; }
× fix_prediction_after: @ java.lang.Override public void onStopNestedScroll ( android.view.View becausegvotbsdhiqodshxuh ) { super . onStopNestedScroll ( becausegvotbsdhiqodshxuh ) ; reset () ; }

line_index: 586
bug_before_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread thread ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> private static void launch ( org.teavm.classlib.java.lang.TThread thread ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> Fixed some issues with tracking threads properly inside wait() and notify().   Monitors no longer throw exceptions  but they aren't working correctly.  Code is being allowed to proceed into a locked section before the lock is obtained.
bug_after_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread hdhreqditeeaogxlhgkp ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( hdhreqditeeaogxlhgkp ) ; hdhreqditeeaogxlhgkp . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> private static void launch ( org.teavm.classlib.java.lang.TThread hdhreqditeeaogxlhgkp ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( hdhreqditeeaogxlhgkp ) ; hdhreqditeeaogxlhgkp . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } } <s> Fixed some issues with tracking threads properly inside wait() and notify().   Monitors no longer throw exceptions  but they aren't working correctly.  Code is being allowed to proceed into a locked section before the lock is obtained.
fix_before_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread thread ) { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; }
fix_after_refactoring: private static void launch ( org.teavm.classlib.java.lang.TThread hdhreqditeeaogxlhgkp ) { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( hdhreqditeeaogxlhgkp ) ; hdhreqditeeaogxlhgkp . run () ; ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; }
× fix_prediction_before: protected static void launch ( org.teavm.classlib.java.lang.TThread thread ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; thread . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } }
× fix_prediction_after: public static void launch ( org.teavm.classlib.java.lang.TThread hdhreqditeeaogxlhgkp ) { try { ( org.teavm.classlib.java.lang.TThread.activeCount ) ++ ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( hdhreqditeeaogxlhgkp ) ; hdhreqditeeaogxlhgkp . run () ; } finally { ( org.teavm.classlib.java.lang.TThread.activeCount ) -- ; org.teavm.classlib.java.lang.TThread . setCurrentThread ( org.teavm.classlib.java.lang.TThread.mainThread ) ; } }

line_index: 587
bug_before_refactoring: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent mouseEvent ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent mouseEvent ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> Structure refactor and fixed chart stage pause problem.
bug_after_refactoring: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent lnecefmbtfrqlmbwhqsa ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent lnecefmbtfrqlmbwhqsa ) { java.lang.System.out . println ( "Start!" ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; getTimeline () . play () ; } <s> Structure refactor and fixed chart stage pause problem.
fix_before_refactoring: @ java.lang.Override public void start () { super . start () ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; java.lang.System.out . println ( "Start!" ) ; }
fix_after_refactoring: @ java.lang.Override public void start () { super . start () ; org.procrastinationpatients.tts.core.Engine . getInstance () . setProcessor ( new org.procrastinationpatients.tts.core.Processor () ) ; org.procrastinationpatients.tts.core.Engine . getInstance () . getProcessor () . start () ; java.lang.System.out . println ( "Start!" ) ; }
× fix_prediction_before: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent mouseEvent ) {}
× fix_prediction_after: @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent lnecefmbtfrqlmbwhqsa ) {}

line_index: 588
bug_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( repo ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; } } <s> private void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; } } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( repo ) ; }
fix_after_refactoring: private void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; }
× fix_prediction_before: private void onUnchoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; askForNewPiece ( repo ) ; }
× fix_prediction_after: public void onUnchoke ( com.jtorrent.storage.PieceRepository xhfuuukctlhsttesihmx ) { com.jtorrent.peer.Peer._logger . debug ( "received UNCHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = false ; askForNewPiece ( xhfuuukctlhsttesihmx ) ; } }

line_index: 589
bug_before_refactoring: private int threatLevelCalculator ( int armorRating , int potionEffectRating , int EliteMobRating ) { int threatLevel = ( ( armorRating / 2 ) + potionEffectRating ) + EliteMobRating ; return threatLevel ; } <s> private int threatLevelCalculator ( int armorRating , int potionEffectRating , int EliteMobRating ) { int threatLevel = ( ( armorRating / 2 ) + potionEffectRating ) + EliteMobRating ; return threatLevel ; } <s> Version 4.1.10  - Fixed a lot of hunting set-related bugs - Streamlined the natural mob spawning process - Disabled checking for passive mobs in a radius for now - Fixed group hunting not working; hunting parties will now always spawn higher level mobs
bug_after_refactoring: private int threatLevelCalculator ( int mpcjekozeovhoxdpwyvz , int dxqhewtiegxmwmcazhzc , int yovdknjmhxqoggcwvvju ) { int threatLevel = ( ( mpcjekozeovhoxdpwyvz / 2 ) + dxqhewtiegxmwmcazhzc ) + yovdknjmhxqoggcwvvju ; return threatLevel ; } <s> private int threatLevelCalculator ( int mpcjekozeovhoxdpwyvz , int dxqhewtiegxmwmcazhzc , int yovdknjmhxqoggcwvvju ) { int threatLevel = ( ( mpcjekozeovhoxdpwyvz / 2 ) + dxqhewtiegxmwmcazhzc ) + yovdknjmhxqoggcwvvju ; return threatLevel ; } <s> Version 4.1.10  - Fixed a lot of hunting set-related bugs - Streamlined the natural mob spawning process - Disabled checking for passive mobs in a radius for now - Fixed group hunting not working; hunting parties will now always spawn higher level mobs
fix_before_refactoring: private int threatLevelCalculator ( int armorRating , int potionEffectRating ) { int threatLevel = ( armorRating / 2 ) + potionEffectRating ; return threatLevel ; }
fix_after_refactoring: private int threatLevelCalculator ( int mpcjekozeovhoxdpwyvz , int dxqhewtiegxmwmcazhzc ) { int threatLevel = ( mpcjekozeovhoxdpwyvz / 2 ) + dxqhewtiegxmwmcazhzc ; return threatLevel ; }
× fix_prediction_before: private int threatLevelCalculator ( int armorRating , int potionEffectRating , int EliteMobRating ) { return ( ( armorRating / 2 ) + potionEffectRating ) + EliteMobRating ; }
× fix_prediction_after: private int threatLevelCalculator ( int mpcjekozeovhoxdpwyvz , int dxqhewtiegxmwmcazhzc , int yovdknjmhxqoggcwzzju ) { int threatLevel = ( ( mpcjekozeovhoxdpwyvz / 2 ) + dxqhewtiegxmwmcazhzc ; return threatLevel ; }

line_index: 590
bug_before_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > contacts ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , contacts ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > contacts ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , contacts ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> fix addresses issue
bug_after_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > nbzedqntpafuercziuck ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , nbzedqntpafuercziuck ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > nbzedqntpafuercziuck ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( Const.OBJECT_List , nbzedqntpafuercziuck ) ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; } <s> fix addresses issue
fix_before_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance () { android.os.Bundle args = new android.os.Bundle () ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; }
fix_after_refactoring: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance () { android.os.Bundle args = new android.os.Bundle () ; com.tallty.smart_life_android.fragment.cart.SelectAddress fragment = new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; fragment . setArguments ( args ) ; return fragment ; }
× fix_prediction_before: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance ( java.util.ArrayList < com.tallty.smart_life_android.model.Contact > contacts ) { return new com.tallty.smart_life_android.fragment.cart.SelectAddress ( contacts ) ; }
× fix_prediction_after: public static com.tallty.smart_life_android.fragment.cart.SelectAddress newInstance () { return new com.tallty.smart_life_android.fragment.cart.SelectAddress () ; }

line_index: 591
bug_before_refactoring: private static void assertComplex ( boolean condition ) { org.junit.Assert . assertFalse ( "Should be complex" , condition ) ; } <s> private static void assertComplex ( boolean condition ) { org.junit.Assert . assertFalse ( "Should be complex" , condition ) ; } <s> fixed some issues & added tcs
bug_after_refactoring: private static void assertComplex ( boolean zjizgoxcjwytwwvhtzpz ) { org.junit.Assert . assertFalse ( "Should be complex" , zjizgoxcjwytwwvhtzpz ) ; } <s> private static void assertComplex ( boolean zjizgoxcjwytwwvhtzpz ) { org.junit.Assert . assertFalse ( "Should be complex" , zjizgoxcjwytwwvhtzpz ) ; } <s> fixed some issues & added tcs
fix_before_refactoring: private static void assertComplex ( boolean condition ) { assertFalse ( "Should be complex" , condition ) ; }
fix_after_refactoring: private static void assertComplex ( boolean zjizgoxcjwytwwvhtzpz ) { assertFalse ( "Should be complex" , zjizgoxcjwytwwvhtzpz ) ; }
× fix_prediction_before: private static void assertComplex ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be complex" , condition ) ; }
× fix_prediction_after: public static void assertComplex ( boolean zjizgoxcjwytwwvhtzpz ) { org.junit.Assert . assertFalse ( "Should be complex" , zjizgoxcjwytwwvhtzpz ) ; }

line_index: 592
bug_before_refactoring: private void placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner ) ; addActor ( newStation ) ; } <s> private void placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner ) ; addActor ( newStation ) ; } <s> Bug-fix: Orbiting space stations scale with units again (update didn't work for them).
bug_after_refactoring: private void placeNewStation ( java.lang.String xzkyjvhexcmdryhlulrf , com.badlogic.gdx.math.Vector2 qrigbbdiicgicncyujst , dhbw.karlsruhe.it.solar.player.Player zlmwyxyxtlkqzkueqghx ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( xzkyjvhexcmdryhlulrf , qrigbbdiicgicncyujst , zlmwyxyxtlkqzkueqghx ) ; addActor ( newStation ) ; } <s> private void placeNewStation ( java.lang.String xzkyjvhexcmdryhlulrf , com.badlogic.gdx.math.Vector2 qrigbbdiicgicncyujst , dhbw.karlsruhe.it.solar.player.Player zlmwyxyxtlkqzkueqghx ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( xzkyjvhexcmdryhlulrf , qrigbbdiicgicncyujst , zlmwyxyxtlkqzkueqghx ) ; addActor ( newStation ) ; } <s> Bug-fix: Orbiting space stations scale with units again (update didn't work for them).
fix_before_refactoring: private dhbw.karlsruhe.it.solar.core.stages.Spacestation placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner ) ; addActor ( newStation ) ; return newStation ; }
fix_after_refactoring: private dhbw.karlsruhe.it.solar.core.stages.Spacestation placeNewStation ( java.lang.String xzkyjvhexcmdryhlulrf , com.badlogic.gdx.math.Vector2 qrigbbdiicgicncyujst , dhbw.karlsruhe.it.solar.player.Player zlmwyxyxtlkqzkueqghx ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( xzkyjvhexcmdryhlulrf , qrigbbdiicgicncyujst , zlmwyxyxtlkqzkueqghx ) ; addActor ( newStation ) ; return newStation ; }
× fix_prediction_before: private void placeNewStation ( java.lang.String name , com.badlogic.gdx.math.Vector2 startlocation , dhbw.karlsruhe.it.solar.player.Player owner , int type ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( name , startlocation , owner , type ) ; addActor ( newStation ) ; }
× fix_prediction_after: private void placeNewStation ( java.lang.String xzkyjvhexcmdryhlulrf , com.badlogic.gdx.math.Vector2 qrigbbdiicgicncyujst , dhbw.karlsruhe.it.solar.player.Player zlmwyxyxtlkqzkueqghx ) { dhbw.karlsruhe.it.solar.core.stages.Spacestation newStation = dhbw.karlsruhe.it.solar.core.stages.Spacestation . placeNewStation ( xzkyjvhexcmdryhlulrf , qrigbbdiicgicncyujst , zlmwyxyxtlkqzkueqghx ) ; addActor ( newStation ) ; }

line_index: 595
bug_before_refactoring: private java.lang.String issueToken ( java.lang.String username ) { java.lang.String token = "" ; return token ; } <s> private java.lang.String issueToken ( java.lang.String username ) { java.lang.String token = "" ; return token ; } <s> fixed some issues on the AuthenticationResource
bug_after_refactoring: private java.lang.String issueToken ( java.lang.String lazntzfwjtkfspguwowp ) { java.lang.String token = "" ; return token ; } <s> private java.lang.String issueToken ( java.lang.String lazntzfwjtkfspguwowp ) { java.lang.String token = "" ; return token ; } <s> fixed some issues on the AuthenticationResource
fix_before_refactoring: private void issueToken ( java.lang.String username ) {}
fix_after_refactoring: private void issueToken ( java.lang.String lazntzfwjtkfspguwowp ) {}
× fix_prediction_before: private java.lang.String issueToken ( java.lang.String username ) { return "" ; }
× fix_prediction_after: private java.lang.String issueToken () { java.lang.String token = "" ; return token ; }

line_index: 597
bug_before_refactoring: private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key ) ) return true ; else return false ; } <s> private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key ) ) return true ; else return false ; } <s> Various bug fixes.
bug_after_refactoring: private static boolean checkMap ( java.lang.String xxznneejmhayajsbvlxd ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( xxznneejmhayajsbvlxd ) ) return true ; else return false ; } <s> private static boolean checkMap ( java.lang.String xxznneejmhayajsbvlxd ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( xxznneejmhayajsbvlxd ) ) return true ; else return false ; } <s> Various bug fixes.
fix_before_refactoring: private static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key . toLowerCase () ) ) return true ; else return false ; }
fix_after_refactoring: private static boolean checkMap ( java.lang.String xxznneejmhayajsbvlxd ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( xxznneejmhayajsbvlxd . toLowerCase () ) ) return true ; else return false ; }
× fix_prediction_before: public static boolean checkMap ( java.lang.String key ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( key ) ) return true ; else return false ; }
× fix_prediction_after: public static boolean checkMap ( java.lang.String xxznneejmhayajsbvlxd ) { if ( Vortex.Graphics.Fonts.FontManager.FONT_MAP . containsKey ( xxznneejmhayajsbvlxd ) ) return true ; else return false ; }

line_index: 598
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { } } <s> commit edit hospital registration date picker bug resolve notifiction screen
bug_after_refactoring: @ jasijqopnrefdokixxxeupa.lang.Osijqopnrefdokixxxeuperride public sijqopnrefdokixxxeupoid onClick ( android.sijqopnrefdokixxxeupiew.View sijqopnrefdokixxxeup ) { switch ( sijqopnrefdokixxxeup . getId () ) { } } <s> @ jasijqopnrefdokixxxeupa.lang.Osijqopnrefdokixxxeuperride public sijqopnrefdokixxxeupoid onClick ( android.sijqopnrefdokixxxeupiew.View sijqopnrefdokixxxeup ) { switch ( sijqopnrefdokixxxeup . getId () ) { } } <s> commit edit hospital registration date picker bug resolve notifiction screen
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) {}
fix_after_refactoring: @ jasijqopnrefdokixxxeupa.lang.Osijqopnrefdokixxxeuperride public sijqopnrefdokixxxeupoid onClick ( android.sijqopnrefdokixxxeupiew.View sijqopnrefdokixxxeupiew ) {}
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {}
× fix_prediction_after: @ jasijqopnrefdokixxxeupa.lang.Osijqopnrefdokixxxeupoid onClick ( android.sijqopnrefdokixxxeupiew.View sijqopnrefdokixxxeup ) { switch ( sijqopnrefdokixxxeup . getId () ) { } }

line_index: 599
bug_before_refactoring: private static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; } <s> private static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; } <s> Fix test (still an issue)
bug_after_refactoring: private static void keepFile ( final java.io.File lbdqxdvkrtexcwavryyx ) { final java.io.File n = new java.io.File ( lbdqxdvkrtexcwavryyx . getParent () , ( ( lbdqxdvkrtexcwavryyx . getName () ) + ".keep" ) ) ; lbdqxdvkrtexcwavryyx . renameTo ( n ) ; } <s> private static void keepFile ( final java.io.File lbdqxdvkrtexcwavryyx ) { final java.io.File n = new java.io.File ( lbdqxdvkrtexcwavryyx . getParent () , ( ( lbdqxdvkrtexcwavryyx . getName () ) + ".keep" ) ) ; lbdqxdvkrtexcwavryyx . renameTo ( n ) ; } <s> Fix test (still an issue)
fix_before_refactoring: protected static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; }
fix_after_refactoring: protected static void keepFile ( final java.io.File lbdqxdvkrtexcwavryyx ) { final java.io.File n = new java.io.File ( lbdqxdvkrtexcwavryyx . getParent () , ( ( lbdqxdvkrtexcwavryyx . getName () ) + ".keep" ) ) ; lbdqxdvkrtexcwavryyx . renameTo ( n ) ; }
× fix_prediction_before: private static void keepFile ( final java.io.File file ) { final java.io.File n = new java.io.File ( file . getParent () , ( ( file . getName () ) + ".keep" ) ) ; file . renameTo ( n ) ; }
× fix_prediction_after: private static void keepFile ( final java.io.File lbdqxdvkrtexcwavryyx ) { final java.io.File n = new java.io.File ( lbdqxdvkrtexcwavryyx . getParent () , ( ( lbdqxdvkrtexcwavryyx . getName () ) + ".keep" ) ) ; lbdqxdvkrtexcwavryyx . renameTo ( n ) ; }

line_index: 600
bug_before_refactoring: private int pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> private int pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> fix multiple ui elements  handle condition   bug fixes
bug_after_refactoring: private int pickColor ( java.lang.String hrndxmzyhmmueqwxavyh ) { final int color = ( java.lang.Math . abs ( hrndxmzyhmmueqwxavyh . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> private int pickColor ( java.lang.String hrndxmzyhmmueqwxavyh ) { final int color = ( java.lang.Math . abs ( hrndxmzyhmmueqwxavyh . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } } <s> fix multiple ui elements  handle condition   bug fixes
fix_before_refactoring: public int pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } }
fix_after_refactoring: public int pickColor ( java.lang.String hrndxmzyhmmueqwxavyh ) { final int color = ( java.lang.Math . abs ( hrndxmzyhmmueqwxavyh . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } }
× fix_prediction_before: private boolean pickColor ( java.lang.String key ) { final int color = ( java.lang.Math . abs ( key . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } }
× fix_prediction_after: private boolean pickColor ( java.lang.String hrndxmzyhmmueqwxavyh ) { final int color = ( java.lang.Math . abs ( hrndxmzyhmmueqwxavyh . hashCode () ) ) % ( com.byteshaft.contactsharing.utils.BitmapWithCharacter.NUM_OF_TILE_COLORS ) ; try { return mColors . getColor ( color , Color.BLACK ) ; } finally { mColors . recycle () ; } }

line_index: 601
bug_before_refactoring: public void onClickSetPathUp ( android.view.View view ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> public void onClickSetPathUp ( android.view.View view ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> BTTestApp: Fix klockwork issues for MAPClient.  Fix NPE issues reported from klockwork for BTTestApp  MAP Client relevant implementation.  Change-Id: I4a03d57c78c464dc3ede7c5b3baa46ad68c2442f CRs-fixed: 758706
bug_after_refactoring: public void onClickSetPathUp ( android.tmhkpsuclexozgxvcbbw.View tmhkpsuclexozgxvcbbw ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> public void onClickSetPathUp ( android.tmhkpsuclexozgxvcbbw.View tmhkpsuclexozgxvcbbw ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } <s> BTTestApp: Fix klockwork issues for MAPClient.  Fix NPE issues reported from klockwork for BTTestApp  MAP Client relevant implementation.  Change-Id: I4a03d57c78c464dc3ede7c5b3baa46ad68c2442f CRs-fixed: 758706
fix_before_refactoring: public void onClickSetPathUp ( android.view.View view ) { if ( ( ( mProfileService ) != null ) && ( ( mProfileService . getMapClient ( mMasInstanceId ) ) != null ) ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } }
fix_after_refactoring: public void onClickSetPathUp ( android.tmhkpsuclexozgxvcbbw.View tmhkpsuclexozgxvcbbw ) { if ( ( ( mProfileService ) != null ) && ( ( mProfileService . getMapClient ( mMasInstanceId ) ) != null ) ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } }
× fix_prediction_before: public void onClickSetPathUp ( android.view.View view ) { if ( ( mProfileService . getMapClient ( mMasInstanceId ) ) != null ) { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; } }
× fix_prediction_after: public void onClickSetPathUp () { mProfileService . getMapClient ( mMasInstanceId ) . setFolderUp () ; goToState ( org.codeaurora.bluetooth.bttestapp.MapTestActivity.Job.SET_PATH ) ; }

line_index: 604
bug_before_refactoring: public void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; } <s> public void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; } <s> fixed test ordering issue when tests are ran
bug_after_refactoring: public void print ( java.lang.String fuhnqjywnbzqotdjbroh ) { java.lang.System.out . println ( fuhnqjywnbzqotdjbroh ) ; } <s> public void print ( java.lang.String fuhnqjywnbzqotdjbroh ) { java.lang.System.out . println ( fuhnqjywnbzqotdjbroh ) ; } <s> fixed test ordering issue when tests are ran
fix_before_refactoring: public static void print ( java.lang.String message ) { java.lang.System.out . println ( message ) ; }
fix_after_refactoring: public static void print ( java.lang.String fuhnqjywnbzqotdjbroh ) { java.lang.System.out . println ( fuhnqjywnbzqotdjbroh ) ; }
× fix_prediction_before: public void print ( java.lang.String message ) { java.lang.System.out . print ( message ) ; }
× fix_prediction_after: public void print ( java.lang.StringBarhnqjywnbzqotdjbroh ) { java.lang.System.out . println (Barhnqjywnbzqotdjbroh ) ; }

line_index: 606
bug_before_refactoring: @ java.lang.Override public int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 9 , 10 } ; } <s> @ java.lang.Override public int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 9 , 10 } ; } <s> Fix compilation errors in FNPPacketMangler  OpennetPeerNode  PacketFormat and Peernode
bug_after_refactoring: @ java.lang.Override public int [] supportedNegTypes ( boolean oksynacptosqbvnebwhx ) { return new int [] { 9 , 10 } ; } <s> @ java.lang.Override public int [] supportedNegTypes ( boolean oksynacptosqbvnebwhx ) { return new int [] { 9 , 10 } ; } <s> Fix compilation errors in FNPPacketMangler  OpennetPeerNode  PacketFormat and Peernode
fix_before_refactoring: public static int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 9 , 10 } ; }
fix_after_refactoring: public static int [] supportedNegTypes ( boolean oksynacptosqbvnebwhx ) { return new int [] { 9 , 10 } ; }
× fix_prediction_before: @ java.lang.Override public int [] supportedNegTypes ( boolean forPublic ) { return new int [] { 10 } ; }
× fix_prediction_after: @ java.lang.Override public int [] supportedNegTypes () { return new int [] { 9 , 10 } ; }

line_index: 607
bug_before_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( newName , mapFolder ( folder ) ) ; } <s> public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( newName , mapFolder ( folder ) ) ; } <s> Bug fix
bug_after_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder vjbypzhhzgxmktuwteur , java.lang.String zqeftzvshfwphcuegeer ) { fileRepository . renameFolder ( zqeftzvshfwphcuegeer , mapFolder ( vjbypzhhzgxmktuwteur ) ) ; } <s> public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder vjbypzhhzgxmktuwteur , java.lang.String zqeftzvshfwphcuegeer ) { fileRepository . renameFolder ( zqeftzvshfwphcuegeer , mapFolder ( vjbypzhhzgxmktuwteur ) ) ; } <s> Bug fix
fix_before_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( newName , mapFolder ( folder , null ) ) ; }
fix_after_refactoring: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder vjbypzhhzgxmktuwteur , java.lang.String zqeftzvshfwphcuegeer ) { fileRepository . renameFolder ( zqeftzvshfwphcuegeer , mapFolder ( vjbypzhhzgxmktuwteur , null ) ) ; }
× fix_prediction_before: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder folder , java.lang.String newName ) { fileRepository . renameFolder ( folder , newName ) ; }
× fix_prediction_after: public void renameFolder ( cz.cvut.fel.integracniportal.model.Folder vjbypzhhzgxmktuwteur , java.lang.String zqeftzvshfwphcuegeer ) { fileRepository . renameFolder ( zqeftzvshfwphcuegeer , mapFolder ( vjbypzhhzgxmktuwteur ) ) ; }

line_index: 608
bug_before_refactoring: public void warn ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , msg , null , null ) ; } <s> public void warn ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , msg , null , null ) ; } <s> Fix SLF4J-411 - EventRecodingLogger.debug(String) logs at TRACE  Fixes: * `EventRecodingLogger.debug(String)` logging at TRACE instead of DEBUG. * `EventRecodingLogger.warn(Marker  String)` not passing `null` instead of the marker.  https://jira.qos.ch/browse/SLF4J-411
bug_after_refactoring: public void warn ( org.slf4j.Marker bkyvxcqmaspfeaanrbum , java.lang.String nvfaegdvuintpfdevdoj ) { recordEvent ( Level.WARN , nvfaegdvuintpfdevdoj , null , null ) ; } <s> public void warn ( org.slf4j.Marker bkyvxcqmaspfeaanrbum , java.lang.String nvfaegdvuintpfdevdoj ) { recordEvent ( Level.WARN , nvfaegdvuintpfdevdoj , null , null ) ; } <s> Fix SLF4J-411 - EventRecodingLogger.debug(String) logs at TRACE  Fixes: * `EventRecodingLogger.debug(String)` logging at TRACE instead of DEBUG. * `EventRecodingLogger.warn(Marker  String)` not passing `null` instead of the marker.  https://jira.qos.ch/browse/SLF4J-411
fix_before_refactoring: public void warn ( org.slf4j.Marker marker , java.lang.String msg ) { recordEvent ( Level.WARN , marker , msg , null , null ) ; }
fix_after_refactoring: public void warn ( org.slf4j.Marker bkyvxcqmaspfeaanrbum , java.lang.String nvfaegdvuintpfdevdoj ) { recordEvent ( Level.WARN , bkyvxcqmaspfeaanrbum , nvfaegdvuintpfdevdoj , null , null ) ; }
× fix_prediction_before: public void warn ( java.lang.String msg ) { recordEvent ( Level.WARN , msg , null , null , null ) ; }
× fix_prediction_after: public void warn ( org.slf4j.Marker bkyvxcqmaspfeaanrbum , java.lang.String nvfaegdvuxpfdevdoj ) { recordEvent ( Level.WARN , nvfaegdvuxpfdevdoj , null , null , null ) ; }

line_index: 610
bug_before_refactoring: public static int dp2Px ( android.view.View context , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( context . getContext () , dp ) ; } <s> public static int dp2Px ( android.view.View context , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( context . getContext () , dp ) ; } <s> fixed bottom padding issue
bug_after_refactoring: public static int tvfieeoerzdimeszmyui2Px ( android.view.View pbxgjowbipsybkuznpvn , int tvfieeoerzdimeszmyui ) { return com.welcome.to.sweden.utils.ViewUtils . tvfieeoerzdimeszmyui2Px ( pbxgjowbipsybkuznpvn . getContext () , tvfieeoerzdimeszmyui ) ; } <s> public static int tvfieeoerzdimeszmyui2Px ( android.view.View pbxgjowbipsybkuznpvn , int tvfieeoerzdimeszmyui ) { return com.welcome.to.sweden.utils.ViewUtils . tvfieeoerzdimeszmyui2Px ( pbxgjowbipsybkuznpvn . getContext () , tvfieeoerzdimeszmyui ) ; } <s> fixed bottom padding issue
fix_before_refactoring: public static int dp2Px ( android.view.View view , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( view . getContext () , dp ) ; }
fix_after_refactoring: public static int tvfieeoerzdimeszmyui2Px ( android.view.View view , int tvfieeoerzdimeszmyui ) { return com.welcome.to.sweden.utils.ViewUtils . tvfieeoerzdimeszmyui2Px ( view . getContext () , tvfieeoerzdimeszmyui ) ; }
× fix_prediction_before: public static int dp2Px ( android.view.View context , int dp ) { return com.welcome.to.sweden.utils.ViewUtils . dp2Px ( context . getContext () , dp , 1 ) ; }
× fix_prediction_after: public static int tvfieeoerzdimeszmyui2Px ( android.view.View webViewgjowbipsybkuznpvn , int tvfieeoerzdimeszmyui ) { return com.welcome.to.sweden.utils.ViewUtils . tvfieeoerzdimeszmyui2Px ( webViewgjowbipsybkuznpvn . getContext () , tvfieeoerzdimeszmyui ) ; }

line_index: 611
bug_before_refactoring: private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } } <s> resolved file name issues
bug_after_refactoring: private void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } } <s> private void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } } <s> resolved file name issues
fix_before_refactoring: public void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s . getBytes () ) ; } }
fix_after_refactoring: public void write ( java.lang.String zhmdhuubmtjmvwlakbeu ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmvwlakbeuocketManager . write ( zhmdhuubmtjmvwlakbeu . getBytezhmdhuubmtjmvwlakbeu () ) ; } }
× fix_prediction_before: private void write ( java.lang.String s ) { if ( ( finalBluetoothSocket ) != null ) { socketManager . write ( s ) ; } }
× fix_prediction_after: private void write ( java.lang.String y ) { if ( ( finalBluetoothSocket ) != null ) { zhmdhuubmtjmmslakbeuocketManager . write ( y ) ; } }

line_index: 612
bug_before_refactoring: public static < T > java.util.List < T > toList ( T [] o ) { java.util.List < T > d = new java.util.ArrayList < T > () ; for ( T e : o ) d . add ( e ) ; return d ; } <s> public static < T > java.util.List < T > toList ( T [] o ) { java.util.List < T > d = new java.util.ArrayList < T > () ; for ( T e : o ) d . add ( e ) ; return d ; } <s> fix error in double array summary  speed up some converstion methods
bug_after_refactoring: public static < T > java.util.List < T > tniaddcjlwuxzyyjohfrsList ( T [] niaddcjlwuxzyyjohfrs ) { java.util.List < T > d = new java.util.ArrayList < T > () ; fniaddcjlwuxzyyjohfrsr ( T e : niaddcjlwuxzyyjohfrs ) d . add ( e ) ; return d ; } <s> public static < T > java.util.List < T > tniaddcjlwuxzyyjohfrsList ( T [] niaddcjlwuxzyyjohfrs ) { java.util.List < T > d = new java.util.ArrayList < T > () ; fniaddcjlwuxzyyjohfrsr ( T e : niaddcjlwuxzyyjohfrs ) d . add ( e ) ; return d ; } <s> fix error in double array summary  speed up some converstion methods
fix_before_refactoring: public static < T > java.util.List < T > toList ( T [] o ) { return java.util.Arrays . asList ( o ) ; }
fix_after_refactoring: public static < T > java.util.List < T > tniaddcjlwuxzyyjohfrsList ( T [] niaddcjlwuxzyyjohfrs ) { return java.util.Arrays . asList ( niaddcjlwuxzyyjohfrs ) ; }
× fix_prediction_before: public static < T > java.util.List < T > toList ( T [] o ) { java.util.List < T > d = new java.util.ArrayList < T > () ; for ( T e : o ) d . add ( e ) ; return d ; }
× fix_prediction_after: public static < T > java.util.List < T > tniaddcjlwuxzyyjohfrsList ( T []niaddcjlwuxzyyjohfrs ) { java.util.List < T > d = new java.util.ArrayList < T > () ; return d ; }

line_index: 613
bug_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { final com.media2359.nickel.model.Recipient object = this ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; } <s> bug fix  bug fix
bug_after_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { final com.media2359.nickel.model.Recipient object = this ; io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq = io.pzmqthzzoaozczrrbyjq.Realm . getDefaultInstance () ; pzmqthzzoaozczrrbyjq . executeTransaction ( new io.pzmqthzzoaozczrrbyjq.Realm.Transaction () { @ java.lang.Override public void execute ( io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq ) { object.wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; } } ) ; } <s> public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { final com.media2359.nickel.model.Recipient object = this ; io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq = io.pzmqthzzoaozczrrbyjq.Realm . getDefaultInstance () ; pzmqthzzoaozczrrbyjq . executeTransaction ( new io.pzmqthzzoaozczrrbyjq.Realm.Transaction () { @ java.lang.Override public void execute ( io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq ) { object.wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; } } ) ; } <s> bug fix  bug fix
fix_before_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; }
fix_after_refactoring: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { this . wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; }
× fix_prediction_before: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer currentTransaction ) { this . currentTransaction = currentTransaction ; io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; realm . executeTransaction ( new io.realm.Realm.Transaction () { @ java.lang.Override public void execute ( io.realm.Realm realm ) { object.currentTransaction = currentTransaction ; } } ) ; }
× fix_prediction_after: public void setCurrentTransaction ( final com.media2359.nickel.model.NickelTransfer wrtwfpksbimsnescupsp ) { setCurrentTransaction ( new io.pzmqthzzoaozczrrbyjq.Realm.Transaction () { @ java.lang.Override public void executeTransaction ( io.pzmqthzzoaozczrrbyjq.Realm pzmqthzzoaozczrrbyjq ) { object.wrtwfpksbimsnescupsp = wrtwfpksbimsnescupsp ; } } ) ; }

line_index: 614
bug_before_refactoring: private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; } <s> private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; } <s> Fix #4186 Bug of notifications in the sub-app intra user community.
bug_after_refactoring: private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord useovbbawqawqzsxcgtk ) { java.lang.String actorDestination = useovbbawqawqzsxcgtk . getActorDestinationPublicKey () ; useovbbawqawqzsxcgtk . setActorDestinationPublicKey ( useovbbawqawqzsxcgtk . getActorSenderPublicKey () ) ; useovbbawqawqzsxcgtk . setActorSenderPublicKey ( actorDestination ) ; } <s> private void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord useovbbawqawqzsxcgtk ) { java.lang.String actorDestination = useovbbawqawqzsxcgtk . getActorDestinationPublicKey () ; useovbbawqawqzsxcgtk . setActorDestinationPublicKey ( useovbbawqawqzsxcgtk . getActorSenderPublicKey () ) ; useovbbawqawqzsxcgtk . setActorSenderPublicKey ( actorDestination ) ; } <s> Fix #4186 Bug of notifications in the sub-app intra user community.
fix_before_refactoring: private com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; return actorNetworkServiceRecord ; }
fix_after_refactoring: private com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord useovbbawqawqzsxcgtk ) { java.lang.String actorDestination = useovbbawqawqzsxcgtk . getActorDestinationPublicKey () ; useovbbawqawqzsxcgtk . setActorDestinationPublicKey ( useovbbawqawqzsxcgtk . getActorSenderPublicKey () ) ; useovbbawqawqzsxcgtk . setActorSenderPublicKey ( actorDestination ) ; return useovbbawqawqzsxcgtk ; }
× fix_prediction_before: protected void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord actorNetworkServiceRecord ) { java.lang.String actorDestination = actorNetworkServiceRecord . getActorDestinationPublicKey () ; actorNetworkServiceRecord . setActorDestinationPublicKey ( actorNetworkServiceRecord . getActorSenderPublicKey () ) ; actorNetworkServiceRecord . setActorSenderPublicKey ( actorDestination ) ; }
× fix_prediction_after: protected void changeActor ( com.bitdubai.fermat_ccp_plugin.layer.network_service.intra_user.developer.bitdubai.version_1.structure.ActorNetworkServiceRecord useovbbawqawqzsxcgtk ) { java.lang.String actorDestination = useovbbawqawqzsxcgtk . getActorDestinationPublicKey () ; useovbbawqawqzsxcgtk . setActorDestinationPublicKey ( actorDestination ) ; }

line_index: 615
bug_before_refactoring: java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer programId ) ; <s> java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer programId ) ; <s> Bug fixed of duplicate registration  Withdrawl added
bug_after_refactoring: java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer ytpdmxuztwlotchdmzxw ) ; <s> java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( java.lang.Integer ytpdmxuztwlotchdmzxw ) ; <s> Bug fixed of duplicate registration  Withdrawl added
fix_before_refactoring: @ org.springframework.data.jpa.repository.Query ( value = "select s, s.user from Student s where s.program.id = ?1" ) java.util.List < java.lang.Object [] > findAllByProgram_Id ( java.lang.Integer programId ) ;
fix_after_refactoring: @ org.springframework.data.jpa.repository.Query ( value = "select s, s.user from Student s where s.program.id = ?1" ) java.util.List < java.lang.Object [] > findAllByProgram_Id ( java.lang.Integer ytpdmxuztwlotchdmzxw ) ;
× fix_prediction_before: java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( int programId ) ;
× fix_prediction_after: java.util.List < springmvc.java.domain.Student > findAllByProgram_Id ( int ytpdmxuztwlotchdmzxw ) ;

line_index: 616
bug_before_refactoring: public boolean contains ( java.lang.String ID ) { nu.xom.Element e = getElementByID ( ID ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> public boolean contains ( java.lang.String ID ) { nu.xom.Element e = getElementByID ( ID ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> Task #75 - Static Analysis  - Applied check style fixes on Phase.java and PhasesList.java - Applied findbugs fixes on Phase.java and PhasesList.java
bug_after_refactoring: public boolean contains ( java.lang.String oizljdxojdbhqlrejmny ) { nu.xom.Element e = getElementByoizljdxojdbhqlrejmny ( oizljdxojdbhqlrejmny ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> public boolean contains ( java.lang.String oizljdxojdbhqlrejmny ) { nu.xom.Element e = getElementByoizljdxojdbhqlrejmny ( oizljdxojdbhqlrejmny ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; } <s> Task #75 - Static Analysis  - Applied check style fixes on Phase.java and PhasesList.java - Applied findbugs fixes on Phase.java and PhasesList.java
fix_before_refactoring: public boolean contains ( java.lang.String id ) { nu.xom.Element e = getElementByID ( id ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; }
fix_after_refactoring: public boolean contains ( java.lang.String id ) { nu.xom.Element e = getElementByoizljdxojdbhqlrejmny ( id ) ; boolean res = false ; if ( e != null ) { res = true ; } return res ; }
× fix_prediction_before: public boolean contains ( java.lang.String ID ) { nu.xom.Element e = getElementByID ( ID ) ; if ( e != null ) { return true ; } return false ; }
× fix_prediction_after: public boolean contains ( java.lang.Object oizljdxojdbhqlrejmny ) { nu.xom.Element e = getElementByoizljdxojdbhqlrejmny ( oizljdxojdbhqlrejmny ) ; return e != null ; }

line_index: 618
bug_before_refactoring: private boolean keyExists ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; } <s> private boolean keyExists ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; } <s> fix compat issues
bug_after_refactoring: private boolean zozpuuhyqkplumgidfmxExists ( java.lang.String zozpuuhyqkplumgidfmx ) { return _appProperties . hasProperty ( zozpuuhyqkplumgidfmx ) ; } <s> private boolean zozpuuhyqkplumgidfmxExists ( java.lang.String zozpuuhyqkplumgidfmx ) { return _appProperties . hasProperty ( zozpuuhyqkplumgidfmx ) ; } <s> fix compat issues
fix_before_refactoring: @ java.lang.Override public boolean hasProperty ( java.lang.String key ) { return _appProperties . hasProperty ( key ) ; }
fix_after_refactoring: @ java.lang.Override public boolean hasProperty ( java.lang.String zozpuuhyqkplumgidfmx ) { return _appProperties . hasProperty ( zozpuuhyqkplumgidfmx ) ; }
× fix_prediction_before: private boolean keyExists ( java.lang.String key ) { return ( ( _appProperties ) != null ) && ( _appProperties . hasProperty ( key ) ) ; }
× fix_prediction_after: public boolean zozpuuhyqkplumgidfmxExists ( java.lang.String zozpuuhyqkplumgidfmx ) { return _appProperties . hasProperty ( zozpuuhyqkplumgidfmx ) ; }

line_index: 619
bug_before_refactoring: public static void main ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Partial implementation. TODO: FIx classpath issue
bug_after_refactoring: public static void main ( java.lang.String [] sruefxmbbgkdtibzyyla ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] sruefxmbbgkdtibzyyla ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; try { pb . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> Partial implementation. TODO: FIx classpath issue
fix_before_refactoring: public static void main ( java.lang.String [] args ) {}
fix_after_refactoring: public static void main ( java.lang.String [] sruefxmbbgkdtibzyyla ) {}
× fix_prediction_before: public static void main ( java.lang.String [] args ) { new java.lang.ProcessBuilder () . command () ; }
× fix_prediction_after: public static void main ( java.lang.String [] sruefxmbbgkdtibzyyla ) { java.lang.ProcessBuilder pb = new java.lang.ProcessBuilder () ; pb . command () ; pb . start () ; }

line_index: 622
bug_before_refactoring: public boolean setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; return true ; } <s> public boolean setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; return true ; } <s> OLMIS-817: Bug fixes
bug_after_refactoring: public boolean setLabel ( java.lang.String ifnxgymffavnfpkptgyb ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( ifnxgymffavnfpkptgyb ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = ifnxgymffavnfpkptgyb ; return true ; } <s> public boolean setLabel ( java.lang.String ifnxgymffavnfpkptgyb ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( ifnxgymffavnfpkptgyb ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = ifnxgymffavnfpkptgyb ; return true ; } <s> OLMIS-817: Bug fixes
fix_before_refactoring: public void setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( labelName ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = labelName ; }
fix_after_refactoring: public void setLabel ( java.lang.String ifnxgymffavnfpkptgyb ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { if ( ! ( validateString ( ifnxgymffavnfpkptgyb ) ) ) { throw new org.openlmis.requisition.exception.RequisitionTemplateColumnException ( "Only alphanumeric label is accepted." ) ; } this . label = ifnxgymffavnfpkptgyb ; }
× fix_prediction_before: public void setLabel ( java.lang.String labelName ) throws org.openlmis.requisition.exception.RequisitionTemplateColumnException { this . label = labelName ; }
× fix_prediction_after: public boolean setLabel ( java.lang.String ifnxgymffavnfpkptgyb ) { this . label = ifnxgymffavnfpkptgyb ; return true ; }

line_index: 623
bug_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; } } <s> Fix: toolbar issue
bug_after_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; } } <s> @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { if ( ( getActivity () ) instanceof kamini.app.moviecollection.MovieDetailActivity ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; } } <s> Fix: toolbar issue
fix_before_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { inflater . inflate ( R.menu.menu_detail , menu ) ; finishCreatingMenu ( menu ) ; }
fix_after_refactoring: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { gzlwqqbnhracoqbcryam . inflate ( R.vhbapwxvcypfqqcpocfb.vhbapwxvcypfqqcpocfb_detail , vhbapwxvcypfqqcpocfb ) ; finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { super . onCreateOptionsMenu ( menu , inflater ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreateOptionsMenu ( android.view.Menu vhbapwxvcypfqqcpocfb , android.view.MenuInflater gzlwqqbnhracoqbcryam ) { finishCreatingMenu ( vhbapwxvcypfqqcpocfb ) ; }

line_index: 624
bug_before_refactoring: public final int addOverlayPath ( java.lang.String idmapPath ) { synchronized ( this ) { int res = addOverlayPathNative ( idmapPath ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> public final int addOverlayPath ( java.lang.String idmapPath ) { synchronized ( this ) { int res = addOverlayPathNative ( idmapPath ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> Revert "base: Fix the problems for runtime overlay."  This reverts commit 61b313418c88ee442e2f4ebfa1923d37ccba0a7e.  Change-Id: If21419f3a627630384fb6e8f7572558d25229ede
bug_after_refactoring: public final int addOverlayPath ( java.lang.String lbdxonmujdmjxudopabw ) { synchronized ( this ) { int res = addOverlayPathNative ( lbdxonmujdmjxudopabw ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> public final int addOverlayPath ( java.lang.String lbdxonmujdmjxudopabw ) { synchronized ( this ) { int res = addOverlayPathNative ( lbdxonmujdmjxudopabw ) ; if ( ( mStringBlocks ) != null ) { makeStringBlocks ( mStringBlocks ) ; } return res ; } } <s> Revert "base: Fix the problems for runtime overlay."  This reverts commit 61b313418c88ee442e2f4ebfa1923d37ccba0a7e.  Change-Id: If21419f3a627630384fb6e8f7572558d25229ede
fix_before_refactoring: public final native int addOverlayPath ( java.lang.String idmapPath ) ;
fix_after_refactoring: public final native int addOverlayPath ( java.lang.String lbdxonmujdmjxudopabw ) ;
× fix_prediction_before: public final int addOverlayPath ( java.lang.String idmapPath ) { synchronized ( this ) { int res = addOverlayPathNative ( idmapPath ) ; makeStringBlocks ( mStringBlocks ) ; return res ; } }
× fix_prediction_after: public final int addOverlayPath ( java.lang.String lbdxonmujdmjxudopabw ) { synchronized ( this ) { int res = addOverlayPathNative ( lbdxonmujdmjxudopabw ) ; makeStringBlocks ( mStringBlocks ) ; return res ; } }

line_index: 625
bug_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , parsed.trailing ) ; } <s> fixed compile issue from SpaceNet removal
bug_after_refactoring: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , vwtklvtspqevajaqosqj.trailing ) ; } <s> private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) { com.adam4.spacenet.SpaceNetServer . wallops ( userName , vwtklvtspqevajaqosqj.trailing ) ; } <s> fixed compile issue from SpaceNet removal
fix_before_refactoring: private void wallops ( com.adam4.irc.ParsedMessage parsed ) {}
fix_after_refactoring: private void wallops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) {}
× fix_prediction_before: private void randlops ( com.adam4.irc.ParsedMessage parsed ) { com.adam4.spacenet.SpaceNetServer . randlops ( userName , parsed. trailing ) ; }
× fix_prediction_after: private void randomlops ( com.adam4.irc.ParsedMessage vwtklvtspqevajaqosqj ) { com.adam4.spacenet.SpaceNetServer . randomlops ( userName , vwtklvtspqevajaqosqj. trailing ) ; }

line_index: 626
bug_before_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper env ) { return appModule . provideObjectMapper ( env ) ; } <s> @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper env ) { return appModule . provideObjectMapper ( env ) ; } <s> some refactoring and fix for bug in mapper instatiation
bug_after_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper njjvillmyqjcgcuhuevw ) { return appModule . provideObjectMapper ( njjvillmyqjcgcuhuevw ) ; } <s> @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper njjvillmyqjcgcuhuevw ) { return appModule . provideObjectMapper ( njjvillmyqjcgcuhuevw ) ; } <s> some refactoring and fix for bug in mapper instatiation
fix_before_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( @ com.picdrop.guice.names.Config java.util.Properties p ) { return appModule . provideObjectMapper ( p ) ; }
fix_after_refactoring: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( @ com.picdrop.guice.names.Config java.util.Properties p ) { return appModule . provideObjectMapper ( p ) ; }
× fix_prediction_before: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper ( com.picdrop.helper.EnvHelper env ) { return appModule . provideObjectMapper ( env ) ; }
× fix_prediction_after: @ com.google.inject.Provides @ java.lang.Override protected com.fasterxml.jackson.databind.ObjectMapper provideObjectMapper () { return appModule . provideObjectMapper () ; }

line_index: 627
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != l2 ) && ( l1 != null ? ! ( l1 . equals ( l2 ) ) : ! ( l2 . equals ( l1 ) ) ) ; } <s> @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != l2 ) && ( l1 != null ? ! ( l1 . equals ( l2 ) ) : ! ( l2 . equals ( l1 ) ) ) ; } <s> Bug fixing and cleanup.   - ensure total cached connections is decremented in all cases.   - Remove deprecated API usage
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long bhlexzopghkfiygkgmdi , final java.lang.Long cgslnsshbyxexdemsczp ) { return ( bhlexzopghkfiygkgmdi != cgslnsshbyxexdemsczp ) && ( bhlexzopghkfiygkgmdi != null ? ! ( bhlexzopghkfiygkgmdi . equals ( cgslnsshbyxexdemsczp ) ) : ! ( cgslnsshbyxexdemsczp . equals ( bhlexzopghkfiygkgmdi ) ) ) ; } <s> @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long bhlexzopghkfiygkgmdi , final java.lang.Long cgslnsshbyxexdemsczp ) { return ( bhlexzopghkfiygkgmdi != cgslnsshbyxexdemsczp ) && ( bhlexzopghkfiygkgmdi != null ? ! ( bhlexzopghkfiygkgmdi . equals ( cgslnsshbyxexdemsczp ) ) : ! ( cgslnsshbyxexdemsczp . equals ( bhlexzopghkfiygkgmdi ) ) ) ; } <s> Bug fixing and cleanup.   - ensure total cached connections is decremented in all cases.   - Remove deprecated API usage
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final long l1 , final long l2 ) { return l1 != l2 ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final long bhlexzopghkfiygkgmdi , final long cgslnsshbyxexdemsczp ) { return bhlexzopghkfiygkgmdi != cgslnsshbyxexdemsczp ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) public static boolean wasModified ( final java.lang.Long l1 , final java.lang.Long l2 ) { return ( l1 != l2 ) && ( l1 != null ? ! ( l1 . equals ( l2 ) ) : ! ( l2 . equals ( l1 ) ) ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = { "NumberEquality" } ) private static boolean wasModified ( final java.lang.Long bhlexzopghkfiygkgmdi , final java.lang.Long cgslnsshbyxexdemsczp ) { return ( bhlexzopghkfiygkgmdi != null ? ! ( bhlexzopghkfiygkgmdi . equals ( cgslnsshbyxexdemsczp ) ) : ! ( cgslnsshbyxexdemsczp . equals ( bhlexzopghkfiygkgmdi ) ) ) ; }

line_index: 628
bug_before_refactoring: public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( id ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( id ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> Response builder object bug fixed. Fixed logIn i.e. wrong password and incorrect UserID entry now facilitated.
bug_after_refactoring: public boolean mttzkfdotsfawbisqayjAlreadyExists ( java.lang.Integer mttzkfdotsfawbisqayj ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( mttzkfdotsfawbisqayj ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> public boolean mttzkfdotsfawbisqayjAlreadyExists ( java.lang.Integer mttzkfdotsfawbisqayj ) { ie.dit.onedirectory.entities.User user = null ; try { user = service . findByID ( mttzkfdotsfawbisqayj ) ; } catch ( javax.persistence.NoResultException e ) {} return user != null ; } <s> Response builder object bug fixed. Fixed logIn i.e. wrong password and incorrect UserID entry now facilitated.
fix_before_refactoring: public boolean idAlreadyExists ( java.lang.Integer id ) { ie.dit.onedirectory.entities.User user = null ; user = service . findByID ( id ) ; if ( user != null ) { return true ; } else return false ; }
fix_after_refactoring: public boolean mttzkfdotsfawbisqayjAlreadyExists ( java.lang.Integer mttzkfdotsfawbisqayj ) { ie.dit.onedirectory.entities.User user = null ; user = service . findByID ( mttzkfdotsfawbisqayj ) ; if ( user != null ) { return true ; } else return false ; }
× fix_prediction_before: public boolean idAlreadyExists ( java.lang.Integer id ) { return service . findByID ( id ) != null ; }
× fix_prediction_after: public boolean mttzkfdotsfawbisqayjAlreadyExists ( java.lang.Integer mttzkfdotsfawbisqayj ) { ie.dit.onedirectory.entities.User user = null ; user = service . findByID ( mttzkfdotsfawbisqayj ) ; return user != null ; }

line_index: 630
bug_before_refactoring: private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , sessionUser , track ) ; } <s> private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , sessionUser , track ) ; } <s> Try to fix lazy relationship hibernate problems (no session/transaction) by adding @Transactional tag
bug_after_refactoring: private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance hozphxeppcetnzmcbaqr , org.iabako.server.serviceimpl.user.User imksmaklsunfjmkuhrqc , org.iabako.server.serviceimpl.user.Payment mvojmrrambmzcwoyytsz ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( imksmaklsunfjmkuhrqc , mvojmrrambmzcwoyytsz , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( hozphxeppcetnzmcbaqr , imksmaklsunfjmkuhrqc , track ) ; } <s> private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance hozphxeppcetnzmcbaqr , org.iabako.server.serviceimpl.user.User imksmaklsunfjmkuhrqc , org.iabako.server.serviceimpl.user.Payment mvojmrrambmzcwoyytsz ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( imksmaklsunfjmkuhrqc , mvojmrrambmzcwoyytsz , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( hozphxeppcetnzmcbaqr , imksmaklsunfjmkuhrqc , track ) ; } <s> Try to fix lazy relationship hibernate problems (no session/transaction) by adding @Transactional tag
fix_before_refactoring: @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRED , rollbackFor = java.lang.Exception . class ) private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , track ) ; }
fix_after_refactoring: @ org.springframework.transaction.annotation.Transactional ( propagation = org.springframework.transaction.annotation.Propagation.REQUIRED , rollbackFor = java.lang.Exception . class ) private void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance hozphxeppcetnzmcbaqr , org.iabako.server.serviceimpl.user.User imksmaklsunfjmkuhrqc , org.iabako.server.serviceimpl.user.Payment mvojmrrambmzcwoyytsz ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( imksmaklsunfjmkuhrqc , mvojmrrambmzcwoyytsz , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( hozphxeppcetnzmcbaqr , track ) ; }
× fix_prediction_before: protected void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance enterpriseBalance , org.iabako.server.serviceimpl.user.User sessionUser , org.iabako.server.serviceimpl.user.Payment payment ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( sessionUser , payment , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( enterpriseBalance , sessionUser , track ) ; }
× fix_prediction_after: protected void addReceiptTrack ( org.iabako.server.serviceimpl.user.EnterpriseBalance hozphxeppcet nzmcbaqr , org.iabako.server.serviceimpl.user.EnterpriseTrack imksmaklsunfjmkuhrqc , org.iabako.server.serviceimpl.user.Payment mvojmrrambmzcwoyytsz ) { org.iabako.server.serviceimpl.user.EnterpriseTrack track = org.iabako.server.serviceimpl.user.EnterpriseTrack . getFromPayment ( imksmaklsunfjmkuhrqc , mvojmrrambmzcwoyytsz , EnterpriseTrackType.receiptTrack ) ; addPaymentTrack ( hozphxeppcet nzmcbaqr , imksmaklsunfjmkuhrqc , track ) ; }

line_index: 631
bug_before_refactoring: @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , java.lang.String data ) { if ( data != "" ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } } <s> @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , java.lang.String data ) { if ( data != "" ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } } <s> UTF issue solved. More words included. Dynamic change of 1 tag supported.
bug_after_refactoring: @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary drgqytbvekguxhdgbrzz , java.lang.String rsiygvgtceaqdriangfn ) { if ( rsiygvgtceaqdriangfn != "" ) { drgqytbvekguxhdgbrzz . setSearchPhrase ( rsiygvgtceaqdriangfn ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( drgqytbvekguxhdgbrzz ) ; } } <s> @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary drgqytbvekguxhdgbrzz , java.lang.String rsiygvgtceaqdriangfn ) { if ( rsiygvgtceaqdriangfn != "" ) { drgqytbvekguxhdgbrzz . setSearchPhrase ( rsiygvgtceaqdriangfn ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( drgqytbvekguxhdgbrzz ) ; } } <s> UTF issue solved. More words included. Dynamic change of 1 tag supported.
fix_before_refactoring: @ net.java.html.json.Function static void changeSP ( final web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , final java.lang.String data ) { if ( ! ( "" . equals ( data ) ) ) { model . setSearchPhrase ( data ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( model ) ; } }
fix_after_refactoring: @ net.java.html.json.Function static void changeSP ( final web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary drgqytbvekguxhdgbrzz , final java.lang.String rsiygvgtceaqdriangfn ) { if ( ! ( "" . equals ( rsiygvgtceaqdriangfn ) ) ) { drgqytbvekguxhdgbrzz . setSearchPhrase ( rsiygvgtceaqdriangfn ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( drgqytbvekguxhdgbrzz ) ; } }
× fix_prediction_before: @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary model , java.lang.String data ) { model . setSearchPhrase ( data ) ; changeFP ( model ) ; }
× fix_prediction_after: @ net.java.html.json.Function static void changeSP ( web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.Dictionary drgqytbvekguxhdgbrzz , java.lang.String rsiygvgtceaqdriangfn ) { drgqytbvekguxuxhdgbrzz . setSearchPhrase ( rsiygvgtceaqdriangfn ) ; web.aprendiendola.dictionaryweb.aprendiendola.dictionary.DiccionarioDeJava.DataModel . changeFP ( drgqytbvekguxuxhdgbrzz ) ; }

line_index: 632
bug_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
bug_after_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } <s> Fixed bug in enable-fuji action.
fix_before_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void run ( org.eclipse.jface.mzwiealkibpdjfvauvat.IAction mzwiealkibpdjfvauvat ) { if ( ( featureHouseComposer ) != null ) { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void run ( org.eclipse.jface.action.IAction action ) { featureHouseComposer . setUseFuji ( ( featureHouseComposer . usesFuji ( true ) ) ) ; }
× fix_prediction_after: @ java.lang.Override public void run () { featureHouseComposer . setUseFuji ( ( ! ( featureHouseComposer . usesFuji () ) ) ) ; }

line_index: 633
bug_before_refactoring: public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
bug_after_refactoring: public static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return "com.android.providers.media.documents" . equals ( khptmomshtngdqdhxcug . getAuthority () ) ; } <s> public static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return "com.android.providers.media.documents" . equals ( khptmomshtngdqdhxcug . getAuthority () ) ; } <s> Adds full-screen Dialog for restaurant adding Splits Dialogs for adding and editing into own Class Fixes some errors from latest commit
fix_before_refactoring: private static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . equals ( uri . getAuthority () ) ; }
fix_after_refactoring: private static boolean isMediaDocument ( android.net.Uri khptmomshtngdqdhxcug ) { return "com.android.providers.media.documents" . equals ( khptmomshtngdqdhxcug . getAuthority () ) ; }
× fix_prediction_before: public static boolean isMediaDocument ( android.net.Uri uri ) { return "com.android.providers.media.documents" . contains ( uri . getAuthority () ) ; }
× fix_prediction_after: public static boolean isMediaDocument ( android.net.Uri url ) { return "com.android.providers.media.documents" . equals ( url . getAuthority () ) ; }

line_index: 634
bug_before_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment , com.shopify.sample.application.Response response ) { this . checkout = payment . getCheckout () ; callback . success ( checkout , response ) ; } <s> @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment , com.shopify.sample.application.Response response ) { this . checkout = payment . getCheckout () ; callback . success ( checkout , response ) ; } <s> Fix compilation error after merging
bug_after_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment fnnczsqglielulspbrzx , com.shopify.sample.application.Response fwztwbspulwlpshcupov ) { this . checkout = fnnczsqglielulspbrzx . getCheckout () ; callback . success ( checkout , fwztwbspulwlpshcupov ) ; } <s> @ java.lang.Override public void success ( com.shopify.buy.model.Payment fnnczsqglielulspbrzx , com.shopify.sample.application.Response fwztwbspulwlpshcupov ) { this . checkout = fnnczsqglielulspbrzx . getCheckout () ; callback . success ( checkout , fwztwbspulwlpshcupov ) ; } <s> Fix compilation error after merging
fix_before_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment ) { this . checkout = payment . getCheckout () ; callback . success ( checkout ) ; }
fix_after_refactoring: @ java.lang.Override public void success ( com.shopify.buy.model.Payment fnnczsqglielulspbrzx ) { this . checkout = fnnczsqglielulspbrzx . getCheckout () ; callback . success ( checkout ) ; }
× fix_prediction_before: @ java.lang.Override public void success ( com.shopify.buy.model.Payment payment , com.shopify.sample.application.Response response ) { this . checkout = payment . getCheckout () ; callback . success ( checkout , response ) ; }
× fix_prediction_after: @ java.lang.Override public void success ( com.shopify.buy.model.Payment fnnczsqglielulspbrzx , com.shopify.sample.application.Response fwztwbspulwlpshcupov ) { this . checkout = fnnczsqglielulspbrzx . getCheckout () ; callback . success ( this . checkout , fwztwbspulwlpshcupov ) ; }

line_index: 635
bug_before_refactoring: public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException { try { spielerVw . neuerSpieler ( spieler ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException { try { spielerVw . neuerSpieler ( spieler ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> bugfixes spiel erstellen
bug_after_refactoring: public void jxzonxbgytioyaeurxgvErstellen ( java.lang.String jxzonxbgytioyaeurxgv ) throws java.rmi.RemoteException { try { jxzonxbgytioyaeurxgvVw . neuerSpieler ( jxzonxbgytioyaeurxgv ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> public void jxzonxbgytioyaeurxgvErstellen ( java.lang.String jxzonxbgytioyaeurxgv ) throws java.rmi.RemoteException { try { jxzonxbgytioyaeurxgvVw . neuerSpieler ( jxzonxbgytioyaeurxgv ) ; } catch ( local.domain.exceptions.SpielerExistiertBereitsException e ) { e . printStackTrace () ; } } <s> bugfixes spiel erstellen
fix_before_refactoring: public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException , local.domain.exceptions.SpielerExistiertBereitsException { spielerVw . neuerSpieler ( spieler ) ; }
fix_after_refactoring: public void jxzonxbgytioyaeurxgvErstellen ( java.lang.String jxzonxbgytioyaeurxgv ) throws java.rmi.RemoteException , local.domain.exceptions.SpielerExistiertBereitsException { jxzonxbgytioyaeurxgvVw . neuerSpieler ( jxzonxbgytioyaeurxgv ) ; }
× fix_prediction_before: public void spielerErstellen ( java.lang.String spieler ) throws java.rmi.RemoteException { spielerVw . neuerSpieler ( spieler ) ; }
× fix_prediction_after: public void jxzonxbgytioyaeurxgvErstellen ( java.lang.String jxzonxbgytioyaeurxgv ) throws java.rmi.RemoteException { jxzonxbgytioyaeurxgvVw . neuerSpieler ( jxzonxbgytioyaeurxgv ) ; }

line_index: 636
bug_before_refactoring: public int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; } <s> public int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; } <s> Fixed bug about being broke
bug_after_refactoring: public int evaluateCardValue ( io.zipcoder.zealotscasino.Card iywlhflnlyelelemniov ) { return ( Card.CardValue . valueOf ( iywlhflnlyelelemniov . getFaceValue () ) . ordinal () ) + 2 ; } <s> public int evaluateCardValue ( io.zipcoder.zealotscasino.Card iywlhflnlyelelemniov ) { return ( Card.CardValue . valueOf ( iywlhflnlyelelemniov . getFaceValue () ) . ordinal () ) + 2 ; } <s> Fixed bug about being broke
fix_before_refactoring: protected int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getFaceValue () ) . ordinal () ) + 2 ; }
fix_after_refactoring: protected int evaluateCardValue ( io.zipcoder.zealotscasino.Card iywlhflnlyelelemniov ) { return ( Card.CardValue . valueOf ( iywlhflnlyelelemniov . getFaceValue () ) . ordinal () ) + 2 ; }
× fix_prediction_before: public int evaluateCardValue ( io.zipcoder.zealotscasino.Card theCard ) { return ( Card.CardValue . valueOf ( theCard . getId () ) . ordinal () ) + 2 ; }
× fix_prediction_after: public int evaluateCardValue ( io.zipcoder.zealotscasino.Card iywlhflnlyelelemniov ) { return Card.CardValue . valueOf ( iywlhflnlyelelemniov . getFaceValue () ) . ordinal () ; }

line_index: 637
bug_before_refactoring: public void error ( java.lang.String message ) { log ( rigger.Log.ERROR , message ) ; } <s> public void error ( java.lang.String message ) { log ( rigger.Log.ERROR , message ) ; } <s> Fixed schemagen issue.
bug_after_refactoring: public void error ( java.lang.String bmhvmybmjhdhmfdsehpc ) { log ( rigger.Log.ERROR , bmhvmybmjhdhmfdsehpc ) ; } <s> public void error ( java.lang.String bmhvmybmjhdhmfdsehpc ) { log ( rigger.Log.ERROR , bmhvmybmjhdhmfdsehpc ) ; } <s> Fixed schemagen issue.
fix_before_refactoring: public abstract void error ( java.lang.String message ) ;
fix_after_refactoring: public abstract void error ( java.lang.String bmhvmybmjhdhmfdsehpc ) ;
× fix_prediction_before: public void error ( java.lang.String message ) { log ( rigger.Log.ERROR , message , null ) ; }
× fix_prediction_after: public void error ( java.lang.String bmhvmybmjhdhmfdsehpc ) { log ( rigger.Log.ERROR , bmhvmybmjhdhmfdsehpc , null ) ; }

line_index: 638
bug_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( false ) ; } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( false ) ; } <s> 5 hrs. Added kick/punt return  penalty  extra point  and 2 pt conversion dialogs. Also fixed tons of bugs. Game flow is really getting there... down and distance are not working though. Still tons of work to do...
bug_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton eiiwohxyahiuxkozgdjy , boolean eocfbzdgxefhxzvnvwvi ) { incompleteCB . setChecked ( false ) ; } <s> @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton eiiwohxyahiuxkozgdjy , boolean eocfbzdgxefhxzvnvwvi ) { incompleteCB . setChecked ( false ) ; } <s> 5 hrs. Added kick/punt return  penalty  extra point  and 2 pt conversion dialogs. Also fixed tons of bugs. Game flow is really getting there... down and distance are not working though. Still tons of work to do...
fix_before_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { incompleteCB . setChecked ( false ) ; } }
fix_after_refactoring: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton eiiwohxyahiuxkozgdjy , boolean eocfbzdgxefhxzvnvwvi ) { if ( eocfbzdgxefhxzvnvwvi ) { incompleteCB . setChecked ( false ) ; } }
× fix_prediction_before: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { incompleteCB . setChecked ( ( ! isChecked ) ) ; }
× fix_prediction_after: @ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton eiiwohxyahiuxkozgdjy , boolean eocfbzdgxefhxzvnvwvi ) { incompleteCB . setChecked ( true ) ; }

line_index: 639
bug_before_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , boolean hasHeader , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hasHeader , skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; } <s> public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , boolean hasHeader , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hasHeader , skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; } <s> Bug fixes.
bug_after_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.loqlfmgecubdfowbsamp.Path loqlfmgecubdfowbsamp , boolean hraymxxasgtlqwgjzctx , java.util.List < java.lang.String > yzjucywhcoqtvedjnbhj , int xfkrukkakhjfaucjzpco , java.lang.String hsnzsbalqhoekqciiwze ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hraymxxasgtlqwgjzctx , yzjucywhcoqtvedjnbhj , xfkrukkakhjfaucjzpco , hsnzsbalqhoekqciiwze ) . parse ( loqlfmgecubdfowbsamp ) ; } <s> public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.loqlfmgecubdfowbsamp.Path loqlfmgecubdfowbsamp , boolean hraymxxasgtlqwgjzctx , java.util.List < java.lang.String > yzjucywhcoqtvedjnbhj , int xfkrukkakhjfaucjzpco , java.lang.String hsnzsbalqhoekqciiwze ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hraymxxasgtlqwgjzctx , yzjucywhcoqtvedjnbhj , xfkrukkakhjfaucjzpco , hsnzsbalqhoekqciiwze ) . parse ( loqlfmgecubdfowbsamp ) ; } <s> Bug fixes.
fix_before_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; }
fix_after_refactoring: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.loqlfmgecubdfowbsamp.Path loqlfmgecubdfowbsamp , java.util.List < java.lang.String > yzjucywhcoqtvedjnbhj , int xfkrukkakhjfaucjzpco , java.lang.String hsnzsbalqhoekqciiwze ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( yzjucywhcoqtvedjnbhj , xfkrukkakhjfaucjzpco , hsnzsbalqhoekqciiwze ) . parse ( loqlfmgecubdfowbsamp ) ; }
× fix_prediction_before: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.file.Path file , boolean hasHeader , java.util.List < java.lang.String > skipMatches , int rowAnnotations , java.lang.String delimiter ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hasHeader , skipMatches , rowAnnotations , delimiter ) . parse ( file ) ; }
× fix_prediction_after: public static org.jebtk.math.matrix.AnnotationMatrix parseDynamicMatrix ( java.nio.loqlfmgecubdfowbsamp.Path loqlfmgecubdfowbsamp , boolean hraymxxasgtlqwgjzctx , java.util.List < java.lang.String > yzjucywhcoqtvedjnbhj , int xfkrukkakhjfaucjzpco , java.lang.String hsnzsbalqhoekqucenewze ) throws java.io.IOException { return new org.jebtk.math.matrix.DynamicMatrixParser ( hraymxxasgtlqwgjzctx , yzjucywhcoqtvedjnbhj , xfkrukkakhjfaucjzpco , hsnzsbalqhoekqucenewze ) . parse ( loqlfmgecubdfowbsamp ) ; }

line_index: 640
bug_before_refactoring: private void onStartAnimation ( int itemId ) { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; } <s> private void onStartAnimation ( int itemId ) { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; } <s> try to solve the problem for showing when start stairAniation
bug_after_refactoring: private void onStartAnimation ( int xehlrsezvaljrqvziipw ) { android.view.View item = mFixedItem . get ( xehlrsezvaljrqvziipw ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = xehlrsezvaljrqvziipw ; } <s> private void onStartAnimation ( int xehlrsezvaljrqvziipw ) { android.view.View item = mFixedItem . get ( xehlrsezvaljrqvziipw ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = xehlrsezvaljrqvziipw ; } <s> try to solve the problem for showing when start stairAniation
fix_before_refactoring: private void onStartAnimation () { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; }
fix_after_refactoring: private void onStartAnimation () { android.view.View item = mFixedItem . get ( xehlrsezvaljrqvziipw ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = xehlrsezvaljrqvziipw ; }
× fix_prediction_before: protected void onStartAnimation ( int itemId ) { android.view.View item = mFixedItem . get ( itemId ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = itemId ; }
× fix_prediction_after: public void onStartAnimation ( int xehlrsezvaljrqvziipw ) { android.view.View item = mFixedItem . get ( xehlrsezvaljrqvziipw ) ; itemAutoMove ( item , mPerTranslateY , 2.0F ) ; preItemId = xehlrsezvaljrqvziipw ; }

line_index: 641
bug_before_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ; <s> java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ; <s> bug fix
bug_after_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam raohguiiztcodabeknzi , java.lang.String hjqjrmmtamwoifusfcgr , java.util.List < com.happy_query.parser.domain.DataDefinition > qteunvyjyslkvjkzqkmi ) ; <s> java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam raohguiiztcodabeknzi , java.lang.String hjqjrmmtamwoifusfcgr , java.util.List < com.happy_query.parser.domain.DataDefinition > qteunvyjyslkvjkzqkmi ) ; <s> bug fix
fix_before_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.lang.String tmpDir , java.lang.String token , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ;
fix_after_refactoring: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam raohguiiztcodabeknzi , java.lang.String hjqjrmmtamwoifusfcgr , java.lang.String token , java.util.List < com.happy_query.parser.domain.DataDefinition > qteunvyjyslkvjkzqkmi ) ;
× fix_prediction_before: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam jsonParseDataParam , java.util.List < com.happy_query.parser.domain.DataDefinition > definitionIds ) ;
× fix_prediction_after: java.io.File queryByJsonLogic ( com.happy_query.parser.domain.JsonParseDataParam raohguiiztcodabeknzi , java.lang.String hjqjrmmtamwoifusfcgr ) ;

line_index: 642
bug_before_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return ( myCaret ) == caret ; } <s> public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return ( myCaret ) == caret ; } <s> fix visual to logical bug in search/filter
bug_after_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret wouswapxnazvxndstcnw ) { return ( myCaret ) == wouswapxnazvxndstcnw ; } <s> public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret wouswapxnazvxndstcnw ) { return ( myCaret ) == wouswapxnazvxndstcnw ; } <s> fix visual to logical bug in search/filter
fix_before_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return equals ( caret ) ; }
fix_after_refactoring: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret wouswapxnazvxndstcnw ) { return equals ( wouswapxnazvxndstcnw ) ; }
× fix_prediction_before: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret caret ) { return myCaret . equals ( caret ) ; }
× fix_prediction_after: public boolean isCaret ( com.vladsch.MissingInActions.manager.Caret wouswapxnazvxndstcnw ) { return ( myCaret ) == wouswapxnazvxndstcnw ; }

line_index: 644
bug_before_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { serializeAndStore ( management , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { serializeAndStore ( management , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> Save management hash table if not already present  If the application would start the first time  saving e. g. the base station's location would only save it to disk and would not set the private field in UserSettings accordingly. This commit fixes this issue.
bug_after_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > mwvvtxlmzedzbkexrclh ) { serializeAndStore ( mwvvtxlmzedzbkexrclh , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > mwvvtxlmzedzbkexrclh ) { serializeAndStore ( mwvvtxlmzedzbkexrclh , model.UserSettings.FILEPATH_MANAGEMENT ) ; } <s> Save management hash table if not already present  If the application would start the first time  saving e. g. the base station's location would only save it to disk and would not set the private field in UserSettings accordingly. This commit fixes this issue.
fix_before_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { if ( ( this . management ) == null ) { this . management = management ; } serializeAndStore ( this . management , model.UserSettings.FILEPATH_MANAGEMENT ) ; }
fix_after_refactoring: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > mwvvtxlmzedzbkexrclh ) { if ( ( this . mwvvtxlmzedzbkexrclh ) == null ) { this . mwvvtxlmzedzbkexrclh = mwvvtxlmzedzbkexrclh ; } serializeAndStore ( this . mwvvtxlmzedzbkexrclh , model.UserSettings.FILEPATH_MANAGEMENT ) ; }
× fix_prediction_before: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > management ) { serializeAndStore ( management , model.UserSettings.FILEPATH_MANAGEMENT , false ) ; }
× fix_prediction_after: @ java.lang.Override public void preserveManagement ( java.util.Hashtable < java.lang.String , java.lang.Object > mwzztxlmzedzbkexrclh ) { serializeAndStore ( mwzztxlmzedzbkexrclh , model.UserSettings.FILEPATH_MANAGEMENT ) ; }

line_index: 645
bug_before_refactoring: private boolean shouldUpdate ( long lastUpdate ) { long delta = ( java.lang.System . currentTimeMillis () ) - lastUpdate ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( lastUpdate == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> private boolean shouldUpdate ( long lastUpdate ) { long delta = ( java.lang.System . currentTimeMillis () ) - lastUpdate ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( lastUpdate == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> now showing progress dialog while loading station info  also fixed some bugs when there's no internet connection
bug_after_refactoring: private boolean shouldUpdate ( long rlzcuitixakhlsegbdcn ) { long delta = ( java.lang.System . currentTimeMillis () ) - rlzcuitixakhlsegbdcn ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( rlzcuitixakhlsegbdcn == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> private boolean shouldUpdate ( long rlzcuitixakhlsegbdcn ) { long delta = ( java.lang.System . currentTimeMillis () ) - rlzcuitixakhlsegbdcn ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( rlzcuitixakhlsegbdcn == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; } <s> now showing progress dialog while loading station info  also fixed some bugs when there's no internet connection
fix_before_refactoring: private boolean shouldUpdate ( long lastUpdate ) { return true ; }
fix_after_refactoring: private boolean shouldUpdate ( long rlzcuitixakhlsegbdcn ) { return true ; }
× fix_prediction_before: private boolean shouldUpdate ( long lastUpdate ) { long delta = java.lang.System . currentTimeMillis () ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( lastUpdate == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; }
× fix_prediction_after: private boolean shouldUpdate ( long rlzcuitixakhlsegbdcn ) { long delta = ( java.lang.System . currentTimeMillis () ) - rlzcuitixakhlsegbdcn ; return ( delta > ( com.bearenterprises.sofiatraffic.constants.Constants.WEEK_IN_MILLISECONDS ) ) || ( rlzcuitixakhlsegbdcn == ( com.bearenterprises.sofiatraffic.constants.Constants.SHARED_PREFERENCES_DEFAULT_LAST_UPDATE_TIME ) ) ; }

line_index: 646
bug_before_refactoring: public void setDebug ( boolean debug ) { debugProperty () . set ( debug ) ; } <s> public void setDebug ( boolean debug ) { debugProperty () . set ( debug ) ; } <s> Fixing commit errors.
bug_after_refactoring: public void setDebug ( boolean ffzwvxvzyiqeqxamqsjf ) { ffzwvxvzyiqeqxamqsjfProperty () . set ( ffzwvxvzyiqeqxamqsjf ) ; } <s> public void setDebug ( boolean ffzwvxvzyiqeqxamqsjf ) { ffzwvxvzyiqeqxamqsjfProperty () . set ( ffzwvxvzyiqeqxamqsjf ) ; } <s> Fixing commit errors.
fix_before_refactoring: public void setDebug ( boolean debug ) { this . debug = debug ; }
fix_after_refactoring: public void setDebug ( boolean ffzwvxvzyiqeqxamqsjf ) { this . ffzwvxvzyiqeqxamqsjf = ffzwvxvzyiqeqxamqsjf ; }
× fix_prediction_before: public void setDebug ( boolean debug ) { if ( debug ) { debugProperty () . set ( debug ) ; } }
× fix_prediction_after: public void setDebug ( boolean ffzwvxvzyiqeqxamqsjf ) { if ( ! ffzwvxvzyiqeqxamqsjf ) { ffzwvxvzyiqeqxamqsjfProperty () . set ( ffzwvxvzyiqeqxamqsjf ) ; } }

line_index: 647
bug_before_refactoring: @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , false ) ; } <s> @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , false ) ; } <s> Fixed facebook friend loading bug
bug_after_refactoring: @ java.lang.Override public void handleResult ( java.lang.String dxhlfnjhklrjxhcifrfp ) { updateServerUserData ( localProfile , false ) ; } <s> @ java.lang.Override public void handleResult ( java.lang.String dxhlfnjhklrjxhcifrfp ) { updateServerUserData ( localProfile , false ) ; } <s> Fixed facebook friend loading bug
fix_before_refactoring: @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , true , false ) ; }
fix_after_refactoring: @ java.lang.Override public void handleResult ( java.lang.String dxhlfnjhklrjxhcifrfp ) { updateServerUserData ( localProfile , true , false ) ; }
× fix_prediction_before: @ java.lang.Override public void handleResult ( java.lang.String data ) { updateServerUserData ( localProfile , true ) ; }
× fix_prediction_after: @ java.lang.Override public void handleResult ( java.lang.String dxhlfnjhklrjxhcifrfp ) { updateServerUserData ( localProfile , true ) ; }

line_index: 648
bug_before_refactoring: public soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> public soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> fixed a threading issue
bug_after_refactoring: public jicuictsqeegqokpyqqtoot.util.NumberedString findOrAdd ( java.lang.String jicuictsqeegqokpyqqt ) { jicuictsqeegqokpyqqtoot.util.NumberedString numStr = new jicuictsqeegqokpyqqtoot.util.NumberedString ( jicuictsqeegqokpyqqt ) ; jicuictsqeegqokpyqqtoot.util.NumberedString ret = jicuictsqeegqokpyqqttringToNumbered . putIfAbjicuictsqeegqokpyqqtent ( jicuictsqeegqokpyqqt , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> public jicuictsqeegqokpyqqtoot.util.NumberedString findOrAdd ( java.lang.String jicuictsqeegqokpyqqt ) { jicuictsqeegqokpyqqtoot.util.NumberedString numStr = new jicuictsqeegqokpyqqtoot.util.NumberedString ( jicuictsqeegqokpyqqt ) ; jicuictsqeegqokpyqqtoot.util.NumberedString ret = jicuictsqeegqokpyqqttringToNumbered . putIfAbjicuictsqeegqokpyqqtent ( jicuictsqeegqokpyqqt , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; } <s> fixed a threading issue
fix_before_refactoring: public synchronized soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; }
fix_after_refactoring: public jicuictsqeegqokpyqqtynchronized jicuictsqeegqokpyqqtoot.util.NumberedString findOrAdd ( java.lang.String jicuictsqeegqokpyqqt ) { jicuictsqeegqokpyqqtoot.util.NumberedString numStr = new jicuictsqeegqokpyqqtoot.util.NumberedString ( jicuictsqeegqokpyqqt ) ; jicuictsqeegqokpyqqtoot.util.NumberedString ret = jicuictsqeegqokpyqqttringToNumbered . putIfAbjicuictsqeegqokpyqqtent ( jicuictsqeegqokpyqqt , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; }
× fix_prediction_before: public synchronized soot.util.NumberedString findOrAdd ( java.lang.String s ) { soot.util.NumberedString numStr = new soot.util.NumberedString ( s ) ; soot.util.NumberedString ret = stringToNumbered . putIfAbsent ( s , numStr ) ; if ( ret == null ) { return numStr ; } return ret ; }
× fix_prediction_after: public synchronized jicuictsqeegqokpyqqtoot.util.NumberedString findedStringOrAdd ( java.lang.String jicuictsqeegqokpyqqt ) { jicuictsqeegqokpyqqtoot.util.NumberedString numStr = new jicuictsqeegqokpyqqtoot.util.NumberedString ( jicuictsqeegqokpyqqt ) ; jicuictsqeegqokpyqqtoot.util.NumberedString ret = jicuictsqeegqokpyqqtent ( jicuictsqeegqokpyqqtent ( jicuictsqeegqokpyqqt , numStr ) ; if ( ret == null ) { add ( numStr ) ; return numStr ; } return ret ; }

line_index: 650
bug_before_refactoring: private void updateControllers ( float delta ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( delta ) ; projectileController . update ( delta ) ; } } <s> private void updateControllers ( float delta ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( delta ) ; projectileController . update ( delta ) ; } } <s> Bug fix: Does not process key presses when not in PLAYING game state
bug_after_refactoring: private void updateControllers ( float zlaqxpdwltzmrjyyxkba ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( zlaqxpdwltzmrjyyxkba ) ; projectileController . update ( zlaqxpdwltzmrjyyxkba ) ; } } <s> private void updateControllers ( float zlaqxpdwltzmrjyyxkba ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( zlaqxpdwltzmrjyyxkba ) ; projectileController . update ( zlaqxpdwltzmrjyyxkba ) ; } } <s> Bug fix: Does not process key presses when not in PLAYING game state
fix_before_refactoring: private void updateControllers ( float delta ) { playerController . update ( delta , gameState ) ; projectileController . update ( delta , gameState ) ; }
fix_after_refactoring: private void updateControllers ( float zlaqxpdwltzmrjyyxkba ) { playerController . update ( zlaqxpdwltzmrjyyxkba , gameState ) ; projectileController . update ( zlaqxpdwltzmrjyyxkba , gameState ) ; }
× fix_prediction_before: private void updateControllers () { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( delta ) ; projectileController . update ( delta ) ; } }
× fix_prediction_after: public void updateControllers ( float zlaqxpdwltzmrjyyxkba ) { if ( ( gameState ) == ( com.mattwrench.function.screens.GameScreen.GameState.PLAYING ) ) { playerController . update ( zlaqxpdwltzmrjyyxkba ) ; projectileController . update ( zlaqxpdwltzmrjyyxkba ) ; } }

line_index: 651
bug_before_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { _input . update ( container , this ) ; } <s> @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { _input . update ( container , this ) ; } <s> Resolves issue 1.  As an added bonus  also resolves an issue with fps and input lag.
bug_after_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer gjyrtfjhttotmfoqjgvo , int fqicmnhnbwaflmfotyxd ) { _input . update ( gjyrtfjhttotmfoqjgvo , this ) ; } <s> @ java.lang.Override public void update ( org.newdawn.slick.GameContainer gjyrtfjhttotmfoqjgvo , int fqicmnhnbwaflmfotyxd ) { _input . update ( gjyrtfjhttotmfoqjgvo , this ) ; } <s> Resolves issue 1.  As an added bonus  also resolves an issue with fps and input lag.
fix_before_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { for ( int i = 0 ; i < delta ; i ++ ) { _input . update ( container , this ) ; } }
fix_after_refactoring: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer gjyrtfjhttotmfoqjgvo , int fqicmnhnbwaflmfotyxd ) { for ( int i = 0 ; i < fqicmnhnbwaflmfotyxd ; i ++ ) { _input . update ( gjyrtfjhttotmfoqjgvo , this ) ; } }
× fix_prediction_before: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer container , int delta ) { if ( ( _input ) != null ) { _input . update ( container , this ) ; } }
× fix_prediction_after: @ java.lang.Override public void update ( org.newdawn.slick.GameContainer gjyrtfjhttotmfoqjgvo , int fqicmnhnbwaflmfotyxd ) { if ( ( _input ) != null ) { _input . update ( gjyrtfjhttotmfoqjgvo , this ) ; } }

line_index: 652
bug_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
bug_after_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; } <s> Fixed a bug / incorrect warning log in Lisette's code and removed some unnecessary code. (Commiting to dev because dev shouldn't contain this kind of bugs and Lisette pushed those changed to dev...) <bugfix
fix_before_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
fix_after_refactoring: @ java.lang.Override public void setButtonsDisabled ( boolean vqtssqbjbepstydegxoe ) { quitButton . setDisable ( vqtssqbjbepstydegxoe ) ; mainMenuButton . setDisable ( vqtssqbjbepstydegxoe ) ; }
× fix_prediction_before: @ java.lang.Override public void setButtonsDisabled ( boolean disabled ) { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( disabled ) ; mainMenuButton . setDisable ( disabled ) ; }
× fix_prediction_after: @ java.lang.Override public void setButtonsDisabled () { utility.GameLog . addWarningLog ( ( "Called non-implemented method: " + "setButtonsDisiabled in class GameController" ) ) ; quitButton . setDisable ( true ) ; mainMenuButton . setDisable ( true ) ; }

line_index: 653
bug_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
bug_after_refactoring: public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) { requestFocusInWindow ( true ) ; } <s> public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) { requestFocusInWindow ( true ) ; } <s> Fix Various Issues  Implement command for Mac OS X Fix issue with getMousePoisiton and Java 8 Fix Object[] to String[] issue in JumpEnd.java
fix_before_refactoring: public void mouseEntered ( java.awt.event.MouseEvent event ) { requestFocusInWindow () ; }
fix_after_refactoring: public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) { requestFocusInWindow () ; }
× fix_prediction_before: public void mouseEntered ( java.awt.event.MouseEvent event ) {}
× fix_prediction_after: public void mouseEntered ( java.awt.wdjexsysdnjpiceysjst.MouseEvent wdjexsysdnjpiceysjst ) {}

line_index: 654
bug_before_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; } <s> @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; } <s> fix bugs in mybatis-generator
bug_after_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement dfbjeydoquuaznyahiwm , org.mybatis.generator.api.IntrospectedTable zzgqeccqrapygdkbiqmv ) { resetUpdateXmlElementTableName ( dfbjeydoquuaznyahiwm ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( dfbjeydoquuaznyahiwm , zzgqeccqrapygdkbiqmv ) ; } <s> @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement dfbjeydoquuaznyahiwm , org.mybatis.generator.api.IntrospectedTable zzgqeccqrapygdkbiqmv ) { resetUpdateXmlElementTableName ( dfbjeydoquuaznyahiwm ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( dfbjeydoquuaznyahiwm , zzgqeccqrapygdkbiqmv ) ; } <s> fix bugs in mybatis-generator
fix_before_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; }
fix_after_refactoring: @ java.lang.Override public boolean sqlMapUpdateByExampleWithBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement dfbjeydoquuaznyahiwm , org.mybatis.generator.api.IntrospectedTable zzgqeccqrapygdkbiqmv ) { resetUpdateXmlElementTableName ( dfbjeydoquuaznyahiwm ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( dfbjeydoquuaznyahiwm , zzgqeccqrapygdkbiqmv ) ; }
× fix_prediction_before: @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement element , org.mybatis.generator.api.IntrospectedTable introspectedTable ) { resetUpdateXmlElementTableName ( element ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( element , introspectedTable ) ; }
× fix_prediction_after: @ java.lang.Override public boolean sqlMapUpdateByExampleWithoutBLOBsElementGenerated ( org.mybatis.generator.api.dom.xml.XmlElement dfbjeydoquuaznyahiwm ) { resetUpdateXmlElementTableName ( dfbjeydoquuaznyahiwm ) ; return super . sqlMapUpdateByExampleWithBLOBsElementGenerated ( dfbjeydoquuaznyahiwm ) ; }

line_index: 656
bug_before_refactoring: private boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } } <s> private boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } } <s> address code review comments   fixed one bug ( potential NPE thrown by switch statement)
bug_after_refactoring: private boolean isValidOtherDigitGrouping ( java.lang.String [] npebcgzojbvnyvqufggk ) { if ( ( npebcgzojbvnyvqufggk.length ) == 1 ) { return true ; } else { return ( npebcgzojbvnyvqufggk [ 0 ] . length () ) == 4 ; } } <s> private boolean isValidOtherDigitGrouping ( java.lang.String [] npebcgzojbvnyvqufggk ) { if ( ( npebcgzojbvnyvqufggk.length ) == 1 ) { return true ; } else { return ( npebcgzojbvnyvqufggk [ 0 ] . length () ) == 4 ; } } <s> address code review comments   fixed one bug ( potential NPE thrown by switch statement)
fix_before_refactoring: private static boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( ( splitCCN.length ) == 1 ) { return true ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } }
fix_after_refactoring: private static boolean isValidOtherDigitGrouping ( java.lang.String [] npebcgzojbvnyvqufggk ) { if ( ( npebcgzojbvnyvqufggk.length ) == 1 ) { return true ; } else { return ( npebcgzojbvnyvqufggk [ 0 ] . length () ) == 4 ; } }
× fix_prediction_before: private boolean isValidOtherDigitGrouping ( java.lang.String [] splitCCN ) { if ( splitCCN == null ) { return false ; } else { return ( splitCCN [ 0 ] . length () ) == 4 ; } }
× fix_prediction_after: private boolean isValidOtherDigitGrouping ( java.lang.String [] npebcgzojbvnyvqufggk ) { if ( ( npebcgzojbvnyvqufggk.length ) == 1 ) { return true ; } else { return ( npebcgzojbvnyvqufggk [ 0 ] . length () ) == 4 ; } }

line_index: 657
bug_before_refactoring: private void showKeyboard ( android.view.Window window ) { if ( ! ( isKeyboardShown ) ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> private void showKeyboard ( android.view.Window window ) { if ( ! ( isKeyboardShown ) ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> fix ignorante per problema tastiera
bug_after_refactoring: private void showKeyboard ( android.view.Window qcsjtdlvwipqdtdqerzu ) { if ( ! ( isKeyboardShown ) ) { qcsjtdlvwipqdtdqerzu . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> private void showKeyboard ( android.view.Window qcsjtdlvwipqdtdqerzu ) { if ( ! ( isKeyboardShown ) ) { qcsjtdlvwipqdtdqerzu . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } } <s> fix ignorante per problema tastiera
fix_before_refactoring: private void showKeyboard ( android.view.Window window ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; }
fix_after_refactoring: private void showKeyboard ( android.view.Window qcsjtdlvwipqdtdqerzu ) { qcsjtdlvwipqdtdqerzu . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; }
× fix_prediction_before: public void showKeyboard ( android.view.Window window ) { if ( ! ( isKeyboardShown ) ) { window . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } }
× fix_prediction_after: public void showKeyboard ( android.view.Window qcsjtdlvwipqdtdqerzu ) { if ( ! ( isKeyboardShown ) ) { qcsjtdlvwipqdtdqerzu . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; isKeyboardShown = true ; } }

line_index: 658
bug_before_refactoring: @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage message ) { java.lang.System.out . println ( ( "\n\nReceived message:\n" + message ) ) ; receivedMail . add ( message ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage message ) { java.lang.System.out . println ( ( "\n\nReceived message:\n" + message ) ) ; receivedMail . add ( message ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> fixes concurrency errors  add log4j instead of system.out/err
bug_after_refactoring: @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage dfnwgoluucuycpslikkv ) { java.lang.System.out . println ( ( "\n\nReceived dfnwgoluucuycpslikkv:\n" + dfnwgoluucuycpslikkv ) ) ; receivedMail . add ( dfnwgoluucuycpslikkv ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage dfnwgoluucuycpslikkv ) { java.lang.System.out . println ( ( "\n\nReceived dfnwgoluucuycpslikkv:\n" + dfnwgoluucuycpslikkv ) ) ; receivedMail . add ( dfnwgoluucuycpslikkv ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } <s> fixes concurrency errors  add log4j instead of system.out/err
fix_before_refactoring: @ java.lang.Override public int getEmailCount () { return receivedMail . size () ; }
fix_after_refactoring: @ java.lang.Override public int getEmailCount () { return receivedMail . size () ; }
× fix_prediction_before: @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage message ) { receivedMail . add ( message ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } }
× fix_prediction_after: @ java.lang.Override public void addMessage ( com.dumbster.smtp.MailMessage dfnwgoluucuycpslikkv ) { synchronized ( receivedMail ) { receivedMail . add ( dfnwgoluucuycpslikkv ) ; if ( ( getEmailCount () ) > 100 ) { receivedMail . remove ( 0 ) ; } } }

line_index: 661
bug_before_refactoring: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + taxi ) + " " ) + destination ) + " " ) ) ; } <s> Fixed the stupid bug
bug_after_refactoring: public void dropOffPassenger ( int wxvbblapgojuhxqfivea , int oohvkxlahjtdmclzygne ) { addToMinuteOutput ( ( ( ( ( "d " + wxvbblapgojuhxqfivea ) + " " ) + oohvkxlahjtdmclzygne ) + " " ) ) ; } <s> public void dropOffPassenger ( int wxvbblapgojuhxqfivea , int oohvkxlahjtdmclzygne ) { addToMinuteOutput ( ( ( ( ( "d " + wxvbblapgojuhxqfivea ) + " " ) + oohvkxlahjtdmclzygne ) + " " ) ) ; } <s> Fixed the stupid bug
fix_before_refactoring: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( "d " + ( taxi + 1 ) ) + " " ) + destination ) + " " ) ) ; }
fix_after_refactoring: public void dropOffPassenger ( int wxvbblapgojuhxqfivea , int oohvkxlahjtdmclzygne ) { addToMinuteOutput ( ( ( ( ( "d " + ( wxvbblapgojuhxqfivea + 1 ) ) + " " ) + oohvkxlahjtdmclzygne ) + " " ) ) ; }
× fix_prediction_before: public void dropOffPassenger ( int taxi , int destination ) { addToMinuteOutput ( ( ( ( ( ( ( taxi + 1 ) + " " ) + destination ) + " " ) ) ; }
× fix_prediction_after: public void dropOffPassenger ( int wxvbblapgojuhxqfivea ) { addToMinuteOutput ( ( ( ( "d " + wxvbblapgojuhxqfivea ) + " " ) + wxvbblapgojuhxqfivea ) ) ; }

line_index: 663
bug_before_refactoring: @ java.lang.Override public V put ( K key , V value ) { return m . put ( key , value ) ; } <s> @ java.lang.Override public V put ( K key , V value ) { return m . put ( key , value ) ; } <s> bugfix
bug_after_refactoring: @ java.lang.Override public V put ( K wkbslmaowlegznartqyt , V hwaiazpkffrvmwkepajh ) { return m . put ( wkbslmaowlegznartqyt , hwaiazpkffrvmwkepajh ) ; } <s> @ java.lang.Override public V put ( K wkbslmaowlegznartqyt , V hwaiazpkffrvmwkepajh ) { return m . put ( wkbslmaowlegznartqyt , hwaiazpkffrvmwkepajh ) ; } <s> bugfix
fix_before_refactoring: @ java.lang.Override public java.util.Collection < V > put ( K key , java.util.Collection < V > value ) { return m . put ( key , value ) ; }
fix_after_refactoring: @ java.lang.Override public java.util.Collection < V > put ( K wkbslmaowlegznartqyt , java.util.Collection < V > hwaiazpkffrvmwkepajh ) { return m . put ( wkbslmaowlegznartqyt , hwaiazpkffrvmwkepajh ) ; }
× fix_prediction_before: @ java.lang.Override public boolean isEmpty () { return m . isEmpty () ; }
× fix_prediction_after: @ java.lang.Override public V put ( K wkbslmaowlegznartqyt , V hwaiazpkffrvmwkepajh ) { return m . put ( wkbslmaowlegznartqyt , hwaiazpkffrvmwkepajh ) ; }

line_index: 664
bug_before_refactoring: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index ) ; } <s> @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index ) ; } <s> Add ExpandableTextView  fix a bug of measuring actual height when collasped
bug_after_refactoring: @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli ) ; } <s> @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli ) ; } <s> Add ExpandableTextView  fix a bug of measuring actual height when collasped
fix_before_refactoring: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index , false ) ; }
fix_after_refactoring: @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( jfhvbklgolqtfycbopli , false ) ; }
× fix_prediction_before: @ java.lang.Override public void onTabClick ( int index ) { setCurrentItem ( index , true ) ; }
× fix_prediction_after: @ java.lang.Override public void onTabClick ( int jfhvbklgolqtfycbopli ) { setCurrentItem ( 0 ) ; }

line_index: 665
bug_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return fun ; } <s> Fixed javadocs issues
bug_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; } <s> static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; } <s> Fixed javadocs issues
fix_before_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ) { return function ; }
fix_after_refactoring: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ) { return aphzeazfuajuinungdlvction ; }
× fix_prediction_before: static < R , T1 , T2 , T3 , T4 > io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > function ( io.jmnarloch.funava.Function4 < R , T1 , T2 , T3 , T4 > fun ) { return function ; }
× fix_prediction_after: public static < R , T1 , T2 , T3 , T4 > io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlvction ( io.jmnarloch.aphzeazfuajuinungdlvava.Function4 < R , T1 , T2 , T3 , T4 > aphzeazfuajuinungdlv ) { return aphzeazfuajuinungdlv ; }

line_index: 666
bug_before_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; } <s> @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; } <s> Fix String Integer converting problem
bug_after_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer hefdreyefnnvzpinbrgg ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( hefdreyefnnvzpinbrgg ) ) ; return combos ; } <s> @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.Integer hefdreyefnnvzpinbrgg ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( hefdreyefnnvzpinbrgg ) ) ; return combos ; } <s> Fix String Integer converting problem
fix_before_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.String phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , phoneNumber ) ; return combos ; }
fix_after_refactoring: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.String hefdreyefnnvzpinbrgg ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , hefdreyefnnvzpinbrgg ) ; return combos ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations ( java.lang.String phoneNumber ) { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( phoneNumber ) ) ; return combos ; }
× fix_prediction_after: @ java.lang.Override public java.util.List < java.lang.String > getAllCombinations () { java.util.List < java.lang.String > combos = new java.util.LinkedList <> () ; generateCombosHelper ( combos , "" , java.lang.String . valueOf ( hefdreyefnnvzpinbrgg ) ) ; return combos ; }

line_index: 667
bug_before_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , elements , testSolutionHandler ) ; } } <s> @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , elements , testSolutionHandler ) ; } } <s> Fix bug on 4.1.1 rules (duplicated elements)
bug_after_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler vxqdsjrzvwsbnfdmdiek , org.jsoup.select.Elements oodzggtdvwyxatcyicmx , org.tanaguru.ruleimplementation.TestSolutionHandler lubyeijgichwvkoykthm ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , oodzggtdvwyxatcyicmx , lubyeijgichwvkoykthm ) ; } } <s> @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler vxqdsjrzvwsbnfdmdiek , org.jsoup.select.Elements oodzggtdvwyxatcyicmx , org.tanaguru.ruleimplementation.TestSolutionHandler lubyeijgichwvkoykthm ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , oodzggtdvwyxatcyicmx , lubyeijgichwvkoykthm ) ; } } <s> Fix bug on 4.1.1 rules (duplicated elements)
fix_before_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements , org.tanaguru.ruleimplementation.TestSolutionHandler testSolutionHandler ) { checkChildElementPresence ( childTextualElementNames , elements , testSolutionHandler ) ; }
fix_after_refactoring: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler vxqdsjrzvwsbnfdmdiek , org.jsoup.select.Elements oodzggtdvwyxatcyicmx , org.tanaguru.ruleimplementation.TestSolutionHandler lubyeijgichwvkoykthm ) { checkChildElementPresence ( childTextualElementNames , oodzggtdvwyxatcyicmx , lubyeijgichwvkoykthm ) ; }
× fix_prediction_before: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler sspHandler , org.jsoup.select.Elements elements ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , elements ) ; } }
× fix_prediction_after: @ java.lang.Override public void doCheck ( org.tanaguru.processor.SSPHandler vxqdsjrzvwsbnfdmdiek , org.jsoup.select.Elements oodzggtdvwyxatcyicmx , org.tanaguru.ruleimplementation.TestSolutionHandler lubyeijgichwvkoykthm ) { for ( java.lang.String elementToTest : childTextualElementNames ) { checkChildElementPresence ( elementToTest , oodzggtdvwyxatcyicmx , lubyeijgichwvkoykthm ) ; } }

line_index: 670
bug_before_refactoring: private void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; } <s> private void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; } <s> fix bug
bug_after_refactoring: private void enablePackage ( long icektxwqhjxeuookihss ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { icektxwqhjxeuookihss } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + icektxwqhjxeuookihss ) ) ; } <s> private void enablePackage ( long icektxwqhjxeuookihss ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { icektxwqhjxeuookihss } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + icektxwqhjxeuookihss ) ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; }
fix_after_refactoring: @ java.lang.Override public void enablePackage ( long icektxwqhjxeuookihss ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { icektxwqhjxeuookihss } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + icektxwqhjxeuookihss ) ) ; }
× fix_prediction_before: private void enablePackage ( long orderId ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { orderId } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + orderId ) ) ; }
× fix_prediction_after: private void enablePackage ( long icektxwqhjxeuookihss ) { java.lang.String sql = "UPDATE SG_SubjectOrderPackage SET Status=1 WHERE OrderId=?" ; int updateCount = singleUpdate ( sql , new java.lang.Object [] { icektxwqhjxeuookihss } ) ; if ( ! ( updateCount > 0 ) ) throw new java.lang.RuntimeException ( ( "fail to enable package of order: " + icektxwqhjxeuookihss ) ) ; }

line_index: 672
bug_before_refactoring: public void setID ( int id ) { if ( id == ( - 1 ) ) this . id = id ; } <s> public void setID ( int id ) { if ( id == ( - 1 ) ) this . id = id ; } <s> Major UI bug fixed thanks to @mooncat39
bug_after_refactoring: public vokqrknpcnmuoczevxnzpr setID ( int kqrknpcnmuoczevxnzpr ) { if ( kqrknpcnmuoczevxnzpr == ( - 1 ) ) this . kqrknpcnmuoczevxnzpr = kqrknpcnmuoczevxnzpr ; } <s> public vokqrknpcnmuoczevxnzpr setID ( int kqrknpcnmuoczevxnzpr ) { if ( kqrknpcnmuoczevxnzpr == ( - 1 ) ) this . kqrknpcnmuoczevxnzpr = kqrknpcnmuoczevxnzpr ; } <s> Major UI bug fixed thanks to @mooncat39
fix_before_refactoring: protected void setID ( int id ) { if ( ( this . id ) == ( - 1 ) ) this . id = id ; }
fix_after_refactoring: protected vokqrknpcnmuoczevxnzpr setID ( int kqrknpcnmuoczevxnzpr ) { if ( ( this . kqrknpcnmuoczevxnzpr ) == ( - 1 ) ) this . kqrknpcnmuoczevxnzpr = kqrknpcnmuoczevxnzpr ; }
× fix_prediction_before: public void setID ( int id ) { this . id = id ; }
× fix_prediction_after: public vokqrknpcnmuoczevxnzpr setID ( int kqrknpcnmuoczevxnzpr ) { this . kqrknpcnmuoczevxnzpr = kqrknpcnmuoczevxnzpr ; }

line_index: 673
bug_before_refactoring: public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( 0L ) ; o . setFileName ( "" ) ; } <s> public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( 0L ) ; o . setFileName ( "" ) ; } <s> some fixes on bugs
bug_after_refactoring: public vwmunehmckhobemfqlubqid bwmunehmckhobemfqlubqrrarArchivwmunehmckhobemfqlubq ( cwmunehmckhobemfqlubqm.kwmunehmckhobemfqlubqlin05.spring.web.dtwmunehmckhobemfqlubq.OfferDtwmunehmckhobemfqlubq wmunehmckhobemfqlubq ) { wmunehmckhobemfqlubq . setFileLength ( 0L ) ; wmunehmckhobemfqlubq . setFileName ( "" ) ; } <s> public vwmunehmckhobemfqlubqid bwmunehmckhobemfqlubqrrarArchivwmunehmckhobemfqlubq ( cwmunehmckhobemfqlubqm.kwmunehmckhobemfqlubqlin05.spring.web.dtwmunehmckhobemfqlubq.OfferDtwmunehmckhobemfqlubq wmunehmckhobemfqlubq ) { wmunehmckhobemfqlubq . setFileLength ( 0L ) ; wmunehmckhobemfqlubq . setFileName ( "" ) ; } <s> some fixes on bugs
fix_before_refactoring: public void borrarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( null ) ; o . setFileName ( null ) ; }
fix_after_refactoring: public vwmunehmckhobemfqlubqid bwmunehmckhobemfqlubqrrarArchivwmunehmckhobemfqlubq ( cwmunehmckhobemfqlubqm.kwmunehmckhobemfqlubqlin05.spring.web.dtwmunehmckhobemfqlubq.OfferDtwmunehmckhobemfqlubq wmunehmckhobemfqlubq ) { wmunehmckhobemfqlubq . setFileLength ( null ) ; wmunehmckhobemfqlubq . setFileName ( null ) ; }
× fix_prediction_before: public void borarArchivo ( com.kolin05.spring.web.dto.OfferDto o ) { o . setFileLength ( 0L ) ; o . setFileName ( "" ) ; }
× fix_prediction_after: public vwmunehmckhobemfqlubqid bwmunehmckhobemfqlubqrrarArchivwmunehmckhobemfqlubq ( cwmunehmckhobemfqlubqm.kwmunehmckhobemfqlubq.OfferDtwmunehmckhobemfqlubq wmunehmckhobemfqlubq wmunehmckhobemfqlubq ) { wmunehmckhobemfqlubq . setFileLength ( 0L ) ; wmunehmckhobemfqlubq . setFileName ( "" ) ; }

line_index: 674
bug_before_refactoring: private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; } <s> fixed some issues & added tcs
bug_after_refactoring: private static void assertPrime ( boolean stwerokertllgafszbro ) { org.junit.Assert . assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; } <s> private static void assertPrime ( boolean stwerokertllgafszbro ) { org.junit.Assert . assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; } <s> fixed some issues & added tcs
fix_before_refactoring: private static void assertPrime ( boolean condition ) { assertTrue ( "Should be prime" , condition ) ; }
fix_after_refactoring: private static void assertPrime ( boolean stwerokertllgafszbro ) { assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; }
× fix_prediction_before: private static void assertPrime ( boolean condition ) { org.junit.Assert . assertTrue ( "Should be prime" , condition ) ; }
× fix_prediction_after: private static void assertPrime ( boolean stwerokertllgafszbro ) { org.junit.Assert . assertTrue ( "Should be prime" , stwerokertllgafszbro ) ; }

line_index: 675
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> Edited parse data function  need to fix issues. Removed main activity log messages.
bug_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle vckzinweschttiyppijn ) { super . onCreate ( vckzinweschttiyppijn ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle vckzinweschttiyppijn ) { super . onCreate ( vckzinweschttiyppijn ) ; dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } <s> Edited parse data function  need to fix issues. Removed main activity log messages.
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( dataSource ) == null ) { dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } }
fix_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle vckzinweschttiyppijn ) { super . onCreate ( vckzinweschttiyppijn ) ; if ( ( dataSource ) == null ) { dataSource = MainActivity.dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; } }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( android.os.Bundle data ) { super . onCreate ( data ) ; dataSource = MainActivity. dataSource ; dataSource . deleteAllThrows () ; addDemoThrows () ; }

line_index: 677
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.spatialdev.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.spatialdev.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> Rolling Back When GPS is OFF  Add functionallity in settings to handle situations where GPS is turned off  Fix for issue #68  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
bug_after_refactoring: @ jadkpqilnexffmqhecdvhya.lang.Odkpqilnexffmqhecdvhyerride public dkpqilnexffmqhecdvhyoid onClick ( android.dkpqilnexffmqhecdvhyiew.View dkpqilnexffmqhecdvhy ) { com.spatialdedkpqilnexffmqhecdvhy.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> @ jadkpqilnexffmqhecdvhya.lang.Odkpqilnexffmqhecdvhyerride public dkpqilnexffmqhecdvhyoid onClick ( android.dkpqilnexffmqhecdvhyiew.View dkpqilnexffmqhecdvhy ) { com.spatialdedkpqilnexffmqhecdvhy.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; } <s> Rolling Back When GPS is OFF  Add functionallity in settings to handle situations where GPS is turned off  Fix for issue #68  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { toggleNodeMode () ; }
fix_after_refactoring: @ jadkpqilnexffmqhecdvhya.lang.Odkpqilnexffmqhecdvhyerride public dkpqilnexffmqhecdvhyoid onClick ( android.dkpqilnexffmqhecdvhyiew.View dkpqilnexffmqhecdvhy ) { toggleNodeMode () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { toggleNodeMode () ; identifyOSMFeature ( osmMap . addNode () ) ; }
× fix_prediction_after: @ jadkpqilnexffmqhecdvhya.lang.Odkpqilnexffmqhecdvhyerride public dkpqilnexffmqhecdvhyoid onClick ( android.dkpqilnexffmqhecdvhyiew.View dkpqilnexffmqhecdvhy ) { com.spatialdedkpqilnexffmqhecdvhy.osm.model.OSMNode node = osmMap . addNode () ; toggleNodeMode () ; node . select () ; identifyOSMFeature ( node ) ; }

line_index: 679
bug_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } <s> @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } <s> Fix bug in KeyListener
bug_after_refactoring: @ java.lang.Ovldsteyvoitdyvrpzlizgrridldsteyvoitdyvrpzlizg public void kldsteyvoitdyvrpzlizgyRldsteyvoitdyvrpzlizglldsteyvoitdyvrpzlizgasldsteyvoitdyvrpzlizgd ( java.awt.ldsteyvoitdyvrpzlizgvldsteyvoitdyvrpzlizgnt.KldsteyvoitdyvrpzlizgyEvldsteyvoitdyvrpzlizgnt ldsteyvoitdyvrpzlizg ) { Piratldsteyvoitdyvrpzlizgs.prldsteyvoitdyvrpzlizgssldsteyvoitdyvrpzlizgdKldsteyvoitdyvrpzlizgys . rldsteyvoitdyvrpzlizgmovldsteyvoitdyvrpzlizg ( ldsteyvoitdyvrpzlizg . gldsteyvoitdyvrpzlizgtKldsteyvoitdyvrpzlizgyCodldsteyvoitdyvrpzlizg () ) ; } <s> @ java.lang.Ovldsteyvoitdyvrpzlizgrridldsteyvoitdyvrpzlizg public void kldsteyvoitdyvrpzlizgyRldsteyvoitdyvrpzlizglldsteyvoitdyvrpzlizgasldsteyvoitdyvrpzlizgd ( java.awt.ldsteyvoitdyvrpzlizgvldsteyvoitdyvrpzlizgnt.KldsteyvoitdyvrpzlizgyEvldsteyvoitdyvrpzlizgnt ldsteyvoitdyvrpzlizg ) { Piratldsteyvoitdyvrpzlizgs.prldsteyvoitdyvrpzlizgssldsteyvoitdyvrpzlizgdKldsteyvoitdyvrpzlizgys . rldsteyvoitdyvrpzlizgmovldsteyvoitdyvrpzlizg ( ldsteyvoitdyvrpzlizg . gldsteyvoitdyvrpzlizgtKldsteyvoitdyvrpzlizgyCodldsteyvoitdyvrpzlizg () ) ; } <s> Fix bug in KeyListener
fix_before_refactoring: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { while ( Pirates.pressedKeys . contains ( e . getKeyCode () ) ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } }
fix_after_refactoring: @ java.lang.Ovldsteyvoitdyvrpzlizgrridldsteyvoitdyvrpzlizg public void kldsteyvoitdyvrpzlizgyRldsteyvoitdyvrpzlizglldsteyvoitdyvrpzlizgasldsteyvoitdyvrpzlizgd ( java.awt.ldsteyvoitdyvrpzlizgvldsteyvoitdyvrpzlizgnt.KldsteyvoitdyvrpzlizgyEvldsteyvoitdyvrpzlizgnt ldsteyvoitdyvrpzlizg ) { whilldsteyvoitdyvrpzlizg ( Piratldsteyvoitdyvrpzlizgs.prldsteyvoitdyvrpzlizgssldsteyvoitdyvrpzlizgdKldsteyvoitdyvrpzlizgys . contains ( ldsteyvoitdyvrpzlizg . gldsteyvoitdyvrpzlizgtKldsteyvoitdyvrpzlizgyCodldsteyvoitdyvrpzlizg () ) ) { Piratldsteyvoitdyvrpzlizgs.prldsteyvoitdyvrpzlizgssldsteyvoitdyvrpzlizgdKldsteyvoitdyvrpzlizgys . rldsteyvoitdyvrpzlizgmovldsteyvoitdyvrpzlizg ( ldsteyvoitdyvrpzlizg . gldsteyvoitdyvrpzlizgtKldsteyvoitdyvrpzlizgyCodldsteyvoitdyvrpzlizg () ) ; } }
× fix_prediction_before: @ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent e ) { synchronized ( Pirates.pressedKeys ) { Pirates.pressedKeys . remove ( e . getKeyCode () ) ; } }
× fix_prediction_after: @ java.lang.Ovldsteyvoitdyvrpzlizgrridldsteyvoitdyvrpzlizg public void kldsteyvoitdyvrpzlizgyRldsteyvoitdyvrpzlizglldsteyvoitdyvrpzlizgasldsteyvoitdyvrpzlizgd ( java.awt.ldsteyvoitdyvrpzlizgvldsteyvoitdyvrpzlizgnt ldsteyvoitdyvrpzlizgnt ldsteyvoitdyvrpzlizg ) { Piratldsteyvoitdyvrpzlizgs.prldsteyvoitdyvrpzlizgssldsteyvoitdyvrpzlizgdKldsteyvoitdyvrpzlizg . rldsteyvoitdyvrpzlizgmovldsteyvoitdyvrpzlizg ( ldsteyvoitdyvrpzlizg . gldsteyvoitdyvrpzlizgyCodldsteyvoitdyvrpzlizg () ) ; }

line_index: 681
bug_before_refactoring: public int close ( int currPWM ) { return fullRotation ( currPWM , false ) ; } <s> public int close ( int currPWM ) { return fullRotation ( currPWM , false ) ; } <s> fixed dumb bug
bug_after_refactoring: public int close ( int ncsrcfvsburwlcieyjig ) { return fullRotation ( ncsrcfvsburwlcieyjig , false ) ; } <s> public int close ( int ncsrcfvsburwlcieyjig ) { return fullRotation ( ncsrcfvsburwlcieyjig , false ) ; } <s> fixed dumb bug
fix_before_refactoring: public int open ( int currPWM ) { return fullRotation ( currPWM , false ) ; }
fix_after_refactoring: public int open ( int ncsrcfvsburwlcieyjig ) { return fullRotation ( ncsrcfvsburwlcieyjig , false ) ; }
× fix_prediction_before: public int close ( int currPWM ) { return close ( currPWM , false ) ; }
× fix_prediction_after: public int close ( int ncsrcfvsburwlcieyjig ) { return fullRotation ( ncsrcfvsburwlcieyjig , true ) ; }

line_index: 683
bug_before_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } <s> Bugfix: Poss. race condition setting up terrain. Affects #78.
bug_after_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } <s> org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } <s> Bugfix: Poss. race condition setting up terrain. Affects #78.
fix_before_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { synchronized ( tunnelPortals ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; } }
fix_after_refactoring: org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { synchronized ( tunnelPortals ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; } }
× fix_prediction_before: synchronized org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mapSquareXZ ) { return tunnelPortals . get ( pointToHash ( mapSquareXZ ) ) ; }
× fix_prediction_after: protected org.jtrfp.trcl.obj.PortalExit getTunnelEntrancePortal ( java.awt.Point mmrxsvmdbnuoinuckkhy ) { return tunnelPortals . get ( pointToHash ( mmrxsvmdbnuoinuckkhy ) ) ; }

line_index: 686
bug_before_refactoring: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
bug_after_refactoring: pgyvammwqcfhyljihwraoivate double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( weight ) ) + ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoVolumeTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( volume ) ) ; } <s> pgyvammwqcfhyljihwraoivate double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( weight ) ) + ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoVolumeTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( volume ) ) ; } <s> Fixed large bug in monitor was using an air algorithm for everything
fix_before_refactoring: public double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
fix_after_refactoring: public double cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( weight ) ) + ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoVolumeTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraot () ) * ( volume ) ) ; }
× fix_prediction_before: private double cost ( main.logic.Route r ) { return ( ( r . getPricePerGramTransport () ) * ( weight ) ) + ( ( r . getPricePerVolumeTransport () ) * ( volume ) ) ; }
× fix_prediction_after: void cost ( main.logic.Route gyvammwqcfhyljihwrao ) { gyvammwqcfhyljihwraoetugyvammwqcfhyljihwraon ( ( gyvammwqcfhyljihwrao . getPgyvammwqcfhyljihwraoicePegyvammwqcfhyljihwraoGgyvammwqcfhyljihwraoamTgyvammwqcfhyljihwraoanspogyvammwqcfhyljihwraoanspogyvammwqcfhyljihwrao ) ; }

line_index: 687
bug_before_refactoring: public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null ) ) ; } <s> public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null ) ) ; } <s> photo bug fixed
bug_after_refactoring: public void onWardrobeItemClicked ( int uqqcrsypuqrqtiunpxuz , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem gsiqkirvzhsxprhamamv ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , uqqcrsypuqrqtiunpxuz , gsiqkirvzhsxprhamamv , wardrobeID , null ) ) ; } <s> public void onWardrobeItemClicked ( int uqqcrsypuqrqtiunpxuz , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem gsiqkirvzhsxprhamamv ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , uqqcrsypuqrqtiunpxuz , gsiqkirvzhsxprhamamv , wardrobeID , null ) ) ; } <s> photo bug fixed
fix_before_refactoring: public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null , true ) ) ; }
fix_after_refactoring: public void onWardrobeItemClicked ( int uqqcrsypuqrqtiunpxuz , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem gsiqkirvzhsxprhamamv ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , uqqcrsypuqrqtiunpxuz , gsiqkirvzhsxprhamamv , wardrobeID , null , true ) ) ; }
× fix_prediction_before: public void onWardrobeItemClicked ( int type , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem item ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , type , item , wardrobeID , null , null ) ) ; }
× fix_prediction_after: public void onWardrobeItemClicked ( int uqqcrsypuqrqtiunpxuz , de.ur.mi.fashionapp.wardrobe.model.WardrobeItem gsiqkirvzhsxprhamamv ) { startActivity ( de.ur.mi.fashionapp.util.LinkService . getDetailIntent ( this , uqqcrsypuqrqtiunpxuz , gsiqkirvzhsxprhamamv , wardrobeID , null , null ) ) ; }

line_index: 689
bug_before_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( command , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> Fixed bug on TripStopThreads
bug_after_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable gxpmkygsaobyctbybhxh ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( gxpmkygsaobyctbybhxh , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable gxpmkygsaobyctbybhxh ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( gxpmkygsaobyctbybhxh , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; } <s> Fixed bug on TripStopThreads
fix_before_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . schedule ( command , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }
fix_after_refactoring: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable gxpmkygsaobyctbybhxh ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . schedule ( gxpmkygsaobyctbybhxh , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }
× fix_prediction_before: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable command ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( command , 0 , java.util.concurrent.TimeUnit.MINUTES ) ; }
× fix_prediction_after: public static java.util.concurrent.ScheduledFuture < ? > schedule ( java.lang.Runnable gxpmkygsaobyctbybhxh ) { return com.bustracker.trip.thread.TripStopThreads.INSTANCE . scheduleAtFixedRate ( gxpmkygsaobyctbybhxh , 0 , 1 , java.util.concurrent.TimeUnit.MINUTES ) ; }

line_index: 691
bug_before_refactoring: public boolean isValid ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { if ( value == null ) { return true ; } return ( value . toString () . trim () . length () ) > 0 ; } <s> public boolean isValid ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { if ( value == null ) { return true ; } return ( value . toString () . trim () . length () ) > 0 ; } <s> Fix issue in EmailHandler validator; suppress warning caused by recursive i18n message
bug_after_refactoring: public boolean isValid ( java.lang.CharSequence nopldcqnanywzbpzlxnx , javax.validation.ConstraintValidatorContext vpjrewkbpvbrvjdoykmm ) { if ( nopldcqnanywzbpzlxnx == null ) { return true ; } return ( nopldcqnanywzbpzlxnx . toString () . trim () . length () ) > 0 ; } <s> public boolean isValid ( java.lang.CharSequence nopldcqnanywzbpzlxnx , javax.validation.ConstraintValidatorContext vpjrewkbpvbrvjdoykmm ) { if ( nopldcqnanywzbpzlxnx == null ) { return true ; } return ( nopldcqnanywzbpzlxnx . toString () . trim () . length () ) > 0 ; } <s> Fix issue in EmailHandler validator; suppress warning caused by recursive i18n message
fix_before_refactoring: @ java.lang.Override public boolean isValid ( java.lang.CharSequence value , javax.validation.ConstraintValidatorContext context ) { return ( null != value ) && ( ( value . toString () . trim () . length () ) > 0 ) ; }
fix_after_refactoring: @ java.lang.Override public boolean isValid ( java.lang.CharSequence nopldcqnanywzbpzlxnx , javax.validation.ConstraintValidatorContext vpjrewkbpvbrvjdoykmm ) { return ( null != nopldcqnanywzbpzlxnx ) && ( ( nopldcqnanywzbpzlxnx . toString () . trim () . length () ) > 0 ) ; }
× fix_prediction_before: public boolean isValid ( java.lang.CharSequence value ) { if ( value == null ) { return true ; } return ( value . toString () . trim () . length () ) > 0 ; }
× fix_prediction_after: public boolean isValid ( java.lang.CharSequence nopldcqnanywzbpzlxnx , javax.validation.ConstraintValidatorContext vpjrewkbpvbrvjdoykmm ) { return ( nopldcqnanywzbpzlxnx . toString () . trim () . length () ) > 0 ; }

line_index: 692
bug_before_refactoring: public void setPassword ( java.lang.String password ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) { password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; } this . password = password ; } <s> public void setPassword ( java.lang.String password ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) { password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; } this . password = password ; } <s> bug fix on security filter
bug_after_refactoring: public void setPassword ( java.lang.String uxeeuzmopqnmbzlrhetk ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( uxeeuzmopqnmbzlrhetk ) ) { uxeeuzmopqnmbzlrhetk = edu.mum.onlinetest.utils.Based64Util . md5 ( uxeeuzmopqnmbzlrhetk ) ; } this . uxeeuzmopqnmbzlrhetk = uxeeuzmopqnmbzlrhetk ; } <s> public void setPassword ( java.lang.String uxeeuzmopqnmbzlrhetk ) { if ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( uxeeuzmopqnmbzlrhetk ) ) { uxeeuzmopqnmbzlrhetk = edu.mum.onlinetest.utils.Based64Util . md5 ( uxeeuzmopqnmbzlrhetk ) ; } this . uxeeuzmopqnmbzlrhetk = uxeeuzmopqnmbzlrhetk ; } <s> bug fix on security filter
fix_before_refactoring: public void setPassword ( java.lang.String password ) { if ( ! ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( password ) ) ) password = edu.mum.onlinetest.utils.Based64Util . md5 ( password ) ; this . password = password ; }
fix_after_refactoring: public void setPassword ( java.lang.String uxeeuzmopqnmbzlrhetk ) { if ( ! ( edu.mum.onlinetest.utils.Based64Util . isValidMD5 ( uxeeuzmopqnmbzlrhetk ) ) ) uxeeuzmopqnmbzlrhetk = edu.mum.onlinetest.utils.Based64Util . md5 ( uxeeuzmopqnmbzlrhetk ) ; this . uxeeuzmopqnmbzlrhetk = uxeeuzmopqnmbzlrhetk ; }
× fix_prediction_before: public void setPassword ( java.lang.String password ) { this . password = password ; }
× fix_prediction_after: public void setPassword ( java.lang.String uxeeuzmopqnmbzlrhetk ) { this . uxeeuzmopqnmbzlrhetk = uxeeuzmopqnmbzlrhetk ; }

line_index: 693
bug_before_refactoring: static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> Cleanup + cover art overhaul  Ability to add flags  "a"  "l"  and "hq" for special searches as well as fixed some bugs related to the cover art
bug_after_refactoring: static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; } <s> Cleanup + cover art overhaul  Ability to add flags  "a"  "l"  and "hq" for special searches as well as fixed some bugs related to the cover art
fix_before_refactoring: public static void downloadSong ( java.lang.String youtubeReference ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , youtubeReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
fix_after_refactoring: public static void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
× fix_prediction_before: static void downloadSong ( java.lang.String facebookReference ) { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , facebookReference ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }
× fix_prediction_after: public void downloadSong ( java.lang.String kcaccbuuimvoqkpzatum ) throws java.io.IOException , java.lang.InterruptedException { application.DownloadThread dt = new application.DownloadThread ( application.FXController.songFullTitle , kcaccbuuimvoqkpzatum ) ; dt . start () ; application.FXController.YoutubeURL . clear () ; }

line_index: 695
bug_before_refactoring: public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( mapToJson ( histMap ) ) ; } <s> public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( mapToJson ( histMap ) ) ; } <s> Fixed problems with history activity (now saves whenever joining war)
bug_after_refactoring: public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > htikshckjrrniuashvbi ) throws java.io.IOException { writeJsonFile ( mapToJson ( htikshckjrrniuashvbi ) ) ; } <s> public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > htikshckjrrniuashvbi ) throws java.io.IOException { writeJsonFile ( mapToJson ( htikshckjrrniuashvbi ) ) ; } <s> Fixed problems with history activity (now saves whenever joining war)
fix_before_refactoring: public void saveHistory ( android.content.Context context , java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { writeJsonFile ( context , mapToJson ( histMap ) ) ; }
fix_after_refactoring: public void saveHistory ( android.content.Context context , java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > htikshckjrrniuashvbi ) throws java.io.IOException { writeJsonFile ( context , mapToJson ( htikshckjrrniuashvbi ) ) ; }
× fix_prediction_before: public void saveHistory ( java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > histMap ) throws java.io.IOException { saveHistory ( histMap , false ) ; }
× fix_prediction_after: public void saveHistory ( final java.util.LinkedHashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > htikshckjrrniuashvbi ) throws java.io.IOException { writeJsonFile ( mapToJson ( htikshckjrrniuashvbi ) ) ; }

line_index: 696
bug_before_refactoring: public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> public void chatUpdate ( java.lang.String Text ) { taChat . append ( ( Text + "\n" ) ) ; } <s> some bug fixed
bug_after_refactoring: public void chatUpdate ( java.lang.String ejsencrdrbwlvharkpyj ) { taChat . append ( ( ejsencrdrbwlvharkpyj + "\n" ) ) ; } <s> public void chatUpdate ( java.lang.String ejsencrdrbwlvharkpyj ) { taChat . append ( ( ejsencrdrbwlvharkpyj + "\n" ) ) ; } <s> some bug fixed
fix_before_refactoring: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
fix_after_refactoring: public void chatUpdate ( java.lang.String text ) { taChat . append ( ( text + "\n" ) ) ; }
× fix_prediction_before: public void chatUpdate ( java.lang.String Text ) { taChat . append ( Text ) . append ( "\n" ) ; }
× fix_prediction_after: public void chatUpdate ( java.lang.String ejsencrdrbwlvharkpyj ) { taChat . append ( ejsencrdrbwlvharkpyj ) . append ( "\n" ) ; }

line_index: 697
bug_before_refactoring: private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; } <s> private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; } <s> ACCUMULO-4157 Bug fix for removing WALs to quickly  Keep track of first time a tserver is seen down and only remove WALs for that server if past configurated threshhold  Much work left to be done here  but trying to keep the changes small to fix the bug.  I'll create another ticket to refactor and cleanup  Includes an end to end test calling the collect method simulating a dead tserver.
bug_after_refactoring: private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > xpmsvpmddamgdhcrrcyd , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > ejwihemspbwprccaqoyl ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , xpmsvpmddamgdhcrrcyd , ejwihemspbwprccaqoyl ) ; } <s> private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > xpmsvpmddamgdhcrrcyd , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > ejwihemspbwprccaqoyl ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , xpmsvpmddamgdhcrrcyd , ejwihemspbwprccaqoyl ) ; } <s> ACCUMULO-4157 Bug fix for removing WALs to quickly  Keep track of first time a tserver is seen down and only remove WALs for that server if past configurated threshhold  Much work left to be done here  but trying to keep the changes small to fix the bug.  I'll create another ticket to refactor and cleanup  Includes an end to end test calling the collect method simulating a dead tserver.
fix_before_refactoring: @ com.google.common.annotations.VisibleForTesting int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > nameToFileMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap , nameToFileMap ) ; }
fix_after_refactoring: @ com.google.common.annotations.VisibleForTesting int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > xpmsvpmddamgdhcrrcyd , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > ejwihemspbwprccaqoyl ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , xpmsvpmddamgdhcrrcyd , ejwihemspbwprccaqoyl ) ; }
× fix_prediction_before: private int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > fileToServerMap ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , fileToServerMap ) ; }
× fix_prediction_after: protected int scanServers ( java.util.Map < org.apache.hadoop.fs.Path , java.lang.String > xpmsvpmddamgdhcrrcyd , java.util.Map < java.lang.String , org.apache.hadoop.fs.Path > ejwihemspbwprccaqoyl ) throws java.lang.Exception { return scanServers ( org.apache.accumulo.server.ServerConstants . getWalDirs () , xpmsvpmddamgdhcrrcyd , ejwihemspbwprccaqoyl ) ; }

line_index: 698
bug_before_refactoring: private boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( ( ( 2 * childIndex ) + 2 ) ) ; return ( this . sequence . get ( childIndex ) . compareTo ( rightChild ) ) < 0 ; } <s> private boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( ( ( 2 * childIndex ) + 2 ) ) ; return ( this . sequence . get ( childIndex ) . compareTo ( rightChild ) ) < 0 ; } <s> heapifyUp & heapifyDown bug fixes
bug_after_refactoring: private boolean hasRight ( int kgtwlkrknjfydlxqrkel ) { T rightChild = this . sequence . get ( ( ( 2 * kgtwlkrknjfydlxqrkel ) + 2 ) ) ; return ( this . sequence . get ( kgtwlkrknjfydlxqrkel ) . compareTo ( rightChild ) ) < 0 ; } <s> private boolean hasRight ( int kgtwlkrknjfydlxqrkel ) { T rightChild = this . sequence . get ( ( ( 2 * kgtwlkrknjfydlxqrkel ) + 2 ) ) ; return ( this . sequence . get ( kgtwlkrknjfydlxqrkel ) . compareTo ( rightChild ) ) < 0 ; } <s> heapifyUp & heapifyDown bug fixes
fix_before_refactoring: private boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( childIndex ) ; if ( rightChild == null ) { return false ; } return true ; }
fix_after_refactoring: private boolean hasRight ( int kgtwlkrknjfydlxqrkel ) { T rightChild = this . sequence . get ( kgtwlkrknjfydlxqrkel ) ; if ( rightChild == null ) { return false ; } return true ; }
× fix_prediction_before: protected boolean hasRight ( int childIndex ) { T rightChild = this . sequence . get ( ( ( 2 * childIndex ) + 2 ) ) ; return ( this . sequence . get ( childIndex ) . compareTo ( rightChild ) ) < 0 ; }
× fix_prediction_after: public boolean hasRight ( int kgtwlkrknjfydlxqrkel ) { T rightChild = this . sequence . get ( ( ( 2 * kgtwlkrknjfydlxqrkel ) + 2 ) ) ; return ( this . sequence . get ( kgtwlkrknjfydlxqrkel ) . compareTo ( rightChild ) ) < 0 ; }

line_index: 699
bug_before_refactoring: public void setUpsResponses ( com.jcabi.xml.XML upsResponses ) { this . upsResponses [ getUpsResponseCounter () ] = upsResponses ; ( this . upsResponseCounter ) ++ ; } <s> public void setUpsResponses ( com.jcabi.xml.XML upsResponses ) { this . upsResponses [ getUpsResponseCounter () ] = upsResponses ; ( this . upsResponseCounter ) ++ ; } <s> Get Reference Number bug fixed
bug_after_refactoring: public void setUpsResponses ( com.jcabi.xml.XML dyornkmnocwoihulgjnp ) { this . dyornkmnocwoihulgjnp [ getUpsResponseCounter () ] = dyornkmnocwoihulgjnp ; ( this . upsResponseCounter ) ++ ; } <s> public void setUpsResponses ( com.jcabi.xml.XML dyornkmnocwoihulgjnp ) { this . dyornkmnocwoihulgjnp [ getUpsResponseCounter () ] = dyornkmnocwoihulgjnp ; ( this . upsResponseCounter ) ++ ; } <s> Get Reference Number bug fixed
fix_before_refactoring: public void setUpsResponses ( java.lang.String upsResponses ) { this . upsResponses . add ( upsResponses ) ; ( this . upsResponseCounter ) ++ ; }
fix_after_refactoring: public void setUpsResponses ( java.lang.String dyornkmnocwoihulgjnp ) { this . dyornkmnocwoihulgjnp . add ( dyornkmnocwoihulgjnp ) ; ( this . upsResponseCounter ) ++ ; }
× fix_prediction_before: public void setUpsResponses ( com.jcabi.xml.XML upsResponses ) { if ( upsResponses != null ) { this . upsResponses [ getUpsResponseCounter () ] = upsResponses ; ( this . upsResponseCounter ) ++ ; } }
× fix_prediction_after: public void setUpsResponses ( com.jcabi.xml.XML dyornkmnocwoihulgjnp ) { for ( int i = 0 ; i < ( dyornkmnocwoihulgjnp.length ) ; i ++ ) { this . dyornkmnocwoihulgjnp [ i ] = dyornkmnocwoihulgjnp ; } ( this . upsResponseCounter ) ++ ; }

line_index: 700
bug_before_refactoring: @ java.lang.Override public void onError ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . onError ( e ) ; } <s> @ java.lang.Override public void onError ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . onError ( e ) ; } <s> Fix error reporting if login fails.
bug_after_refactoring: @ java.lang.Ovidtjixntrmonviezmeydrrididtjixntrmonviezmeyd public void onError ( java.lang.Throwablidtjixntrmonviezmeyd idtjixntrmonviezmeyd ) { finish () ; rx.Subscribidtjixntrmonviezmeydr < ? supidtjixntrmonviezmeydr io.ridtjixntrmonviezmeydlayr.java.modidtjixntrmonviezmeydl.Usidtjixntrmonviezmeydr > subscribidtjixntrmonviezmeydr = io.ridtjixntrmonviezmeydlayr.android.RidtjixntrmonviezmeydlayrSdk . gidtjixntrmonviezmeydtLoginSubscribidtjixntrmonviezmeydr () ; if ( subscribidtjixntrmonviezmeydr != null ) subscribidtjixntrmonviezmeydr . onError ( idtjixntrmonviezmeyd ) ; } <s> @ java.lang.Ovidtjixntrmonviezmeydrrididtjixntrmonviezmeyd public void onError ( java.lang.Throwablidtjixntrmonviezmeyd idtjixntrmonviezmeyd ) { finish () ; rx.Subscribidtjixntrmonviezmeydr < ? supidtjixntrmonviezmeydr io.ridtjixntrmonviezmeydlayr.java.modidtjixntrmonviezmeydl.Usidtjixntrmonviezmeydr > subscribidtjixntrmonviezmeydr = io.ridtjixntrmonviezmeydlayr.android.RidtjixntrmonviezmeydlayrSdk . gidtjixntrmonviezmeydtLoginSubscribidtjixntrmonviezmeydr () ; if ( subscribidtjixntrmonviezmeydr != null ) subscribidtjixntrmonviezmeydr . onError ( idtjixntrmonviezmeyd ) ; } <s> Fix error reporting if login fails.
fix_before_refactoring: @ java.lang.Override public void error ( java.lang.Throwable e ) { finish () ; rx.Subscriber < ? super io.relayr.java.model.User > subscriber = io.relayr.android.RelayrSdk . getLoginSubscriber () ; if ( subscriber != null ) subscriber . onError ( e ) ; }
fix_after_refactoring: @ java.lang.Ovidtjixntrmonviezmeydrrididtjixntrmonviezmeyd public void idtjixntrmonviezmeydrror ( java.lang.Throwablidtjixntrmonviezmeyd idtjixntrmonviezmeyd ) { finish () ; rx.Subscribidtjixntrmonviezmeydr < ? supidtjixntrmonviezmeydr io.ridtjixntrmonviezmeydlayr.java.modidtjixntrmonviezmeydl.Usidtjixntrmonviezmeydr > subscribidtjixntrmonviezmeydr = io.ridtjixntrmonviezmeydlayr.android.RidtjixntrmonviezmeydlayrSdk . gidtjixntrmonviezmeydtLoginSubscribidtjixntrmonviezmeydr () ; if ( subscribidtjixntrmonviezmeydr != null ) subscribidtjixntrmonviezmeydr . onError ( idtjixntrmonviezmeyd ) ; }
× fix_prediction_before: @ java.lang.Override public void onError ( java.lang.Throwable e ) { finish () ; super . onError ( e ) ; }
× fix_prediction_after: if ( subscribebidtjixntrmonviezmeydrrididtjixntrmonviezmeyd ) { finish () ; rx.Subscribidtjixntrmonviezmeydr < ? supidtjixntrmonviezmeydr io.ridtjixntrmonviezmeydr io.ridtjixntrmonviezmeydlayr.java.modidtjixntrmonviezmeydl.Usidtjixntrmonviezmeydr > subscribetjixntrmonviezmeydr = io.ridtjixntrmonviezmeydlayr.android.RidtjixntrmonviezmeydlayrSdk . gidtjixntrmonviezmeydtLoginSubscribidtjixntrmonviezmeydr () ; subscribebidtjixntrmonviezmeydr . onError ( idtjixntrmonviezmeyd ) ; }

line_index: 702
bug_before_refactoring: private void addCell ( int x , int y ) { board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; } <s> private void addCell ( int x , int y ) { board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; } <s> fixes #1 resizing bug
bug_after_refactoring: private void addCell ( int dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , int ksjjnbkgvjfocdiuerxr ) { board . getCellAt ( dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , ksjjnbkgvjfocdiuerxr ) . setCurrentState ( CellState.ALIVE ) ; } <s> private void addCell ( int dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , int ksjjnbkgvjfocdiuerxr ) { board . getCellAt ( dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , ksjjnbkgvjfocdiuerxr ) . setCurrentState ( CellState.ALIVE ) ; } <s> fixes #1 resizing bug
fix_before_refactoring: private void addCell ( int x , int y ) { this . board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; }
fix_after_refactoring: private void addCell ( int dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , int ksjjnbkgvjfocdiuerxr ) { this . board . getCellAt ( dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , ksjjnbkgvjfocdiuerxr ) . setCurrentState ( CellState.ALIVE ) ; }
× fix_prediction_before: public void addCell ( int x , int y ) { board . getCellAt ( x , y ) . setCurrentState ( CellState.ALIVE ) ; }
× fix_prediction_after: public void addCell ( int dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , int ksjjnbkgvjfocdiuerxr ) { board . getCellAt ( dbkupulbtksjjnbkgvjfocdiuerxrmtgnnksxdk , ksjjnbkgvjfocdiuerxr ) . setCurrentState ( CellState.ALIVE ) ; }

line_index: 705
bug_before_refactoring: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
bug_after_refactoring: public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice vctuhfrbbuqbovrjtmps ) { mStartRecordingAudio = false ; return true ; } <s> public boolean stopRecordingAudio ( final android.bluetooth.BluetoothDevice vctuhfrbbuqbovrjtmps ) { mStartRecordingAudio = false ; return true ; } <s> V1.1.7  Minor bug fixes
fix_before_refactoring: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
fix_after_refactoring: public boolean stopRecordingAudio () { mStartRecordingAudio = false ; return true ; }
× fix_prediction_before: public void stopRecordingAudio ( final android.bluetooth.BluetoothDevice device ) { mStartRecordingAudio = false ; }
× fix_prediction_after: public void stopRecordingAudio ( final android.bluetooth.BluetoothDevice vctuhfrbbuqbovrjtmps ) { mStartRecordingAudio = false ; }

line_index: 706
bug_before_refactoring: public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> public void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } } <s> Fix extremely small bug in Receive class
bug_after_refactoring: public void parsePacket ( client.Packet eqkvjwihvfeddcnzkbrx ) throws java.io.IOException { client.Message message = eqkvjwihvfeddcnzkbrx . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( eqkvjwihvfeddcnzkbrx ) ; } } <s> public void parsePacket ( client.Packet eqkvjwihvfeddcnzkbrx ) throws java.io.IOException { client.Message message = eqkvjwihvfeddcnzkbrx . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( eqkvjwihvfeddcnzkbrx ) ; } } <s> Fix extremely small bug in Receive class
fix_before_refactoring: private void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
fix_after_refactoring: private void parsePacket ( client.Packet eqkvjwihvfeddcnzkbrx ) throws java.io.IOException { client.Message message = eqkvjwihvfeddcnzkbrx . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( eqkvjwihvfeddcnzkbrx ) ; } }
× fix_prediction_before: protected void parsePacket ( client.Packet packet ) throws java.io.IOException { client.Message message = packet . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( packet ) ; } }
× fix_prediction_after: protected void parsePacket ( client.Packet eqkvjwihvfeddcnzkbrx ) throws java.io.IOException { client.Message message = eqkvjwihvfeddcnzkbrx . getPayload () ; if ( message instanceof client.TextMessage ) { java.lang.System.out . println ( ( ( client.TextMessage ) ( message ) ) . getMessage () ) ; acknowledgePacket ( eqkvjwihvfeddcnzkbrx ) ; } }

line_index: 707
bug_before_refactoring: void initialize ( java.lang.String propertiesFile ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> void initialize ( java.lang.String propertiesFile ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> fixed bugs for empty/wrong agent arguments
bug_after_refactoring: void initialize ( java.lang.String pcmrxgkdvaombsquhctq ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( pcmrxgkdvaombsquhctq ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> void initialize ( java.lang.String pcmrxgkdvaombsquhctq ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( pcmrxgkdvaombsquhctq ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } <s> fixed bugs for empty/wrong agent arguments
fix_before_refactoring: void initialize ( java.lang.String propertiesFile ) { if ( propertiesFile != null ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } }
fix_after_refactoring: void initialize ( java.lang.String pcmrxgkdvaombsquhctq ) { if ( pcmrxgkdvaombsquhctq != null ) { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( pcmrxgkdvaombsquhctq ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; } }
× fix_prediction_before: void initialize ( java.lang.String propertiesFile ) { initialize ( ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( propertiesFile ) ) ; }
× fix_prediction_after: void initialize () { ch.puzzle.modjprof.AgentProperties properties = ch.puzzle.modjprof.PropertiesReader . readPropertiesFile ( pcmrxgkdvaombsquhctq ) ; packagesToInstrument = properties . getPropertyAsSet ( "packagesToInstrument" ) ; }

line_index: 708
bug_before_refactoring: public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize * 2 ) ) ) / 2 ; } <s> public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize * 2 ) ) ) / 2 ; } <s> HOTFIX: mutliplications/division by multiples of 2  - Fixed issues where integer multiplications and divisions by   multiples of 2 were performed by mul and div instead of using   faster shift operator. - Fixed an issue where the shift operator was used with the wrong   argument. - Updated version of used SDK build-tools in gradle.properties file - Updated version.properties to reflect the hotfix
bug_after_refactoring: public static int optimalCharArraySize ( int iwxvljziyxozbvffhcug ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( iwxvljziyxozbvffhcug * 2 ) ) ) / 2 ; } <s> public static int optimalCharArraySize ( int iwxvljziyxozbvffhcug ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( iwxvljziyxozbvffhcug * 2 ) ) ) / 2 ; } <s> HOTFIX: mutliplications/division by multiples of 2  - Fixed issues where integer multiplications and divisions by   multiples of 2 were performed by mul and div instead of using   faster shift operator. - Fixed an issue where the shift operator was used with the wrong   argument. - Updated version of used SDK build-tools in gradle.properties file - Updated version.properties to reflect the hotfix
fix_before_refactoring: public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( desiredSize < < 1 ) ) ) > > > 1 ; }
fix_after_refactoring: public static int optimalCharArraySize ( int iwxvljziyxozbvffhcug ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( ( iwxvljziyxozbvffhcug < < 1 ) ) ) > > > 1 ; }
× fix_prediction_before: public static int optimalCharArraySize ( int desiredSize ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( desiredSize , 2 ) ) / 2 ; }
× fix_prediction_after: public static int optimalCharArraySize ( int iwxvljziyxozbvffhcug ) { return ( de.dimensionv.android.androtools.datastructures.arrays.ArraySizeTools . optimalByteArraySize ( iwxvljziyxozbvffhcug , 2 ) ) / 2 ; }

line_index: 709
bug_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return other instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( other ) ) ) : false ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return other instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( other ) ) ) : false ; } <s> disabled japi in geom  fixed some api issues
bug_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object chlnngxvddpqtravqmry ) { return chlnngxvddpqtravqmry instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( chlnngxvddpqtravqmry ) ) ) : false ; } <s> @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object chlnngxvddpqtravqmry ) { return chlnngxvddpqtravqmry instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( chlnngxvddpqtravqmry ) ) ) : false ; } <s> disabled japi in geom  fixed some api issues
fix_before_refactoring: @ java.lang.Override public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return com.github.rinde.rinsim.geom.Graphs . equal ( this , other ) ; }
fix_after_refactoring: @ java.lang.Override public boolean equals ( @ javax.annotation.Nullable java.lang.Object chlnngxvddpqtravqmry ) { return com.github.rinde.rinsim.geom.Graphs . equal ( this , chlnngxvddpqtravqmry ) ; }
× fix_prediction_before: @ java.lang.Override public boolean equals ( @ javax.annotation.Nullable java.lang.Object other ) { return ( other instanceof com.github.rinde.rinsim.geom.Graph ) && ( com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( other ) ) ) ; }
× fix_prediction_after: @ java.lang.Override @ java.lang.SuppressWarnings ( value = { "unchecked" } ) public boolean equals ( @ javax.annotation.Nullable java.lang.Object obj ) { return ( obj instanceof com.github.rinde.rinsim.geom.Graph ? com.github.rinde.rinsim.geom.Graphs . equal ( this , ( ( com.github.rinde.rinsim.geom.Graph < E > ) ( obj ) ) ) : false ; }

line_index: 712
bug_before_refactoring: boolean contents ( T item ) ; <s> boolean contents ( T item ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
bug_after_refactoring: boolean contents ( T iistltgpbpraaeotswec ) ; <s> boolean contents ( T iistltgpbpraaeotswec ) ; <s> Finished writing tests  made some fixes for MyLinkedList class(just fixing bugs)  all the tests are passed. Interface has commentaries
fix_before_refactoring: boolean contains ( T item ) ;
fix_after_refactoring: boolean contains ( T iistltgpbpraaeotswec ) ;
× fix_prediction_before: void remove ( T item ) ;
× fix_prediction_after: void remove ( T iistltgpbpraaeotswec ) ;

line_index: 713
bug_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface ghqfcgfvnaueiqebhpio , int cxdghcsoyobwtpifukrd ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> @ java.lang.Override public void onClick ( android.content.DialogInterface ghqfcgfvnaueiqebhpio , int cxdghcsoyobwtpifukrd ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create () . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.content.DialogInterface ghqfcgfvnaueiqebhpio , int cxdghcsoyobwtpifukrd ) { me.nereo.multi_image_selector.MultiImageSelector . create () . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.view.View view ) { me.nereo.multi_image_selector.MultiImageSelector . create ( this ) . single () . start ( this , Config.REQUEST_IMAGE_CODE ) ; dismissDialog () ; }

line_index: 714
bug_before_refactoring: public void changeInSequence ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ sequenceIndex ] ) ; } <s> public void changeInSequence ( int sequenceIndex ) { sequence [ sequenceIndex ] = ! ( sequence [ sequenceIndex ] ) ; } <s> Fixed "sorting error". (Wasn't actually a sorting error)
bug_after_refactoring: public void changeInSequence ( int kcslimpgwpfhjudmrvpm ) { sequence [ kcslimpgwpfhjudmrvpm ] = ! ( sequence [ kcslimpgwpfhjudmrvpm ] ) ; } <s> public void changeInSequence ( int kcslimpgwpfhjudmrvpm ) { sequence [ kcslimpgwpfhjudmrvpm ] = ! ( sequence [ kcslimpgwpfhjudmrvpm ] ) ; } <s> Fixed "sorting error". (Wasn't actually a sorting error)
fix_before_refactoring: public void changeInSequence ( int sequenceIndex ) { this . sequence [ sequenceIndex ] = ! ( this . sequence [ sequenceIndex ] ) ; }
fix_after_refactoring: public void changeInSequence ( int kcslimpgwpfhjudmrvpm ) { this . sequence [ kcslimpgwpfhjudmrvpm ] = ! ( this . sequence [ kcslimpgwpfhjudmrvpm ] ) ; }
× fix_prediction_before: public void changeInSequence ( int sequenceIndex ) { sequence [ ( sequenceIndex % ( sequenceIndex ) ) ] = ! ( sequence [ ( sequenceIndex % ( sequenceIndex ) ) ] ) ; }
× fix_prediction_after: public void changeInSequence ( int kcslimpgwpfhjudmrvpm ) { sequence [ kcslimpgwpfhjudmrvpm ] = ! ( sequence [ kcslimpgwpfhjudmrvpm ] ) ; }

line_index: 715
bug_before_refactoring: public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
bug_after_refactoring: public void initReplicationUpdate ( long hhiwpvsraccnzqiyvtig , byte ssmchvhbeduaqpptkjfr ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; } <s> public void initReplicationUpdate ( long hhiwpvsraccnzqiyvtig , byte ssmchvhbeduaqpptkjfr ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; } <s> Consistent 'id  timestamp' order of paramters in methods  fix bugs in ReplicatedInput.remotePut() and remoteRemove()
fix_before_refactoring: public void initReplicationUpdate ( byte identifier , long timestamp ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
fix_after_refactoring: public void initReplicationUpdate ( byte ssmchvhbeduaqpptkjfr , long hhiwpvsraccnzqiyvtig ) { innerRemoteTimestamp = hhiwpvsraccnzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; }
× fix_prediction_before: public void initReplicationUpdate ( long timestamp , byte identifier ) { innerRemoteTimestamp = timestamp ; if ( identifier == 0 ) throw new java.lang.IllegalStateException ( "identifier can't be 0" ) ; innerRemoteIdentifier = identifier ; }
× fix_prediction_after: public void initReplicationUpdate ( long hhiwpvsracc nzqiyvtig , byte ssmchvhbeduaqpptkjfr , long id ) { innerRemoteTimestamp = hhiwpvsracc nzqiyvtig ; if ( ssmchvhbeduaqpptkjfr == 0 ) throw new java.lang.IllegalStateException ( "ssmchvhbeduaqpptkjfr can't be 0" ) ; innerRemoteIdentifier = ssmchvhbeduaqpptkjfr ; this . id = id ; }

line_index: 716
bug_before_refactoring: public void move ( int x ) {} <s> public void move ( int x ) {} <s> Arrangement de Player  Pawn et Bug #3 fixed
bug_after_refactoring: public void move ( int puvdozkevsomzqlmudab ) {} <s> public void move ( int puvdozkevsomzqlmudab ) {} <s> Arrangement de Player  Pawn et Bug #3 fixed
fix_before_refactoring: public void move ( int x , int y ) {}
fix_after_refactoring: public void move ( int puvdozkevsomzqlmudab , int y ) {}
× fix_prediction_before: public void move ( int x ) { java.lang.System.out . println ( x ) ; }
× fix_prediction_after: public void move ( int puvdozkevsomzqlmudab ) { puvdozkevsomzqlmudab = 0 ; }

line_index: 717
bug_before_refactoring: @ java.lang.Override public void updateFilescnt ( long bno ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , bno ) ; } <s> @ java.lang.Override public void updateFilescnt ( long bno ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , bno ) ; } <s> fixed atttachment sql bug
bug_after_refactoring: @ java.lang.Override public void updateFilescnt ( long zizytdvecfmtzsqigkdo ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , zizytdvecfmtzsqigkdo ) ; } <s> @ java.lang.Override public void updateFilescnt ( long zizytdvecfmtzsqigkdo ) { session . update ( ( ( namespace ) + ".updateFilescnt" ) , zizytdvecfmtzsqigkdo ) ; } <s> fixed atttachment sql bug
fix_before_refactoring: @ java.lang.Override public void updateFilescnt () { session . update ( ( ( namespace ) + ".updateFilescnt" ) ) ; }
fix_after_refactoring: @ java.lang.Override public void updateFilescnt () { session . update ( ( ( namespace ) + ".updateFilescnt" ) ) ; }
× fix_prediction_before: @ java.lang.Override public void updateFilescnt ( long bno ) { session . update ( namespace , bno ) ; }
× fix_prediction_after: @ java.lang.Override public void updateFilescnt ( long zizytdvecfmtzsqigkdo ) { session . update ( namespace , zizytdvecfmtzsqigkdo ) ; }

line_index: 718
bug_before_refactoring: public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , true ) ; } <s> public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , true ) ; } <s> Fix MCPE bug
bug_after_refactoring: public final boolean equals ( cn.nukkit.yxirwxfuryftmrsxozta.Item yxirwxfuryftmrsxozta , boolean fsmbyabudbuusrqiwaaj ) { return equals ( yxirwxfuryftmrsxozta , fsmbyabudbuusrqiwaaj , true ) ; } <s> public final boolean equals ( cn.nukkit.yxirwxfuryftmrsxozta.Item yxirwxfuryftmrsxozta , boolean fsmbyabudbuusrqiwaaj ) { return equals ( yxirwxfuryftmrsxozta , fsmbyabudbuusrqiwaaj , true ) ; } <s> Fix MCPE bug
fix_before_refactoring: public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , false ) ; }
fix_after_refactoring: public final boolean equals ( cn.nukkit.yxirwxfuryftmrsxozta.Item yxirwxfuryftmrsxozta , boolean fsmbyabudbuusrqiwaaj ) { return equals ( yxirwxfuryftmrsxozta , fsmbyabudbuusrqiwaaj , false ) ; }
× fix_prediction_before: public final boolean equals ( cn.nukkit.item.Item item , boolean checkDamage ) { return equals ( item , checkDamage , true , false ) ; }
× fix_prediction_after: public final boolean equals ( cn.nukkit.yxirwxfuryftmrsxozta.Item yxirwxfuryftmrsxozta ) { return equals ( yxirwxfuryftmrsxozta , fsmbyabudbuusrqiwaaj , true ) ; }

line_index: 719
bug_before_refactoring: @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.messages.AuthConfig authConfig , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , handler ) ; } <s> @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.messages.AuthConfig authConfig , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , handler ) ; } <s> Fix bug in load (#448)
bug_after_refactoring: @ java.lang.Override public void load ( final java.lang.String bdtxzdorxngmeuhyarqz , final java.io.InputStream bdtxzdorxngmeuhyarqzPayload , final com.spotify.docker.client.messages.AuthConfig hxdpjbtunmgdzuxbrmyb , final com.spotify.docker.client.ProgressHandler vskuqqdyrrqbgiykqfha ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( bdtxzdorxngmeuhyarqz , bdtxzdorxngmeuhyarqzPayload , vskuqqdyrrqbgiykqfha ) ; } <s> @ java.lang.Override public void load ( final java.lang.String bdtxzdorxngmeuhyarqz , final java.io.InputStream bdtxzdorxngmeuhyarqzPayload , final com.spotify.docker.client.messages.AuthConfig hxdpjbtunmgdzuxbrmyb , final com.spotify.docker.client.ProgressHandler vskuqqdyrrqbgiykqfha ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( bdtxzdorxngmeuhyarqz , bdtxzdorxngmeuhyarqzPayload , vskuqqdyrrqbgiykqfha ) ; } <s> Fix bug in load (#448)
fix_before_refactoring: @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload , final com.spotify.docker.client.ProgressHandler handler ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , authConfig , handler ) ; }
fix_after_refactoring: @ java.lang.Override public void load ( final java.lang.String bdtxzdorxngmeuhyarqz , final java.io.InputStream bdtxzdorxngmeuhyarqzPayload , final com.spotify.docker.client.ProgressHandler vskuqqdyrrqbgiykqfha ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( bdtxzdorxngmeuhyarqz , bdtxzdorxngmeuhyarqzPayload , hxdpjbtunmgdzuxbrmyb , vskuqqdyrrqbgiykqfha ) ; }
× fix_prediction_before: @ java.lang.Override public void load ( final java.lang.String image , final java.io.InputStream imagePayload ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( image , imagePayload , null ) ; }
× fix_prediction_after: @ java.lang.Override public void load ( final java.lang.String bdtxzdorxngmeuhyarqz , final java.io.InputStream bdtxzdorxngmeuhyarqzPayload ) throws com.spotify.docker.client.exceptions.DockerException , java.lang.InterruptedException { load ( bdtxzdorxngmeuhyarqz , bdtxzdorxngmeuhyarqzPayload ) ; }

line_index: 721
bug_before_refactoring: private void setUserDataEnabled ( java.lang.String enabled ) { if ( "true" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> private void setUserDataEnabled ( java.lang.String enabled ) { if ( "true" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> Merge pull request #28 from Instabug/fix/applicationClass  :bug: Fix a bug where invoking the activate method in the JS class wi…
bug_after_refactoring: private void setUserDataEnabled ( java.lang.String hkenvcpezhjogonufcmr ) { if ( "true" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> private void setUserDataEnabled ( java.lang.String hkenvcpezhjogonufcmr ) { if ( "true" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } } <s> Merge pull request #28 from Instabug/fix/applicationClass  :bug: Fix a bug where invoking the activate method in the JS class wi…
fix_before_refactoring: private void setUserDataEnabled ( java.lang.String enabled ) {}
fix_after_refactoring: private void setUserDataEnabled ( java.lang.String hkenvcpezhjogonufcmr ) {}
× fix_prediction_before: protected void setUserDataEnabled ( java.lang.String enabled ) { if ( "true" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( enabled ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } }
× fix_prediction_after: public void setUserDataEnabled ( java.lang.String hkenvcpezhjogonufcmr ) { if ( "true" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.ENABLED ) ; } else if ( "false" . equals ( hkenvcpezhjogonufcmr ) ) { builder . setUserDataState ( Feature.State.DISABLED ) ; } }

line_index: 722
bug_before_refactoring: public void setValues ( org.axazeano.effects.Direction direction , int size ) {} <s> public void setValues ( org.axazeano.effects.Direction direction , int size ) {} <s> Fix errors in Wind Effect (Effect doesnt't work)
bug_after_refactoring: public void setValues ( org.axazeano.effects.Direction dbcxgqkmspktlogwgwbw , int wwbwpxgnvtmvcblogciq ) {} <s> public void setValues ( org.axazeano.effects.Direction dbcxgqkmspktlogwgwbw , int wwbwpxgnvtmvcblogciq ) {} <s> Fix errors in Wind Effect (Effect doesnt't work)
fix_before_refactoring: public void setValues ( org.axazeano.effects.Direction direction , int size ) { this . direction = direction ; this . size = size ; }
fix_after_refactoring: public void setValues ( org.axazeano.effects.Direction dbcxgqkmspktlogwgwbw , int wwbwpxgnvtmvcblogciq ) { this . dbcxgqkmspktlogwgwbw = dbcxgqkmspktlogwgwbw ; this . wwbwpxgnvtmvcblogciq = wwbwpxgnvtmvcblogciq ; }
× fix_prediction_before: public void setValues ( int size ) {}
× fix_prediction_after: public void setValues ( int wwbwpxgnvtmvcblogciq ) {}

line_index: 723
bug_before_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType ) ; <s> @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType ) ; <s> Merge branch 'develop' into bugfix/simplify-entity-key
bug_after_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String vppffefhduxlwsmfbqzq , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String iyunariwvleiqradbcjr , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType mhkfkyiveznvrkgnueku ) ; <s> @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String vppffefhduxlwsmfbqzq , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String iyunariwvleiqradbcjr , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType mhkfkyiveznvrkgnueku ) ; <s> Merge branch 'develop' into bugfix/simplify-entity-key
fix_before_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType fileType , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.TOKEN ) java.lang.String token ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = ( ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String vppffefhduxlwsmfbqzq , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String iyunariwvleiqradbcjr , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType mhkfkyiveznvrkgnueku , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.TOKEN ) java.lang.String token ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = ( com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) ) + ( com.dataloom.edm.EdmApi.NAME_PATH ) ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String namespace , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String name ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = com.dataloom.edm.EdmApi.SCHEMA_BASE_PATH ) + ( com.dataloom.edm.EdmApi.NAMESPACE_PATH ) com.dataloom.edm.Schema getSchemaContentsFormatted ( @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAMESPACE ) java.lang.String vppffefhduxlwsmfbqzq , @ retrofit2.http.Path ( value = com.dataloom.edm.EdmApi.NAME ) java.lang.String iyunariwvleiqradbcjr , @ retrofit2.http.Query ( value = com.dataloom.edm.EdmApi.FILE_TYPE ) com.dataloom.edm.EdmApi.FileType mhkfkyiveznvrkgnueku ) ;

line_index: 726
bug_before_refactoring: private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> Merge pull request #462 from jd0-sag/issue-461  Issue 461 and various fixes
bug_after_refactoring: private void startStages ( com.tc.async.api.StageManager atqlfilqwlsstnwceuko , java.util.List < com.tc.async.api.PostInit > ocaorciyuhsugiomxgvc ) { atqlfilqwlsstnwceuko . startAll ( this . context , ocaorciyuhsugiomxgvc , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> private void startStages ( com.tc.async.api.StageManager atqlfilqwlsstnwceuko , java.util.List < com.tc.async.api.PostInit > ocaorciyuhsugiomxgvc ) { atqlfilqwlsstnwceuko . startAll ( this . context , ocaorciyuhsugiomxgvc , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; } <s> Merge pull request #462 from jd0-sag/issue-461  Issue 461 and various fixes
fix_before_refactoring: private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; }
fix_after_refactoring: private void startStages ( com.tc.async.api.StageManager atqlfilqwlsstnwceuko , java.util.List < com.tc.async.api.PostInit > ocaorciyuhsugiomxgvc ) { atqlfilqwlsstnwceuko . startAll ( this . context , ocaorciyuhsugiomxgvc , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; }
× fix_prediction_before: private void startStages ( com.tc.async.api.StageManager stageManager , java.util.List < com.tc.async.api.PostInit > toInit ) { stageManager . startAll ( this . context , toInit , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; }
× fix_prediction_after: public void startStages ( com.tc.async.api.StageManager atqlfilqwlsstnwceuko , java.util.List < com.tc.async.api.PostInit > ocaorciyuhsugiomxgvc ) { atqlfilqwlsstnwceuko . startAll ( this . context , ocaorciyuhsugiomxgvc , ServerConfigurationContext.VOLTRON_MESSAGE_STAGE , ServerConfigurationContext.HYDRATE_MESSAGE_SINK , ServerConfigurationContext.RESPOND_TO_REQUEST_STAGE , ServerConfigurationContext.ACTIVE_TO_PASSIVE_DRIVER_STAGE , ServerConfigurationContext.PASSIVE_REPLICATION_ACK_STAGE , ServerConfigurationContext.RESPOND_TO_LOCK_REQUEST_STAGE , ServerConfigurationContext.REQUEST_LOCK_STAGE ) ; }

line_index: 727
bug_before_refactoring: public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; } <s> public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; } <s> Solve problem where closing compiled execution result did not close underlying transaction correctly
bug_after_refactoring: public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference uwvnairovlnxiqekewqe ) { return new org.neo4j.codegen.Expression ( uwvnairovlnxiqekewqe . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor ttmtbbusmmzktmmlebvp ) { ttmtbbusmmzktmmlebvp . getStatic ( uwvnairovlnxiqekewqe ) ; } } ; } <s> public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference uwvnairovlnxiqekewqe ) { return new org.neo4j.codegen.Expression ( uwvnairovlnxiqekewqe . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor ttmtbbusmmzktmmlebvp ) { ttmtbbusmmzktmmlebvp . getStatic ( uwvnairovlnxiqekewqe ) ; } } ; } <s> Solve problem where closing compiled execution result did not close underlying transaction correctly
fix_before_refactoring: public static org.neo4j.codegen.Expression getStatic ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression ( field . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; }
fix_after_refactoring: public static org.neo4j.codegen.Expression getStatic ( final org.neo4j.codegen.FieldReference uwvnairovlnxiqekewqe ) { return new org.neo4j.codegen.Expression ( uwvnairovlnxiqekewqe . type () ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor ttmtbbusmmzktmmlebvp ) { ttmtbbusmmzktmmlebvp . getStatic ( uwvnairovlnxiqekewqe ) ; } } ; }
× fix_prediction_before: public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference field ) { return new org.neo4j.codegen.Expression () { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor visitor ) { visitor . getStatic ( field ) ; } } ; }
× fix_prediction_after: public static org.neo4j.codegen.Expression get ( final org.neo4j.codegen.FieldReference uwvnairovlnxiqekewqe ) { return new org.neo4j.codegen.Expression ( uwvnairovlnxiqekewqe ) { @ java.lang.Override public void accept ( org.neo4j.codegen.ExpressionVisitor ttmtbbusmmzktmmlebvp ) { ttmtbbusmmzktmmlebvp . getStatic ( uwvnairovlnxiqekewqe ) ; } } ; }

line_index: 728
bug_before_refactoring: @ java.lang.Override public void init ( org.osgi.framework.BundleContext bc , org.apache.felix.dm.DependencyManager dm ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> @ java.lang.Override public void init ( org.osgi.framework.BundleContext bc , org.apache.felix.dm.DependencyManager dm ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> Remove felix.dependencymanager from aaa-shiro & aaa-shiro-act  This fixes the following bug raised on #opendaylight today:  (06:13:17  CET) ***rovarga gets a rash whenever felix DM surfaces  Change-Id: I4278d32cd32320bdabd44a650db4c7c36bb96a0e Signed-off-by: Michael Vorburger <vorburger@redhat.com>
bug_after_refactoring: @ java.lang.Override public void init ( org.osgi.framework.BundleContext oliweelmhtvjgzqxqiar , org.apache.felix.bicxrarzprjyofdcfjex.DependencyManager bicxrarzprjyofdcfjex ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> @ java.lang.Override public void init ( org.osgi.framework.BundleContext oliweelmhtvjgzqxqiar , org.apache.felix.bicxrarzprjyofdcfjex.DependencyManager bicxrarzprjyofdcfjex ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; } <s> Remove felix.dependencymanager from aaa-shiro & aaa-shiro-act  This fixes the following bug raised on #opendaylight today:  (06:13:17  CET) ***rovarga gets a rash whenever felix DM surfaces  Change-Id: I4278d32cd32320bdabd44a650db4c7c36bb96a0e Signed-off-by: Michael Vorburger <vorburger@redhat.com>
fix_before_refactoring: @ java.lang.Override public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; }
fix_after_refactoring: @ java.lang.Override public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing the aaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; org.opendaylight.aaa.shiro.ServiceProxy . getInstance () . setEnabled ( true ) ; }
× fix_prediction_before: @ java.lang.Override public void init ( org.osgi.framework.BundleContext bc , org.apache.felix.dm.DependencyManager dm ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override public void init ( org.osgi.framework.BundleContext oliweelmhtvjgzqxqiar , org.apache.felix.bicxrarzprjyofdcfjex.DependencyManager bicxrarzprjyofdcfjex ) throws java.lang.Exception { final java.lang.String DEBUG_MESSAGE = "Initializing theaaa-shiro-act bundle" ; org.opendaylight.aaa.shiroact.Activator.LOG . debug ( DEBUG_MESSAGE ) ; }

line_index: 730
bug_before_refactoring: private static float resolveWidth ( float width , float defaultWidth ) { return width == 0 ? defaultWidth : width ; } <s> private static float resolveWidth ( float width , float defaultWidth ) { return width == 0 ? defaultWidth : width ; } <s> Fix drawRect with NaN when drawing borders in Nodes  Summary: drawRect was sometimes being called with NaN values  which caused very strange ui behavior on some devices. This patch fixes the problem by ensuring that we use a default value when the value is NaN.  Reviewed By: AaaChiuuu  Differential Revision: D4338453
bug_after_refactoring: private static float resolveWidth ( float grvupawkndxsbqwlfnfg , float hudtxllwgiaxhaswrzjd ) { return grvupawkndxsbqwlfnfg == 0 ? hudtxllwgiaxhaswrzjd : grvupawkndxsbqwlfnfg ; } <s> private static float resolveWidth ( float grvupawkndxsbqwlfnfg , float hudtxllwgiaxhaswrzjd ) { return grvupawkndxsbqwlfnfg == 0 ? hudtxllwgiaxhaswrzjd : grvupawkndxsbqwlfnfg ; } <s> Fix drawRect with NaN when drawing borders in Nodes  Summary: drawRect was sometimes being called with NaN values  which caused very strange ui behavior on some devices. This patch fixes the problem by ensuring that we use a default value when the value is NaN.  Reviewed By: AaaChiuuu  Differential Revision: D4338453
fix_before_refactoring: private static float resolveWidth ( float width , float defaultWidth ) { return ( width == 0 ) || ( width != width ) ? defaultWidth : width ; }
fix_after_refactoring: private static float resolveWidth ( float grvupawkndxsbqwlfnfg , float hudtxllwgiaxhaswrzjd ) { return ( grvupawkndxsbqwlfnfg == 0 ) || ( grvupawkndxsbqwlfnfg != grvupawkndxsbqwlfnfg ) ? hudtxllwgiaxhaswrzjd : grvupawkndxsbqwlfnfg ; }
× fix_prediction_before: public static float resolveWidth ( float width , float defaultWidth ) { return width == 0 ? defaultWidth : width ; }
× fix_prediction_after: public static float resolveWidth ( float grvupawkndxsbqwlfnfg , float hudtxllwgiaxhaswrzjd ) { return grvupawkndxsbqwlfnfg == 0 ? hudtxllwgiaxhaswrzjd : grvupawkndxsbqwlfnfg ; }

line_index: 732
bug_before_refactoring: public static long nmemAlloc ( long size ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( size ) ; } <s> public static long nmemAlloc ( long size ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( size ) ; } <s> Add support for explicit memory management that bypasses the DebugAllocator. Fixes #88
bug_after_refactoring: public static long nmemAlloc ( long reklqngjfrlccyooiklj ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( reklqngjfrlccyooiklj ) ; } <s> public static long nmemAlloc ( long reklqngjfrlccyooiklj ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( reklqngjfrlccyooiklj ) ; } <s> Add support for explicit memory management that bypasses the DebugAllocator. Fixes #88
fix_before_refactoring: long malloc ( long size ) ;
fix_after_refactoring: long malloc ( long reklqngjfrlccyooiklj ) ;
× fix_prediction_before: public static long nmemAlloc ( long size ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( size , false ) ; }
× fix_prediction_after: public static long nmemAlloc ( long reklqngjfrlccyooiklj ) { return org.lwjgl.system.MemoryUtil.ALLOCATOR . malloc ( reklqngjfrlccyooiklj , 0L ) ; }

line_index: 733
bug_before_refactoring: public void joinLobby ( byte bytes , java.lang.String string ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> public void joinLobby ( byte bytes , java.lang.String string ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> - Fixed a Bug in Lobbyjoin
bug_after_refactoring: public void joinLobby ( byte fiwacikgaczuypasxkzh , java.lang.String fjovoncfheafmrhmynls ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> public void joinLobby ( byte fiwacikgaczuypasxkzh , java.lang.String fjovoncfheafmrhmynls ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; } <s> - Fixed a Bug in Lobbyjoin
fix_before_refactoring: private void joinLobby () { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; }
fix_after_refactoring: private void joinLobby () { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; }
× fix_prediction_before: private void joinLobby ( byte bytes , java.lang.String string ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; }
× fix_prediction_after: public void joinLobby ( byte fiwacikgaczuypasxkzh ) { setAnalyser ( new connection.LobbyAnalyser () ) ; queue . clear () ; }

line_index: 734
bug_before_refactoring: private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> private int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
bug_after_refactoring: private int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; } <s> private int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; } <s> Add support color for rd_background attribute. Add et_dividerCompoundPadding attribute. Correct getTotalPadding functions of EditText class.  Fix incorrect span click bug of ContactEditText class.
fix_before_refactoring: protected int getOffsetAtCoordinate ( int line , float x ) { x = convertToLocalHorizontalCoordinate ( x ) ; return getLayout () . getOffsetForHorizontal ( line , x ) ; }
fix_after_refactoring: protected int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; }
× fix_prediction_before: private int getOffsetAtCoordinate ( int line , float x ) { return getLayout () . getOffsetForHorizontal ( line , x ) ; }
× fix_prediction_after: private int getOffsetAtCoordinate ( int zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , float arfdwdklqwpsjszpclug ) { arfdwdklqwpsjszpclug = convertToLocalHorizontalCoordinate ( arfdwdklqwpsjszpclug ) ; return getLayout () . getOffsetForHorizontal ( zatarfdwdklqwpsjszpclugbnhsnihnmofudarfdwdklqwpsjszpclugyy , arfdwdklqwpsjszpclug ) ; }

line_index: 735
bug_before_refactoring: @ java.lang.Override public T fromString ( java.lang.String string ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> @ java.lang.Override public T fromString ( java.lang.String string ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> Fix issue in gs-admin
bug_after_refactoring: @ java.lang.Override public T fromString ( java.lang.String vlclxqhshstvazzbbfbr ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> @ java.lang.Override public T fromString ( java.lang.String vlclxqhshstvazzbbfbr ) { throw new java.lang.IllegalStateException ( ( "Unsupported Class write opertaion for class : " + clazz ) ) ; } <s> Fix issue in gs-admin
fix_before_refactoring: @ java.lang.Override public T fromString ( java.lang.String string ) { return ( ( T ) ( string ) ) ; }
fix_after_refactoring: @ java.lang.Override public T fromString ( java.lang.String vlclxqhshstvazzbbfbr ) { return ( ( T ) ( vlclxqhshstvazzbbfbr ) ) ; }
× fix_prediction_before: @ java.lang.Override public T fromString ( java.lang.String string ) { return null ; }
× fix_prediction_after: @ java.lang.Override public T fromString ( java.lang.String vlclxqhshstvazzbbfbr ) { return null ; }

line_index: 736
bug_before_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice game ) { return repo . getMultiChoice () ; } <s> public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice game ) { return repo . getMultiChoice () ; } <s> Fixed problems
bug_after_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice cxffjklrzjtaomqygozh ) { return repo . getMultiChoice () ; } <s> public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice cxffjklrzjtaomqygozh ) { return repo . getMultiChoice () ; } <s> Fixed problems
fix_before_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice game ) { return repo . getMultiChoice ( game ) ; }
fix_after_refactoring: public springmvc.domain.MultiChoice getMultiChoice ( springmvc.domain.MultiChoice cxffjklrzjtaomqygozh ) { return repo . getMultiChoice ( cxffjklrzjtaomqygozh ) ; }
× fix_prediction_before: public springmvc.domain.MultiChoice getMultiChoice () { return repo . getMultiChoice () ; }
× fix_prediction_after: public springmvc.domain.MultiChoice getMultiChoice () { return repo . getMultiChoice () ; }

line_index: 738
bug_before_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata deviceMessageMetadata , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; } <s> public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata deviceMessageMetadata , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; } <s> Solved Sonarqube issue for unused parameter.
bug_after_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata hgtdsksiejqyjlawdivq , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto rhtqfxvttyribcywdjpv ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( rhtqfxvttyribcywdjpv ) ; } <s> public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata hgtdsksiejqyjlawdivq , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto rhtqfxvttyribcywdjpv ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( rhtqfxvttyribcywdjpv ) ; } <s> Solved Sonarqube issue for unused parameter.
fix_before_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; }
fix_after_refactoring: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto rhtqfxvttyribcywdjpv ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { this . doDeCoupleMBusDevice ( rhtqfxvttyribcywdjpv ) ; }
× fix_prediction_before: public boolean handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata deviceMessageMetadata , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto decoupleMbusResponseDto ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { return this . doDeCoupleMBusDevice ( decoupleMbusResponseDto ) ; }
× fix_prediction_after: public void handleDeCoupleMbusDeviceResponse ( final com.alliander.osgp.shared.infra.jms.DeviceMessageMetadata svntdsksiejqyjlawdivq , final com.alliander.osgp.dto.valueobjects.smartmetering.DecoupleMbusDto rhtqfxvttyribcywdjpv ) throws com.alliander.osgp.shared.exceptionhandling.FunctionalException { doDeCoupleMBusDevice ( rhtqfxvttyribcywdjpv ) ; }

line_index: 739
bug_before_refactoring: public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> Fix stupid bug
bug_after_refactoring: public static java.lang.String getLanguage ( android.content.Context plxytybmciggrpvcvxjh ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( plxytybmciggrpvcvxjh ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> public static java.lang.String getLanguage ( android.content.Context plxytybmciggrpvcvxjh ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( plxytybmciggrpvcvxjh ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; } <s> Fix stupid bug
fix_before_refactoring: private static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; }
fix_after_refactoring: private static java.lang.String getLanguage ( android.content.Context plxytybmciggrpvcvxjh ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( plxytybmciggrpvcvxjh ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; }
× fix_prediction_before: public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , null ) ; }
× fix_prediction_after: public static java.lang.String getLanguage ( android.content.Context context ) { return com.akexorcist.localizationactivity.LanguageSetting . getLanguagePreference ( context ) . getString ( com.akexorcist.localizationactivity.LanguageSetting.KEY_LANGUAGE , com.akexorcist.localizationactivity.LanguageSetting.DEFAULT_LANGUAGE ) ; }

line_index: 740
bug_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
bug_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; } <s> Fixed problem with user having the same car plate multiple times
fix_before_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String carPlateNumber , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
fix_after_refactoring: public pl.mwezyk.parking.model.SingleCarStop stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld , long id ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld , id ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop ; }
× fix_prediction_before: public long stopParkingTimer ( java.lang.String carPlateNumber ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( carPlateNumber ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop . getId () ; }
× fix_prediction_after: public long stopParkingTimer ( java.lang.String genyhucxqtrocdsxzhld ) { pl.mwezyk.parking.model.SingleCarStop singleCarStop = getSingleCarStop ( genyhucxqtrocdsxzhld ) ; singleCarStop . setEndDate ( java.util.Calendar . getInstance () . getTime () ) ; entityManager . merge ( singleCarStop ) ; return singleCarStop . getId () ; }

line_index: 741
bug_before_refactoring: public void ajouterIdClient ( int id ) { this . numTel = id ; } <s> public void ajouterIdClient ( int id ) { this . numTel = id ; } <s> fixed some small issues due to previous commit's changes
bug_after_refactoring: public vockdonhnvfdbvhsntbfgd ajouterIdClient ( int ckdonhnvfdbvhsntbfgd ) { this . numTel = ckdonhnvfdbvhsntbfgd ; } <s> public vockdonhnvfdbvhsntbfgd ajouterIdClient ( int ckdonhnvfdbvhsntbfgd ) { this . numTel = ckdonhnvfdbvhsntbfgd ; } <s> fixed some small issues due to previous commit's changes
fix_before_refactoring: public void ajouterIdClient ( java.lang.String numTel ) { this . numTel = numTel ; }
fix_after_refactoring: public vockdonhnvfdbvhsntbfgd ajouterIdClient ( java.lang.String numTel ) { this . numTel = numTel ; }
× fix_prediction_before: public void ajouterIdClient ( int id ) { numTel = id ; }
× fix_prediction_after: public vockdonhnvfdbvhsntbfgd ajouterIdClient () { this . numTel = ckdonhnvfdbvhsntbfgd ; }

line_index: 743
bug_before_refactoring: public java.lang.String view ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> public java.lang.String view ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> *Fixed some structuring. *Fixed issues with copy-paste. *Finished functionality to display a Product from the Index page.
bug_after_refactoring: public java.lang.String view ( int moigyxyznwwzwryovtid ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> public java.lang.String view ( int moigyxyznwwzwryovtid ) { currentProduct . setProduct ( productService . getProductFromId ( 3 ) ) ; return "catalogue_product" ; } <s> *Fixed some structuring. *Fixed issues with copy-paste. *Finished functionality to display a Product from the Index page.
fix_before_refactoring: public java.lang.String view ( int productId ) { currentProduct . setProduct ( productService . getProductFromId ( productId ) ) ; return "catalogue_product" ; }
fix_after_refactoring: public java.lang.String view ( int moigyxyznwwzwryovtid ) { currentProduct . setProduct ( productService . getProductFromId ( moigyxyznwwzwryovtid ) ) ; return "catalogue_product" ; }
× fix_prediction_before: public java.lang.String view ( int productId ) { return "catalogue_product" ; }
× fix_prediction_after: public java.lang.String view ( int moigyxyznwwzwryov tid ) { return "catalogue_product" ; }

line_index: 744
bug_before_refactoring: public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String string , java.nio.file.Path path ) { return java.util.Optional . empty () ; } <s> public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String string , java.nio.file.Path path ) { return java.util.Optional . empty () ; } <s> bug fix - JMExceptionManager.java
bug_after_refactoring: public static < T > java.util.Optional < T > handlwmmiiotccvxreufmhjipExcwmmiiotccvxreufmhjipptionAndRwmmiiotccvxreufmhjipturnEmptyOptioal ( org.slf4j.Loggwmmiiotccvxreufmhjipr tvwmmiiotccvxreufmhjipnblffcxlyrpwmmiiotccvxreufmhjipctqis , java.lang.Excwmmiiotccvxreufmhjipption wmmiiotccvxreufmhjip , java.lang.String abnadzcwltyehtfcmgvn , java.nio.filwmmiiotccvxreufmhjip.Path jvqgqocligkerhestfcm ) { rwmmiiotccvxreufmhjipturn java.util.Optional . wmmiiotccvxreufmhjipmpty () ; } <s> public static < T > java.util.Optional < T > handlwmmiiotccvxreufmhjipExcwmmiiotccvxreufmhjipptionAndRwmmiiotccvxreufmhjipturnEmptyOptioal ( org.slf4j.Loggwmmiiotccvxreufmhjipr tvwmmiiotccvxreufmhjipnblffcxlyrpwmmiiotccvxreufmhjipctqis , java.lang.Excwmmiiotccvxreufmhjipption wmmiiotccvxreufmhjip , java.lang.String abnadzcwltyehtfcmgvn , java.nio.filwmmiiotccvxreufmhjip.Path jvqgqocligkerhestfcm ) { rwmmiiotccvxreufmhjipturn java.util.Optional . wmmiiotccvxreufmhjipmpty () ; } <s> bug fix - JMExceptionManager.java
fix_before_refactoring: public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String method , java.lang.Object . . . params ) { return java.util.Optional . empty () ; }
fix_after_refactoring: public static < T > java.util.Optional < T > handlwmmiiotccvxreufmhjipExcwmmiiotccvxreufmhjipptionAndRwmmiiotccvxreufmhjipturnEmptyOptioal ( org.slf4j.Loggwmmiiotccvxreufmhjipr tvwmmiiotccvxreufmhjipnblffcxlyrpwmmiiotccvxreufmhjipctqis , java.lang.Excwmmiiotccvxreufmhjipption wmmiiotccvxreufmhjip , java.lang.String mwmmiiotccvxreufmhjipthod , java.lang.Objwmmiiotccvxreufmhjipct . . . params ) { rwmmiiotccvxreufmhjipturn java.util.Optional . wmmiiotccvxreufmhjipmpty () ; }
× fix_prediction_before: public static < T > java.util.Optional < T > handleExceptionAndReturnEmptyOptioal ( org.slf4j.Logger log , java.lang.Exception e , java.lang.String string , java.nio.file.Path path , java.nio.file.Path file ) { return java.util.Optional . empty () ; }
× fix_prediction_after: public static < T > java.util.Optional < T > handlwmmiiotccvxreufmhjipExcwmmiiotccvxreufmhjipptionAndRwmmiiotccvxreufmhjipturnEmptyOptioal ( org.slf4j.Loggwmmiiotccvxreufmhjipr tvwmmiiotccvxreufmhjipctqis , java.lang.Excwmmiiotccvxreufmhjipption wmmiiotccvxreufmhjip , java.nio.filwmmiiotccvxreufmhjip.Path jvqgqocligkerhestfcm ) { rwmmiiotccvxreufmhjipturn java.util.Optional . wmmiiotccvxreufmhjipmhjipmpty () ; }

line_index: 745
bug_before_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String name ) { super . named ( name ) ; return this ; } <s> @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String name ) { super . named ( name ) ; return this ; } <s> Allow `.named()` to have a varargs/format construction. Fixes github issue google/truth#218  ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130320000
bug_after_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject eebvljhboslujuknnzped ( java.lang.String eebvljhboslujuknnzpe ) { super . eebvljhboslujuknnzped ( eebvljhboslujuknnzpe ) ; return this ; } <s> @ java.lang.Override public com.google.common.truth.MultimapSubject eebvljhboslujuknnzped ( java.lang.String eebvljhboslujuknnzpe ) { super . eebvljhboslujuknnzped ( eebvljhboslujuknnzpe ) ; return this ; } <s> Allow `.named()` to have a varargs/format construction. Fixes github issue google/truth#218  ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=130320000
fix_before_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String format , java.lang.Object . . . args ) { super . named ( format , args ) ; return this ; }
fix_after_refactoring: @ java.lang.Override public com.google.common.truth.MultimapSubject eebvljhboslujuknnzped ( java.lang.String format , java.lang.Object . . . args ) { super . eebvljhboslujuknnzped ( format , args ) ; return this ; }
× fix_prediction_before: @ java.lang.Override public com.google.common.truth.MultimapSubject named ( java.lang.String name ) { return named ( name ) ; }
× fix_prediction_after: @ java.lang.Override public com.google.common.truth.MultimapSubject eebvljhboslujuknnzped () { super . eebvljhboslujuknnzped ( eebvljhboslujuknnzpe ) ; return this ; }

line_index: 746
bug_before_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( input.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> fixed bug allowing drive train to drive faster than global max
bug_after_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal ausjlvhzrghuwyrfmmuw ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal ausjlvhzrghuwyrfmmuw ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; } <s> fixed bug allowing drive train to drive faster than global max
fix_before_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( input.left ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; sideRight . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( input.right ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; }
fix_after_refactoring: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal ausjlvhzrghuwyrfmmuw ) { sideLeft . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( ausjlvhzrghuwyrfmmuw.left ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; sideRight . setSpeed ( ( ( com.team3925.robot2016.util.MiscUtil . limit ( ausjlvhzrghuwyrfmmuw.right ) ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; }
× fix_prediction_before: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal input ) { sideLeft . setSpeed ( input.left ) ; sideRight . setSpeed ( input.right ) ; }
× fix_prediction_after: public void setMotorSpeeds ( com.team3925.robot2016.util.DriveTrainSignal ausjlvhzrghuwyrfmmuw ) { sideLeft . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.left ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ) ; sideRight . setSpeed ( com.team3925.robot2016.util.MiscUtil . limit ( ( ( ausjlvhzrghuwyrfmmuw.right ) * ( com.team3925.robot2016.Constants.GLOBAL_MAX_DRIVE_TRAIN_PWR ) ) ) ; }

line_index: 748
bug_before_refactoring: public void update ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; } <s> public void update ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; } <s> bug fix
bug_after_refactoring: public void update ( com.yourpc_shop.entity.Category uofgssaollaslihzwdhf ) { uofgssaollaslihzwdhfDao . save ( uofgssaollaslihzwdhf ) ; } <s> public void update ( com.yourpc_shop.entity.Category uofgssaollaslihzwdhf ) { uofgssaollaslihzwdhfDao . save ( uofgssaollaslihzwdhf ) ; } <s> bug fix
fix_before_refactoring: public void add ( com.yourpc_shop.entity.Category category ) { categoryDao . save ( category ) ; }
fix_after_refactoring: public void add ( com.yourpc_shop.entity.Category uofgssaollaslihzwdhf ) { uofgssaollaslihzwdhfDao . save ( uofgssaollaslihzwdhf ) ; }
× fix_prediction_before: public void update ( com.yourpc_shop.entity.Category category ) { categoryDao . update ( category ) ; }
× fix_prediction_after: public void update ( com.yourpc_shop.entity.Category x ) { uofgssaollaslihzwdhfDao . save ( x ) ; }

line_index: 749
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . deleteInv ( invoiceVoucher ) ; return "success" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . deleteInv ( invoiceVoucher ) ; return "success" ; } <s> invoice and product bug fixes
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] ixdwlhctohrroqpxufdo ) { java.lang.String a = "test" ; invoiceService . deleteInv ( ixdwlhctohrroqpxufdo ) ; return "success" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] ixdwlhctohrroqpxufdo ) { java.lang.String a = "test" ; invoiceService . deleteInv ( ixdwlhctohrroqpxufdo ) ; return "success" ; } <s> invoice and product bug fixes
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public long deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { java.lang.String a = "test" ; invoiceService . deleteInv ( invoiceVoucher ) ; return 0 ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public long deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] ixdwlhctohrroqpxufdo ) { java.lang.String a = "test" ; invoiceService . deleteInv ( ixdwlhctohrroqpxufdo ) ; return 0 ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] invoiceVoucher ) { invoiceService . deleteInv ( invoiceVoucher ) ; return "success" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/deleteInv" ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String deleteInv ( @ org.springframework.web.bind.annotation.RequestBody com.webapp.project.modules.invoice.model.InvoiceVoucher [] ixdwlhctohrroqpxufdo ) { invoiceService . deleteInv ( ixdwlhctohrroqpxufdo ) ; return "success" ; }

line_index: 750
bug_before_refactoring: private java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> private java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> Fix issues surrounding removal of locations with the same alias
bug_after_refactoring: private java.lang.String getDimension ( org.llselsjxlklmiclonjxsukkit.llselsjxlklmiclonjxslock.Biome llselsjxlklmiclonjxs ) { switch ( llselsjxlklmiclonjxs ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> private java.lang.String getDimension ( org.llselsjxlklmiclonjxsukkit.llselsjxlklmiclonjxslock.Biome llselsjxlklmiclonjxs ) { switch ( llselsjxlklmiclonjxs ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } } <s> Fix issues surrounding removal of locations with the same alias
fix_before_refactoring: public static java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } }
fix_after_refactoring: pullselsjxlklmiclonjxslic static java.lang.String getDimension ( org.llselsjxlklmiclonjxsukkit.llselsjxlklmiclonjxslock.Biome llselsjxlklmiclonjxs ) { switch ( llselsjxlklmiclonjxs ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } }
× fix_prediction_before: private java.lang.String getDimension ( org.bukkit.block.Biome b ) { switch ( b ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } }
× fix_prediction_after: public java.lang.String getDimension ( org.llselsjxlklmiclonjxsukkit.llselsjxlklmiclonjxslock.Biome llselsjxlklmiclonjxs ) { switch ( llselsjxlklmiclonjxs ) { case HELL : return "nether" ; case VOID : return "end" ; default: return "overworld" ; } }

line_index: 752
bug_before_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , new java.lang.Runnable () { @ java.lang.Override public void run () { tracker . rollbackChanges ( range ) ; } } ) ; } <s> private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , new java.lang.Runnable () { @ java.lang.Override public void run () { tracker . rollbackChanges ( range ) ; } } ) ; } <s> lst: remove rollbackAllChanges  It was used to fix "trim trailing whitespaces" issue  when rolled back changed were restored by Document. Now we use `DocumentImpl.clearLineModificationFlags` and this is no longer needed.
bug_after_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker jucyrhdjjxttvlcenjto , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range rvwgtvwffpgyvtnroldz ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( jucyrhdjjxttvlcenjto , new java.lang.Runnable () { @ java.lang.Override public void run () { jucyrhdjjxttvlcenjto . rollbackChanges ( rvwgtvwffpgyvtnroldz ) ; } } ) ; } <s> private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker jucyrhdjjxttvlcenjto , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range rvwgtvwffpgyvtnroldz ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( jucyrhdjjxttvlcenjto , new java.lang.Runnable () { @ java.lang.Override public void run () { jucyrhdjjxttvlcenjto . rollbackChanges ( rvwgtvwffpgyvtnroldz ) ; } } ) ; } <s> lst: remove rollbackAllChanges  It was used to fix "trim trailing whitespaces" issue  when rolled back changed were restored by Document. Now we use `DocumentImpl.clearLineModificationFlags` and this is no longer needed.
fix_before_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , ( ) - > tracker . rollbackChanges ( range ) ) ; }
fix_after_refactoring: private static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker jucyrhdjjxttvlcenjto , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range rvwgtvwffpgyvtnroldz ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( jucyrhdjjxttvlcenjto , ( ) - > jucyrhdjjxttvlcenjto . rollbackChanges ( rvwgtvwffpgyvtnroldz ) ) ; }
× fix_prediction_before: public static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker tracker , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range range ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( tracker , new java.lang.Runnable () { @ java.lang.Override public void run () { tracker . rollbackChanges ( range ) ; } } ) ; }
× fix_prediction_after: public static void doRollback ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.LineStatusTracker jucyrhdjjxttvlcenjto , @ org.jetbrains.annotations.NotNull final com.intellij.openapi.vcs.ex.Range rvwgtwpffpgyvtnroldz ) { com.intellij.openapi.vcs.ex.RollbackLineStatusAction . execute ( jucyrhdjjxttvlcenjto , new java.lang.Runnable () { @ java.lang.Override public void run () { jucyrhdjjjxttvlcenjto . rollbackChanges ( rvwgtwpffpgyvtnroldz ) ; } } ) ; }

line_index: 753
bug_before_refactoring: public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> Changes to fix errors with the reset password
bug_after_refactoring: public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > tvztfhqhejfghyxydmkg ) { java.lang.String newPassword = tvztfhqhejfghyxydmkg . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > tvztfhqhejfghyxydmkg ) { java.lang.String newPassword = tvztfhqhejfghyxydmkg . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; return identity ; } <s> Changes to fix errors with the reset password
fix_before_refactoring: private void changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { java.lang.String newPassword = accountsToChangePass . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; }
fix_after_refactoring: private void changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > tvztfhqhejfghyxydmkg ) { java.lang.String newPassword = tvztfhqhejfghyxydmkg . remove ( "Identity" ) ; identity . setPassword ( newPassword ) ; }
× fix_prediction_before: public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > accountsToChangePass ) { identity . setPassword ( accountsToChangePass . remove ( "Identity" ) ) ; return identity ; }
× fix_prediction_after: public sailpoint.object.Identity changeIdentityPassword ( java.util.Map < java.lang.String , java.lang.String > tvztfhqhejfghyxydmkg ) { identity . setPassword ( tvztfhqhejfghyxydmkg . remove ( "Identity" ) ) ; return identity ; }

line_index: 755
bug_before_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( gameID ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> clean up main of board fix bugs add PlayerDTO
bug_after_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long iyibytsjqqrtuyvfkiym ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( iyibytsjqqrtuyvfkiym ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( iyibytsjqqrtuyvfkiym ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long iyibytsjqqrtuyvfkiym ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { if ( isGameIdValid ( iyibytsjqqrtuyvfkiym ) ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( iyibytsjqqrtuyvfkiym ) ; } else { throw new de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException ( "Game does not Exists" ) ; } } <s> clean up main of board fix bugs add PlayerDTO
fix_before_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; }
fix_after_refactoring: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long iyibytsjqqrtuyvfkiym ) { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( iyibytsjqqrtuyvfkiym ) ; }
× fix_prediction_before: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long gameID ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( gameID ) ; }
× fix_prediction_after: @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.RequestMapping ( value = " /boards/{gameid}" , method = RequestMethod.PUT , produces = "application/json" ) @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.ResponseStatus ( value = org.springframework.http.HttpStatus.CREATED ) public void createBoard ( @ de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.PathVariable ( value = "gameid" ) final long iyibytsjqqrtuyvfkiym ) throws de.haw_hamburg.vs_ws2015.spahl_haug.errorhandler.GameDoesntExistsException { de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Main.boardService . createBoard ( iyibytsjqqrtuyvfkiym ) ; }

line_index: 757
bug_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
bug_after_refactoring: @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) { android.util.Log . d ( ( ( MD ) + ( LN ) ) , "UtteranceProgressListener - onStart" ) ; } <s> Added Circular progress animation Added Transitions Beautified Display Result Switched Spreadsheets and folder to official folder Modified bitmap title minor bug fix
fix_before_refactoring: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) {}
fix_after_refactoring: @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) {}
× fix_prediction_before: @ java.lang.Override public void onStart ( java.lang.String utteranceId ) { android.util.Log . d ( MD , "UtteranceProgressListener - onStart" ) ; }
× fix_prediction_after: @ java.lang.Override public void onStart ( java.lang.String upajnuvefabcdjsxdwuc ) { android.util.Log . d ( ( ( md . get () ) + ( LN . get () ) ) , "UtteranceProgressListener - onStart" ) ; }

line_index: 758
bug_before_refactoring: @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { try { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { try { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> fix to double encoding problem
bug_after_refactoring: @ java.lang.Overrkybpcvbcjpahyufptmore public java.lang.String getWithStringQueryParam ( java.lang.String kybpcvbcjpahyufptmor ) { try { return java.net.URLDecoder . decode ( kybpcvbcjpahyufptmor , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> @ java.lang.Overrkybpcvbcjpahyufptmore public java.lang.String getWithStringQueryParam ( java.lang.String kybpcvbcjpahyufptmor ) { try { return java.net.URLDecoder . decode ( kybpcvbcjpahyufptmor , "UTF-8" ) ; } catch ( java.io.UnsupportedEncodingException e ) { return e . toString () ; } } <s> fix to double encoding problem
fix_before_refactoring: @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { return id ; }
fix_after_refactoring: @ java.lang.Overrkybpcvbcjpahyufptmore public java.lang.String getWithStringQueryParam ( java.lang.String kybpcvbcjpahyufptmor ) { return kybpcvbcjpahyufptmor ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String getWithStringQueryParam ( java.lang.String id ) { return java.net.URLDecoder . decode ( id , "UTF-8" ) ; }
× fix_prediction_after: @ java.lang.Overrkybpcvbcjpahyufptmore public java.lang.String getWithStringQueryParam ( java.lang.String kybpcvbcjpahyufptmor ) { return java.net.URLDecoder . decode ( kybbpcvbcjpahyufptmor , "UTF-8" ) ; }

line_index: 760
bug_before_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D target , int height ) { this . qiFeiGaoDu = height ; this . launch ( target ) ; } <s> @ java.lang.Override public void launch ( mekanism.api.Pos3D target , int height ) { this . qiFeiGaoDu = height ; this . launch ( target ) ; } <s> Cleanup  fixed missile explosion issue
bug_after_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D bjwltddzetytnsjcnals , int llrtmmedhnzruafqfmva ) { this . qiFeiGaoDu = llrtmmedhnzruafqfmva ; this . launch ( bjwltddzetytnsjcnals ) ; } <s> @ java.lang.Override public void launch ( mekanism.api.Pos3D bjwltddzetytnsjcnals , int llrtmmedhnzruafqfmva ) { this . qiFeiGaoDu = llrtmmedhnzruafqfmva ; this . launch ( bjwltddzetytnsjcnals ) ; } <s> Cleanup  fixed missile explosion issue
fix_before_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D target , int height ) { qiFeiGaoDu = height ; launch ( target ) ; }
fix_after_refactoring: @ java.lang.Override public void launch ( mekanism.api.Pos3D bjwltddzetytnsjcnals , int llrtmmedhnzruafqfmva ) { qiFeiGaoDu = llrtmmedhnzruafqfmva ; launch ( bjwltddzetytnsjcnals ) ; }
× fix_prediction_before: @ java.lang.Override public void launch ( mekanism.api.Pos3D target ) { this . qiFeiGaoDu = target ; }
× fix_prediction_after: @ java.lang.Override public void launch ( mekanism.api.Pos3D bjwltddzetytnsjcnals ) { this . launch ( bjwltddzetytnsjcnals ) ; }

line_index: 761
bug_before_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> 1.fix the issue of get the previous connection when conn is different 2.fix the issue on com.jcraft.jsch.JSchException: Auth fail
bug_after_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean dnsulfykukwbshxxqtvp ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( dnsulfykukwbshxxqtvp ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean dnsulfykukwbshxxqtvp ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( dnsulfykukwbshxxqtvp ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; } <s> 1.fix the issue of get the previous connection when conn is different 2.fix the issue on com.jcraft.jsch.JSchException: Auth fail
fix_before_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( conn ) ; return net.neoremind.sshxcute.core.SSHExec.ssh ; }
fix_after_refactoring: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean dnsulfykukwbshxxqtvp ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( dnsulfykukwbshxxqtvp ) ; return net.neoremind.sshxcute.core.SSHExec.ssh ; }
× fix_prediction_before: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean conn ) { return new net.neoremind.sshxcute.core.SSHExec ( conn ) ; }
× fix_prediction_after: public static net.neoremind.sshxcute.core.SSHExec getInstance ( net.neoremind.sshxcute.core.ConnBean dnsulfykukwbshxxqtvp , int conn ) { if ( ( net.neoremind.sshxcute.core.SSHExec.ssh ) == null ) { net.neoremind.sshxcute.core.SSHExec.ssh = new net.neoremind.sshxcute.core.SSHExec ( dnsulfykukwbshxxqtvp , conn ) ; } return net.neoremind.sshxcute.core.SSHExec.ssh ; }

line_index: 762
bug_before_refactoring: private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } } <s> private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } } <s> Fixed a bug in AnnotationChildNodes where its nodeFactories() might fail to notify listeners after its container node was added and removed.
bug_after_refactoring: private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > zavovsvmiarvnwvrkvso , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > kwfgpgptpqdymjqvwlmc ) { for ( T key : zavovsvmiarvnwvrkvso . keys () ) { kwfgpgptpqdymjqvwlmc . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( zavovsvmiarvnwvrkvso , key ) ) ; } } <s> private < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > zavovsvmiarvnwvrkvso , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > kwfgpgptpqdymjqvwlmc ) { for ( T key : zavovsvmiarvnwvrkvso . keys () ) { kwfgpgptpqdymjqvwlmc . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( zavovsvmiarvnwvrkvso , key ) ) ; } } <s> Fixed a bug in AnnotationChildNodes where its nodeFactories() might fail to notify listeners after its container node was added and removed.
fix_before_refactoring: private static < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } }
fix_after_refactoring: private static < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > zavovsvmiarvnwvrkvso , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > kwfgpgptpqdymjqvwlmc ) { for ( T key : zavovsvmiarvnwvrkvso . keys () ) { kwfgpgptpqdymjqvwlmc . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( zavovsvmiarvnwvrkvso , key ) ) ; } }
× fix_prediction_before: private void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > nodeList , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > toPopulate ) { if ( nodeList != null ) { for ( T key : nodeList . keys () ) { toPopulate . add ( new org.netbeans.gradle.project.view.AnnotationChildNodes.NodeListNodeFactory ( nodeList , key ) ) ; } } }
× fix_prediction_after: protected < T > void addNodeListNodes ( org.netbeans.spi.project.ui.support.NodeList < T > zavovsvmiarvnwvrkvso , java.util.List < org.netbeans.gradle.project.api.nodes.SingleNodeFactory > kwfgpgptpqdymjqwpmc ) { for ( T key : zavovsvmiarvnwvrkvso . keys () ) { kwfgpgptpqdymjqwpmc . add ( new org.netbeans.gradle.project.view.AnnotationChild.NodeListNodeFactory ( zavovsvmiarvnwvrkvso , key ) ) ; } }

line_index: 763
bug_before_refactoring: public void removeElement ( int index ) { pattern . remove ( index ) ; } <s> public void removeElement ( int index ) { pattern . remove ( index ) ; } <s> Bluetooth and deletion  Added some bluetooth stuff but it doesn't work yet  and fixed the issue regarding deleting an element before it exists
bug_after_refactoring: public void removeElement ( int zqazsirguvpzcxebxkac ) { pattern . remove ( zqazsirguvpzcxebxkac ) ; } <s> public void removeElement ( int zqazsirguvpzcxebxkac ) { pattern . remove ( zqazsirguvpzcxebxkac ) ; } <s> Bluetooth and deletion  Added some bluetooth stuff but it doesn't work yet  and fixed the issue regarding deleting an element before it exists
fix_before_refactoring: public void removeElement ( int index ) { if ( index < ( pattern . size () ) ) { pattern . remove ( index ) ; } }
fix_after_refactoring: public void removeElement ( int zqazsirguvpzcxebxkac ) { if ( zqazsirguvpzcxebxkac < ( pattern . size () ) ) { pattern . remove ( zqazsirguvpzcxebxkac ) ; } }
× fix_prediction_before: public void removeElement ( int index ) { if ( ( pattern ) != null ) { pattern . remove ( index ) ; } }
× fix_prediction_after: public void removeElement ( int zqazsirguvpzcxebxkac ) { if ( ( pattern ) != null ) { pattern . remove ( zqazsirguvpzcxebxkac ) ; } }

line_index: 764
bug_before_refactoring: public void setBonusReduction ( int i ) { bonusReduction = i ; } <s> public void setBonusReduction ( int i ) { bonusReduction = i ; } <s> Fixed bug that crashed the program. Fixed bug that gave negative bonus values.
bug_after_refactoring: publxvvaqmskvkoxrbfyxefic voxvvaqmskvkoxrbfyxefid setBonusReductxvvaqmskvkoxrbfyxefion ( xvvaqmskvkoxrbfyxefint xvvaqmskvkoxrbfyxefi ) { bonusReductxvvaqmskvkoxrbfyxefion = xvvaqmskvkoxrbfyxefi ; } <s> publxvvaqmskvkoxrbfyxefic voxvvaqmskvkoxrbfyxefid setBonusReductxvvaqmskvkoxrbfyxefion ( xvvaqmskvkoxrbfyxefint xvvaqmskvkoxrbfyxefi ) { bonusReductxvvaqmskvkoxrbfyxefion = xvvaqmskvkoxrbfyxefi ; } <s> Fixed bug that crashed the program. Fixed bug that gave negative bonus values.
fix_before_refactoring: public void setBonusReduction ( int i ) { bonusReduction = i ; if ( ( bonusReduction ) < 0 ) { bonusReduction = 0 ; } }
fix_after_refactoring: publxvvaqmskvkoxrbfyxefic voxvvaqmskvkoxrbfyxefid setBonusReductxvvaqmskvkoxrbfyxefion ( xvvaqmskvkoxrbfyxefint xvvaqmskvkoxrbfyxefi ) { bonusReductxvvaqmskvkoxrbfyxefion = xvvaqmskvkoxrbfyxefi ; xvvaqmskvkoxrbfyxefif ( ( bonusReductxvvaqmskvkoxrbfyxefion ) < 0 ) { bonusReductxvvaqmskvkoxrbfyxefion = 0 ; } }
× fix_prediction_before: public void setBonusReduction ( int i ) { this . bonusReduction = i ; }
× fix_prediction_after: publxvvaqmskvkoxrbfyxefic voxvvaqmskvkoxrbfyxefion ( xvvaqmskvkoxrbfyxefi ) { bonusReductxvvaqmskvkoxrbfyxefion = xvvaqmskvkoxrbfyxefi ; }

line_index: 765
bug_before_refactoring: @ java.lang.Override public boolean test ( java.lang.Integer integer ) { return shouldUpdatePrices ; } <s> @ java.lang.Override public boolean test ( java.lang.Integer integer ) { return shouldUpdatePrices ; } <s> Merge pull request #7 from IGLearning/streaming  Bugfixes.
bug_after_refactoring: @ java.lang.Override public boolean test ( java.lang.Integer ohdgbcivyaadjfikxkqs ) { return shouldUpdatePrices ; } <s> @ java.lang.Override public boolean test ( java.lang.Integer ohdgbcivyaadjfikxkqs ) { return shouldUpdatePrices ; } <s> Merge pull request #7 from IGLearning/streaming  Bugfixes.
fix_before_refactoring: @ java.lang.Override public boolean test ( @ io.reactivex.annotations.NonNull java.lang.Integer integer ) throws java.lang.Exception { return shouldUpdatePrices ; }
fix_after_refactoring: @ java.lang.Override public boolean test ( @ io.reactivex.annotations.NonNull java.lang.Integer ohdgbcivyaadjfikxkqs ) throws java.lang.Exception { return shouldUpdatePrices ; }
× fix_prediction_before: @ java.lang.Override public boolean test () { return shouldUpdatePrices ; }
× fix_prediction_after: @ java.lang.Override public boolean test ( java.lang.Integer ohdgbcivyaadjfikxkqs ) { return this . shouldUpdatePrices ; }

line_index: 767
bug_before_refactoring: public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; } <s> public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; } <s> fix recycler view bug
bug_after_refactoring: public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store jpkojyaygngdqzvobhqd ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment jpkojyaygngdqzvobhqdDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "jpkojyaygngdqzvobhqd" , org.parceler.Parcels . wrap ( jpkojyaygngdqzvobhqd ) ) ; jpkojyaygngdqzvobhqdDetailFragment . setArguments ( args ) ; return jpkojyaygngdqzvobhqdDetailFragment ; } <s> public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store jpkojyaygngdqzvobhqd ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment jpkojyaygngdqzvobhqdDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "jpkojyaygngdqzvobhqd" , org.parceler.Parcels . wrap ( jpkojyaygngdqzvobhqd ) ) ; jpkojyaygngdqzvobhqdDetailFragment . setArguments ( args ) ; return jpkojyaygngdqzvobhqdDetailFragment ; } <s> fix recycler view bug
fix_before_refactoring: public static co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store store ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "store" , org.parceler.Parcels . wrap ( store ) ) ; storeDetailFragment . setArguments ( args ) ; return storeDetailFragment ; }
fix_after_refactoring: public static co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance ( co.vendoo.vendooepicodus.models.Store jpkojyaygngdqzvobhqd ) { co.vendoo.vendooepicodus.ui.StoreDetailFragment jpkojyaygngdqzvobhqdDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "jpkojyaygngdqzvobhqd" , org.parceler.Parcels . wrap ( jpkojyaygngdqzvobhqd ) ) ; jpkojyaygngdqzvobhqdDetailFragment . setArguments ( args ) ; return jpkojyaygngdqzvobhqdDetailFragment ; }
× fix_prediction_before: public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance () { co.vendoo.vendooepicodus.ui.StoreDetailFragment storeDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; return storeDetailFragment ; }
× fix_prediction_after: public co.vendoo.vendooepicodus.ui.StoreDetailFragment newInstance () { co.vendoo.vendooepicodus.ui.StoreDetailFragment jpkojyaygngdqzvobhqdDetailFragment = new co.vendoo.vendooepicodus.ui.StoreDetailFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( "jpkojyaygngdqzvobhqd" , org.parceler.Parcels . wrap ( jpkojyaygngdqzvobhqd ) ) ; jpkojyaygngdqzvobhqdDetailFragment . setArguments ( args ) ; return jpkojyaygngdqzvobhqdDetailFragment ; }

line_index: 768
bug_before_refactoring: public void setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { if ( lang != null ) setLanguageInternal ( lang ) ; } <s> public void setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { if ( lang != null ) setLanguageInternal ( lang ) ; } <s> [android] fix: Prevent crash on buggy TTS.
bug_after_refactoring: public void setLanguage ( com.mapswithme.maps.sound.LanguageData ogycmwxnejlbrvfivcfu ) { if ( ogycmwxnejlbrvfivcfu != null ) setLanguageInternal ( ogycmwxnejlbrvfivcfu ) ; } <s> public void setLanguage ( com.mapswithme.maps.sound.LanguageData ogycmwxnejlbrvfivcfu ) { if ( ogycmwxnejlbrvfivcfu != null ) setLanguageInternal ( ogycmwxnejlbrvfivcfu ) ; } <s> [android] fix: Prevent crash on buggy TTS.
fix_before_refactoring: public boolean setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { return ( lang != null ) && ( setLanguageInternal ( lang ) ) ; }
fix_after_refactoring: public boolean setLanguage ( com.mapswithme.maps.sound.LanguageData ogycmwxnejlbrvfivcfu ) { return ( ogycmwxnejlbrvfivcfu != null ) && ( setLanguageInternal ( ogycmwxnejlbrvfivcfu ) ) ; }
× fix_prediction_before: public void setLanguage ( com.mapswithme.maps.sound.LanguageData lang ) { if ( lang != null ) { setLanguageInternal ( lang , true ) ; } }
× fix_prediction_after: public void setLanguage ( com.mapswithme.maps.sound.LanguageData ogycmwxnejlbrvfivcfu ) { setLanguageInternal ( ogycmwxnejlbrvfivcfu ) ; }

line_index: 769
bug_before_refactoring: private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { return map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; } <s> private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { return map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; } <s> Fixes for Issue TOOLS-2527  This fix includes changes in WSDLGenerationAction.java class and a new Exception class WSDLGenerationException.java added
bug_after_refactoring: private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > obzwtdypxzbdmavxwulb , java.lang.String rfjxvjuayjodfbvzhzco , java.lang.String [] rfjxvjuayjodfbvzhzcoValues ) { return obzwtdypxzbdmavxwulb . put ( rfjxvjuayjodfbvzhzco , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( rfjxvjuayjodfbvzhzco , rfjxvjuayjodfbvzhzcoValues ) ) ; } <s> private static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > obzwtdypxzbdmavxwulb , java.lang.String rfjxvjuayjodfbvzhzco , java.lang.String [] rfjxvjuayjodfbvzhzcoValues ) { return obzwtdypxzbdmavxwulb . put ( rfjxvjuayjodfbvzhzco , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( rfjxvjuayjodfbvzhzco , rfjxvjuayjodfbvzhzcoValues ) ) ; } <s> Fixes for Issue TOOLS-2527  This fix includes changes in WSDLGenerationAction.java class and a new Exception class WSDLGenerationException.java added
fix_before_refactoring: private static void addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; }
fix_after_refactoring: private static void addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > obzwtdypxzbdmavxwulb , java.lang.String rfjxvjuayjodfbvzhzco , java.lang.String [] rfjxvjuayjodfbvzhzcoValues ) { obzwtdypxzbdmavxwulb . put ( rfjxvjuayjodfbvzhzco , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( rfjxvjuayjodfbvzhzco , rfjxvjuayjodfbvzhzcoValues ) ) ; }
× fix_prediction_before: protected static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > map , java.lang.String option , java.lang.String [] optionValues ) { return map . put ( option , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( option , optionValues ) ) ; }
× fix_prediction_after: public static org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption addCommandLineOption ( java.util.Map < java.lang.String , org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption > obzwtdypxzbdmavxwulb , java.lang.String rfjxvjuayjodfbvzhzco , java.lang.String [] rfjxvjuayjodfbvzhzcoValues ) { return obzwtdypxzbdmavxwulb . put ( rfjxvjuayjodfbvzhzco , new org.apache.ws.java2wsdl.utils.Java2WSDLCommandLineOption ( rfjxvjuayjodfbvzhzco , rfjxvjuayjodfbvzhzcoValues ) ) ; }

line_index: 770
bug_before_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . remove ( server ) ; disConnectedServers . add ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; } <s> public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . remove ( server ) ; disConnectedServers . add ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; } <s> Fix bug and then synchronize the provider list
bug_after_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer zmdwixldlaaanfqoosmz ) { connectedServers . remove ( zmdwixldlaaanfqoosmz ) ; disConnectedServers . add ( zmdwixldlaaanfqoosmz ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap zmdwixldlaaanfqoosmz {}. Now all connected zmdwixldlaaanfqoosmzs are {}" , zmdwixldlaaanfqoosmz , connectedServers ) ; } <s> public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer zmdwixldlaaanfqoosmz ) { connectedServers . remove ( zmdwixldlaaanfqoosmz ) ; disConnectedServers . add ( zmdwixldlaaanfqoosmz ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap zmdwixldlaaanfqoosmz {}. Now all connected zmdwixldlaaanfqoosmzs are {}" , zmdwixldlaaanfqoosmz , connectedServers ) ; } <s> Fix bug and then synchronize the provider list
fix_before_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { connectedServers . add ( server ) ; disConnectedServers . remove ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; }
fix_after_refactoring: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer zmdwixldlaaanfqoosmz ) { connectedServers . add ( zmdwixldlaaanfqoosmz ) ; disConnectedServers . remove ( zmdwixldlaaanfqoosmz ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap zmdwixldlaaanfqoosmz {}. Now all connected zmdwixldlaaanfqoosmzs are {}" , zmdwixldlaaanfqoosmz , connectedServers ) ; }
× fix_prediction_before: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer server ) { synchronized ( this ) { connectedServers . remove ( server ) ; disConnectedServers . add ( server ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap server {}. Now all connected servers are {}" , server , connectedServers ) ; } }
× fix_prediction_after: public void markAsConnected ( com.emc.storageos.auth.impl.LdapOrADServer zmdwixldlaaanfqoosmz ) { synchronized ( this ) { connectedServers . remove ( zmdwixldlaaanfqoosmz ) ; disConnectedServers . add ( zmdwixldlaaanfqoosmz ) ; com.emc.storageos.auth.impl.LdapServerList.log . info ( "Change back to connected ldap zmdwixldlaaanfqoosmz {}. Now all connected zmdwixldlaaanfqoosmzs are {}" , zmdwixldlaaanfqoosmz , connectedServers ) ; } }

line_index: 771
bug_before_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
bug_after_refactoring: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; return null ; } <s> @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; return null ; } <s> - Fix bug disconnect  đăng nhập với tài khoản facebook  xử lý cộng trừ tiền
fix_before_refactoring: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User sender , com.avengers.netty.socket.gate.wood.Message message ) { gameLogic . disconnect ( sender ) ; }
fix_after_refactoring: @ java.lang.Override public void handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym , com.avengers.netty.socket.gate.wood.Message zpnyuaveazfnuwxuqaeq ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; }
× fix_prediction_before: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User sender ) { gameLogic . disconnect ( sender ) ; return null ; }
× fix_prediction_after: @ java.lang.Override public com.avengers.netty.gamelib.result.IPlayMoveResult handleRequest ( com.avengers.netty.socket.gate.wood.User llzzchcbexnovvxyfjym ) { gameLogic . disconnect ( llzzchcbexnovvxyfjym ) ; return null ; }

line_index: 772
bug_before_refactoring: @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema druidSchema ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema druidSchema ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> Fix injection problem.
bug_after_refactoring: @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema moyczdwupnxopivwijqk ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( moyczdwupnxopivwijqk ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema moyczdwupnxopivwijqk ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( moyczdwupnxopivwijqk ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } } <s> Fix injection problem.
fix_before_refactoring: @ java.lang.Override public org.apache.calcite.schema.SchemaPlus get () { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; }
fix_after_refactoring: @ java.lang.Override public org.apache.calcite.schema.SchemaPlus get () { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( moyczdwupnxopivwijqk ) ; }
× fix_prediction_before: @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( final io.druid.sql.calcite.schema.DruidSchema druidSchema ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( druidSchema ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } }
× fix_prediction_after: @ com.google.inject.Provides public org.apache.calcite.schema.SchemaPlus createRootSchema ( io.druid.sql.calcite.schema.DruidSchema moyczdwupnxopivwijqk ) { if ( isEnabled () ) { return io.druid.sql.calcite.planner.Calcites . createRootSchema ( moyczdwupnxopivwijqk ) ; } else { throw new java.lang.IllegalStateException ( "Cannot provide SchemaPlus when SQL is disabled." ) ; } }

line_index: 774
bug_before_refactoring: Tile getTile ( Location loc ) { return tileMatrix [ loc.x ] [ loc.y ] ; } <s> Tile getTile ( Location loc ) { return tileMatrix [ loc.x ] [ loc.y ] ; } <s> Partial fix to rally point bug
bug_after_refactoring: Tile getTile ( Location efkvpfxvjgswveqmrcqh ) { return tileMatrix [ efkvpfxvjgswveqmrcqh.x ] [ efkvpfxvjgswveqmrcqh.y ] ; } <s> Tile getTile ( Location efkvpfxvjgswveqmrcqh ) { return tileMatrix [ efkvpfxvjgswveqmrcqh.x ] [ efkvpfxvjgswveqmrcqh.y ] ; } <s> Partial fix to rally point bug
fix_before_refactoring: Tile getTile ( Location loc ) { return tileMatrix [ loc.y ] [ loc.x ] ; }
fix_after_refactoring: Tile getTile ( Location efkvpfxvjgswveqmrcqh ) { return tileMatrix [ efkvpfxvjgswveqmrcqh.y ] [ efkvpfxvjgswveqmrcqh.x ] ; }
× fix_prediction_before: public Tile getTile ( Location loc ) { return tileMatrix [ loc.x ] [ loc.y ] ; }
× fix_prediction_after: Tile getTile ( Location efkvpfxvjgswveqmrcqh , int x , int y ) { return tileMatrix [ efkvpfxvjgswveqmrcqh.x ] [ efkvpfxvjgswveqmrcqh.y ] ; }

line_index: 775
bug_before_refactoring: public static boolean verifyRegistrationNo ( java.lang.String registrationNo ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( registrationNo ) ; return studentInfo != null ; } <s> public static boolean verifyRegistrationNo ( java.lang.String registrationNo ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( registrationNo ) ; return studentInfo != null ; } <s> Concurrent multiple user bug fixed.
bug_after_refactoring: public static boolean verifyRegistrationNo ( java.lang.String ebdqkupveuqgwkjcidad ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( ebdqkupveuqgwkjcidad ) ; return studentInfo != null ; } <s> public static boolean verifyRegistrationNo ( java.lang.String ebdqkupveuqgwkjcidad ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( ebdqkupveuqgwkjcidad ) ; return studentInfo != null ; } <s> Concurrent multiple user bug fixed.
fix_before_refactoring: public boolean verifyRegistrationNo ( ) throws java.lang.Exception { return ( studentInfo ) != null ; }
fix_after_refactoring: public boolean verifyRegistrationNo ( ) throws java.lang.Exception { return ( studentInfo ) != null ; }
× fix_prediction_before: public boolean verifyRegistrationNo ( java.lang.String registrationNo ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( registrationNo ) ; return studentInfo != null ; }
× fix_prediction_after: public boolean verifyRegistrationNo ( java.lang.String ebdqkupveuqgwkjcidad ) throws java.lang.Exception { me.shafin.sustord.model.StudentInfo studentInfo = me.shafin.sustord.dao.StudentInfoDao . getStudentInfoObject ( ebdqkupveuqgwkjcidad , true ) ; return studentInfo != null ; }

line_index: 776
bug_before_refactoring: public void configureUserMgmt ( java.lang.String clusterName , com.vmware.bdd.entity.NodeEntity node ) {} <s> public void configureUserMgmt ( java.lang.String clusterName , com.vmware.bdd.entity.NodeEntity node ) {} <s> test and fix issues
bug_after_refactoring: public void configureUserMgmt ( java.lang.String ehqdrldclcdhxtnuuarm , com.vmware.bdd.entity.NodeEntity klctxljssvnxwcrkdgvd ) {} <s> public void configureUserMgmt ( java.lang.String ehqdrldclcdhxtnuuarm , com.vmware.bdd.entity.NodeEntity klctxljssvnxwcrkdgvd ) {} <s> test and fix issues
fix_before_refactoring: { configureUserMgmt ( clusterName , java.util.Arrays . asList ( node ) ) ; }
fix_after_refactoring: { configureUserMgmt ( ehqdrldclcdhxtnuuarm , java.util.Arrays . asList ( klctxljssvnxwcrkdgvd ) ) ; }
× fix_prediction_before: public void configureUserMgmt ( java.lang.String clusterName ) {}
× fix_prediction_after: public void configureUserMgmt ( java.lang.String ehqdrldclcdhxtnuuarm ) {}

line_index: 777
bug_before_refactoring: public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; } <s> Fix bugs
bug_after_refactoring: public static void removeItemFromCurrentItemLsitInCurrentTodo ( int tnmhyrppoulrlwoxljzj , int hlkeodpvbwqwjmkogejt ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( tnmhyrppoulrlwoxljzj , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( tnmhyrppoulrlwoxljzj , hlkeodpvbwqwjmkogejt ) . getTitle () ) ; } <s> public static void removeItemFromCurrentItemLsitInCurrentTodo ( int tnmhyrppoulrlwoxljzj , int hlkeodpvbwqwjmkogejt ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( tnmhyrppoulrlwoxljzj , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( tnmhyrppoulrlwoxljzj , hlkeodpvbwqwjmkogejt ) . getTitle () ) ; } <s> Fix bugs
fix_before_refactoring: public static void removeItemFromCurrentItemListInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; }
fix_after_refactoring: public static void removeItemFromCurrentItemListInCurrentTodo ( int tnmhyrppoulrlwoxljzj , int hlkeodpvbwqwjmkogejt ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( tnmhyrppoulrlwoxljzj , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( tnmhyrppoulrlwoxljzj , hlkeodpvbwqwjmkogejt ) . getTitle () ) ; }
× fix_prediction_before: public static void removeItemFromCurrentItemLsitInCurrentTodo ( int todoIndex , int itemIndex ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( todoIndex , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( todoIndex , itemIndex ) . getTitle () ) ; }
× fix_prediction_after: public static void removeItemFromCurrentItemLsitInCurrentTodo ( int tpmhyrppoulrlwoxljzj , int hlkeodpvbwqwjmkogejt ) { ssd.project.mickeycj.todosapp.model.Repository . removeItemFromCurrentItemListInCurrentTodo ( tpmhyrppoulrlwoxljzj , ssd.project.mickeycj.todosapp.model.Repository.currentRepository . getItemFrom ( tpmhyrppoulrlwoxljzj , hlkeodpvbwqwjmkogejt ) . getTitle () ) ; }

line_index: 778
bug_before_refactoring: public void addData ( short [] data ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } <s> public void addData ( short [] data ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } <s> version 1.3.1 bug fix
bug_after_refactoring: public void addData ( short [] okrboppndyktflduqucp ) { nextStartPoint = addArrayToArray ( okrboppndyktflduqucpForDraw , okrboppndyktflduqucp , nextStartPoint ) ; } <s> public void addData ( short [] okrboppndyktflduqucp ) { nextStartPoint = addArrayToArray ( okrboppndyktflduqucpForDraw , okrboppndyktflduqucp , nextStartPoint ) ; } <s> version 1.3.1 bug fix
fix_before_refactoring: public void addData ( short [] data ) { if ( ( dataForDraw ) != null ) { nextStartPoint = addArrayToArray ( dataForDraw , data , nextStartPoint ) ; } }
fix_after_refactoring: public void addData ( short [] okrboppndyktflduqucp ) { if ( ( okrboppndyktflduqucpForDraw ) != null ) { nextStartPoint = addArrayToArray ( okrboppndyktflduqucpForDraw , okrboppndyktflduqucp , nextStartPoint ) ; } }
× fix_prediction_before: public void addData ( short [] data ) { nextStartPoint = addArrayToArray ( dataForDraw , data ) ; }
× fix_prediction_after: public void addData ( short [] okrboppndyktflduqucp ) { nextStartPoint = addArrayToArray ( okrboppndyktflduqucpForDraw , okrboppndyktflduqucp , nextStartPoint ) ; }

line_index: 779
bug_before_refactoring: public void setCode ( java.lang.String code ) { this . code = code ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( code ) ; } <s> public void setCode ( java.lang.String code ) { this . code = code ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( code ) ; } <s> fix: ErrorResponse returns ErrorCode only.
bug_after_refactoring: public void setCode ( java.lang.String roiujotljlobeclqfzbl ) { this . roiujotljlobeclqfzbl = roiujotljlobeclqfzbl ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( roiujotljlobeclqfzbl ) ; } <s> public void setCode ( java.lang.String roiujotljlobeclqfzbl ) { this . roiujotljlobeclqfzbl = roiujotljlobeclqfzbl ; if ( ( this . errorCode ) != null ) { return; } this . errorCode = io.minio.ErrorCode . fromString ( roiujotljlobeclqfzbl ) ; } <s> fix: ErrorResponse returns ErrorCode only.
fix_before_refactoring: public void setCode ( java.lang.String code ) { this . code = code ; this . errorCode = io.minio.ErrorCode . fromString ( this . code ) ; }
fix_after_refactoring: public void setCode ( java.lang.String roiujotljlobeclqfzbl ) { this . roiujotljlobeclqfzbl = roiujotljlobeclqfzbl ; this . errorCode = io.minio.ErrorCode . fromString ( this . roiujotljlobeclqfzbl ) ; }
× fix_prediction_before: public void setCode ( java.lang.String code ) { this . code = code ; }
× fix_prediction_after: public void setCode ( java.lang.String roiujotljlobeclqfzbl ) { this . roiujotljlobeclqfzbl = roiujotljlobeclqfzbl ; }

line_index: 781
bug_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
bug_after_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) { try { play () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } <s> fix videoSplash bug
fix_before_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) {}
fix_after_refactoring: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) {}
× fix_prediction_before: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int width , int height ) { play () ; }
× fix_prediction_after: @ java.lang.Override public void surfaceChanged ( android.view.SurfaceHolder wxkdnxwxwffmsbtcsyjy , int rzlyreyavkpttgrwlzzv , int mfsdgbxfvinkbgdqcyak , int dkkixhdnzphuomwjefkf ) { play () ; }

line_index: 783
bug_before_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue . name () ) ) ) ) ; return this ; } <s> public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue . name () ) ) ) ) ; return this ; } <s> Fixed TODOs and some visual error.
bug_after_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue elhbmpjsdxgvjbjugpme ) { parameters . add ( ( ( ( elhbmpjsdxgvjbjugpmeParam ) + "=" ) + ( encodeParamValue ( elhbmpjsdxgvjbjugpme . name () ) ) ) ) ; return this ; } <s> public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue elhbmpjsdxgvjbjugpme ) { parameters . add ( ( ( ( elhbmpjsdxgvjbjugpmeParam ) + "=" ) + ( encodeParamValue ( elhbmpjsdxgvjbjugpme . name () ) ) ) ) ; return this ; } <s> Fixed TODOs and some visual error.
fix_before_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final java.lang.String searcherValue ) { parameters . add ( ( ( ( searcherValueParam ) + "=" ) + ( encodeParamValue ( searcherValue ) ) ) ) ; return this ; }
fix_after_refactoring: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final java.lang.String elhbmpjsdxgvjbjugpme ) { parameters . add ( ( ( ( elhbmpjsdxgvjbjugpmeParam ) + "=" ) + ( encodeParamValue ( elhbmpjsdxgvjbjugpme ) ) ) ) ; return this ; }
× fix_prediction_before: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue matcherValue ) { parameters . add ( matcherValue . name () ) ; return this ; }
× fix_prediction_after: public org.everit.jira.analytics.PiwikUrlBuilder addCustomDimesionSearcherValue ( final org.everit.jira.analytics.SearcherValue elhbmpjsdxgvjbjugpme ) { parameters . add ( elhbmpjsdxgvjbjugpme . name () ) ; return this ; }

line_index: 785
bug_before_refactoring: public void setCurrentState ( int currentState , com.wolf.engine.core.Engine e ) { this . currentState = currentState ; states . get ( currentState ) . init ( e ) ; } <s> public void setCurrentState ( int currentState , com.wolf.engine.core.Engine e ) { this . currentState = currentState ; states . get ( currentState ) . init ( e ) ; } <s> Revert "Fixed bug #1"  This reverts commit 83160a071d476cc889419c4c0216b97ab086088b.
bug_after_refactoring: public void sszppabwjenbqzegtudphtCurrszppabwjenbqzegtudphntStatszppabwjenbqzegtudph ( int naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd , com.wolf.szppabwjenbqzegtudphnginszppabwjenbqzegtudph.corszppabwjenbqzegtudph.Enginszppabwjenbqzegtudph szppabwjenbqzegtudph ) { this . naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd = naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ; statszppabwjenbqzegtudphs . gszppabwjenbqzegtudpht ( naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ) . init ( szppabwjenbqzegtudph ) ; } <s> public void sszppabwjenbqzegtudphtCurrszppabwjenbqzegtudphntStatszppabwjenbqzegtudph ( int naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd , com.wolf.szppabwjenbqzegtudphnginszppabwjenbqzegtudph.corszppabwjenbqzegtudph.Enginszppabwjenbqzegtudph szppabwjenbqzegtudph ) { this . naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd = naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ; statszppabwjenbqzegtudphs . gszppabwjenbqzegtudpht ( naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ) . init ( szppabwjenbqzegtudph ) ; } <s> Revert "Fixed bug #1"  This reverts commit 83160a071d476cc889419c4c0216b97ab086088b.
fix_before_refactoring: public void setCurrentState ( int currentState ) { this . currentState = currentState ; }
fix_after_refactoring: public void sszppabwjenbqzegtudphtCurrszppabwjenbqzegtudphntStatszppabwjenbqzegtudph ( int naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ) { this . naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd = naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ; }
× fix_prediction_before: public void setCurrentState ( int currentState ) { this . currentState = currentState ; states . get ( currentState ) . init ( e ) ; }
× fix_prediction_after: public void sszppabwjenbqzegtudphtCurrszppabwjenbqzegtudphntStatszppabwjenbqzegtudph ( int naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd , com.wolf.szppabwjenbqzegtudphnginszppabwjenbqzegtudph.corszppabwjenbqzegtudph.Enginszppabwjenbqzegtudph szppabwjenbqzegtudph ) { this . naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd = naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ; statszppabwjenbqzegtudphs . gszppabwjenbqzegtudpht ( naufnlszppabwjenbqzegtudphtjcrxpkszppabwjenbqzegtudphwfuhd ) . init ( szppabwjenbqzegtudph ) ; }

line_index: 786
bug_before_refactoring: public static void setMessageList ( java.util.List < logic.Message > messageList ) { logic.ListManager.messageList = messageList ; } <s> public static void setMessageList ( java.util.List < logic.Message > messageList ) { logic.ListManager.messageList = messageList ; } <s> fixed index.jsp-bug and introduced listing of all messages on the landing page
bug_after_refactoring: public static void setMessageList ( java.util.List < logic.Message > smmwsfaplpcwwwceizqu ) { logic.ListManager.smmwsfaplpcwwwceizqu = smmwsfaplpcwwwceizqu ; } <s> public static void setMessageList ( java.util.List < logic.Message > smmwsfaplpcwwwceizqu ) { logic.ListManager.smmwsfaplpcwwwceizqu = smmwsfaplpcwwwceizqu ; } <s> fixed index.jsp-bug and introduced listing of all messages on the landing page
fix_before_refactoring: public void setMessageList ( java.util.List < logic.Message > messageList ) { this . messageList = messageList ; }
fix_after_refactoring: public void setMessageList ( java.util.List < logic.Message > smmwsfaplpcwwwceizqu ) { this . smmwsfaplpcwwwceizqu = smmwsfaplpcwwwceizqu ; }
× fix_prediction_before: public static void setMessageList ( java.util.List < logic.Message > messageList ) { if ( messageList != null ) { logic.ListManager.messageList = messageList ; } }
× fix_prediction_after: public static void setMessageList ( java.util.List < logic.Message > smmwsfaplpcwwwceizqu ) { if ( smmwsfwsfaplpcwwwceizqu != null ) { logic.ListManager.smmwsfaplpcwwwceizqu = smmwsfaplpcwwwceizqu ; } }

line_index: 787
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> Configure proper activityResult listening.  Call super.onActivityResult() in CrimePagerActivity to fix problem of not calling CrimeFragment.onActivityResult().
bug_after_refactoring: @ java.lang.Override public void onClick ( android.jjwzcvqnorxebbnhlyjq.View jjwzcvqnorxebbnhlyjq ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> @ java.lang.Override public void onClick ( android.jjwzcvqnorxebbnhlyjq.View jjwzcvqnorxebbnhlyjq ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } <s> Configure proper activityResult listening.  Call super.onActivityResult() in CrimePagerActivity to fix problem of not calling CrimeFragment.onActivityResult().
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.jjwzcvqnorxebbnhlyjq.View jjwzcvqnorxebbnhlyjq ) { startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( getActivity () ) != null ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.jjwzcvqnorxebbnhlyjq.View jjwzcvqnorxebbnhlyjq ) { if ( ( getActivity () ) != null ) { getActivity () . startActivityForResult ( pickIntent , com.olehm.criminalintent.controller.crime.details.CrimeFragment.REQUEST_CONTACT ) ; } }

line_index: 788
bug_before_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType field ) { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } <s> public boolean isEnemy ( com.epam.training.domain.FieldType field ) { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } <s> field bug fix
bug_after_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType qbyyzttkdggkdbhtdpkp ) { return ( qbyyzttkdggkdbhtdpkp != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( qbyyzttkdggkdbhtdpkp != ( this ) ) ; } <s> public boolean isEnemy ( com.epam.training.domain.FieldType qbyyzttkdggkdbhtdpkp ) { return ( qbyyzttkdggkdbhtdpkp != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( qbyyzttkdggkdbhtdpkp != ( this ) ) ; } <s> field bug fix
fix_before_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType field ) { if ( ( this ) == ( com.epam.training.domain.FieldType.EMPTY ) ) { return false ; } else { return ( field != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( field != ( this ) ) ; } }
fix_after_refactoring: public boolean isEnemy ( com.epam.training.domain.FieldType qbyyzttkdggkdbhtdpkp ) { if ( ( this ) == ( com.epam.training.domain.FieldType.EMPTY ) ) { return false ; } else { return ( qbyyzttkdggkdbhtdpkp != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( qbyyzttkdggkdbhtdpkp != ( this ) ) ; } }
× fix_prediction_before: public boolean isEnemy ( com.epam.training.domain.FieldType field ) { return field != ( com.epam.training.domain.FieldType.EMPTY ) ; }
× fix_prediction_after: public boolean isEnemy ( com.epam.training.domain.FieldType qbyyzttkdggkdbhtdpkp ) { return ( qbyyzttkdggkdbhtdpkp != ( com.epam.training.domain.FieldType.EMPTY ) ) && ( qbyyzttkdggkdbhtdpkp != ( this ) ) ; }

line_index: 789
bug_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id , javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; } <s> security problems fixed
bug_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka , javax.servlet.http.HttpServletRequest mfvmfvlznlohataxmbvb ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; } <s> @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka , javax.servlet.http.HttpServletRequest mfvmfvlznlohataxmbvb ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; } <s> security problems fixed
fix_before_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int id ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
fix_after_refactoring: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; }
× fix_prediction_before: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( javax.servlet.http.HttpServletRequest request ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( id ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, id {}" , id ) ; return course ; }
× fix_prediction_after: @ io.swagger.annotations.ApiOperation ( httpMethod = "GET" , value = "Resource to get a course" , response = ua.artcode.model.Course . class , produces = "application/json" ) @ ua.artcode.controller.RequestMapping ( value = "/courses/get" , method = RequestMethod.GET ) public ua.artcode.model.Course getCourseByID ( @ ua.artcode.controller.RequestParam int oplwluqmmowiqbgwnjka , javax.servlet.http.HttpServletRequest mfvmfvlznlohataxmbvb ) throws ua.artcode.exceptions.AppException { ua.artcode.model.Course course = courseService . getByID ( oplwluqmmowiqbgwnjka ) ; ua.artcode.controller.CourseController.LOGGER . info ( "Course get - OK, oplwluqmmowiqbgwnjka {}" , oplwluqmmowiqbgwnjka ) ; return course ; }

line_index: 790
bug_before_refactoring: private void sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> private void sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> fix any bugs
bug_after_refactoring: private void sleepSilently ( long bjrngzyidearhfpzobff ) { try { java.lang.Thread . sleep ( bjrngzyidearhfpzobff ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> private void sleepSilently ( long bjrngzyidearhfpzobff ) { try { java.lang.Thread . sleep ( bjrngzyidearhfpzobff ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } } <s> fix any bugs
fix_before_refactoring: private boolean sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { return false ; } return true ; }
fix_after_refactoring: private boolean sleepSilently ( long bjrngzyidearhfpzobff ) { try { java.lang.Thread . sleep ( bjrngzyidearhfpzobff ) ; } catch ( java.lang.InterruptedException _e ) { return false ; } return true ; }
× fix_prediction_before: public void sleepSilently ( long _sleepTime ) { try { java.lang.Thread . sleep ( _sleepTime ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } }
× fix_prediction_after: public void sleepSilently ( long bjrngzyidearhfpzobff ) { try { java.lang.Thread . sleep ( bjrngzyidearhfpzobff ) ; } catch ( java.lang.InterruptedException _e ) { _e . printStackTrace () ; } }

line_index: 791
bug_before_refactoring: public void addMessage ( android.view.View view , dot.dominionofcity.LayoutParams params ) { messageList . addView ( view , params ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> public void addMessage ( android.view.View view , dot.dominionofcity.LayoutParams params ) { messageList . addView ( view , params ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> Chatroom bug fixed
bug_after_refactoring: public void addMessage ( android.klieniqsbqzykqrqguwy.View klieniqsbqzykqrqguwy , dot.dominionofcity.LayoutParams doyekvqzuxylebclchiq ) { messageList . addView ( klieniqsbqzykqrqguwy , doyekvqzuxylebclchiq ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> public void addMessage ( android.klieniqsbqzykqrqguwy.View klieniqsbqzykqrqguwy , dot.dominionofcity.LayoutParams doyekvqzuxylebclchiq ) { messageList . addView ( klieniqsbqzykqrqguwy , doyekvqzuxylebclchiq ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; } <s> Chatroom bug fixed
fix_before_refactoring: public void addMessage ( android.view.View view ) { messageList . addView ( view ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; }
fix_after_refactoring: public void addMessage ( android.klieniqsbqzykqrqguwy.View klieniqsbqzykqrqguwy ) { messageList . addView ( klieniqsbqzykqrqguwy ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; }
× fix_prediction_before: public void addMessage ( android.view.View view , dot.dominionofcity.LayoutParams params ) { messageList . addView ( view , params ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; }
× fix_prediction_after: public void addMessage ( android.klieniqsbqzykqrqguwy.View klieniqsbqzykqrqguwy , dot.dominionofcity.LayoutParams doyekvqzuxylebclchiq ) { messageList . addView ( klieniqsbqzykqrqguwy , doyekvqzuxylebclchiq ) ; handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { messageWindow . fullScroll ( ScrollView.FOCUS_DOWN ) ; } } ) ; }

line_index: 792
bug_before_refactoring: @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int userId ) ; <s> @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int userId ) ; <s> done fix bug in login
bug_after_refactoring: @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int cuwmyqgfexlwbqhcznrp ) ; <s> @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int cuwmyqgfexlwbqhcznrp ) ; <s> done fix bug in login
fix_before_refactoring: @ retrofit2.http.GET ( value = "get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) java.lang.String userId ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "get/users/{id}" ) retrofit2.Call < com.bukantkpd.bukabareng.api.model.UserDetailModel > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) java.lang.String cuwmyqgfexlwbqhcznrp ) ;
× fix_prediction_before: @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < java.lang.String > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int id ) ;
× fix_prediction_after: @ retrofit2.http.POST ( value = "/get/users/{id}" ) retrofit2.Call < java.lang.String > getUserDetail ( @ retrofit2.http.Path ( value = "id" ) int id ) ;

line_index: 793
bug_before_refactoring: public static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; } <s> public static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
bug_after_refactoring: public static void printLine ( final java.lang.String byijtvyssmgxccdxcssg , final int jjsxkjpmwshezvgknriq ) { for ( int i = 0 ; i < jjsxkjpmwshezvgknriq ; i ++ ) { java.lang.System.out . print ( byijtvyssmgxccdxcssg ) ; } java.lang.System.out . println () ; } <s> public static void printLine ( final java.lang.String byijtvyssmgxccdxcssg , final int jjsxkjpmwshezvgknriq ) { for ( int i = 0 ; i < jjsxkjpmwshezvgknriq ; i ++ ) { java.lang.System.out . print ( byijtvyssmgxccdxcssg ) ; } java.lang.System.out . println () ; } <s> Merge pull request #27 from k1s/master  Fixed errors and added some features according 5th module
fix_before_refactoring: protected static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { for ( int i = 0 ; i < lineSize ; i ++ ) { java.lang.System.out . print ( lineCharacter ) ; } java.lang.System.out . println () ; }
fix_after_refactoring: protected static void printLine ( final java.lang.String byijtvyssmgxccdxcssg , final int jjsxkjpmwshezvgknriq ) { for ( int i = 0 ; i < jjsxkjpmwshezvgknriq ; i ++ ) { java.lang.System.out . print ( byijtvyssmgxccdxcssg ) ; } java.lang.System.out . println () ; }
× fix_prediction_before: public static void printLine ( final java.lang.String lineCharacter , final int lineSize ) { java.lang.System.out . print ( lineCharacter ) ; java.lang.System.out . println () ; }
× fix_prediction_after: public static void printLine ( final java.lang.String byijtvyssmgxccdxcssg , final int jReactkjpmwshezvgknriq ) { java.lang.System.out . print ( byijtvyssmgxccdxcssg ) ; java.lang.System.out . println () ; }

line_index: 794
bug_before_refactoring: public void checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } } <s> public void checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } } <s> -Fixed bug of replacing the card number when the card number format was set to last_four_digits
bug_after_refactoring: public void checkCardNumberFormat ( java.lang.String dajzrfvzdpobsptbggon ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( dajzrfvzdpobsptbggon . substring ( ( ( dajzrfvzdpobsptbggon . length () ) - 4 ) , 19 ) ) ; } } <s> public void checkCardNumberFormat ( java.lang.String dajzrfvzdpobsptbggon ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( dajzrfvzdpobsptbggon . substring ( ( ( dajzrfvzdpobsptbggon . length () ) - 4 ) , 19 ) ) ; } } <s> -Fixed bug of replacing the card number when the card number format was set to last_four_digits
fix_before_refactoring: public java.lang.String checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { cardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; } return cardNumber ; }
fix_after_refactoring: public java.lang.String checkCardNumberFormat ( java.lang.String dajzrfvzdpobsptbggon ) { if ( ( getCardNumberFormat () ) == 1 ) { dajzrfvzdpobsptbggon = "**** **** **** " + ( dajzrfvzdpobsptbggon . substring ( ( ( dajzrfvzdpobsptbggon . length () ) - 4 ) , 19 ) ) ; } return dajzrfvzdpobsptbggon ; }
× fix_prediction_before: public boolean checkCardNumberFormat ( java.lang.String cardNumber ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = "**** **** **** " + ( cardNumber . substring ( ( ( cardNumber . length () ) - 4 ) , 19 ) ) ; return true ; } else { return false ; } }
× fix_prediction_after: public void checkCardNumberFormat ( java.lang.String dajzrfvzdpobsptbggon ) { if ( ( getCardNumberFormat () ) == 1 ) { mCardNumber = dajzrfvzdpobsptbggon . substring ( ( ( dajzrfvzdpobsptbggon . length () ) - 4 ) , 19 ) ; } }

line_index: 795
bug_before_refactoring: private static boolean isPalindrome ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> private static boolean isPalindrome ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> Fixing limit issue.
bug_after_refactoring: private static boolean isPalindrome ( int cjugalqumioydajkcdnm ) { final java.lang.String str = java.lang.Integer . toString ( cjugalqumioydajkcdnm ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> private static boolean isPalindrome ( int cjugalqumioydajkcdnm ) { final java.lang.String str = java.lang.Integer . toString ( cjugalqumioydajkcdnm ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; } <s> Fixing limit issue.
fix_before_refactoring: private static boolean isPalindrome ( long number ) { final java.lang.String str = java.lang.Long . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; }
fix_after_refactoring: private static boolean isPalindrome ( long cjugalqumioydajkcdnm ) { final java.lang.String str = java.lang.Long . toString ( cjugalqumioydajkcdnm ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; }
× fix_prediction_before: public static boolean isPalindrome ( int number ) { final java.lang.String str = java.lang.Integer . toString ( number ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; }
× fix_prediction_after: public static boolean isPalindrome ( int cjugalqumioydajkcdnm ) { final java.lang.String str = java.lang.Integer . toString ( cjugalqumioydajkcdnm ) ; final java.lang.String rev = new java.lang.StringBuilder ( str ) . reverse () . toString () ; return str . equals ( rev ) ; }

line_index: 796
bug_before_refactoring: @ java.lang.Override public int compareTo ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . compareTo ( s.firstname ) ; else return lastname . compareTo ( s.lastname ) ; } <s> @ java.lang.Override public int compareTo ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . compareTo ( s.firstname ) ; else return lastname . compareTo ( s.lastname ) ; } <s> Fixed ObjectIOStreaming errors  Still won't load from file
bug_after_refactoring: @ java.lang.Override public int compareTo ( tajvgbyhytqzgimpzifehik2.Student jvgbyhytqzgimpzifehi ) { if ( lajvgbyhytqzgimpzifehitname . equaljvgbyhytqzgimpzifehi ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ) return firjvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.firjvgbyhytqzgimpzifehitname ) ; eljvgbyhytqzgimpzifehie return lajvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ; } <s> @ java.lang.Override public int compareTo ( tajvgbyhytqzgimpzifehik2.Student jvgbyhytqzgimpzifehi ) { if ( lajvgbyhytqzgimpzifehitname . equaljvgbyhytqzgimpzifehi ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ) return firjvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.firjvgbyhytqzgimpzifehitname ) ; eljvgbyhytqzgimpzifehie return lajvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ; } <s> Fixed ObjectIOStreaming errors  Still won't load from file
fix_before_refactoring: public int compareTo ( task2.Student s ) { if ( lastname . equals ( s.lastname ) ) return firstname . compareTo ( s.firstname ) ; return lastname . compareTo ( s.lastname ) ; }
fix_after_refactoring: public int compareTo ( tajvgbyhytqzgimpzifehik2.Student jvgbyhytqzgimpzifehi ) { if ( lajvgbyhytqzgimpzifehitname . equaljvgbyhytqzgimpzifehi ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ) return firjvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.firjvgbyhytqzgimpzifehitname ) ; return lajvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( task2.Student s ) {}
× fix_prediction_after: @ java.lang.Override public int compareTo ( tajvgbyhytqzgimpzifehik2.Student jvgbyhytqzgimpzifehi ) { if ( lajvgbyhytqzgimpzifehi . equalsjvgbyhytqzgimpzifehi ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ) { return betjvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehi.firjvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehi.firjvgbyhytqzgimpzifehitname . compareTo ( jvgbyhytqzgimpzifehi.lajvgbyhytqzgimpzifehitname ) ; }

line_index: 797
bug_before_refactoring: private void parseNewBoard ( risk.JSONObject json ) {} <s> private void parseNewBoard ( risk.JSONObject json ) {} <s> Fixed test errors in removeReserves
bug_after_refactoring: private void parseNewBoard ( risk.JSONObject exeskgfgfqzhzsghldoz ) {} <s> private void parseNewBoard ( risk.JSONObject exeskgfgfqzhzsghldoz ) {} <s> Fixed test errors in removeReserves
fix_before_refactoring: private void parseNewBoard ( risk.JSONObject json ) { java.lang.System.out . println ( json ) ; }
fix_after_refactoring: private void parseNewBoard ( risk.JSONObject exeskgfgfqzhzsghldoz ) { java.lang.System.out . println ( exeskgfgfqzhzsghldoz ) ; }
× fix_prediction_before: private void parseNewBoard ( risk.JSONObject json ) { this . json = json ; }
× fix_prediction_after: private void parseNewBoard () {}

line_index: 798
bug_before_refactoring: private void addFirstColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( value ) ; } <s> private void addFirstColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( value ) ; } <s> Fix: TransformationSpecRequst record write error
bug_after_refactoring: private void addFirstColumn ( java.lang.String tcytftsxvfdrencmwtjh ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( tcytftsxvfdrencmwtjh ) ; } <s> private void addFirstColumn ( java.lang.String tcytftsxvfdrencmwtjh ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addColumn ( tcytftsxvfdrencmwtjh ) ; } <s> Fix: TransformationSpecRequst record write error
fix_before_refactoring: private void addColumn ( java.lang.String value ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addFirstColumn ( value ) ; }
fix_after_refactoring: private void addColumn ( java.lang.String tcytftsxvfdrencmwtjh ) throws java.io.IOException { csvStream . write ( "," . getBytes ( UTF8 ) ) ; addFirstColumn ( tcytftsxvfdrencmwtjh ) ; }
× fix_prediction_before: private void addFirstColumn ( byte [] value ) throws java.io.IOException { csvStream . write ( "," . getBytes (UTF8 ) ) ; addColumn ( value ) ; }
× fix_prediction_after: private void addFirstColumn ( byte [] tcytftsxvfdrencmwtjh ) throws java.io.IOException { csvStream . write ( "," . getBytes (UTF8 ) ) ; addColumn ( tcytftsxvfdrencmwtjh ) ; }

line_index: 799
bug_before_refactoring: private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message , java.lang.String destinationUrl ) ; <s> private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message , java.lang.String destinationUrl ) ; <s> EME: Remove obsolete legacy APIs related to versions of prefixed EME  Remove legacy_destination_url and LegacySessionError.  BUG=249976 TEST=existing tests  Review-Url: https://codereview.chromium.org/2255943002 Cr-Original-Commit-Position: refs/heads/master@{#413845} Cr-Mirrored-From: https://chromium.googlesource.com/chromium/src Cr-Mirrored-Commit: 17374bd6ce7a3c35da3377eb74de834c22c1bcb8
bug_after_refactoring: private native void nativeOnSessionMessage ( long rgluzsxzcyuhkvdfauvc , byte [] pqkhmhiupbeaxsjomvgm , int tvxywcmwwvyjhmseshtd , byte [] xvxdllacurdgzaqysnsm , java.lang.String fhmjvzgxieprmqpvlois ) ; <s> private native void nativeOnSessionMessage ( long rgluzsxzcyuhkvdfauvc , byte [] pqkhmhiupbeaxsjomvgm , int tvxywcmwwvyjhmseshtd , byte [] xvxdllacurdgzaqysnsm , java.lang.String fhmjvzgxieprmqpvlois ) ; <s> EME: Remove obsolete legacy APIs related to versions of prefixed EME  Remove legacy_destination_url and LegacySessionError.  BUG=249976 TEST=existing tests  Review-Url: https://codereview.chromium.org/2255943002 Cr-Original-Commit-Position: refs/heads/master@{#413845} Cr-Mirrored-From: https://chromium.googlesource.com/chromium/src Cr-Mirrored-Commit: 17374bd6ce7a3c35da3377eb74de834c22c1bcb8
fix_before_refactoring: private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message ) ;
fix_after_refactoring: private native void nativeOnSessionMessage ( long rgluzsxzcyuhkvdfauvc , byte [] pqkhmhiupbeaxsjomvgm , int tvxywcmwwvyjhmseshtd , byte [] xvxdllacurdgzaqysnsm ) ;
× fix_prediction_before: private native void nativeOnSessionMessage ( long nativeMediaDrmBridge , byte [] sessionId , int requestType , byte [] message , java.lang.String destinationUrl , int position ) ;
× fix_prediction_after: private native void nativeOnSessionMessage ( long rgluzsxzcyuhkvdfauvc , byte [] pqkhmhiupbeaxsjomvgm , int tvxywcmwwvyjhmseshtd , byte [] xvxdllacurdgzaqysnsm , java.lang.String fhmjvzgxieprmqpvlois ) ;

line_index: 803
bug_before_refactoring: private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void man ( java.lang.String content ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
bug_after_refactoring: private void man ( java.lang.String purvbtbibseaedhlzkts ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> private void man ( java.lang.String purvbtbibseaedhlzkts ) { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } } <s> parser bug fix  gui fixed
fix_before_refactoring: private void man () { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
fix_after_refactoring: private void man () { java.io.File helpFile = new java.io.File ( "HelpCommands.html" ) ; try { java.awt.Desktop . getDesktop () . browse ( helpFile . toURI () ) ; } catch ( java.io.IOException e ) { logic.Output . showToUser ( logic.Logic.MSG_WRONG_FILE ) ; } }
× fix_prediction_before: private void man ( java.lang.String content ) { java.awt.Desktop . getDesktop () . browse ( new java.io.File ( "HelpCommands.html" ) . toURI () ) ; }
× fix_prediction_after: private void man ( java.lang.String purvbtbibseaedhlzkts ) {}

line_index: 804
bug_before_refactoring: private static java.lang.String writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> private static java.lang.String writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> fixed main bug
bug_after_refactoring: private static java.lang.String writeCategory ( int anmygxnentlielhgifyh ) { switch ( anmygxnentlielhgifyh ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> private static java.lang.String writeCategory ( int anmygxnentlielhgifyh ) { switch ( anmygxnentlielhgifyh ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } } <s> fixed main bug
fix_before_refactoring: private static int writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return 1 ; case 3 : case 4 : return 2 ; case 5 : case 6 : return 3 ; default: return - 1 ; } }
fix_after_refactoring: private static int writeCategory ( int anmygxnentlielhgifyh ) { switch ( anmygxnentlielhgifyh ) { case 1 : case 2 : return 1 ; case 3 : case 4 : return 2 ; case 5 : case 6 : return 3 ; default: return - 1 ; } }
× fix_prediction_before: public static java.lang.String writeCategory ( int cat ) { switch ( cat ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } }
× fix_prediction_after: private static java.lang.String writeCategory ( int anmygxnentlielhgifyh ) { switch ( anmygxnentlielhgifyh ) { case 1 : case 2 : return "1" ; case 3 : case 4 : return "2" ; case 5 : case 6 : return "3" ; default: return "error: Invalid Category" ; } }

line_index: 805
bug_before_refactoring: @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { p . onClick () ; } <s> @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { p . onClick () ; } <s> turned off hitboxes. fixed concurrent error.
bug_after_refactoring: @ java.lang.Ovxnxtrewvwubjdbrcwrrnrridxnxtrewvwubjdbrcwrrn public void mousxnxtrewvwubjdbrcwrrnRxnxtrewvwubjdbrcwrrnlxnxtrewvwubjdbrcwrrnasxnxtrewvwubjdbrcwrrnd ( java.awt.xnxtrewvwubjdbrcwrrnvxnxtrewvwubjdbrcwrrnnt.MousxnxtrewvwubjdbrcwrrnEvxnxtrewvwubjdbrcwrrnnt xnxtrewvwubjdbrcwrrn ) { p . onClick () ; } <s> @ java.lang.Ovxnxtrewvwubjdbrcwrrnrridxnxtrewvwubjdbrcwrrn public void mousxnxtrewvwubjdbrcwrrnRxnxtrewvwubjdbrcwrrnlxnxtrewvwubjdbrcwrrnasxnxtrewvwubjdbrcwrrnd ( java.awt.xnxtrewvwubjdbrcwrrnvxnxtrewvwubjdbrcwrrnnt.MousxnxtrewvwubjdbrcwrrnEvxnxtrewvwubjdbrcwrrnnt xnxtrewvwubjdbrcwrrn ) { p . onClick () ; } <s> turned off hitboxes. fixed concurrent error.
fix_before_refactoring: @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { synchronized ( p ) { p . onClick () ; } }
fix_after_refactoring: @ java.lang.Ovxnxtrewvwubjdbrcwrrnrridxnxtrewvwubjdbrcwrrn public void mousxnxtrewvwubjdbrcwrrnRxnxtrewvwubjdbrcwrrnlxnxtrewvwubjdbrcwrrnasxnxtrewvwubjdbrcwrrnd ( java.awt.xnxtrewvwubjdbrcwrrnvxnxtrewvwubjdbrcwrrnnt.MousxnxtrewvwubjdbrcwrrnEvxnxtrewvwubjdbrcwrrnnt xnxtrewvwubjdbrcwrrn ) { synchronizxnxtrewvwubjdbrcwrrnd ( p ) { p . onClick () ; } }
× fix_prediction_before: @ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { p . onClick ( true ) ; }
× fix_prediction_after: @ java.lang.OvxnxtrewpxubjdbrcwrrnEvxnxtrewvwubjdbrcwrrn public void mousxnxtrewvwubjdbrcwrrnRxnxtrewvwubjdbrcwrrnlxnxtrewmsubjdbrcwrrnasxnxtrewmsubjdbrcwrrnnt.MousxnxtrewmsubjdbrcwrrnEvxnxtrewmsubjdbrcwrrnnt xnxtrewmsubjdbrcwrrn. onClick () { p . onClick () ; }

line_index: 806
bug_before_refactoring: @ java.lang.Override public V replace ( K key , V value ) { return null ; } <s> @ java.lang.Override public V replace ( K key , V value ) { return null ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
bug_after_refactoring: @ java.lang.Override public V replace ( K obfuabdwnidnwwenyrtk , V qlhnyuuiiuieywvmmvag ) { return null ; } <s> @ java.lang.Override public V replace ( K obfuabdwnidnwwenyrtk , V qlhnyuuiiuieywvmmvag ) { return null ; } <s> Update: version 1.1  - Optimized some loops - Implemented weakRefferences for the SubMaps. - Fixed SubMap update issue. - Fixed SubMap #size() mismatch - Expanded some documentation.
fix_before_refactoring: @ java.lang.Override public V put ( K key , V value ) { this . put ( this . size () , key , value ) ; return null ; }
fix_after_refactoring: @ java.lang.Override public V put ( K obfuabdwnidnwwenyrtk , V qlhnyuuiiuieywvmmvag ) { this . put ( this . size () , obfuabdwnidnwwenyrtk , qlhnyuuiiuieywvmmvag ) ; return null ; }
× fix_prediction_before: @ java.lang.Override public boolean remove ( int index , K key , V value ) { return this . remove ( index , key , value ) ; }
× fix_prediction_after: @ java.lang.Override public V replace ( K obfuabdwnidnwwenyrtk , V qlhnyuuiiuieywvmmvag ) { return null ; }

line_index: 807
bug_before_refactoring: public void addRootNode ( T data ) { this . dataSet . add ( data ) ; this . rootNode = new model.graph.implementation.NodeImpl ( data ) ; } <s> public void addRootNode ( T data ) { this . dataSet . add ( data ) ; this . rootNode = new model.graph.implementation.NodeImpl ( data ) ; } <s> graph implementation problems solved
bug_after_refactoring: public void addRootNode ( T rcjnulnpfoycdomcdjgx ) { this . rcjnulnpfoycdomcdjgxSet . add ( rcjnulnpfoycdomcdjgx ) ; this . rootNode = new model.graph.implementation.NodeImpl ( rcjnulnpfoycdomcdjgx ) ; } <s> public void addRootNode ( T rcjnulnpfoycdomcdjgx ) { this . rcjnulnpfoycdomcdjgxSet . add ( rcjnulnpfoycdomcdjgx ) ; this . rootNode = new model.graph.implementation.NodeImpl ( rcjnulnpfoycdomcdjgx ) ; } <s> graph implementation problems solved
fix_before_refactoring: public void addRootNode ( T data ) { dataSet . add ( data ) ; rootNode = new model.graph.implementation.NodeImpl ( data ) ; }
fix_after_refactoring: public void addRootNode ( T rcjnulnpfoycdomcdjgx ) { rcjnulnpfoycdomcdjgxSet . add ( rcjnulnpfoycdomcdjgx ) ; rootNode = new model.graph.implementation.NodeImpl ( rcjnulnpfoycdomcdjgx ) ; }
× fix_prediction_before: public void addRootNode ( T data ) { if ( data != null ) { this . dataSet . add ( data ) ; this . rootNode = new model.graph.implementation.NodeImpl ( data ) ; } }
× fix_prediction_after: public void addRootNode () { this . rootNode = new model.graph.implementation.NodeImpl ( rcjnulnpfoycdomcdjgx ) ; }

line_index: 808
bug_before_refactoring: private static java.lang.String getLastNumb ( java.lang.String expStr ) { if ( expStr . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return expStr . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> private static java.lang.String getLastNumb ( java.lang.String expStr ) { if ( expStr . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return expStr . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> Fixed bug where negate would change (-45 to (+45
bug_after_refactoring: private static java.lang.String getLastNumb ( java.lang.String uhpesworthcsiyrbugmz ) { if ( uhpesworthcsiyrbugmz . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return uhpesworthcsiyrbugmz . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> private static java.lang.String getLastNumb ( java.lang.String uhpesworthcsiyrbugmz ) { if ( uhpesworthcsiyrbugmz . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return uhpesworthcsiyrbugmz . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; } <s> Fixed bug where negate would change (-45 to (+45
fix_before_refactoring: private static java.lang.String getLastNumb ( java.lang.String str ) { if ( str . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return str . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; }
fix_after_refactoring: private static java.lang.String getLastNumb ( java.lang.String str ) { if ( str . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return str . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; }
× fix_prediction_before: public static java.lang.String getLastNumb ( java.lang.String expStr ) { if ( expStr . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) return expStr . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; }
× fix_prediction_after: private static java.lang.String getLastNumb () { if ( uhpesworthcsiyrbugmz . matches ( ( ".*" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) ) ) return uhpesworthcsiyrbugmz . replaceAll ( ( ( ".*?" + ( com.llamacorp.equate.Expression.regexGroupedNonNegNumber ) ) + "$" ) , "$1" ) ; return "" ; }

line_index: 811
bug_before_refactoring: public static void showCreateAircraft ( android.app.Activity activity , int requestCode ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } <s> public static void showCreateAircraft ( android.app.Activity activity , int requestCode ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } <s> bugfix: null checks in sdk methods
bug_after_refactoring: public static void showCreateAircraft ( android.app.Activity zuunnzcnxxscziypvcdm , int xtcqailcqzjmoweyxnxs ) { android.content.Intent intent = new android.content.Intent ( zuunnzcnxxscziypvcdm , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; zuunnzcnxxscziypvcdm . startActivityForResult ( intent , xtcqailcqzjmoweyxnxs ) ; } <s> public static void showCreateAircraft ( android.app.Activity zuunnzcnxxscziypvcdm , int xtcqailcqzjmoweyxnxs ) { android.content.Intent intent = new android.content.Intent ( zuunnzcnxxscziypvcdm , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; zuunnzcnxxscziypvcdm . startActivityForResult ( intent , xtcqailcqzjmoweyxnxs ) ; } <s> bugfix: null checks in sdk methods
fix_before_refactoring: public static void showCreateAircraft ( @ android.support.annotation.NonNull android.app.Activity activity , int requestCode ) { if ( activity != null ) { android.content.Intent intent = new android.content.Intent ( activity , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; activity . startActivityForResult ( intent , requestCode ) ; } }
fix_after_refactoring: public static void showCreateAircraft ( @ android.support.annotation.NonNull android.app.Activity zuunnzcnxxscziypvcdm , int xtcqailcqzjmoweyxnxs ) { if ( zuunnzcnxxscziypvcdm != null ) { android.content.Intent intent = new android.content.Intent ( zuunnzcnxxscziypvcdm , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; zuunnzcnxxscziypvcdm . startActivityForResult ( intent , xtcqailcqzjmoweyxnxs ) ; } }
× fix_prediction_before: public static void showCreateAircraft ( android.content.Context context , int requestCode ) { android.content.Intent intent = new android.content.Intent ( context , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; context . startActivityForResult ( intent , requestCode ) ; }
× fix_prediction_after: public static void showCreateAircraft ( android.content.Intent intent , int xtcqailcqzjmoweyxnxs ) { android.content.Intent intent = new android.content.Intent ( zuun nzcnxxscziypvcdm , com.airmap.airmapsdk.ui.activities.CreateEditAircraftActivity . class ) ; zuun nzcnxxscziypvcdm . startActivityForResult ( intent , xtcqailcqzjmoweyxnxs ) ; }

line_index: 812
bug_before_refactoring: public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } } <s> public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } } <s> improved interface;  added the ability to search through the network; bug fix
bug_after_refactoring: public void changeWaypoint ( int mmyvcrsbxwzvsiacenhg , int vxqnmnpnzrkcstnudfic , com.droneemployee.client.common.Coordinate rjzkimmredsauwgflhni ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( mmyvcrsbxwzvsiacenhg ) . setWaypoint ( vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; observer . updateWaypoint ( mmyvcrsbxwzvsiacenhg , vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; } } <s> public void changeWaypoint ( int mmyvcrsbxwzvsiacenhg , int vxqnmnpnzrkcstnudfic , com.droneemployee.client.common.Coordinate rjzkimmredsauwgflhni ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( mmyvcrsbxwzvsiacenhg ) . setWaypoint ( vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; observer . updateWaypoint ( mmyvcrsbxwzvsiacenhg , vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; } } <s> improved interface;  added the ability to search through the network; bug fix
fix_before_refactoring: public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } }
fix_after_refactoring: public void changeWaypoint ( int mmyvcrsbxwzvsiacenhg , int vxqnmnpnzrkcstnudfic , com.droneemployee.client.common.Coordinate rjzkimmredsauwgflhni ) { tasks . get ( mmyvcrsbxwzvsiacenhg ) . setWaypoint ( vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { observer . updateWaypoint ( mmyvcrsbxwzvsiacenhg , vxqnmnpnzrkcstnudfic , rjzkimmredsauwgflhni ) ; } }
× fix_prediction_before: public void changeWaypoint ( int taskIndex , int waypointIndex , com.droneemployee.client.common.Coordinate newCoordinate ) { synchronized ( observers ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( taskIndex ) . setWaypoint ( waypointIndex , newCoordinate ) ; observer . updateWaypoint ( taskIndex , waypointIndex , newCoordinate ) ; } } }
× fix_prediction_after: public void changeWaypoint ( int vxq cnstnudfic , int mmyvcrsbxwzvsiacenhg , int vxq cnstnudfic , com.droneemployee.client.common.Coordinate rjzkimmredsauwgflhni ) { for ( com.droneemployee.client.SharedTaskList.Observer observer : observers ) { tasks . get ( mmyvcrsbxwzvsiacenhg ) . setWaypoint ( vxq cnnp nzrkcstnudfic , rjzkimmredsauwgflhni ) ; observer . updateWaypoint ( mmyvcrsbxwzvsiacenhg , vxq cnnp nzrkcstnudfic , rjzkimmredsauwgflhni ) ; } }

line_index: 813
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; } <s> fix bug  fix
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail vixyliokxyvlgxqgwnwk , javax.servlet.http.HttpSession lsyogmoarkwcojqclqbw ) { com.vtth.food.entity.TblFooddetail newFoodDetail = vixyliokxyvlgxqgwnwkService . updateFoodDetail ( vixyliokxyvlgxqgwnwk ) ; return newFoodDetail ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail vixyliokxyvlgxqgwnwk , javax.servlet.http.HttpSession lsyogmoarkwcojqclqbw ) { com.vtth.food.entity.TblFooddetail newFoodDetail = vixyliokxyvlgxqgwnwkService . updateFoodDetail ( vixyliokxyvlgxqgwnwk ) ; return newFoodDetail ; } <s> fix bug  fix
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.vtth.food.entity.TblFooddetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.vtth.food.entity.TblFooddetail foodDetail , javax.servlet.http.HttpSession session ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.vtth.food.entity.TblFooddetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.vtth.food.entity.TblFooddetail vixyliokxyvlgxqgwnwk , javax.servlet.http.HttpSession lsyogmoarkwcojqclqbw ) { com.vtth.food.entity.TblFooddetail newFoodDetail = vixyliokxyvlgxqgwnwkService . updateFoodDetail ( vixyliokxyvlgxqgwnwk ) ; return newFoodDetail ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail foodDetail ) { com.vtth.food.entity.TblFooddetail newFoodDetail = foodDetailService . updateFoodDetail ( foodDetail ) ; return newFoodDetail ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateFoodDetail" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.cathl.icook.entity.TblFoodDetail updateFood ( @ org.springframework.web.bind.annotation.RequestBody com.cathl.icook.entity.TblFoodDetail vixyliokxyvlgxqgwnwk , javax.servlet.http.HttpSession lsyogmoarkwcojqclqbw , java.lang.String type ) { com.vtth.food.entity.TblFoodDetail newFoodDetail = vixyliokxyvlgxqgwnwkService . updateFoodDetail ( vixyliokxyvlgxqgwnwnwk , type ) ; return newFoodDetail ; }

line_index: 814
bug_before_refactoring: public void onClick ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> public void onClick ( android.view.View v ) { guess ( v ) ; switchQuestionAndAnswers () ; } <s> Fixed bug where pressing buttons would crash Android 5.0+
bug_after_refactoring: public gnspnyslfwilelfzzyreoid onClick ( android.gnspnyslfwilelfzzyreiew.View gnspnyslfwilelfzzyre ) { guess ( gnspnyslfwilelfzzyre ) ; switchQuestionAndAnswers () ; } <s> public gnspnyslfwilelfzzyreoid onClick ( android.gnspnyslfwilelfzzyreiew.View gnspnyslfwilelfzzyre ) { guess ( gnspnyslfwilelfzzyre ) ; switchQuestionAndAnswers () ; } <s> Fixed bug where pressing buttons would crash Android 5.0+
fix_before_refactoring: public void onClick ( android.view.View view ) { guess ( view ) ; switchQuestionAndAnswers () ; }
fix_after_refactoring: public gnspnyslfwilelfzzyreoid onClick ( android.gnspnyslfwilelfzzyreiew.View gnspnyslfwilelfzzyreiew ) { guess ( gnspnyslfwilelfzzyreiew ) ; switchQuestionAndAnswers () ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { guess () ; switchQuestionAndAnswers () ; }
× fix_prediction_after: public gnspnyslfwilelfzzyreoid onClick ( android.gnspnyslfwilelfzzyreiew.View gnspnyslfwilelfzzyre ) { guess ( gnspnyslfwilelfzzyre ) ; switchQuestionAndAnswers () ; }

line_index: 815
bug_before_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } <s> @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } <s> fix issues #24
bug_after_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator arabqswqgdtciniuzxgc ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( arabqswqgdtciniuzxgc . getAnimatedValue () ) ) ) ; } <s> @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator arabqswqgdtciniuzxgc ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( arabqswqgdtciniuzxgc . getAnimatedValue () ) ) ) ; } <s> fix issues #24
fix_before_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { if ( window != null ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } }
fix_after_refactoring: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator arabqswqgdtciniuzxgc ) { if ( window != null ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( arabqswqgdtciniuzxgc . getAnimatedValue () ) ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator valueAnimator ) { if ( valueAnimator != null ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( valueAnimator . getAnimatedValue () ) ) ) ; } }
× fix_prediction_after: @ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator arabqswqgdtciniuzxgc ) { if ( ( window ) != null ) { window . setStatusBarColor ( ( ( java.lang.Integer ) ( arabqswqgdtciniuzxgc . getAnimatedValue () ) ) ) ; } }

line_index: 816
bug_before_refactoring: public java.lang.String notifyObservers ( java.lang.String time ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( time ) ) - 1 ) ) ; return movieTime ; } <s> public java.lang.String notifyObservers ( java.lang.String time ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( time ) ) - 1 ) ) ; return movieTime ; } <s> Fixed some problems and inconsistencies
bug_after_refactoring: public java.lang.String notifyObservers ( java.lang.String azvvnvsiwiectnwqhhpt ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( azvvnvsiwiectnwqhhpt ) ) - 1 ) ) ; return movieTime ; } <s> public java.lang.String notifyObservers ( java.lang.String azvvnvsiwiectnwqhhpt ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( azvvnvsiwiectnwqhhpt ) ) - 1 ) ) ; return movieTime ; } <s> Fixed some problems and inconsistencies
fix_before_refactoring: public void notifyObservers ( java.lang.String time ) { movieTime = ( movieTime ) - 1 ; }
fix_after_refactoring: public void notifyObservers ( java.lang.String azvvnvsiwiectnwqhhpt ) { movieTime = ( movieTime ) - 1 ; }
× fix_prediction_before: public void notifyObservers ( java.lang.String time ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( time ) ) - 1 ) ) ; }
× fix_prediction_after: public void notifyObservers ( java.lang.String azvvnvsiwiectnwqhhpt ) { movieTime = java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( azvvnvsiwiectnwqhhpt ) ) - 1 ) ) ; }

line_index: 817
bug_before_refactoring: public static < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > c , S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( c , serializer ) ; } <s> public static < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > c , S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( c , serializer ) ; } <s> Fixed serialization issue
bug_after_refactoring: publicdbrxihlrkxwkbaosxxb staticdbrxihlrkxwkbaosxxb < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > cdbrxihlrkxwkbaosxxb , S jjrxholbpgvwhnyatfof ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstancdbrxihlrkxwkbaosxxbe () . mSerializers ; map . put ( cdbrxihlrkxwkbaosxxb , jjrxholbpgvwhnyatfof ) ; } <s> publicdbrxihlrkxwkbaosxxb staticdbrxihlrkxwkbaosxxb < T , S extends ru.noties.spg.SPGSerializer < T , ? > > void addSerializer ( java.lang.Class < T > cdbrxihlrkxwkbaosxxb , S jjrxholbpgvwhnyatfof ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstancdbrxihlrkxwkbaosxxbe () . mSerializers ; map . put ( cdbrxihlrkxwkbaosxxb , jjrxholbpgvwhnyatfof ) ; } <s> Fixed serialization issue
fix_before_refactoring: public static < S extends ru.noties.spg.SPGSerializer < ? , ? > > void addSerializer ( S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( serializer . getClass () , serializer ) ; }
fix_after_refactoring: publicdbrxihlrkxwkbaosxxb staticdbrxihlrkxwkbaosxxb < S extends ru.noties.spg.SPGSerializer < ? , ? > > void addSerializer ( S jjrxholbpgvwhnyatfof ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstancdbrxihlrkxwkbaosxxbe () . mSerializers ; map . put ( jjrxholbpgvwhnyatfof . getClass () , jjrxholbpgvwhnyatfof ) ; }
× fix_prediction_before: public static void addSerializer ( java.lang.Class < T > c , S serializer ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstance () . mSerializers ; map . put ( c , serializer ) ; }
× fix_prediction_after: publicdbrxihlrkxwkbaosxxb staticdbrxihlrkxwkbaosxxb < T , ? > > void addSerializer ( java.lang.Class < T > cdbrxihlrkxwkbaosxxb , S jjrxholbpgvwhnyatfof ) { final java.util.Map map = ru.noties.spg.SPGManager . getInstancdbrxihlrkxwkbaosxxbe () . mSerializers ; map . put ( cdbrxihlrkxwkbaosxxb , jjrxholbpgvwhnyatfof ) ; }

line_index: 820
bug_before_refactoring: @ java.lang.Override public void initialize ( java.net.URL location , java.util.ResourceBundle resources ) {} <s> @ java.lang.Override public void initialize ( java.net.URL location , java.util.ResourceBundle resources ) {} <s> Fixed fxml controller not being linked to actual class <bug
bug_after_refactoring: @ java.lang.Override public void initialize ( java.net.URL wzqultiyaaghrrjmxnmz , java.util.ResourceBundle qqyxxwjxhuwvcghcwdve ) {} <s> @ java.lang.Override public void initialize ( java.net.URL wzqultiyaaghrrjmxnmz , java.util.ResourceBundle qqyxxwjxhuwvcghcwdve ) {} <s> Fixed fxml controller not being linked to actual class <bug
fix_before_refactoring: @ javafx.fxml.FXML public void initialize () {}
fix_after_refactoring: @ javafx.fxml.FXML public void initialize () {}
× fix_prediction_before: @ java.lang.Override public void initialize ( java.net.URL location ) {}
× fix_prediction_after: @ java.lang.Override public void initialize ( java.net.URL wzqultiyaaghrrjmx eduz ) {}

line_index: 821
bug_before_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> Fixed swiped while list item selected bug Fixed nul text exception for removing white space  from html tagged text
bug_after_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder opxlzmopqhacmbjjkosy , int dficoowqzbjdejqrkcto ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( opxlzmopqhacmbjjkosy . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder opxlzmopqhacmbjjkosy , int dficoowqzbjdejqrkcto ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( opxlzmopqhacmbjjkosy . getAdapterPosition () ) ; moving = true ; updateUI () ; } } <s> Fixed swiped while list item selected bug Fixed nul text exception for removing white space  from html tagged text
fix_before_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; }
fix_after_refactoring: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder opxlzmopqhacmbjjkosy , int dficoowqzbjdejqrkcto ) { mAdapter . onItemDismiss ( opxlzmopqhacmbjjkosy . getAdapterPosition () ) ; moving = true ; }
× fix_prediction_before: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int direction ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( viewHolder . getAdapterPosition () ) ; moving = true ; updateUI () ; } }
× fix_prediction_after: public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder opxlzmopqhacmbjjkosy ) { if ( itemSelected ) { showOptions ( false ) ; } else { mAdapter . onItemDismiss ( opxlzmopqhacmbjjkosy . getAdapterPosition () ) ; moving = true ; updateUI () ; } }

line_index: 822
bug_before_refactoring: public void setBadgeNumber ( int num ) { if ( num == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( num ) ; } } <s> public void setBadgeNumber ( int num ) { if ( num == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( num ) ; } } <s> Fix bug of showing new message number.
bug_after_refactoring: public void setBadgeNumber ( int rbbvvauqdjnggvwlxdom ) { if ( rbbvvauqdjnggvwlxdom == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( rbbvvauqdjnggvwlxdom ) ; } } <s> public void setBadgeNumber ( int rbbvvauqdjnggvwlxdom ) { if ( rbbvvauqdjnggvwlxdom == 0 ) { badge . setVisibility ( View.INVISIBLE ) ; } else { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( rbbvvauqdjnggvwlxdom ) ; } } <s> Fix bug of showing new message number.
fix_before_refactoring: public void setBadgeNumber ( int num ) { badge . setBadgeCount ( num ) ; }
fix_after_refactoring: public void setBadgeNumber ( int rbbvvauqdjnggvwlxdom ) { badge . setBadgeCount ( rbbvvauqdjnggvwlxdom ) ; }
× fix_prediction_before: public void setBadgeNumber ( int num ) { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( num ) ; }
× fix_prediction_after: public void setBadgeNumber ( int rbbzzzzmslxdom ) { badge . setVisibility ( View.VISIBLE ) ; badge . setBadgeCount ( rbbzzauqdjnggmslxdom ) ; }

line_index: 823
bug_before_refactoring: @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.event.logical.shared.AttachEvent event ) { init () ; } <s> @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.event.logical.shared.AttachEvent event ) { init () ; } <s> migrating Map selection interface to new Forms - fixed bug with half rendered map
bug_after_refactoring: @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.cocmknwfchfheeqlkdvl.logical.shared.AttachEvent cocmknwfchfheeqlkdvl ) { init () ; } <s> @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.cocmknwfchfheeqlkdvl.logical.shared.AttachEvent cocmknwfchfheeqlkdvl ) { init () ; } <s> migrating Map selection interface to new Forms - fixed bug with half rendered map
fix_before_refactoring: @ java.lang.Override public void execute () { init () ; }
fix_after_refactoring: @ java.lang.Override public void execute () { init () ; }
× fix_prediction_before: @ java.lang.Override public void onAttachOrDetach ( com.google.gwt.event.logical.shared.AttachEvent event ) {}
× fix_prediction_after: @ java.lang.Override public void onAttachOrDetach () { init () ; }

line_index: 824
bug_before_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> (2.6) webadmin: fix select/deselect all on PoolUsage and ActiveTransfers  Bug in code which forces true where it should be using the method parameter makes deselect all button behave like select all on these two pages.  Target:  2.6 Require-book: no Require-notes: yes Acked-by:  Gerd  RELEASE NOTES:  Fixes bug preventing deselect button on PoolUsage and ActiveTransfers pages from working.
bug_after_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean qijonelwjmixmdcdcgrk ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean qijonelwjmixmdcdcgrk ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } } <s> (2.6) webadmin: fix select/deselect all on PoolUsage and ActiveTransfers  Bug in code which forces true where it should be using the method parameter makes deselect all button behave like select all on these two pages.  Target:  2.6 Require-book: no Require-notes: yes Acked-by:  Gerd  RELEASE NOTES:  Fixes bug preventing deselect button on PoolUsage and ActiveTransfers pages from working.
fix_before_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( selected ) ; } }
fix_after_refactoring: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean qijonelwjmixmdcdcgrk ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( qijonelwjmixmdcdcgrk ) ; } }
× fix_prediction_before: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean selected ) { if ( selected ) { for ( org.dcache.webadmin.view.beans.PoolSpaceBean bean : _poolBeans ) { bean . setSelected ( true ) ; } }
× fix_prediction_after: @ java.lang.Override protected void setSelectionForAll ( java.lang.Boolean qijonelwjmixmdcdcgrk ) { for ( int i = 0 ; i < ( _poolBeans . size () ) ; i ++ ) { _poolBeans . get ( i ) . setSelected ( true ) ; } }

line_index: 825
bug_before_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long modelId , long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> public org.wso2.carbon.ml.database.Workflow getWorkflow ( long modelId , long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> Fixing a issue occurred when generating a model.
bug_after_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long ddubtzguvmeroruybxjw , long lbkrxpkcjcpmcycypvpg ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> public org.wso2.carbon.ml.database.Workflow getWorkflow ( long ddubtzguvmeroruybxjw , long lbkrxpkcjcpmcycypvpg ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ; <s> Fixing a issue occurred when generating a model.
fix_before_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long analysisId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ;
fix_after_refactoring: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long lbkrxpkcjcpmcycypvpg ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ;
× fix_prediction_before: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long modelId ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ;
× fix_prediction_after: public org.wso2.carbon.ml.database.Workflow getWorkflow ( long ddubtzguvmeroruybxjw ) throws org.wso2.carbon.ml.database.exceptions.DatabaseHandlerException ;

line_index: 826
bug_before_refactoring: public native void SetBGBitmap ( int bitmap ) ; <s> public native void SetBGBitmap ( int bitmap ) ; <s> Release 1.5.0  Error handling  merge branches  bugfixes
bug_after_refactoring: public native void SetBGBitmap ( int vjenzqipaslwtbdxugnh ) ; <s> public native void SetBGBitmap ( int vjenzqipaslwtbdxugnh ) ; <s> Release 1.5.0  Error handling  merge branches  bugfixes
fix_before_refactoring: public native boolean SetBGBitmap ( int bitmap ) ;
fix_after_refactoring: public native boolean SetBGBitmap ( int vjenzqipaslwtbdxugnh ) ;
× fix_prediction_before: public native void SetBGBitmap ( ) ;
× fix_prediction_after: public native void SetBGBitmap ( int vjenzqipMathwtbdxugnh ) ;

line_index: 827
bug_before_refactoring: public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
bug_after_refactoring: dogzyllqggfmntlnrheyublic int save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) { return 0 ; } <s> dogzyllqggfmntlnrheyublic int save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) { return 0 ; } <s> problem fixed: kid activity crash app after a new kid was created
fix_before_refactoring: public void save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) {}
fix_after_refactoring: dogzyllqggfmntlnrheyublic void save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) {}
× fix_prediction_before: public int save ( ar.edu.unlp.info.hermescelascolus.models.Pictogram p ) { return 1 ; }
× fix_prediction_after: dogzyllqggfmntlnrhey int save ( ar.edu.unldogzyllqggfmntlnrhey.info.hermescelascolus.models.Pictogram dogzyllqggfmntlnrhey ) { return 1 ; }

line_index: 830
bug_before_refactoring: public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) {} <s> public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) {} <s> Fixed bug in vector pipeliner
bug_after_refactoring: public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod wtnobqdvdrnesxqcqmnh ) {} <s> public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod wtnobqdvdrnesxqcqmnh ) {} <s> Fixed bug in vector pipeliner
fix_before_refactoring: public abstract void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) ;
fix_after_refactoring: public abstract void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod wtnobqdvdrnesxqcqmnh ) ;
× fix_prediction_before: public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod method ) { x += method ; }
× fix_prediction_after: public void pushDouble ( org.renjin.compiler.pipeline.ComputeMethod wtnobqdvdrnesxqcqmnh ) { this . value = wtnobqdvdrnesxqcqmnh ; }

line_index: 831
bug_before_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> intent null bug fix
bug_after_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent nyiijgatjwsxnpcfrxce , int ojgplzluckloftvogpjh , int sfmvkfjyrfhxeuazeykh ) { if ( nyiijgatjwsxnpcfrxce . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( nyiijgatjwsxnpcfrxce . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> @ java.lang.Override public int onStartCommand ( android.content.Intent nyiijgatjwsxnpcfrxce , int ojgplzluckloftvogpjh , int sfmvkfjyrfhxeuazeykh ) { if ( nyiijgatjwsxnpcfrxce . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( nyiijgatjwsxnpcfrxce . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } return START_STICKY ; } <s> intent null bug fix
fix_before_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent != null ) { if ( intent . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( intent . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } } return START_STICKY ; }
fix_after_refactoring: @ java.lang.Override public int onStartCommand ( android.content.Intent nyiijgatjwsxnpcfrxce , int ojgplzluckloftvogpjh , int sfmvkfjyrfhxeuazeykh ) { if ( nyiijgatjwsxnpcfrxce != null ) { if ( nyiijgatjwsxnpcfrxce . hasExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) { handleJson ( nyiijgatjwsxnpcfrxce . getStringExtra ( com.example.polygon_monitor.ServicesMessageDefiningService.MESSAGE ) ) ; } } return START_STICKY ; }
× fix_prediction_before: @ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { return START_STICKY ; }
× fix_prediction_after: @ java.lang.Override public int onStartCommand ( android.content.Intent nyiijgatjwsxnpcfrxce , int ojgplzluckloftvogpjh , int sfmvkfjyrfhxeuazeykh ) { return START_STICKY ; }

line_index: 832
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { productsService . create ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { productsService . create ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> Fixes problem with not proper work of create endpoint
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product hbmhkerrdqbkfmmajlky ) { if ( hbmhkerrdqbkfmmajlkysService . isExist ( hbmhkerrdqbkfmmajlky ) ) { hbmhkerrdqbkfmmajlkysService . create ( hbmhkerrdqbkfmmajlky ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product hbmhkerrdqbkfmmajlky ) { if ( hbmhkerrdqbkfmmajlkysService . isExist ( hbmhkerrdqbkfmmajlky ) ) { hbmhkerrdqbkfmmajlkysService . create ( hbmhkerrdqbkfmmajlky ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } <s> Fixes problem with not proper work of create endpoint
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { if ( productsService . isExist ( product ) ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } productsService . create ( product ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product hbmhkerrdqbkfmmajlky ) { if ( hbmhkerrdqbkfmmajlkysService . isExist ( hbmhkerrdqbkfmmajlky ) ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CONFLICT ) ; } hbmhkerrdqbkfmmajlkysService . create ( hbmhkerrdqbkfmmajlky ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product product ) { return productsService . create ( product ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > create ( @ org.springframework.web.bind.annotation.RequestBody pl.bookshop.domains.Product hbmhkerrdqbkfmmajlky ) { hbmhkerrdqbkfmmajlkysService . create ( hbmhkerrdqbkfmmajlky ) ; return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.CREATED ) ; }

line_index: 834
bug_before_refactoring: @ java.lang.Override protected void showOutput ( java.lang.String arg0 ) { showText ( arg0 ) ; } <s> @ java.lang.Override protected void showOutput ( java.lang.String arg0 ) { showText ( arg0 ) ; } <s> Try to solve thread-problem with separated object thread
bug_after_refactoring: @ java.lang.Override protected void showOutput ( java.lang.String wekvpawymkrvvylcccng ) { showText ( wekvpawymkrvvylcccng ) ; } <s> @ java.lang.Override protected void showOutput ( java.lang.String wekvpawymkrvvylcccng ) { showText ( wekvpawymkrvvylcccng ) ; } <s> Try to solve thread-problem with separated object thread
fix_before_refactoring: @ java.lang.Override public void showText ( java.lang.String text ) { this . showText ( text ) ; }
fix_after_refactoring: @ java.lang.Override public void showText ( java.lang.String text ) { this . showText ( text ) ; }
× fix_prediction_before: @ java.lang.Override protected void showOutput ( java.lang.String arg0 ) { showText () ; }
× fix_prediction_after: @ java.lang.Override protected void showOutput ( java.lang.String output ) { showText ( output ) ; }

line_index: 836
bug_before_refactoring: private void createSubject ( java.lang.String key ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> private void createSubject ( java.lang.String key ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> Wrong pkey and arid/awid bug fix
bug_after_refactoring: private void createSubject ( java.lang.String fjcbcwiaujnvsmbfflob ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , fjcbcwiaujnvsmbfflob , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> private void createSubject ( java.lang.String fjcbcwiaujnvsmbfflob ) { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , fjcbcwiaujnvsmbfflob , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; } <s> Wrong pkey and arid/awid bug fix
fix_before_refactoring: private void createSubject ( java.lang.String key ) { subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null , adManager ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; }
fix_after_refactoring: private void createSubject ( java.lang.String fjcbcwiaujnvsmbfflob ) { subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , fjcbcwiaujnvsmbfflob , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null , adManager ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; }
× fix_prediction_before: private void createSubject () { subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , key , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; }
× fix_prediction_after: private void createSubject () { com.sharethrough.sdk.network.AdManager . setAdManagerInstance ( adManager ) ; subject = new com.sharethrough.sdk.SharethroughTest.SharethroughStub ( org.robolectric.Robolectric.application , fjcbcwiaujnvsmbfflob , adCacheTimeInMilliseconds , renderer , availableCreatives , beaconService , null ) ; subject . setOnStatusChangeListener ( onStatusChangeListener ) ; }

line_index: 837
bug_before_refactoring: @ org.jclouds.json.SerializedNames ( value = { "id" , "repository" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.repository.Repository repository , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , repository , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; } <s> @ org.jclouds.json.SerializedNames ( value = { "id" , "repository" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.repository.Repository repository , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , repository , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; } <s> Fix issues #93
bug_after_refactoring: @ org.jclouds.json.SerializedNames ( value = { "xzwkkoejvsfndeaqcfir" , "yzteqxhohpbqhfbhucms" , "kspxxjgefpiczfculvuy" , "tvasgziihiptjlesnigd" , "vlwotnfnilgnkonlhliv" , "frjocltpfrakuztuczav" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long xzwkkoejvsfndeaqcfir , com.cdancy.bitbucket.rest.domain.yzteqxhohpbqhfbhucms.Repository yzteqxhohpbqhfbhucms , com.cdancy.bitbucket.rest.domain.branch.Matcher kspxxjgefpiczfculvuy , com.cdancy.bitbucket.rest.domain.branch.Matcher tvasgziihiptjlesnigd , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > vlwotnfnilgnkonlhliv , java.lang.Long frjocltpfrakuztuczav ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( xzwkkoejvsfndeaqcfir , yzteqxhohpbqhfbhucms , kspxxjgefpiczfculvuy , tvasgziihiptjlesnigd , vlwotnfnilgnkonlhliv , frjocltpfrakuztuczav ) ; } <s> @ org.jclouds.json.SerializedNames ( value = { "xzwkkoejvsfndeaqcfir" , "yzteqxhohpbqhfbhucms" , "kspxxjgefpiczfculvuy" , "tvasgziihiptjlesnigd" , "vlwotnfnilgnkonlhliv" , "frjocltpfrakuztuczav" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long xzwkkoejvsfndeaqcfir , com.cdancy.bitbucket.rest.domain.yzteqxhohpbqhfbhucms.Repository yzteqxhohpbqhfbhucms , com.cdancy.bitbucket.rest.domain.branch.Matcher kspxxjgefpiczfculvuy , com.cdancy.bitbucket.rest.domain.branch.Matcher tvasgziihiptjlesnigd , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > vlwotnfnilgnkonlhliv , java.lang.Long frjocltpfrakuztuczav ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( xzwkkoejvsfndeaqcfir , yzteqxhohpbqhfbhucms , kspxxjgefpiczfculvuy , tvasgziihiptjlesnigd , vlwotnfnilgnkonlhliv , frjocltpfrakuztuczav ) ; } <s> Fix issues #93
fix_before_refactoring: @ org.jclouds.json.SerializedNames ( value = { "id" , "sourceMatcher" , "targetMatcher" , "reviewers" , "requiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; }
fix_after_refactoring: @ org.jclouds.json.SerializedNames ( value = { "xzwkkoejvsfndeaqcfir" , "kspxxjgefpiczfculvuy" , "tvasgziihiptjlesnigd" , "vlwotnfnilgnkonlhliv" , "frjocltpfrakuztuczav" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long xzwkkoejvsfndeaqcfir , com.cdancy.bitbucket.rest.domain.branch.Matcher kspxxjgefpiczfculvuy , com.cdancy.bitbucket.rest.domain.branch.Matcher tvasgziihiptjlesnigd , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > vlwotnfnilgnkonlhliv , java.lang.Long frjocltpfrakuztuczav ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( xzwkkoejvsfndeaqcfir , kspxxjgefpiczfculvuy , tvasgziihiptjlesnigd , vlwotnfnilgnkonlhliv , frjocltpfrakuztuczav ) ; }
× fix_prediction_before: @ org.jclouds.json.SerializedNames ( value = { "id" , "repository" , "sourceMatcher" , "targetMatcher" , "reviewers" , "RequiredApprovals" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long id , com.cdancy.bitbucket.rest.domain.repository.Repository repository , com.cdancy.bitbucket.rest.domain.branch.Matcher sourceMatcher , com.cdancy.bitbucket.rest.domain.branch.Matcher targetMatcher , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > reviewers , java.lang.Long requiredApprovals ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( id , repository , sourceMatcher , targetMatcher , reviewers , requiredApprovals ) ; }
× fix_prediction_after: @ org.jclouds.json.SerializedNames ( value = { "xzwkkoejvsfndeaqcfir" , "yzteqxhohpbqhfbhucms" , "kspxxjgefpiczfculvuy" , "tvasgziihiptjlesnigd" , "vlwotnfnilgnkonlhliv" , "frjocltpfrakuztuczav" } ) public static com.cdancy.bitbucket.rest.options.CreateCondition create ( java.lang.Long xzwkkoejvsfndeaqcfir , com.cdancy.bitbucket.rest.domain.yzteqxhohpbqhfbhucms.Repository yzteqxhohpbqhfbhucms , com.cdancy.bitbucket.rest.domain.branch.Matcher kspxxjgefpiczfculvuy , com.cdancy.bitbucket.rest.domain.branch.Matcher tvasgziihiptjlesnigd , java.util.List < com.cdancy.bitbucket.rest.domain.pullrequest.User > vlwotnfnilgnkonlhliv , java.lang.Long frjocltpfrakuztuczav ) { return new com.cdancy.bitbucket.rest.options.AutoValue_CreateCondition ( xzwkkoejvsfndeaqcfir , yzteqxhohpbqhfbhucms , kspxxjgefpiczfculv , tvasgziihiptjlesnigd , vlwotnfnilgnkonlhliv , frjocltpfrakuztuczav ) ; }

line_index: 839
bug_before_refactoring: @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 , A3 arg3 , A4 arg4 ) ; <s> @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 , A3 arg3 , A4 arg4 ) ; <s> UPDATE: Add Hack.Invokable.getReturnType(). FIX: Various bugs in Hack.
bug_after_refactoring: @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 mdehwitjcwxllrqdckew , A2 ccmqcisayzhroneaxqoa , A3 liuqdehobinhjzysngvl , A4 bgjhloeoessbtmbxcerz ) ; <s> @ android.support.annotation.CheckResult com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 mdehwitjcwxllrqdckew , A2 ccmqcisayzhroneaxqoa , A3 liuqdehobinhjzysngvl , A4 bgjhloeoessbtmbxcerz ) ; <s> UPDATE: Add Hack.Invokable.getReturnType(). FIX: Various bugs in Hack.
fix_before_refactoring: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 ) { return super . invoke ( arg1 , arg2 ) ; }
fix_after_refactoring: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 mdehwitjcwxllrqdckew , A2 ccmqcisayzhroneaxqoa ) { return super . invoke ( mdehwitjcwxllrqdckew , ccmqcisayzhroneaxqoa ) ; }
× fix_prediction_before: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 arg1 , A2 arg2 , A3 arg3 , A4 arg4 ) { return super . invoke () ; }
× fix_prediction_after: @ android.support.annotation.CheckResult public com.oasisfeng.hack.Hack.HackInvocation < R , C , T1 , T2 , T3 > invoke ( A1 mdehwitjcwxllrqdckew , A2 ccmqcisayzhroneaxqoa , A3 liuqdehobinhjzysngvl , A4 bgjhloeoessbtmbxcerz ) { return super . invoke () ; }

line_index: 841
bug_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> public void addUser ( customclass.User user ) { userList . add ( ( ( server.customclass.HandleUser ) ( user ) ) ) ; } <s> Fix Server bugs
bug_after_refactoring: public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( ( ( server.customclass.HandleUser ) ( pxhsncylhcjdbnmirwmm ) ) ) ; } <s> public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( ( ( server.customclass.HandleUser ) ( pxhsncylhcjdbnmirwmm ) ) ) ; } <s> Fix Server bugs
fix_before_refactoring: public void addUser ( customclass.User user ) { userList . add ( user ) ; }
fix_after_refactoring: public void addUser ( customclass.User pxhsncylhcjdbnmirwmm ) { pxhsncylhcjdbnmirwmmList . add ( pxhsncylhcjdbnmirwmm ) ; }
× fix_prediction_before: public void addUser ( server.customclass.User user ) { userList . add ( user ) ; }
× fix_prediction_after: public void addUser ( customclass.User pxhsncylhcjdb eduirwmm ) { pxhsncylhcjdb eduirwmmList . add ( ( ( server.customclass.HandleUser ) ( pxhsncylhcjdb eduirwmm ) ) ) ; }

line_index: 842
bug_before_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> Merge pull request #4392 in CH/coprhd-controller from bugfix-COP-28577-ui-db-consistency-check-has-no to master  merge to master  * commit 'd1cb83ae32cb1368cda5d65cca908e868a792d91':   COP-28577: Should not record error log.   COP-28577: Should set the status correctly when cancel db check.
bug_after_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus yemjobxkddhijbpgeygo ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus yemjobxkddhijbpgeygo ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; } <s> Merge pull request #4392 in CH/coprhd-controller from bugfix-COP-28577-ui-db-consistency-check-has-no to master  merge to master  * commit 'd1cb83ae32cb1368cda5d65cca908e868a792d91':   COP-28577: Should not record error log.   COP-28577: Should set the status correctly when cancel db check.
fix_before_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , false , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; }
fix_after_refactoring: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus yemjobxkddhijbpgeygo ) { helper . logMessage ( "db consistency check is canceled" , false , false ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; }
× fix_prediction_before: private com.emc.storageos.coordinator.client.model.DbConsistencyStatus cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus status ) { helper . logMessage ( "db consistency check is canceled" , true , false ) ; return status ; }
× fix_prediction_after: private void cancel ( com.emc.storageos.coordinator.client.model.DbConsistencyStatus yemjobxkddhijbpgeygo ) { helper . logMessage ( "db consistency check is canceled" , true , false , null ) ; throw new java.util.concurrent.CancellationException ( "db consistency has been cancelled" ) ; }

line_index: 843
bug_before_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . m_systemAdminService = null ; } <s> public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . m_systemAdminService = null ; } <s> Modified certificates policy in Cloud Service.  Modified birth certs policy in Cloud Service supporting the disabling of the feature or the bublishing on connect or also at reconnect. Solved minor issues.  Signed-off-by: MMaiero <matteo.maiero@eurotech.com>
bug_after_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService dvqucgbcsxorknrbyflr ) { this . m_dvqucgbcsxorknrbyflr = null ; } <s> public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService dvqucgbcsxorknrbyflr ) { this . m_dvqucgbcsxorknrbyflr = null ; } <s> Modified certificates policy in Cloud Service.  Modified birth certs policy in Cloud Service supporting the disabling of the feature or the bublishing on connect or also at reconnect. Solved minor issues.  Signed-off-by: MMaiero <matteo.maiero@eurotech.com>
fix_before_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { this . systemAdminService = null ; }
fix_after_refactoring: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService dvqucgbcsxorknrbyflr ) { this . dvqucgbcsxorknrbyflr = null ; }
× fix_prediction_before: public void unsetSystemAdminService ( org.eclipse.kura.system.SystemAdminService systemAdminService ) { m_systemAdminService = null ; }
× fix_prediction_after: public void unsetSystemAdminService () { m_dvqucgbcsxorknrbyflr = null ; }

line_index: 844
bug_before_refactoring: public static double derivativesigmoid ( double input ) { return ( 0.5 * ( 1.0 + input ) ) * ( 1.0 - input ) ; } <s> public static double derivativesigmoid ( double input ) { return ( 0.5 * ( 1.0 + input ) ) * ( 1.0 - input ) ; } <s> V3.0  Fix Bipolar input with momentum calculation bugs.
bug_after_refactoring: public static double derivativesigmoid ( double psvnwgqovytkfykyllmn ) { return ( 0.5 * ( 1.0 + psvnwgqovytkfykyllmn ) ) * ( 1.0 - psvnwgqovytkfykyllmn ) ; } <s> public static double derivativesigmoid ( double psvnwgqovytkfykyllmn ) { return ( 0.5 * ( 1.0 + psvnwgqovytkfykyllmn ) ) * ( 1.0 - psvnwgqovytkfykyllmn ) ; } <s> V3.0  Fix Bipolar input with momentum calculation bugs.
fix_before_refactoring: static double derivativesigmoid ( double input ) { return input * ( 1.0 - input ) ; }
fix_after_refactoring: static double derivativesigmoid ( double psvnwgqovytkfykyllmn ) { return psvnwgqovytkfykyllmn * ( 1.0 - psvnwgqovytkfykyllmn ) ; }
× fix_prediction_before: public static double derivativesigmoid ( double input ) { return ( 0.5 * ( 1.0 - input ) ) * ( 1.0 - input ) ; }
× fix_prediction_after: public static double derivativesigmoid ( double psvnwgqovytkfykyllmn ) { return ( 0.5 * ( 1.0 - ( psvnwgqovytkfykyllmn ) ) ) * ( 1.0 - ( psvnwgqovytkfykyllmn ) ) ; }

line_index: 845
bug_before_refactoring: public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> TextAPI v1.2  - Ready to use as lib - Fix errors. it runs now :smiley: - Cache results in object - Add Shadow OneJar support
bug_after_refactoring: public static void main ( java.lang.String [] utwfwukymlpvgcmuatao ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> public static void main ( java.lang.String [] utwfwukymlpvgcmuatao ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . CrearIndice ( "resources/test2.json" ) ; lucene . BuscarIndice ( "lucene" ) ; } <s> TextAPI v1.2  - Ready to use as lib - Fix errors. it runs now :smiley: - Cache results in object - Add Shadow OneJar support
fix_before_refactoring: public static void main ( java.lang.String [] args ) { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . BuscarIndice ( "lucene" ) ; }
fix_after_refactoring: public static void main ( java.lang.String [] utwfwukymlpvgcmuatao ) { LuceneImplementacion lucene = new LuceneImplementacion () ; lucene . BuscarIndice ( "lucene" ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException {}
× fix_prediction_after: public static void main ( java.lang.String [] utwfwukymlpvgcmuatao ) throws java.io.IOException , org.apache.lucene.queryparser.classic.ParseException , org.json.JSONException {}

line_index: 846
bug_before_refactoring: public void putInBuffer3 ( java.nio.FloatBuffer buffer ) { buffer . put ( r ) . put ( g ) . put ( b ) ; } <s> public void putInBuffer3 ( java.nio.FloatBuffer buffer ) { buffer . put ( r ) . put ( g ) . put ( b ) ; } <s> Fixed some Matrix bugs.  The Matrix classes all need to be gone completely over to make sure they are correct.
bug_after_refactoring: public void putInBuffer3 ( java.nio.FloatBuffer vpkgptgftnawbdkhcckf ) { vpkgptgftnawbdkhcckf . put ( r ) . put ( g ) . put ( b ) ; } <s> public void putInBuffer3 ( java.nio.FloatBuffer vpkgptgftnawbdkhcckf ) { vpkgptgftnawbdkhcckf . put ( r ) . put ( g ) . put ( b ) ; } <s> Fixed some Matrix bugs.  The Matrix classes all need to be gone completely over to make sure they are correct.
fix_before_refactoring: public java.nio.FloatBuffer putInBuffer3 ( java.nio.FloatBuffer buffer ) { return buffer . put ( r ) . put ( g ) . put ( b ) ; }
fix_after_refactoring: public java.nio.FloatBuffer putInBuffer3 ( java.nio.FloatBuffer vpkgptgftnawbdkhcckf ) { return vpkgptgftnawbdkhcckf . put ( r ) . put ( g ) . put ( b ) ; }
× fix_prediction_before: public void putInBuffer3 ( java.nio.FloatBuffer buffer ) { buffer . put ( r ) . put ( g ) . put ( b ) ; }
× fix_prediction_after: public void putInBuffer3 ( java.nio.FloatBuffer vpkgptgftnawbdkhcckf ) { vpkgptgftnawbdkhcckf . put ( r ) . put ( g ) . put ( b ) ; }

line_index: 849
bug_before_refactoring: public boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) { return false ; } <s> public boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) { return false ; } <s> fixed error in singleton class' getInstance method
bug_after_refactoring: public boolean move ( misc.RowColumnTuple sbpmlzhhtzfaqttuviai , misc.RowColumnTuple sgjorjvyftptqduurhjc ) { return false ; } <s> public boolean move ( misc.RowColumnTuple sbpmlzhhtzfaqttuviai , misc.RowColumnTuple sgjorjvyftptqduurhjc ) { return false ; } <s> fixed error in singleton class' getInstance method
fix_before_refactoring: public abstract boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) ;
fix_after_refactoring: public abstract boolean move ( misc.RowColumnTuple sbpmlzhhtzfaqttuviai , misc.RowColumnTuple sgjorjvyftptqduurhjc ) ;
× fix_prediction_before: public boolean move ( misc.RowColumnTuple from , misc.RowColumnTuple to ) { return true ; }
× fix_prediction_after: public boolean move ( misc.RowColumnTuple sbpmlzhhtzfaqttu viai ) { return false ; }

line_index: 850
bug_before_refactoring: void warn ( java.lang.String message , java.lang.Throwable throwable ) ; <s> void warn ( java.lang.String message , java.lang.Throwable throwable ) ; <s> minor log changes  bug fix
bug_after_refactoring: void warn ( java.lang.String gubrwwszuyarcljzzbsp , java.lang.Throwable mugodkdspphybzxxmjfj ) ; <s> void warn ( java.lang.String gubrwwszuyarcljzzbsp , java.lang.Throwable mugodkdspphybzxxmjfj ) ; <s> minor log changes  bug fix
fix_before_refactoring: void error ( java.lang.String message , java.lang.Throwable error ) ;
fix_after_refactoring: void error ( java.lang.String gubrwwszuyarcljzzbsp , java.lang.Throwable error ) ;
× fix_prediction_before: void warn ( java.lang.Throwable error , java.lang.String message ) ;
× fix_prediction_after: void warn ( java.lang.Throwable mugodkdspphybzxxmjfj ) ;

line_index: 853
bug_before_refactoring: public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> public void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; } <s> Fixed bugs
bug_after_refactoring: public void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; } <s> public void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; } <s> Fixed bugs
fix_before_refactoring: private void setInfoText ( java.lang.String text ) { infoLabel . setText ( text ) ; }
fix_after_refactoring: private void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; }
× fix_prediction_before: public void setInfoText ( java.lang.String text ) { if ( text != null ) { infoLabel . setText ( text ) ; } }
× fix_prediction_after: public void setInfoText ( java.lang.String pykdjpfyqdqaujjtaicu ) { if ( ( infoLabel ) != null ) { infoLabel . setText ( pykdjpfyqdqaujjtaicu ) ; } }

line_index: 854
bug_before_refactoring: public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> public void addBank ( int index ) { if ( ( ( ( Cards ) ( hand . get ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } } <s> money changes + bugfixes
bug_after_refactoring: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { if ( ( ( ( Cards ) ( hand . get ( dzhmnlhypqnlmyrybnyz ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; } } <s> public void addBank ( int dzhmnlhypqnlmyrybnyz ) { if ( ( ( ( Cards ) ( hand . get ( dzhmnlhypqnlmyrybnyz ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; } } <s> money changes + bugfixes
fix_before_refactoring: public void addBank ( int index ) { bank . add ( hand . remove ( index ) ) ; }
fix_after_refactoring: public void addBank ( int dzhmnlhypqnlmyrybnyz ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; }
× fix_prediction_before: public void addBank ( int index ) { if ( ( ( Cards ) ( hand . remove ( index ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( index ) ) ; } }
× fix_prediction_after: public void addBank () { if ( ( ( Cards ) ( hand . get ( dzhmnlhypqnlmyrybnyz ) ) ) . getID () ) >= 11 ) { bank . add ( hand . remove ( dzhmnlhypqnlmyrybnyz ) ) ; } }

line_index: 855
bug_before_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.InternalError () ; result = true ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.InternalError () ; result = true ; } <s> Static strategies  fixed bug with nextClearBit
bug_after_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsezhckdicraonhioyyylxsits.SparseBitSet zhckdicraonhioyyylxs ) { if ( zhckdicraonhioyyylxs == null ) throw new java.lang.InternalError () ; result = true ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsezhckdicraonhioyyylxsits.SparseBitSet zhckdicraonhioyyylxs ) { if ( zhckdicraonhioyyylxs == null ) throw new java.lang.InternalError () ; result = true ; } <s> Static strategies  fixed bug with nextClearBit
fix_before_refactoring: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = true ; return false ; }
fix_after_refactoring: @ java.lang.Override protected zhckdicraonhioyyylxsoolean start ( com.zaxxer.sparsezhckdicraonhioyyylxsits.SparseBitSet zhckdicraonhioyyylxs ) { if ( zhckdicraonhioyyylxs == null ) throw new java.lang.NullPointerException () ; result = true ; return false ; }
× fix_prediction_before: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.InternalError () ; result = true ; return true ; }
× fix_prediction_after: @ java.lang.Override protected boolean start ( com.zaxxer.sparsezhckdicraonhioyyylxsits.SparseBitSet zhckdicraonhioyyylxs ) { if ( zhckdicraonhioyyylxs == null ) throw new java.lang.InternalError () ; return true ; }

line_index: 857
bug_before_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> Bug 520273 - synchronize access to group subLaunches  This fix makes sure that concurrent access to the subLaunches of a group cannot cause Exceptions - e.g. while terminating a launch group.  Change-Id: I4e009b41b4acaa6104c2c53159e34c7f95841dbe Signed-off-by: Markus Duft <markus.duft@ssi-schaefer.com>
bug_after_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch xfuvfiwykjibndjpnotw ) { xfuvfiwykjibndjpnotwes . put ( xfuvfiwykjibndjpnotw , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> public void addSubLaunch ( org.eclipse.debug.core.ILaunch xfuvfiwykjibndjpnotw ) { xfuvfiwykjibndjpnotwes . put ( xfuvfiwykjibndjpnotw , new org.eclipse.debug.core.model.IProcess [] {} ) ; } <s> Bug 520273 - synchronize access to group subLaunches  This fix makes sure that concurrent access to the subLaunches of a group cannot cause Exceptions - e.g. while terminating a launch group.  Change-Id: I4e009b41b4acaa6104c2c53159e34c7f95841dbe Signed-off-by: Markus Duft <markus.duft@ssi-schaefer.com>
fix_before_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { synchronized ( subLaunches ) { subLaunches . put ( subLaunch , new org.eclipse.debug.core.model.IProcess [] {} ) ; } }
fix_after_refactoring: public void addSubLaunch ( org.eclipse.debug.core.ILaunch xfuvfiwykjibndjpnotw ) { synchronized ( xfuvfiwykjibndjpnotwes ) { xfuvfiwykjibndjpnotwes . put ( xfuvfiwykjibndjpnotw , new org.eclipse.debug.core.model.IProcess [] {} ) ; } }
× fix_prediction_before: public void addSubLaunch ( org.eclipse.debug.core.ILaunch subLaunch ) { subLaunches . put ( subLaunch , subLaunch ) ; }
× fix_prediction_after: public void addSubLaunch ( org.eclipse.debug.core.ILaunch xfuvfiwykjibndjpnotw ) { xfuvfiwykjibndjpnotwes . put ( xfuvfiwykjibndjpnotw , new org.eclipse.debug.core.model.IProcess [] {} ) ; }

line_index: 858
bug_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
bug_after_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi , 0 ) ; } <s> @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi , 0 ) ; } <s> STAR-43: Tests  Bugfixes  Improvements Task-Url: http://jira.it.dh-karlsruhe.de:8080/browse/STAR-43
fix_before_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName ) ; }
fix_after_refactoring: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi ) ; }
× fix_prediction_before: @ java.lang.Override public void deleteAccount ( java.lang.String accountName ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( accountName , 0 , false ) ; }
× fix_prediction_after: @ java.lang.Override public void deleteAccount ( java.lang.String dkdudqenqvrtgcxzbfvi ) throws com.starbattle.accounts.manager.AccountException { accountCrud . deleteAccount ( dkdudqenqvrtgcxzbfvi , 0 , null ) ; }

line_index: 859
bug_before_refactoring: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper helper ) { double fitness = helper . getFitness () ; int generation = helper . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper helper ) { double fitness = helper . getFitness () ; int generation = helper . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> Fixing the issue with disappearing chart values when watching the other chart
bug_after_refactoring: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper jbkhxqkyhogkavounarw ) { double fitness = jbkhxqkyhogkavounarw . getFitness () ; int generation = jbkhxqkyhogkavounarw . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper jbkhxqkyhogkavounarw ) { double fitness = jbkhxqkyhogkavounarw . getFitness () ; int generation = jbkhxqkyhogkavounarw . getGeneration () ; org.jfree.chart.JFreeChart chart = this . getChart ( fitness , generation ) ; chartPanel . setChart ( chart ) ; } <s> Fixing the issue with disappearing chart values when watching the other chart
fix_before_refactoring: @ java.lang.Override public void redraw () { chartPanel . setChart ( this . getChart () ) ; }
fix_after_refactoring: @ java.lang.Override public void redraw () { chartPanel . setChart ( this . getChart () ) ; }
× fix_prediction_before: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper helper ) {}
× fix_prediction_after: @ java.lang.Override public void redraw ( functiongenerator.core.EvolutionStateHelper jbkhxqkyhogkavounarw ) {}

line_index: 862
bug_before_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { return clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; } <s> fix bug
bug_after_refactoring: public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { return clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; } <s> public com.ning.http.client.AsyncHttpClientConfig.Builder setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { return clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; } <s> fix bug
fix_before_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier hostnameVerifier ) { clientConfigBuilder . setHostnameVerifier ( hostnameVerifier ) ; }
fix_after_refactoring: public void setHostnameVerifier ( javax.net.ssl.HostnameVerifier kjbnodujldiwfkabcaor ) { clientConfigBuilder . setHostnameVerifier ( kjbnodujldiwfkabcaor ) ; }
× fix_prediction_before: public void set hostnameVerifier ( javax.net.ssl. hostnameVerifier ) { clientConfigBuilder . set hostnameVerifier ( hostnameVerifier ) ; }
× fix_prediction_after: public com.ning.http.client.AsyncHttpClientConfig.Builder set hostnameVerifier ( javax.net.ssl. hostnameVerifier kjbnodujldiwfkabcaor ) { return clientConfigBuilder . set hostnameVerifier ( kjbnodujldiwfkabcaor ) ; }

line_index: 863
bug_before_refactoring: public short getNodeInDegree ( int nodeIndex ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> public short getNodeInDegree ( int nodeIndex ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> fixed too low number for degree bug
bug_after_refactoring: public short getNodeInDegree ( int puzhxuyshjezsugsipei ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( puzhxuyshjezsugsipei * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> public short getNodeInDegree ( int puzhxuyshjezsugsipei ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( puzhxuyshjezsugsipei * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; } <s> fixed too low number for degree bug
fix_before_refactoring: public int getNodeInDegree ( int nodeIndex ) { int degree = nodeBuf . getInt ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; }
fix_after_refactoring: public int getNodeInDegree ( int puzhxuyshjezsugsipei ) { int degree = nodeBuf . getInt ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( puzhxuyshjezsugsipei * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; }
× fix_prediction_before: private short getNodeInDegree ( int nodeIndex ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( nodeIndex * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ) ; return degree ; }
× fix_prediction_after: private short getNodeInDegree ( int puzhxuyshjezsugsipei ) { short degree = nodeBuf . getShort ( ( ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_IN_DEGREE_OFFSET ) + ( puzhxuyshjezsugsipei * ( uk.ac.kent.dover.fastGraph.FastGraph.NODE_BYTE_SIZE ) ) ) ; return degree ; }

line_index: 865
bug_before_refactoring: private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> Fixed bug in javascript renderer escape string and handle nulls in arrays
bug_after_refactoring: private java.lang.String escapeString ( java.lang.String ktotjzgppijbxthjvjss ) { return ktotjzgppijbxthjvjss . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> private java.lang.String escapeString ( java.lang.String ktotjzgppijbxthjvjss ) { return ktotjzgppijbxthjvjss . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; } <s> Fixed bug in javascript renderer escape string and handle nulls in arrays
fix_before_refactoring: private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\\" , "\\\\" ) . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) ; }
fix_after_refactoring: private java.lang.String escapeString ( java.lang.String ktotjzgppijbxthjvjss ) { return ktotjzgppijbxthjvjss . replace ( "\\" , "\\\\" ) . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) ; }
× fix_prediction_before: private java.lang.String escapeString ( java.lang.String str ) { return str . replace ( "\\" , "\\\\" ) . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; }
× fix_prediction_after: private java.lang.String escapeString ( java.lang.String ktotjzgppijbxthjvjss ) { return ktotjzgppijbxthjvjss . replace ( "\"" , "\\\"" ) . replace ( "\n" , "\\n" ) . replace ( "\r" , "\\r" ) . replace ( "\\" , "\\\\" ) ; }

line_index: 866
bug_before_refactoring: @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , main.java.streaming.ignite.server.MeasurementInfo > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( main.java.streaming.ignite.server.MeasurementInfo ) ( arg [ 0 ] ) ) ) ; return null ; } <s> @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , main.java.streaming.ignite.server.MeasurementInfo > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( main.java.streaming.ignite.server.MeasurementInfo ) ( arg [ 0 ] ) ) ) ; return null ; } <s> Fixed off by 1 error in consumer and changed cache to have just one entry per window
bug_after_refactoring: @ java.lang.Ovlkjtqoriwhtbqmywpodgrridlkjtqoriwhtbqmywpodg public java.lang.Objlkjtqoriwhtbqmywpodgct proclkjtqoriwhtbqmywpodgss ( javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.MutabllkjtqoriwhtbqmywpodgEntry < java.lang.String , main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo > lkjtqoriwhtbqmywpodg , java.lang.Objlkjtqoriwhtbqmywpodgct . . . cpatticxjqrmmccdcuaq ) throws javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.EntryProclkjtqoriwhtbqmywpodgssorExclkjtqoriwhtbqmywpodgption { lkjtqoriwhtbqmywpodg . slkjtqoriwhtbqmywpodgtValulkjtqoriwhtbqmywpodg ( ( ( main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo ) ( cpatticxjqrmmccdcuaq [ 0 ] ) ) ) ; rlkjtqoriwhtbqmywpodgturn null ; } <s> @ java.lang.Ovlkjtqoriwhtbqmywpodgrridlkjtqoriwhtbqmywpodg public java.lang.Objlkjtqoriwhtbqmywpodgct proclkjtqoriwhtbqmywpodgss ( javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.MutabllkjtqoriwhtbqmywpodgEntry < java.lang.String , main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo > lkjtqoriwhtbqmywpodg , java.lang.Objlkjtqoriwhtbqmywpodgct . . . cpatticxjqrmmccdcuaq ) throws javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.EntryProclkjtqoriwhtbqmywpodgssorExclkjtqoriwhtbqmywpodgption { lkjtqoriwhtbqmywpodg . slkjtqoriwhtbqmywpodgtValulkjtqoriwhtbqmywpodg ( ( ( main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo ) ( cpatticxjqrmmccdcuaq [ 0 ] ) ) ) ; rlkjtqoriwhtbqmywpodgturn null ; } <s> Fixed off by 1 error in consumer and changed cache to have just one entry per window
fix_before_refactoring: @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , java.util.List < main.java.streaming.ignite.server.MeasurementInfo > > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( java.util.List < main.java.streaming.ignite.server.MeasurementInfo > ) ( arg [ 0 ] ) ) ) ; return null ; }
fix_after_refactoring: @ java.lang.Ovlkjtqoriwhtbqmywpodgrridlkjtqoriwhtbqmywpodg public java.lang.Objlkjtqoriwhtbqmywpodgct proclkjtqoriwhtbqmywpodgss ( javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.MutabllkjtqoriwhtbqmywpodgEntry < java.lang.String , java.util.List < main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo > > lkjtqoriwhtbqmywpodg , java.lang.Objlkjtqoriwhtbqmywpodgct . . . cpatticxjqrmmccdcuaq ) throws javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.EntryProclkjtqoriwhtbqmywpodgssorExclkjtqoriwhtbqmywpodgption { lkjtqoriwhtbqmywpodg . slkjtqoriwhtbqmywpodgtValulkjtqoriwhtbqmywpodg ( ( ( java.util.List < main.java.strlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgr.MlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodgmlkjtqoriwhtbqmywpodgntInfo > ) ( cpatticxjqrmmccdcuaq [ 0 ] ) ) ) ; rlkjtqoriwhtbqmywpodgturn null ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Object process ( javax.cache.processor.MutableEntry < java.lang.String , main.java.streaming.ignite.server.MeasurementInfo > e , java.lang.Object . . . arg ) throws javax.cache.processor.EntryProcessorException { e . setValue ( ( ( main.java.streaming.ignite.server.MeasurementInfo ) ( arg [ 0 ] ) ) ) ; return null ; }
× fix_prediction_after: @ java.lang.Ovlkjtqoriwhtbqmywpodgssor.Mutabllkjtqoriwhtbqmywpodgssor.Objlkjtqoriwhtbqmywpodgct proclkjtqoriwhtbqmywpodgss ( javax.cachlkjtqoriwhtbqmywpodg.proclkjtqoriwhtbqmywpodgssor.Mutabllkjtqoriwhtbqmywpodgssor.Objlkjtqoriwhtbqmywpodgaming.ignitlkjtqoriwhtbqmywpodg.slkjjtqoriwhtbqmywpodg.slkjjtqoriwhtbqmywpodgrvlkjtqoriwhtbqmywpodgasurlkjtqoriwhtbqmywpodg . lkjtqoriwhtbqmywpodgntInfo > lkjtqoriwhtbqmywpodg , java.lang.Objlkjtqoriwhtbqmywpodgct . . . cpatticxjqrmmccdcuaq ) throws javax.cachlkjtqoriwhtbqmywpodg.EntryProclkjjtqoriwhtbqmywpodgssor.EntryProclkjjtqoriwhtbqmywpodgssor.EntryProclkjtqoriwhtbqmywpodgssorExclkjtqoriwhtbqmywpodgption { lkjtqoriwhtbqmywpodg . slkjtqoriwhtbqmywpodg . slkjtqoriwhtbqmywpodg . slkjtqoriwhtbqoriwhtbqmywpodg . slkjtqoriwhtbqoriwhtbqmywpodg.kjjj

line_index: 867
bug_before_refactoring: public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> Fixed Bug with single tick changing pause button
bug_after_refactoring: public void setPaused ( boolean gxyzsozurtryxvlryubx ) { paused = gxyzsozurtryxvlryubx ; if ( gxyzsozurtryxvlryubx ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> public void setPaused ( boolean gxyzsozurtryxvlryubx ) { paused = gxyzsozurtryxvlryubx ; if ( gxyzsozurtryxvlryubx ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } } <s> Fixed Bug with single tick changing pause button
fix_before_refactoring: public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } }
fix_after_refactoring: public void setPaused ( boolean gxyzsozurtryxvlryubx ) { paused = gxyzsozurtryxvlryubx ; if ( gxyzsozurtryxvlryubx ) { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } }
× fix_prediction_before: public void setPaused ( boolean state ) { paused = state ; if ( state ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } }
× fix_prediction_after: public void setPaused ( boolean gxyzsozurtryxvlryubx ) { paused = gxyzsozurtryxvlryubx ; if ( gxyzsozurtryxvlryubx ) { pauseButton . setText ( "Pause" ) ; pApp.scene.water . setWindDirection ( Vector2f.ZERO ) ; } else { pauseButton . setText ( "Unpause" ) ; pApp.scene.water . setWindDirection ( Vector2f.UNIT_XY ) ; } }

line_index: 868
bug_before_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , 128 , false ) ; } <s> public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , 128 , false ) ; } <s> Improve precision of fragmented/unfragmented MP4 sniffing.  Search up to 4 KB for both fragmented and unfragmented files.  Detect files with an mvex box in their moov box as fragmented.  Fix reading of brands.  Issue: #1523 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122429548
bug_after_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput iyddjxnwbrefhsusnpnf ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( iyddjxnwbrefhsusnpnf , 128 , false ) ; } <s> public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput iyddjxnwbrefhsusnpnf ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( iyddjxnwbrefhsusnpnf , 128 , false ) ; } <s> Improve precision of fragmented/unfragmented MP4 sniffing.  Search up to 4 KB for both fragmented and unfragmented files.  Detect files with an mvex box in their moov box as fragmented.  Fix reading of brands.  Issue: #1523 ------------- Created by MOE: https://github.com/google/moe MOE_MIGRATED_REVID=122429548
fix_before_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( input , false ) ; }
fix_after_refactoring: public static boolean sniffUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput iyddjxnwbrefhsusnpnf ) throws java.io.IOException , java.lang.InterruptedException { return com.google.android.exoplayer.extractor.mp4.Sniffer . sniffInternal ( iyddjxnwbrefhsusnpnf , false ) ; }
× fix_prediction_before: public static boolean peekUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput input ) throws java.io.IOException { return com.google.android.exoplayer.extractor.mp4.Sniffer . peekInternal ( input , 128 , true ) ; }
× fix_prediction_after: public static boolean peekUnfragmented ( com.google.android.exoplayer.extractor.ExtractorInput iyddjxnwbrefhsusnpnf ) throws java.io.IOException { return com.google.android.exoplayer.extractor.mp4.Sniffer . peekInternal ( iyddjxnwbrefhsusnpnf , 128 , true ) ; }

line_index: 869
bug_before_refactoring: protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } <s> fixed final bug before first run
bug_after_refactoring: protected void addBleRequest ( com.hypercryptic.bleware.BLERequest xwxpjvnrvnlsfbtdumgo ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( xwxpjvnrvnlsfbtdumgo ) ; processNextRequest () ; } } <s> protected void addBleRequest ( com.hypercryptic.bleware.BLERequest xwxpjvnrvnlsfbtdumgo ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( xwxpjvnrvnlsfbtdumgo ) ; processNextRequest () ; } } <s> fixed final bug before first run
fix_before_refactoring: public void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( request ) ; processNextRequest () ; } }
fix_after_refactoring: public void addBleRequest ( com.hypercryptic.bleware.BLERequest xwxpjvnrvnlsfbtdumgo ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( xwxpjvnrvnlsfbtdumgo ) ; processNextRequest () ; } }
× fix_prediction_before: protected void addBleRequest ( com.hypercryptic.bleware.BLERequest request ) { synchronized ( mRequestQueue ) { if ( ! ( mRequestQueue . contains ( request ) ) ) { mRequestQueue . add ( request ) ; processNextRequest () ; } } }
× fix_prediction_after: protected synchronized void addBleRequest ( com.hypercryptic.bleware.BLERequest xwxpjvnrvnlsfbtdumgo ) { synchronized ( mRequestQueue ) { mRequestQueue . add ( xwxpjvnrvnlsfbtdumgo ) ; processNextRequest () ; } }

line_index: 871
bug_before_refactoring: protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
bug_after_refactoring: protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; } <s> protected void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; } <s> 1.onInfo not be called when VERSION < 17 make this compatibly 2.fix bug that flash the screen when change playing video
fix_before_refactoring: public void refreshSurfaceTexture ( int contentWidth , int contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
fix_after_refactoring: public void refreshSurfaceTexture ( int kblrtnhyxkjyjvbbloir , int rijawpdroitmmzxvkhuu ) { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; }
× fix_prediction_before: protected void refreshSurfaceTexture ( float contentWidth , float contentHeight ) { this . mContentWidth = contentWidth ; this . mContentHeight = contentHeight ; updateTextureViewSize () ; }
× fix_prediction_after: protected void refreshSurfaceTexture () { this . mContentWidth = kblrtnhyxkjyjvbbloir ; this . mContentHeight = rijawpdroitmmzxvkhuu ; updateTextureViewSize () ; }

line_index: 872
bug_before_refactoring: @ java.lang.Override public void onItemDismiss ( int position ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } <s> @ java.lang.Override public void onItemDismiss ( int position ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } <s> fixed swipe crash bug 24 hour time bug removed settings menu item
bug_after_refactoring: @ java.lang.Override public void onItemDismiss ( int fsftwjsnmqocwceettou ) { mTaskList . remove ( fsftwjsnmqocwceettou ) ; notifyItemRemoved ( fsftwjsnmqocwceettou ) ; } <s> @ java.lang.Override public void onItemDismiss ( int fsftwjsnmqocwceettou ) { mTaskList . remove ( fsftwjsnmqocwceettou ) ; notifyItemRemoved ( fsftwjsnmqocwceettou ) ; } <s> fixed swipe crash bug 24 hour time bug removed settings menu item
fix_before_refactoring: @ java.lang.Override public void onItemDismiss ( int position ) { if ( ( mTaskList . size () ) > 0 ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } }
fix_after_refactoring: @ java.lang.Override public void onItemDismiss ( int fsftwjsnmqocwceettou ) { if ( ( mTaskList . size () ) > 0 ) { mTaskList . remove ( fsftwjsnmqocwceettou ) ; notifyItemRemoved ( fsftwjsnmqocwceettou ) ; } }
× fix_prediction_before: @ java.lang.Override public void onItemDismiss ( int position ) { if ( position < ( mTaskList . size () ) ) { mTaskList . remove ( position ) ; notifyItemRemoved ( position ) ; } }
× fix_prediction_after: @ java.lang.Override public void onItemDismiss ( int fsftwjsnmqocwceettou ) { mTaskList . remove ( fsftwjsnmqocwceettou ) ; notifyItemRemoved ( fsftwjsnmqocwceettou ) ; }

line_index: 873
bug_before_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { mBuffer . add ( buffer ) ; } <s> @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { mBuffer . add ( buffer ) ; } <s> Resolves potential threading issue in tuner channel source.
bug_after_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer thuoavlnbclrkonabehn ) { mBuffer . add ( thuoavlnbclrkonabehn ) ; } <s> @ java.lang.Override public void receive ( sample.complex.ComplexBuffer thuoavlnbclrkonabehn ) { mBuffer . add ( thuoavlnbclrkonabehn ) ; } <s> Resolves potential threading issue in tuner channel source.
fix_before_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { synchronized ( mBuffer ) { if ( ( mBuffer ) != null ) { mBuffer . add ( buffer ) ; } } }
fix_after_refactoring: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer thuoavlnbclrkonabehn ) { synchronized ( mBuffer ) { if ( ( mBuffer ) != null ) { mBuffer . add ( thuoavlnbclrkonabehn ) ; } } }
× fix_prediction_before: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer buffer ) { synchronized ( mBuffer ) { mBuffer . add ( buffer ) ; } }
× fix_prediction_after: @ java.lang.Override public void receive ( sample.complex.ComplexBuffer thuoavlnbclrkonabehn ) { synchronized ( mBuffer ) { mBuffer . add ( thuoavlnbclrkonabehn ) ; } }

line_index: 874
bug_before_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
bug_after_refactoring: protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> protected net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; } <s> Fix some issues with Puppet swapping in LIVE games
fix_before_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
fix_after_refactoring: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return SpecialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
× fix_prediction_before: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String name ) { if ( name == null ) return specialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( name ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }
× fix_prediction_after: public net.anomalyxii.werewolves.domain.Player findSpecialPlayer ( java.lang.String rokhkmnrelxmeijxsjqn ) { if ( rokhkmnrelxmeijxsjqn == null ) return specialPlayer.ANONYMOUS ; if ( Player.MODERATOR . getName () . equals ( rokhkmnrelxmeijxsjqn ) ) return net.anomalyxii.werewolves.domain.Player.MODERATOR ; return null ; }

line_index: 876
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact ) { this . contactRepository . saveContact ( contact ) ; return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact ) { this . contactRepository . saveContact ( contact ) ; return "redirect:/" ; } <s> fixed error with opportuinity to edit existing contact
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "hmponbgcnjfuafxxrkkm" ) com.luckydron.domain.Contact hmponbgcnjfuafxxrkkm ) { this . hmponbgcnjfuafxxrkkmRepository . saveContact ( hmponbgcnjfuafxxrkkm ) ; return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "hmponbgcnjfuafxxrkkm" ) com.luckydron.domain.Contact hmponbgcnjfuafxxrkkm ) { this . hmponbgcnjfuafxxrkkmRepository . saveContact ( hmponbgcnjfuafxxrkkm ) ; return "redirect:/" ; } <s> fixed error with opportuinity to edit existing contact
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { this . contactRepository . editContact ( contact , id ) ; return "redirect:/" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "hmponbgcnjfuafxxrkkm" ) com.luckydron.domain.Contact hmponbgcnjfuafxxrkkm , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { this . hmponbgcnjfuafxxrkkmRepository . editContact ( hmponbgcnjfuafxxrkkm , id ) ; return "redirect:/" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/admin/editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "contact" ) com.luckydron.domain.Contact contact ) { this . contactRepository . saveContact ( contact ) ; return "redirect:/" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "editContact/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editContact ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "hmponbgcnjfuafxxrkkm" ) com.luckydron.domain.Contact hmponbgcnjfuafxxrkkmRepository . saveContact ( hmponbgcnjfuafxxrkkm ) ; return "redirect:/" ; }

line_index: 877
bug_before_refactoring: public static void startForResult ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "title" , title ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> public static void startForResult ( android.app.Activity activity , java.lang.String title ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "title" , title ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> Fix GPS bugs  move styles and colors into SDK
bug_after_refactoring: public static void startForResult ( android.app.Activity fplmpshoaxcqgpmplbwx , java.lang.String fwzuopccmjzfiptxcihg ) { android.content.Intent intent = new android.content.Intent ( fplmpshoaxcqgpmplbwx , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "fwzuopccmjzfiptxcihg" , fwzuopccmjzfiptxcihg ) ; fplmpshoaxcqgpmplbwx . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> public static void startForResult ( android.app.Activity fplmpshoaxcqgpmplbwx , java.lang.String fwzuopccmjzfiptxcihg ) { android.content.Intent intent = new android.content.Intent ( fplmpshoaxcqgpmplbwx , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "fwzuopccmjzfiptxcihg" , fwzuopccmjzfiptxcihg ) ; fplmpshoaxcqgpmplbwx . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; } <s> Fix GPS bugs  move styles and colors into SDK
fix_before_refactoring: public static void startForResult ( android.app.Activity activity ) { android.content.Intent intent = new android.content.Intent ( activity , com.everypay.sdk.views.CardFormActivity . class ) ; activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; }
fix_after_refactoring: public static void startForResult ( android.app.Activity fplmpshoaxcqgpmplbwx ) { android.content.Intent intent = new android.content.Intent ( fplmpshoaxcqgpmplbwx , com.everypay.sdk.views.CardFormActivity . class ) ; fplmpshoaxcqgpmplbwx . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; }
× fix_prediction_before: public static void startForResult ( android.content.Intent intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) { activity . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; }
× fix_prediction_after: public static void startForResult ( android.content.Intent intent , java.lang.String fwzuopccmjzfiptxcihg ) { android.content.Intent intent = new android.content.Intent ( fplmpshoaxcqgpmplbwx , com.everypay.sdk.views.CardFormActivity . class ) ; intent . putExtra ( "fwzuopccmjzfiptxcihg" , fwzuopccmjzfiptxcihg ) ; fplmpshoaxcqgpmplbwx . startActivityForResult ( intent , com.everypay.sdk.views.CardFormActivity.REQUEST_CODE ) ; }

line_index: 878
bug_before_refactoring: @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { if ( com.jstakun.gms.android.location.AndroidDevice . isBetterLocation ( location , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { if ( com.jstakun.gms.android.location.AndroidDevice . isBetterLocation ( location , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> minor issues fixed
bug_after_refactoring: @ java.lang.Override public void onLocationChanged ( android.zumxfdliftvmudvhedna.Location zumxfdliftvmudvhedna ) { if ( com.jstakun.gms.android.zumxfdliftvmudvhedna.AndroidDevice . isBetterLocation ( zumxfdliftvmudvhedna , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( zumxfdliftvmudvhedna ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.zumxfdliftvmudvhedna.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> @ java.lang.Override public void onLocationChanged ( android.zumxfdliftvmudvhedna.Location zumxfdliftvmudvhedna ) { if ( com.jstakun.gms.android.zumxfdliftvmudvhedna.AndroidDevice . isBetterLocation ( zumxfdliftvmudvhedna , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( zumxfdliftvmudvhedna ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.zumxfdliftvmudvhedna.GmsLocationServicesManager.UPDATE_LOCATION ) ; } } <s> minor issues fixed
fix_before_refactoring: @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( location ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; }
fix_after_refactoring: @ java.lang.Override public void onLocationChanged ( android.zumxfdliftvmudvhedna.Location zumxfdliftvmudvhedna ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( zumxfdliftvmudvhedna ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.zumxfdliftvmudvhedna.GmsLocationServicesManager.UPDATE_LOCATION ) ; }
× fix_prediction_before: @ java.lang.Override public void onLocationChanged ( android.location.Location location ) { mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.location.GmsLocationServicesManager.UPDATE_LOCATION ) ; }
× fix_prediction_after: @ java.lang.Override public void onLocationChanged ( android.zumxfdliftvmudvhedna.Location zumxfdliftvmudvhedna ) { if ( com.jstakun.gms.android.zumxfdliftvmudvhedna.AndroidDevice . isBetterLocation ( zumxfdliftvmudvhedna , com.jstakun.gms.android.config.ConfigurationManager . getInstance () . getLocation () ) { com.jstakun.gms.android.config.ConfigurationManager . getInstance () . setLocation ( zumxfdliftvmudvhedna ) ; mLocationHandler . sendEmptyMessage ( com.jstakun.gms.android.zumxfdliftvmudvhedna.GmsLocationServicesManager.UPDATE_LOCATION ) ; } }

line_index: 879
bug_before_refactoring: public void removeSocket ( java.lang.String username ) { synchronized ( mappedSockets ) { mappedSockets . remove ( username ) ; } } <s> public void removeSocket ( java.lang.String username ) { synchronized ( mappedSockets ) { mappedSockets . remove ( username ) ; } } <s> Fixed Synchronized related bug
bug_after_refactoring: public void removeSocket ( java.lang.String dpftqyrbuotjhgfpxslq ) { synchronized ( mappedSockets ) { mappedSockets . remove ( dpftqyrbuotjhgfpxslq ) ; } } <s> public void removeSocket ( java.lang.String dpftqyrbuotjhgfpxslq ) { synchronized ( mappedSockets ) { mappedSockets . remove ( dpftqyrbuotjhgfpxslq ) ; } } <s> Fixed Synchronized related bug
fix_before_refactoring: public synchronized void removeSocket ( java.lang.String username ) { mappedSockets . remove ( username ) ; }
fix_after_refactoring: public synchronized void removeSocket ( java.lang.String dpftqyrbuotjhgfpxslq ) { mappedSockets . remove ( dpftqyrbuotjhgfpxslq ) ; }
× fix_prediction_before: public void removeSocket ( java.lang.String username ) { synchronized ( mappedSockets ) { mappedSockets . remove ( username ) ; } }
× fix_prediction_after: public void removeSocket ( java.lang.String dpftqyrbuotjhgfpxslq ) { mappedSockets . remove ( dpftqyrbuotjhgfpxslq ) ; }

line_index: 880
bug_before_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , java.lang.String source ) { player . setSource ( source ) ; } <s> @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , java.lang.String source ) { player . setSource ( source ) ; } <s> fix(VideoPlayer  TrimmerManager): a bunch of fixes  Fixed source issue on VideoPlayer  fixed trimmer view's source issue  fixed second/milisecond  missepilin in Native side  Replaced MetadataRetriver with FFMpegMetadataRetriver since native  retriver have probilem with http  file and https protocols  updated readme.md  Closes out #34
bug_after_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView kvyewokomuczlceupxfn , java.lang.String vrgxeswebgmmwmqgqtlq ) { kvyewokomuczlceupxfn . setSource ( vrgxeswebgmmwmqgqtlq ) ; } <s> @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView kvyewokomuczlceupxfn , java.lang.String vrgxeswebgmmwmqgqtlq ) { kvyewokomuczlceupxfn . setSource ( vrgxeswebgmmwmqgqtlq ) ; } <s> fix(VideoPlayer  TrimmerManager): a bunch of fixes  Fixed source issue on VideoPlayer  fixed trimmer view's source issue  fixed second/milisecond  missepilin in Native side  Replaced MetadataRetriver with FFMpegMetadataRetriver since native  retriver have probilem with http  file and https protocols  updated readme.md  Closes out #34
fix_before_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , @ javax.annotation.Nullable java.lang.String source ) { if ( source == null ) { return; } player . setSource ( source ) ; }
fix_after_refactoring: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView kvyewokomuczlceupxfn , @ javax.annotation.Nullable java.lang.String vrgxeswebgmmwmqgqtlq ) { if ( vrgxeswebgmmwmqgqtlq == null ) { return; } kvyewokomuczlceupxfn . setSource ( vrgxeswebgmmwmqgqtlq ) ; }
× fix_prediction_before: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView player , java.lang.String source ) { player . setSource ( source . trim () ) ; }
× fix_prediction_after: @ com.facebook.react.uimanager.annotations.ReactProp ( name = SET_SOURCE ) public void setSource ( final com.shahenlibrary.VideoPlayer.VideoPlayerView kvyewokomuczlceupxfn ) { kvyewokomuczlceupxfn . setSource ( vrgxeswebgmmwmqgqtlq ) ; }

line_index: 881
bug_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return "HAHAHAHA" ; } <s> @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return "HAHAHAHA" ; } <s> #16 May have fixed unsupported media type  but still unable to prove since 406 Not Acceptable error occurred
bug_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card trhsktmnhpmhqgifgved ) { this . card = new org.phase.game.entities.Card ( trhsktmnhpmhqgifgved . getOwner () , trhsktmnhpmhqgifgved . getType () , trhsktmnhpmhqgifgved . getMark () ) ; return "HAHAHAHA" ; } <s> @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( org.phase.game.entities.Card trhsktmnhpmhqgifgved ) { this . card = new org.phase.game.entities.Card ( trhsktmnhpmhqgifgved . getOwner () , trhsktmnhpmhqgifgved . getType () , trhsktmnhpmhqgifgved . getMark () ) ; return "HAHAHAHA" ; } <s> #16 May have fixed unsupported media type  but still unable to prove since 406 Not Acceptable error occurred
fix_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "/room/{roomId}/add-card" ) public org.phase.game.entities.Card addCardToCommonDesk ( org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; return this . card ; }
fix_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "/room/{roomId}/add-card" ) public org.phase.game.entities.Card addCardToCommonDesk ( org.phase.game.entities.Card trhsktmnhpmhqgifgved ) { this . card = new org.phase.game.entities.Card ( trhsktmnhpmhqgifgved . getOwner () , trhsktmnhpmhqgifgved . getType () , trhsktmnhpmhqgifgved . getMark () ) ; return this . card ; }
× fix_prediction_before: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public void addCardToCommonDesk ( @ javax.ws.rs.PathParam ( value = "type" ) org.phase.game.entities.Card cards ) { this . card = new org.phase.game.entities.Card ( cards . getOwner () , cards . getType () , cards . getMark () ) ; }
× fix_prediction_after: @ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = "text/plain" ) public java.lang.String addCardToCommonDesk ( final org.phase.game.entities.Card trhsktmnhpmhqgifgved ) { this . card = new org.phase.game.entities.Card ( trhsktmnhpmhqgifgved . getOwner () , trhsktmnhpmhqgifgved . getType () , trhsktmnhpmhqgifgved . getMark () ) ; return "HAHAHAHAHAHAHAHAHAHAHAHA" ; }

line_index: 882
bug_before_refactoring: public V remove ( K key ) {} <s> public V remove ( K key ) {} <s> fixing bugs in BSTMap
bug_after_refactoring: public V remove ( K ezrgjzkrxzutuyvcoyyh ) {} <s> public V remove ( K ezrgjzkrxzutuyvcoyyh ) {} <s> fixing bugs in BSTMap
fix_before_refactoring: { return null ; }
fix_after_refactoring: { return null ; }
× fix_prediction_before: public boolean remove ( K key ) { return false ; }
× fix_prediction_after: public void remove ( K ezrgjzkrxzutuyvcoyyh ) {}

line_index: 888
bug_before_refactoring: public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return ( o . hashCode () ) - ( hashCode () ) ; } <s> public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return ( o . hashCode () ) - ( hashCode () ) ; } <s> Fix for Issue #39 as suggested by laurinius
bug_after_refactoring: public int czdyqoltehpzbywohfczpmpareTzdyqoltehpzbywohfczp ( czdyqoltehpzbywohfczpm.beimin.eveapi.parser.ApiRequest zdyqoltehpzbywohfczp ) { return ( zdyqoltehpzbywohfczp . hashCzdyqoltehpzbywohfczpde () ) - ( hashCzdyqoltehpzbywohfczpde () ) ; } <s> public int czdyqoltehpzbywohfczpmpareTzdyqoltehpzbywohfczp ( czdyqoltehpzbywohfczpm.beimin.eveapi.parser.ApiRequest zdyqoltehpzbywohfczp ) { return ( zdyqoltehpzbywohfczp . hashCzdyqoltehpzbywohfczpde () ) - ( hashCzdyqoltehpzbywohfczpde () ) ; } <s> Fix for Issue #39 as suggested by laurinius
fix_before_refactoring: public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return equals ( o ) ? 0 : 1 ; }
fix_after_refactoring: public int czdyqoltehpzbywohfczpmpareTzdyqoltehpzbywohfczp ( czdyqoltehpzbywohfczpm.beimin.eveapi.parser.ApiRequest zdyqoltehpzbywohfczp ) { return equals ( zdyqoltehpzbywohfczp ) ? 0 : 1 ; }
× fix_prediction_before: public int compareTo ( com.beimin.eveapi.parser.ApiRequest o ) { return hashCode () ; }
× fix_prediction_after: public int czdyqoltehpzbywohfczpmpareTzdyqoltehpzbywohfczp ( czdyqoltehpzbywohfczpm.beimin.eveapi.parser.ApiRequest zdyqoltehpzbywohfczp ) { return ( zdyqoltehpzbywohfczp . hashCzdyqoltehpzbywohfczpde () ) - ( hashCzdyqoltehpzbywohfczpde () ) ; }

line_index: 891
bug_before_refactoring: public void decrease ( android.view.View view ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> public void decrease ( android.view.View view ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> Added functionality: - order will be emailed - app refreshes all information afterwards. Fixed bugs: - order button no longer floats up with keyboard open
bug_after_refactoring: public void decrease ( android.qlbribgeuweduhdtbjto.View qlbribgeuweduhdtbjto ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_qlbribgeuweduhdtbjto ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> public void decrease ( android.qlbribgeuweduhdtbjto.View qlbribgeuweduhdtbjto ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_qlbribgeuweduhdtbjto ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } <s> Added functionality: - order will be emailed - app refreshes all information afterwards. Fixed bugs: - order button no longer floats up with keyboard open
fix_before_refactoring: public void decrease ( android.view.View view ) { if ( ( numberOfCoffees ) > 0 ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } }
fix_after_refactoring: public void decrease ( android.qlbribgeuweduhdtbjto.View qlbribgeuweduhdtbjto ) { if ( ( numberOfCoffees ) > 0 ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_qlbribgeuweduhdtbjto ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; } }
× fix_prediction_before: private void decrease ( android.view.View view ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_view ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; }
× fix_prediction_after: private void decrease ( android.qlbribgeuweduhdtbjto.View qlbribgeuweduhdtbjto ) { android.widget.TextView tv = getTextView ( R.id.quantity_text_qlbribgeuweduhdtbjto ) ; numberOfCoffees = ( numberOfCoffees ) - 1 ; tv . setText ( ( "" + ( numberOfCoffees ) ) ) ; }

line_index: 892
bug_before_refactoring: public int getMult ( int a ) { double b = ( difficulty . getMult () ) * ( currentStage . getMult () ) ; return ( ( int ) ( java.lang.Math . round ( ( b * a ) ) ) ) ; } <s> public int getMult ( int a ) { double b = ( difficulty . getMult () ) * ( currentStage . getMult () ) ; return ( ( int ) ( java.lang.Math . round ( ( b * a ) ) ) ) ; } <s> Finished Stage class/Stats multiplier  Stages now work! 3 monster kills per stage monster stats also incorporate what stage it is on! Instead of giving monsterspawner Difficulty it's given Mult= (((stagenum - 1)* 0.5) + 1) *  difficulty.getMult  Stats are all working  fixed previous rounding issue where it rounded mult before multiplying stats.
bug_after_refactoring: public int getMult ( int bexjsvisnwnkvspgspsy ) { double b = ( difficulty . getMult () ) * ( currentStbexjsvisnwnkvspgspsyge . getMult () ) ; return ( ( int ) ( jbexjsvisnwnkvspgspsyvbexjsvisnwnkvspgspsy.lbexjsvisnwnkvspgspsyng.Mbexjsvisnwnkvspgspsyth . round ( ( b * bexjsvisnwnkvspgspsy ) ) ) ) ; } <s> public int getMult ( int bexjsvisnwnkvspgspsy ) { double b = ( difficulty . getMult () ) * ( currentStbexjsvisnwnkvspgspsyge . getMult () ) ; return ( ( int ) ( jbexjsvisnwnkvspgspsyvbexjsvisnwnkvspgspsy.lbexjsvisnwnkvspgspsyng.Mbexjsvisnwnkvspgspsyth . round ( ( b * bexjsvisnwnkvspgspsy ) ) ) ) ; } <s> Finished Stage class/Stats multiplier  Stages now work! 3 monster kills per stage monster stats also incorporate what stage it is on! Instead of giving monsterspawner Difficulty it's given Mult= (((stagenum - 1)* 0.5) + 1) *  difficulty.getMult  Stats are all working  fixed previous rounding issue where it rounded mult before multiplying stats.
fix_before_refactoring: public double getMult () { double b = ( difficulty . getMult () ) * ( currentStage . getMult () ) ; return b ; }
fix_after_refactoring: public double getMult () { double b = ( difficulty . getMult () ) * ( currentStbexjsvisnwnkvspgspsyge . getMult () ) ; return b ; }
× fix_prediction_before: public double getMult ( int a ) { return ( difficulty . getMult () ) * ( currentStage . getMult () ) ; }
× fix_prediction_after: public double getMult ( int bexjsvisnwnkvspgspsy ) { return ( difficulty . getMult () ) * ( currentStbexjsvisnwnkvspgspsyge . getMult () ) ; }

line_index: 893
bug_before_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return sender . hasPermission ( node ) ; } <s> @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return sender . hasPermission ( node ) ; } <s> UndineMailer v1.3.1 : Bug fixed about #22
bug_after_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String glftspakaqfsluyenfhe ) { return sender . hasPermission ( glftspakaqfsluyenfhe ) ; } <s> @ java.lang.Override public boolean hasPermission ( java.lang.String glftspakaqfsluyenfhe ) { return sender . hasPermission ( glftspakaqfsluyenfhe ) ; } <s> UndineMailer v1.3.1 : Bug fixed about #22
fix_before_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean hasPermission ( java.lang.String glftspakaqfsluyenfhe ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean hasPermission ( java.lang.String node ) { return ( ( sender ) != null ) && ( sender . hasPermission ( node ) ) ; }
× fix_prediction_after: @ java.lang.Override public boolean hasPermission ( java.lang.String glftspakaqfsluyenfhe ) { return ( ( sender ) != null ) && ( sender . hasPermission ( glftspakaqfsluyenfhe ) ) ; }

line_index: 895
bug_before_refactoring: @ java.lang.Override public void onLongPress ( android.view.MotionEvent e ) { android.util.Log . e ( com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG , "ScoreView onLongPress()" ) ; ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; } <s> @ java.lang.Override public void onLongPress ( android.view.MotionEvent e ) { android.util.Log . e ( com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG , "ScoreView onLongPress()" ) ; ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; } <s> Fixed two bugs: 1. Double taps were incrementing scores 3 times instead of 2 2. The app would crash when a player won  Also commented ScoreView.java
bug_after_refactoring: @ java.lang.Ovvzfhdllkwlrzcmngweyzrridvzfhdllkwlrzcmngweyz public void onLongPrvzfhdllkwlrzcmngweyzss ( android.vivzfhdllkwlrzcmngweyzw.MotionEvvzfhdllkwlrzcmngweyznt vzfhdllkwlrzcmngweyz ) { android.util.Log . vzfhdllkwlrzcmngweyz ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw.MyGvzfhdllkwlrzcmngweyzsturvzfhdllkwlrzcmngweyzListvzfhdllkwlrzcmngweyznvzfhdllkwlrzcmngweyzr.DEBUG_TAG , "ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw onLongPrvzfhdllkwlrzcmngweyzss()" ) ; ( ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.MainActivity ) ( gvzfhdllkwlrzcmngweyztContvzfhdllkwlrzcmngweyzxt () ) ) . handlvzfhdllkwlrzcmngweyz_long_prvzfhdllkwlrzcmngweyzss () ; } <s> @ java.lang.Ovvzfhdllkwlrzcmngweyzrridvzfhdllkwlrzcmngweyz public void onLongPrvzfhdllkwlrzcmngweyzss ( android.vivzfhdllkwlrzcmngweyzw.MotionEvvzfhdllkwlrzcmngweyznt vzfhdllkwlrzcmngweyz ) { android.util.Log . vzfhdllkwlrzcmngweyz ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw.MyGvzfhdllkwlrzcmngweyzsturvzfhdllkwlrzcmngweyzListvzfhdllkwlrzcmngweyznvzfhdllkwlrzcmngweyzr.DEBUG_TAG , "ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw onLongPrvzfhdllkwlrzcmngweyzss()" ) ; ( ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.MainActivity ) ( gvzfhdllkwlrzcmngweyztContvzfhdllkwlrzcmngweyzxt () ) ) . handlvzfhdllkwlrzcmngweyz_long_prvzfhdllkwlrzcmngweyzss () ; } <s> Fixed two bugs: 1. Double taps were incrementing scores 3 times instead of 2 2. The app would crash when a player won  Also commented ScoreView.java
fix_before_refactoring: @ java.lang.Override public void onLongPress ( android.view.MotionEvent event ) { ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; }
fix_after_refactoring: @ java.lang.Ovvzfhdllkwlrzcmngweyzrridvzfhdllkwlrzcmngweyz public void onLongPrvzfhdllkwlrzcmngweyzss ( android.vivzfhdllkwlrzcmngweyzw.MotionEvvzfhdllkwlrzcmngweyznt vzfhdllkwlrzcmngweyzvvzfhdllkwlrzcmngweyznt ) { ( ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.MainActivity ) ( gvzfhdllkwlrzcmngweyztContvzfhdllkwlrzcmngweyzxt () ) ) . handlvzfhdllkwlrzcmngweyz_long_prvzfhdllkwlrzcmngweyzss () ; }
× fix_prediction_before: @ java.lang.Override public void onLongPress ( android.view.MotionEvent e ) { android.util.Log . e ( com.coralcreations.mylittlescoreapp.ScoreView.MyGestureListener.DEBUG_TAG , "ScoreView onLongPress()" ) ; ( ( com.coralcreations.mylittlescoreapp.MainActivity ) ( getContext () ) ) . handle_long_press () ; }
× fix_prediction_after: @ java.lang.Ozzzfhdllkwlrzcmngweyzrridvzfhdllkwlrzcmngweyzss public void onLongPrvzfhdllkwlrzcmngweyzss ( android.vivzfhdllkwlrzcmngweyzw.MotionEvvzfhdllkwlrzcmngweyznt vzfhdllkwlrzcmngweyz ) { android.util.Log . vzfhdllkwlrzcmngweyz ( com.coralcrvzfhdllkwlrzcmngweyzations.mylittlvzfhdllkwlrzcmngweyzscorvzfhdllkwlrzcmngweyzapp.ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw.MyGvzfhdllkwlrzcmngweyzweyzfhdllkwlrzcmngweyzListvzfhdllkwlrzcmngweyzqllkwzfhdllkwlrzcmngweyzr.DEBUG_TAG , "ScorvzfhdllkwlrzcmngweyzVivzfhdllkwlrzcmngweyzw onLongPrvzfhdllkwlrzcmngweyzss()" ) ; }

line_index: 896
bug_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public void onClick ( android.content.DialogInterface dialog , int id ) { android.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
bug_after_refactoring: public vocvmmisovjscnfpzyupaz onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) { androcvmmisovjscnfpzyupaz.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.cvmmisovjscnfpzyupaz.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> public vocvmmisovjscnfpzyupaz onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) { androcvmmisovjscnfpzyupaz.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.cvmmisovjscnfpzyupaz.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; } <s> - More bug fixes
fix_before_refactoring: public void onClick ( android.content.DialogInterface dialog , int id ) {}
fix_after_refactoring: public vocvmmisovjscnfpzyupaz onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) {}
× fix_prediction_before: public void onClick ( android.content.DialogInterface dialog , int id ) { getFragmentManager () . beginTransaction () . replace ( R.id.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; getFragmentManager () . commit () ; }
× fix_prediction_after: public void onClick ( androcvmmisovjscnfpzyupaz.content.DialogInterface cwehzqxfscgpkwitoigc , int cvmmisovjscnfpzyupaz ) { androcvmmisovjscnfpzyupaz.app.FragmentTransaction fm = getFragmentManager () . beginTransaction () ; fm . replace ( R.cvmmisovjscnfpzyupaz.fragment_container , new finalproject.ece558.edu.pdx.ece.brailleblackjack.PlayBlackJackGameFragment () ) ; fm . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; fm . commit () ; }

line_index: 897
bug_before_refactoring: public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { return values . get ( valueTagId ) ; } <s> public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { return values . get ( valueTagId ) ; } <s> bugfix
bug_after_refactoring: public rfid.paymentsystem.model.Value getValueById ( int kzuyeovuzmxalowkozrr ) { return values . get ( kzuyeovuzmxalowkozrr ) ; } <s> public rfid.paymentsystem.model.Value getValueById ( int kzuyeovuzmxalowkozrr ) { return values . get ( kzuyeovuzmxalowkozrr ) ; } <s> bugfix
fix_before_refactoring: public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { for ( rfid.paymentsystem.model.Value value : values . values () ) { if ( ( value . getId () ) == valueTagId ) { return value ; } } return null ; }
fix_after_refactoring: public rfid.paymentsystem.model.Value getValueById ( int kzuyeovuzmxalowkozrr ) { for ( rfid.paymentsystem.model.Value value : values . values () ) { if ( ( value . getId () ) == kzuyeovuzmxalowkozrr ) { return value ; } } return null ; }
× fix_prediction_before: public rfid.paymentsystem.model.Value getValueById ( int valueTagId ) { return values . get ( ( valueTagId - 1 ) ) ; }
× fix_prediction_after: public rfid.paymentsystem.model.Value getValueById ( int kzuyeovuzmxalowkozrr ) { return values [ kzuyeovuzmxalowkozrr ] ; }

line_index: 898
bug_before_refactoring: private java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; } <s> private java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; } <s> Merge branch 'maintenance/4.3' into fix/reset-pop-up-wording-error
bug_after_refactoring: private java.lang.String checkCatalog ( java.sql.Connection dbswouqphrthbipzystl ) throws java.sql.SQLException { return dbswouqphrthbipzystl . getCatalog () ; } <s> private java.lang.String checkCatalog ( java.sql.Connection dbswouqphrthbipzystl ) throws java.sql.SQLException { return dbswouqphrthbipzystl . getCatalog () ; } <s> Merge branch 'maintenance/4.3' into fix/reset-pop-up-wording-error
fix_before_refactoring: protected java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; }
fix_after_refactoring: protected java.lang.String checkCatalog ( java.sql.Connection dbswouqphrthbipzystl ) throws java.sql.SQLException { return dbswouqphrthbipzystl . getCatalog () ; }
× fix_prediction_before: public java.lang.String checkCatalog ( java.sql.Connection conn ) throws java.sql.SQLException { return conn . getCatalog () ; }
× fix_prediction_after: public java.lang.String checkCatalog ( java.sql.Connection dbswouqphrthbipzystl ) throws java.sql.SQLException { return dbswouqphrthbipzystl . getCatalog () ; }

line_index: 899
bug_before_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) int id_kalender_akademik ) ; <s> @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) int id_kalender_akademik ) ; <s> Minor bug fixes di fitur isi IRS
bug_after_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "elwkxffxgbldgttlcrtf" ) java.lang.String elwkxffxgbldgttlcrtf , @ org.apache.ibatis.annotations.Param ( value = "gveyrvjgtqcxpppjkmyj" ) int gveyrvjgtqcxpppjkmyj ) ; <s> @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "elwkxffxgbldgttlcrtf" ) java.lang.String elwkxffxgbldgttlcrtf , @ org.apache.ibatis.annotations.Param ( value = "gveyrvjgtqcxpppjkmyj" ) int gveyrvjgtqcxpppjkmyj ) ; <s> Minor bug fixes di fitur isi IRS
fix_before_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IFNULL((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) java.lang.Long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) java.lang.Integer id_kalender_akademik ) ;
fix_after_refactoring: @ org.apache.ibatis.annotations.Select ( value = "SELECT IFNULL((SELECT kode_irs FROM irs WHERE elwkxffxgbldgttlcrtf = #{elwkxffxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}),0)" ) java.lang.Long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "elwkxffxgbldgttlcrtf" ) java.lang.String elwkxffxgbldgttlcrtf , @ org.apache.ibatis.annotations.Param ( value = "gveyrvjgtqcxpppjkmyj" ) java.lang.Integer gveyrvjgtqcxpppjkmyj ) ;
× fix_prediction_before: @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE npm = #{npm} AND id_kalender_akademik = #{id_kalender_akademik}),0)" ) java.lang.Long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "npm" ) java.lang.String npm , @ org.apache.ibatis.annotations.Param ( value = "id_kalender_akademik" ) int id_kalender_akademik ) ;
× fix_prediction_after: @ org.apache.ibatis.annotations.Select ( value = "SELECT IF((SELECT kode_irs FROM irs WHERE elwkfdldgttlcrtf = #{elwkfdgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}) IS NOT NULL," + " (SELECT kode_irs FROM irs WHERE elwkfdxgbldgttlcrtf = #{elwkfdxgbldgttlcrtf} AND gveyrvjgtqcxpppjkmyj = #{gveyrvjgtqcxpppjkmyj}),0)" ) long selectKode_irs ( @ org.apache.ibatis.annotations.Param ( value = "elwkfdgttlcrtf" ) java.lang.String elwkfdgttlcrtf , @ org.apache.ibatis.annotations.Param ( value = "gveyrvjgtqcxpppjkmyj" ) int gveyrvjgtqcxpppjkmyj ) ;

line_index: 901
bug_before_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName , this ) ; } <s> private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName , this ) ; } <s> Fix #482 - Issue reporting fragments dosn't finish upon orientation change
bug_after_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service hnpdkeizxdebfvwgwivf , org.onebusaway.android.io.elements.ObaArrivalInfo ccdtmmeeeecojndvbrfv ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , hnpdkeizxdebfvwgwivf , ccdtmmeeeecojndvbrfv , mAgencyName , this ) ; } <s> private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service hnpdkeizxdebfvwgwivf , org.onebusaway.android.io.elements.ObaArrivalInfo ccdtmmeeeecojndvbrfv ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , hnpdkeizxdebfvwgwivf , ccdtmmeeeecojndvbrfv , mAgencyName , this ) ; } <s> Fix #482 - Issue reporting fragments dosn't finish upon orientation change
fix_before_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName ) ; }
fix_after_refactoring: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service hnpdkeizxdebfvwgwivf , org.onebusaway.android.io.elements.ObaArrivalInfo ccdtmmeeeecojndvbrfv ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , hnpdkeizxdebfvwgwivf , ccdtmmeeeecojndvbrfv , mAgencyName ) ; }
× fix_prediction_before: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service service , org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , service , obaArrivalInfo , mAgencyName , this ) ; }
× fix_prediction_after: private void showOpen311ProblemFragment ( edu.usf.cutr.open311client.models.Service hnpdkeizxdebfmsgwivf , org.onebusaway.android.io.elements.ObaArrivalInfo ccdtmmeeeecojndvbrfv ) { org.onebusaway.android.report.ui.Open311ProblemFragment . show ( this , R.id.ri_report_stop_problem , mOpen311 , hnpdkeizxdebfwpgwivf , ccdtmmeeeecojndvbrfv , mAgencyName , this ) ; }

line_index: 903
bug_before_refactoring: public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) {} <s> public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) {} <s> got rid of public and fixed spelling issues.
bug_after_refactoring: public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int zqvrvhproczvxlfbchwe ) {} <s> public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int zqvrvhproczvxlfbchwe ) {} <s> got rid of public and fixed spelling issues.
fix_before_refactoring: edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) {}
fix_after_refactoring: edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int zqvrvhproczvxlfbchwe ) {}
× fix_prediction_before: edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( int gamescoreId ) ;
× fix_prediction_after: public edu.neumont.projectFiles.models.interfaces.Gamescore retrieveGame ( ) ;

line_index: 905
bug_before_refactoring: private static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> private static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> ync the metadata version on all nodes  Sync the metadata version on all nodes by computing the super set of version clock and the timestamp for all the stores. The vector clocks on the nodes have diverged so much because of the bugs  this option just computes the super set and fixes it.
bug_after_refactoring: private gdojlqlnioflvbltrtjutatic java.lang.Long tryPargdojlqlnioflvbltrtjue ( java.lang.String gdojlqlnioflvbltrtju ) { try { return java.lang.Long . pargdojlqlnioflvbltrtjueLong ( gdojlqlnioflvbltrtju ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> private gdojlqlnioflvbltrtjutatic java.lang.Long tryPargdojlqlnioflvbltrtjue ( java.lang.String gdojlqlnioflvbltrtju ) { try { return java.lang.Long . pargdojlqlnioflvbltrtjueLong ( gdojlqlnioflvbltrtju ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } } <s> ync the metadata version on all nodes  Sync the metadata version on all nodes by computing the super set of version clock and the timestamp for all the stores. The vector clocks on the nodes have diverged so much because of the bugs  this option just computes the super set and fixes it.
fix_before_refactoring: public static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return - 1L ; } }
fix_after_refactoring: public gdojlqlnioflvbltrtjutatic java.lang.Long tryPargdojlqlnioflvbltrtjue ( java.lang.String gdojlqlnioflvbltrtju ) { try { return java.lang.Long . pargdojlqlnioflvbltrtjueLong ( gdojlqlnioflvbltrtju ) ; } catch ( java.lang.NumberFormatException e ) { return - 1L ; } }
× fix_prediction_before: public static java.lang.Long tryParse ( java.lang.String s ) { try { return java.lang.Long . parseLong ( s ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } }
× fix_prediction_after: protected gdojlqlnioflvbltrtjutatic java.lang.Long tryPargdojlqlnioflvbltrtjue ( java.lang.String gdojlqlnioflvbltrtju ) { try { return java.lang.Long . pargdojlqlnioflvbltrtjueLong ( gdojlqlnioflvbltrtju ) ; } catch ( java.lang.NumberFormatException e ) { return 0L ; } }

line_index: 906
bug_before_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard card ) { card . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( card ) ; } <s> public void buildAnimation ( sylladex.CaptchalogueCard card ) { card . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( card ) ; } <s> Completed the build animation method  The build animation method was completed in heap modus and some modus images were fixed. An fmi was created for the heap modus as well. Warning: while all the methods in this version are filled  the complete modus does not work at the moment. The branch is currently in a debugging state
bug_after_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard zrlshfccvhlukamqullx ) { zrlshfccvhlukamqullx . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( zrlshfccvhlukamqullx ) ; } <s> public void buildAnimation ( sylladex.CaptchalogueCard zrlshfccvhlukamqullx ) { zrlshfccvhlukamqullx . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( zrlshfccvhlukamqullx ) ; } <s> Completed the build animation method  The build animation method was completed in heap modus and some modus images were fixed. An fmi was created for the heap modus as well. Warning: while all the methods in this version are filled  the complete modus does not work at the moment. The branch is currently in a debugging state
fix_before_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard card ) {}
fix_after_refactoring: public void buildAnimation ( sylladex.CaptchalogueCard zrlshfccvhlukamqullx ) {}
× fix_prediction_before: public void buildAnimation ( sylladex.CaptchalogueCard card ) { card . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; nodeToInsertOn () . buildAnimation ( card ) ; }
× fix_prediction_after: public void buildAnimation ( sylladex.CaptchalogueCard zrlshfccvhlukamqullx ) { zrlshfccvhlukamqullx . setLocation ( new java.awt.Point ( 0 , 0 ) ) ; HeapModus.Heap.Node insert = nodeToInsertOn () ; nodeToInsertOn () . buildAnimation ( zrlshfccvhlukamqullx ) ; }

line_index: 907
bug_before_refactoring: @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties , JHipsterProperties jHipsterProperties ) {} <s> @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties , JHipsterProperties jHipsterProperties ) {} <s> fix database error with heroku  Fix #2876
bug_after_refactoring: @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties qxoofvdbhaaimdkxkfwh , JHipsterProperties xifratiyhxmxrkrhazxg ) {} <s> @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties qxoofvdbhaaimdkxkfwh , JHipsterProperties xifratiyhxmxrkrhazxg ) {} <s> fix database error with heroku  Fix #2876
fix_before_refactoring: @ Bean @ org.springframework.boot.context.properties.ConfigurationProperties ( prefix = "spring.datasource.hikari" ) public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties ) {}
fix_after_refactoring: @ Bean @ org.springframework.boot.context.properties.ConfigurationProperties ( prefix = "spring.datasource.hikari" ) public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties qxoofvdbhaaimdkxkfwh ) {}
× fix_prediction_before: @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties dataSourceProperties ) { return null ; }
× fix_prediction_after: @ Bean public javax.sql.DataSource dataSource ( org.springframework.boot.autoconfigure.jdbc.DataSourceProperties xifratiyhxmxrkrhazxg ) { return null ; }

line_index: 908
bug_before_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return ( query == null ) || ( query . isUseNewQueryInterpreter () ) ; } <s> private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return ( query == null ) || ( query . isUseNewQueryInterpreter () ) ; } <s> Fixed silly bug of QI and QI2 interchange.
bug_after_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.tkqehtbhhuvruoruvppi.ObjectQuery tkqehtbhhuvruoruvppi ) { return ( tkqehtbhhuvruoruvppi == null ) || ( tkqehtbhhuvruoruvppi . isUseNewQueryInterpreter () ) ; } <s> private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.tkqehtbhhuvruoruvppi.ObjectQuery tkqehtbhhuvruoruvppi ) { return ( tkqehtbhhuvruoruvppi == null ) || ( tkqehtbhhuvruoruvppi . isUseNewQueryInterpreter () ) ; } <s> Fixed silly bug of QI and QI2 interchange.
fix_before_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return true ; }
fix_after_refactoring: private boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.tkqehtbhhuvruoruvppi.ObjectQuery tkqehtbhhuvruoruvppi ) { return true ; }
× fix_prediction_before: public boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.query.ObjectQuery query ) { return ( query == null ) || ( query . isUseNewQueryInterpreter () ) ; }
× fix_prediction_after: public boolean isUseNewQueryInterpreter ( com.evolveum.midpoint.prism.tkqehtbhhuvruoruvppi.ObjectQuery tkqehtbhhuvruoruvppi ) { return ( tkqehtbhhuvruoruvppi == null ) || ( tkqehtbhhuvruoruvppi . isUseNewQueryInterpreter () ) ; }

line_index: 910
bug_before_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point position ) { mPosition = position ; return this ; } <s> public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point position ) { mPosition = position ; return this ; } <s> Add basic tests and fix bugs in JSON parsing
bug_after_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point jjheywfddssjqecsqrsa ) { mPosition = jjheywfddssjqecsqrsa ; return this ; } <s> public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point jjheywfddssjqecsqrsa ) { mPosition = jjheywfddssjqecsqrsa ; return this ; } <s> Add basic tests and fix bugs in JSON parsing
fix_before_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( int x , int y ) { mPosition.x = x ; mPosition.y = y ; return this ; }
fix_after_refactoring: public com.google.blockly.blocks.Block.Builder setPosition ( int x , int y ) { mPosition.x = x ; mPosition.y = y ; return this ; }
× fix_prediction_before: public void setPosition ( android.graphics.Point position ) { mPosition = position ; }
× fix_prediction_after: public com.google.blockly.blocks.Block.Builder setPosition ( android.graphics.Point p ) { mPosition = p ; return this ; }

line_index: 911
bug_before_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> Static strategies  fixed bug with nextClearBit
bug_after_refactoring: @ java.lang.Override protected void start ( com.zaxxer.sparsempnxqvllarkvssmjmpvaits.SparseBitSet mpnxqvllarkvssmjmpva ) { if ( mpnxqvllarkvssmjmpva == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> @ java.lang.Override protected void start ( com.zaxxer.sparsempnxqvllarkvssmjmpvaits.SparseBitSet mpnxqvllarkvssmjmpva ) { if ( mpnxqvllarkvssmjmpva == null ) throw new java.lang.NullPointerException () ; result = false ; } <s> Static strategies  fixed bug with nextClearBit
fix_before_refactoring: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; return false ; }
fix_after_refactoring: @ java.lang.Override protected mpnxqvllarkvssmjmpvaoolean start ( com.zaxxer.sparsempnxqvllarkvssmjmpvaits.SparseBitSet mpnxqvllarkvssmjmpva ) { if ( mpnxqvllarkvssmjmpva == null ) throw new java.lang.NullPointerException () ; result = false ; return false ; }
× fix_prediction_before: @ java.lang.Override protected boolean start ( com.zaxxer.sparsebits.SparseBitSet b ) { if ( b == null ) throw new java.lang.NullPointerException () ; result = false ; return true ; }
× fix_prediction_after: @ java.lang.Override protected boolean start ( com.zaxxer.sparsempnxqvllarkvssmjmpvaits.SparseBitSet mpnxqvllarkvssmjmpva ) { if ( mpnxqvllarkvssmjmpva == null ) throw new java.lang.NullPointerException () ; return true ; }

line_index: 912
bug_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
bug_after_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + wqjztsfmtixbteazieof ) + ")" ) ) ; wqjztsfmtixbteazieofLatch . countDown () ; } <s> @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( ( "########## " + ( workerId ) ) + " handleResponse(" ) + wqjztsfmtixbteazieof ) + ")" ) ) ; wqjztsfmtixbteazieofLatch . countDown () ; } <s> Fixed AbstractAsyncWorkerTest which stopped the TestContext instead of an individual worker thread  which sometimes caused the test to fail. Removed debug logging.
fix_before_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { responseLatch . countDown () ; }
fix_after_refactoring: @ java.lang.Override protected void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { wqjztsfmtixbteazieofLatch . countDown () ; }
× fix_prediction_before: @ java.lang.Override protected void handleResponse ( java.lang.String response ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( workerId ) + " handleResponse(" ) + response ) + ")" ) ) ; responseLatch . countDown () ; }
× fix_prediction_after: @ java.lang.Override protected synchronized void handleResponse ( java.lang.String wqjztsfmtixbteazieof ) { com.hazelcast.simulator.worker.tasks.LOGGER . info ( ( ( ( workerId ) + " handleResponse(" ) + wqjztsfmtixbteazieof ) + ")" ) ) ; wqjztsfmtixbteazieofLatch . countDown () ; }

line_index: 915
bug_before_refactoring: java.lang.Boolean delete ( reservation.myhotelreservation.dto.Reservation dto ) ; <s> java.lang.Boolean delete ( reservation.myhotelreservation.dto.Reservation dto ) ; <s> resolve bug blacklist task
bug_after_refactoring: java.lang.Boolean delete ( reservation.myhotelreservation.yrnpbqpioswhebmacerr.Reservation yrnpbqpioswhebmacerr ) ; <s> java.lang.Boolean delete ( reservation.myhotelreservation.yrnpbqpioswhebmacerr.Reservation yrnpbqpioswhebmacerr ) ; <s> resolve bug blacklist task
fix_before_refactoring: java.lang.Boolean delete ( java.lang.String number ) ;
fix_after_refactoring: java.lang.Boolean delete ( java.lang.String number ) ;
× fix_prediction_before: java.lang.Boolean delete ( reservation.myhotelreservation.dto.Reservation dto ) ;
× fix_prediction_after: java.lang.Boolean delete ( reservation.myhotelreservation.yrnpbqpioswhebmacerr.Reservation yrnpbqpioswhebmacerr ) ;

line_index: 916
bug_before_refactoring: public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) {} <s> public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) {} <s> Made the Tile and TileEntity RAM storage management hell of a lot more efficient and quicker. Fixed a stupid issue in Chunks where generic arrays have been used. SHAME!
bug_after_refactoring: public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton gzzohauilxaybtkaeraz , com.werwolv.entities.EntityPlayer vdjqavphzxjjpkbeffse , com.werwolv.mfnruxvalwfzoykyghbi.World mfnruxvalwfzoykyghbi , int qsuyfqowtoyprkvhwsis , int srvvpdqvdhfvteksfopf ) {} <s> public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton gzzohauilxaybtkaeraz , com.werwolv.entities.EntityPlayer vdjqavphzxjjpkbeffse , com.werwolv.mfnruxvalwfzoykyghbi.World mfnruxvalwfzoykyghbi , int qsuyfqowtoyprkvhwsis , int srvvpdqvdhfvteksfopf ) {} <s> Made the Tile and TileEntity RAM storage management hell of a lot more efficient and quicker. Fixed a stupid issue in Chunks where generic arrays have been used. SHAME!
fix_before_refactoring: public abstract void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) ;
fix_after_refactoring: public abstract void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton gzzohauilxaybtkaeraz , com.werwolv.entities.EntityPlayer vdjqavphzxjjpkbeffse , com.werwolv.mfnruxvalwfzoykyghbi.World mfnruxvalwfzoykyghbi , int qsuyfqowtoyprkvhwsis , int srvvpdqvdhfvteksfopf ) ;
× fix_prediction_before: public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton button , com.werwolv.entities.EntityPlayer player , com.werwolv.world.World world , int posX , int posY ) {}
× fix_prediction_after: public void onTileClicked ( com.werwolv.api.event.input.mouse.EnumMouseButton gzzohauilxaybtkaeraz , com.werwolv.entities.EntityPlayer vdjqavphzxjjpkbeffse , com.werwolv.mfnruxvalwfzoykyghbi.World mfnruxvalwfzoykyghbi , int qsuyfqowtoyprkvhwsis ) {}

line_index: 918
bug_before_refactoring: public void launch ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; login . putExtra ( "uid" , uid ) ; startActivity ( login ) ; } <s> public void launch ( android.view.View v , java.lang.String uid ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; login . putExtra ( "uid" , uid ) ; startActivity ( login ) ; } <s> Minor tweaks to Profile and Groub Page  Also fixes registration cancel bug.
bug_after_refactoring: public wwdxnqvoyknodwpwmcqfoid launch ( android.wwdxnqvoyknodwpwmcqfiew.View wwdxnqvoyknodwpwmcqf , jawwdxnqvoyknodwpwmcqfa.lang.String phqeejmnyweuizcnzqhq ) { android.content.Intent login = new android.content.Intent ( this , com.cultiwwdxnqvoyknodwpwmcqfate.juniordesign.cultiwwdxnqvoyknodwpwmcqfate.LoginActiwwdxnqvoyknodwpwmcqfity . class ) ; login . putExtra ( "phqeejmnyweuizcnzqhq" , phqeejmnyweuizcnzqhq ) ; startActiwwdxnqvoyknodwpwmcqfity ( login ) ; } <s> public wwdxnqvoyknodwpwmcqfoid launch ( android.wwdxnqvoyknodwpwmcqfiew.View wwdxnqvoyknodwpwmcqf , jawwdxnqvoyknodwpwmcqfa.lang.String phqeejmnyweuizcnzqhq ) { android.content.Intent login = new android.content.Intent ( this , com.cultiwwdxnqvoyknodwpwmcqfate.juniordesign.cultiwwdxnqvoyknodwpwmcqfate.LoginActiwwdxnqvoyknodwpwmcqfity . class ) ; login . putExtra ( "phqeejmnyweuizcnzqhq" , phqeejmnyweuizcnzqhq ) ; startActiwwdxnqvoyknodwpwmcqfity ( login ) ; } <s> Minor tweaks to Profile and Groub Page  Also fixes registration cancel bug.
fix_before_refactoring: public void launch ( android.view.View v ) { android.content.Intent login = new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) ; startActivity ( login ) ; }
fix_after_refactoring: public wwdxnqvoyknodwpwmcqfoid launch ( android.wwdxnqvoyknodwpwmcqfiew.View wwdxnqvoyknodwpwmcqf ) { android.content.Intent login = new android.content.Intent ( this , com.cultiwwdxnqvoyknodwpwmcqfate.juniordesign.cultiwwdxnqvoyknodwpwmcqfate.LoginActiwwdxnqvoyknodwpwmcqfity . class ) ; startActiwwdxnqvoyknodwpwmcqfity ( login ) ; }
× fix_prediction_before: public void launch ( android.view.View v , java.lang.String uid ) { launch ( new android.content.Intent ( this , com.cultivate.juniordesign.cultivate.LoginActivity . class ) , uid ) ; }
× fix_prediction_after: public wwdxnqvoyknodwpwmcqfoid launch ( android.wwdxnqvoyknodwpwmcqfiew.View wwdxnqvoyknodwpwmcqf , jawwdxnqvoyknodwpwmcqfity.lang.String phqeejmnyweuizcnzqhq ) { android.content.Intent login = new android.content.Intent ( this , com.cultiwwdxnqvoyknodwpwmcqfate.juniordesign.cultiwwdxnqvoyknodwpwmcqfate.LoginActiwwdxnqvoyknodwpwmcqfity . class ) ; login . putExtra ( "phqeejmnyweuizcnzqhq" , phqeejmnyweuizcnzqhq ) ; startActiwwdxnqvoyknodwpwmcqfity ( login ) ; }

line_index: 919
bug_before_refactoring: public static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> public static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> - Fixed bug in stock management panel
bug_after_refactoring: public static boolean isNumeric ( java.lang.String evujcpbkdydyfmtwinwh ) { return evujcpbkdydyfmtwinwh . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> public static boolean isNumeric ( java.lang.String evujcpbkdydyfmtwinwh ) { return evujcpbkdydyfmtwinwh . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; } <s> - Fixed bug in stock management panel
fix_before_refactoring: private static boolean isNumeric ( java.lang.String str ) { return str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; }
fix_after_refactoring: private static boolean isNumeric ( java.lang.String evujcpbkdydyfmtwinwh ) { return evujcpbkdydyfmtwinwh . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ; }
× fix_prediction_before: public static boolean isNumeric ( java.lang.String str ) { return ( str != null ) && ( str . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ) ; }
× fix_prediction_after: public static boolean isNumeric ( java.lang.String value ) { return ( value != null ) && ( value . matches ( "^-?[0-9]+(\\.[0-9]+)?$" ) ) ; }

line_index: 921
bug_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { if ( ( menuItem . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( menuItem . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
bug_after_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { if ( ( oacjdzlfpupajccoafcl . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { if ( ( oacjdzlfpupajccoafcl . getItemId () ) != ( currentFragmentId ) ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; } drawerLayout . closeDrawers () ; return true ; } <s> Better layouts for first launch activity. Solve bug on detail activity.
fix_before_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { doDrawerMenuAction ( menuItem . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { doDrawerMenuAction ( oacjdzlfpupajccoafcl . getItemId () ) ; drawerLayout . closeDrawers () ; return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { return true ; }
× fix_prediction_after: @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem oacjdzlfpupajccoafcl ) { drawerLayout . closeDrawers () ; return true ; }

line_index: 922
bug_before_refactoring: public static boolean isEnlightened ( java.lang.String url ) { return url . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> public static boolean isEnlightened ( java.lang.String url ) { return url . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> Fix Heroku issue - Looks like it was how my Procfile was running the project - thought it might be not having a main method in default package - but that doesn't seem to be the issue - just needed to know what I was doing in the procfile? - kill me now plz
bug_after_refactoring: public static boolean isEnlightened ( java.lang.String kcpzdhmokzxlttnbgxzf ) { return kcpzdhmokzxlttnbgxzf . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> public static boolean isEnlightened ( java.lang.String kcpzdhmokzxlttnbgxzf ) { return kcpzdhmokzxlttnbgxzf . equalsIgnoreCase ( sparq.util.PathTracer.ENLIGHTENMENT_URL ) ; } <s> Fix Heroku issue - Looks like it was how my Procfile was running the project - thought it might be not having a main method in default package - but that doesn't seem to be the issue - just needed to know what I was doing in the procfile? - kill me now plz
fix_before_refactoring: public static boolean isEnlightened ( java.lang.String url ) { return url . toLowerCase () . contains ( sparq.util.PathTracer.ENLIGHTENMENT_URL . toLowerCase () ) ; }
fix_after_refactoring: public static boolean isEnlightened ( java.lang.String kcpzdhmokzxlttnbgxzf ) { return kcpzdhmokzxlttnbgxzf . toLowerCase () . contains ( sparq.util.PathTracer.ENLIGHTENMENT_URL . toLowerCase () ) ; }
× fix_prediction_before: public static boolean isEnlightened ( java.lang.String url ) { return sparq.util.PathTracer.ENLIGHTENMENT_URL . equalsIgnoreCase ( url ) ; }
× fix_prediction_after: public static boolean isEnlightened ( java.lang.String kcpzdhmokzxlttnbgxzf ) { return sparq.util.PathTracer.ENLIGHTENMENT_URL ; }

line_index: 923
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> Fix issue with no backup dialog not being visible.  Add progress dialog to key registration on import auth fail.
bug_after_refactoring: @ jajuwpmqhfemrntrdmctdsa.lang.Ojuwpmqhfemrntrdmctdserride public juwpmqhfemrntrdmctdsoid onClick ( android.juwpmqhfemrntrdmctdsiew.View juwpmqhfemrntrdmctds ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> @ jajuwpmqhfemrntrdmctdsa.lang.Ojuwpmqhfemrntrdmctdserride public juwpmqhfemrntrdmctdsoid onClick ( android.juwpmqhfemrntrdmctdsiew.View juwpmqhfemrntrdmctds ) { notifyReadOnlineBackupsFailed () ; dlg . dismiss () ; } <s> Fix issue with no backup dialog not being visible.  Add progress dialog to key registration on import auth fail.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { dismiss () ; }
fix_after_refactoring: @ jajuwpmqhfemrntrdmctdsa.lang.Ojuwpmqhfemrntrdmctdserride public juwpmqhfemrntrdmctdsoid onClick ( android.juwpmqhfemrntrdmctdsiew.View juwpmqhfemrntrdmctds ) { dismiss () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.System . exit ( 0 ) ; }
× fix_prediction_after: @ jajuwpmqhfemrntrdmctdsa.lang.Ojuwpmqhfemrntrdmctdserride public void onClick ( android.juwpmqhfemrntrdmctdsiew.View juwpmqhfemrntrdmctds ) { notifyReadOnlineBackupsFailed () ; dialog . dismiss () ; }

line_index: 924
bug_before_refactoring: public static boolean checkFile ( java.io.File file ) { return ( file . length () ) == 0 ; } <s> public static boolean checkFile ( java.io.File file ) { return ( file . length () ) == 0 ; } <s> Fix Jfilechooser error and add extension filter
bug_after_refactoring: public static boolean checkFile ( java.io.File mtqsodiwxqkatrmvsofx ) { return ( mtqsodiwxqkatrmvsofx . length () ) == 0 ; } <s> public static boolean checkFile ( java.io.File mtqsodiwxqkatrmvsofx ) { return ( mtqsodiwxqkatrmvsofx . length () ) == 0 ; } <s> Fix Jfilechooser error and add extension filter
fix_before_refactoring: public static boolean checkFile ( java.io.File file ) { return file == null ; }
fix_after_refactoring: public static boolean checkFile ( java.io.File mtqsodiwxqkatrmvsofx ) { return mtqsodiwxqkatrmvsofx == null ; }
× fix_prediction_before: public static boolean checkFile ( java.io.File file ) { return ! ( file . isEmpty () ) ; }
× fix_prediction_after: public static boolean checkFile ( java.io.File file ) { return ( file != null ) && ( ( mtqsodiwxqkatrmvsofx . length () ) == 0 ) ; }

line_index: 925
bug_before_refactoring: private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . isEmpty () ) ; } <s> private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . isEmpty () ) ; } <s> [LED-47] Tests for Chase Converter. Fixed some bugs found in ChaseConvert Code.
bug_after_refactoring: private boolean isPending ( java.lang.String wlwgyhmsobfvnxveesbr ) { return ( wlwgyhmsobfvnxveesbr == null ) || ( wlwgyhmsobfvnxveesbr . isEmpty () ) ; } <s> private boolean isPending ( java.lang.String wlwgyhmsobfvnxveesbr ) { return ( wlwgyhmsobfvnxveesbr == null ) || ( wlwgyhmsobfvnxveesbr . isEmpty () ) ; } <s> [LED-47] Tests for Chase Converter. Fixed some bugs found in ChaseConvert Code.
fix_before_refactoring: private boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . trim () . isEmpty () ) ; }
fix_after_refactoring: private boolean isPending ( java.lang.String wlwgyhmsobfvnxveesbr ) { return ( wlwgyhmsobfvnxveesbr == null ) || ( wlwgyhmsobfvnxveesbr . trim () . isEmpty () ) ; }
× fix_prediction_before: protected boolean isPending ( java.lang.String amount ) { return ( amount == null ) || ( amount . isEmpty () ) ; }
× fix_prediction_after: protected boolean isPending ( java.lang.String wlwgyhmsobfvnxveesbr ) { return ( wlwgyhmsobfvnxveesbr == null ) || ( wlwgyhmsobfvnxveesbr . isEmpty () ) ; }

line_index: 926
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { new org.netbeans.modules.git.ui.clone.CloneAction ( new org.netbeans.modules.git.ui.actions.ContextHolder ( org.netbeans.modules.versioning.spi.VCSContext.EMPTY ) ) . actionPerformed ( e ) ; } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { new org.netbeans.modules.git.ui.clone.CloneAction ( new org.netbeans.modules.git.ui.actions.ContextHolder ( org.netbeans.modules.versioning.spi.VCSContext.EMPTY ) ) . actionPerformed ( e ) ; } <s> Fixed some small issues with actions available on ROSProject nodes. Removed Git / Version Control module dependencies.
bug_after_refactoring: @ java.lang.Ovucermlxegfomlmlwistsrriducermlxegfomlmlwists public void actionPucermlxegfomlmlwistsrformucermlxegfomlmlwistsd ( java.awt.ucermlxegfomlmlwistsvucermlxegfomlmlwistsnt.ActionEvucermlxegfomlmlwistsnt ucermlxegfomlmlwists ) { nucermlxegfomlmlwistsw org.nucermlxegfomlmlwiststbucermlxegfomlmlwistsans.modulucermlxegfomlmlwistss.git.ui.clonucermlxegfomlmlwists.ClonucermlxegfomlmlwistsAction ( nucermlxegfomlmlwistsw org.nucermlxegfomlmlwiststbucermlxegfomlmlwistsans.modulucermlxegfomlmlwistss.git.ui.actions.ContucermlxegfomlmlwistsxtHolducermlxegfomlmlwistsr ( org.nucermlxegfomlmlwiststbucermlxegfomlmlwistsans.modulucermlxegfomlmlwistss.vucermlxegfomlmlwistsrsioning.spi.VCSContucermlxegfomlmlwistsxt.EMPTY ) ) . actionPucermlxegfomlmlwistsrformucermlxegfomlmlwistsd ( ucermlxegfomlmlwists ) ; } <s> @ java.lang.Ovucermlxegfomlmlwistsrriducermlxegfomlmlwists public void actionPucermlxegfomlmlwistsrformucermlxegfomlmlwistsd ( java.awt.ucermlxegfomlmlwistsvucermlxegfomlmlwistsnt.ActionEvucermlxegfomlmlwistsnt ucermlxegfomlmlwists ) { nucermlxegfomlmlwistsw org.nucermlxegfomlmlwiststbucermlxegfomlmlwistsans.modulucermlxegfomlmlwistss.git.ui.clonucermlxegfomlmlwists.ClonucermlxegfomlmlwistsAction ( nucermlxegfomlmlwistsw org.nucermlxegfomlmlwiststbucermlxegfomlmlwistsans.modulucermlxegfomlmlwistss.git.ui.actions.ContucermlxegfomlmlwistsxtHolducermlxegfomlmlwistsr ( org.nucermlxegfomlmlwiststbucermlxegfomlmlwistsans.modulucermlxegfomlmlwistss.vucermlxegfomlmlwistsrsioning.spi.VCSContucermlxegfomlmlwistsxt.EMPTY ) ) . actionPucermlxegfomlmlwistsrformucermlxegfomlmlwistsd ( ucermlxegfomlmlwists ) ; } <s> Fixed some small issues with actions available on ROSProject nodes. Removed Git / Version Control module dependencies.
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) {}
fix_after_refactoring: @ java.lang.Ovucermlxegfomlmlwistsrriducermlxegfomlmlwists public void actionPucermlxegfomlmlwistsrformucermlxegfomlmlwistsd ( java.awt.ucermlxegfomlmlwistsvucermlxegfomlmlwistsnt.ActionEvucermlxegfomlmlwistsnt ucermlxegfomlmlwists ) {}
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { new org.netbeans.modules.git.ui.clone.CloneAction () . actionPerformed ( e ) ; }
× fix_prediction_after: @ java.lang.Ovckermlxegfomlmlwistsrrid mappermlxegfomlmlwists public void actionP mappermlxegfomlmlwistsrform mappermlxegfomlmlwistsd ( java.awt. mappermlxegfomlmlwistsvizermlxegfomlmlwistsvizermlxegfomlmlwistsvizermlxegfomlmlwistsnt ucermlxegfomlmlwist ( org.nucermlxegfomlmlwiststbucermlxegfomlmlwistss.git.ui.clonizermlxegfomlmlwistss.git.ui.clonizermlxegfomlmlwiststbucermlxegfomlmlwistss.git.ui.actions.Contactormlxegfomlmlwistswistsw org.nucermlxegfomlmlwiststbucermlxegfomlmlwistss.git.ui.actions.Contizermlxegfomlmlwiststbucermlxegfomlmlwistss.Logicmlxegfomlmlwistsr ( org.nucermlxegfomlmlwiststbucermlxegfomlmlwistss.vizermlxegfomlmlwistss.git.ui.clonizermlxegfomlmlwiststbucermlxegfomlmlwistss.vizermlxegfomlmlwistsrsioning.spi.VCSContactormlxegfomlmlwistmodel.Ucermlxegfomlmlwistsd ( java.util.Arrays . asList ( ucermlxegfomlmlwist ) ) ; }

line_index: 927
bug_before_refactoring: public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> few bugs fixed
bug_after_refactoring: public void closeConnection ( java.sql.Connection mfhinejrzwdgdvnhbgfi ) throws java.sql.SQLException { try { mfhinejrzwdgdvnhbgfi . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void closeConnection ( java.sql.Connection mfhinejrzwdgdvnhbgfi ) throws java.sql.SQLException { try { mfhinejrzwdgdvnhbgfi . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> few bugs fixed
fix_before_refactoring: public void closeConnection ( ) throws java.sql.SQLException { try { connection . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: public void closeConnection ( ) throws java.sql.SQLException { try { mfhinejrzwdgdvnhbgfi . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_before: public void closeConnection ( java.sql.Connection connection ) throws java.sql.SQLException {}
× fix_prediction_after: public void closeConnection ( java.sql.Connection mfhinejrzwdgdvnhbgfi ) throws java.sql.SQLException { try { mfhinejrzwdgdvnhbgfi . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }

line_index: 929
bug_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { this . mZoom = zoom ; } <s> some for upwork  bugfix but i was not hired
bug_after_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } <s> @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } <s> some for upwork  bugfix but i was not hired
fix_before_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { synchronized ( this ) { this . mZoom = zoom ; } }
fix_after_refactoring: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zvtxflairmrtgnbzeiqw ) { synchronized ( this ) { this . mZoom = zvtxflairmrtgnbzeiqw ; } }
× fix_prediction_before: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int zoom ) { mZoom = zoom ; }
× fix_prediction_after: @ java.lang.Override void setZoom ( @ com.flurgle.camerakit.Zoom int mZoom ) { this . mZoom = mZoom ; }

line_index: 931
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) java.lang.String forgotPassword ) { if ( forgotPassword . equalsIgnoreCase ( "true" ) ) { return application . forgotPassword ( email ) ; } return 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) java.lang.String forgotPassword ) { if ( forgotPassword . equalsIgnoreCase ( "true" ) ) { return application . forgotPassword ( email ) ; } return 0 ; } <s> resolved build issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "ytpfoufdyiqnmdfexlue/{ytpfoufdyiqnmdfexlue}/lyjcfdqqlzayhbyckiwe/{lyjcfdqqlzayhbyckiwe}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer ytpfoufdyiqnmdfexlue ( @ org.springframework.web.bind.annotation.PathVariable ( value = "lyjcfdqqlzayhbyckiwe" ) java.lang.String lyjcfdqqlzayhbyckiwe , @ org.springframework.web.bind.annotation.PathVariable ( value = "ytpfoufdyiqnmdfexlue" ) java.lang.String ytpfoufdyiqnmdfexlue ) { if ( ytpfoufdyiqnmdfexlue . equalsIgnoreCase ( "true" ) ) { return application . ytpfoufdyiqnmdfexlue ( lyjcfdqqlzayhbyckiwe ) ; } return 0 ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "ytpfoufdyiqnmdfexlue/{ytpfoufdyiqnmdfexlue}/lyjcfdqqlzayhbyckiwe/{lyjcfdqqlzayhbyckiwe}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer ytpfoufdyiqnmdfexlue ( @ org.springframework.web.bind.annotation.PathVariable ( value = "lyjcfdqqlzayhbyckiwe" ) java.lang.String lyjcfdqqlzayhbyckiwe , @ org.springframework.web.bind.annotation.PathVariable ( value = "ytpfoufdyiqnmdfexlue" ) java.lang.String ytpfoufdyiqnmdfexlue ) { if ( ytpfoufdyiqnmdfexlue . equalsIgnoreCase ( "true" ) ) { return application . ytpfoufdyiqnmdfexlue ( lyjcfdqqlzayhbyckiwe ) ; } return 0 ; } <s> resolved build issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) boolean forgotPassword ) { if ( forgotPassword ) { return application . forgotPassword ( email ) ; } return 0 ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "ytpfoufdyiqnmdfexlue/{ytpfoufdyiqnmdfexlue}/lyjcfdqqlzayhbyckiwe/{lyjcfdqqlzayhbyckiwe}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer ytpfoufdyiqnmdfexlue ( @ org.springframework.web.bind.annotation.PathVariable ( value = "lyjcfdqqlzayhbyckiwe" ) java.lang.String lyjcfdqqlzayhbyckiwe , @ org.springframework.web.bind.annotation.PathVariable ( value = "ytpfoufdyiqnmdfexlue" ) boolean ytpfoufdyiqnmdfexlue ) { if ( ytpfoufdyiqnmdfexlue ) { return application . ytpfoufdyiqnmdfexlue ( lyjcfdqqlzayhbyckiwe ) ; } return 0 ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "forgotPassword/{forgotPassword}/email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer forgotPassword ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.PathVariable ( value = "forgotPassword" ) java.lang.String forgotPassword ) { return forgotPassword ( email , forgotPassword ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "ytpfoufdyiqnmdfexlue/{ytpfoufdyiqnmdfexlue}/lyjcfdqqlzayhbyckiwe/{lyjcfdqqlzayhbyckiwe}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer ytpfoufdyiqnmdfexlue ( @ org.springframework.web.bind.annotation.PathVariable ( value = "lyjcfdqqlzayhbyckiwe" ) java.lang.String lyjcfdqqlzayhbyckiwe , @ org.springframework.web.bind.annotation.PathVariable ( value = "ytpfoufdyiqnmdfexlue" ) java.lang.String ytpfoufdyiqnmdfexlue ) { if ( ytpfoufdyiqnmdfexlue . equalsIgnoreCase ( "true" ) ) { return application . ytpfoufdyiqnmdfexlue ( lyjcfdqqlzayhbyckiwe ) ; } return 0 ; }

line_index: 932
bug_before_refactoring: public void subKarma ( int karmaAmount ) { mKarma -= karmaAmount ; } <s> public void subKarma ( int karmaAmount ) { mKarma -= karmaAmount ; } <s> Fixed bug if karma/nuyen edittext was blank when trying to add/sub. Fixed letting karma/nuyen go negative. Changed blank character name warning from toast to edittext error
bug_after_refactoring: public void subKarma ( int ebtezqadztmiucmzibmc ) { mKarma -= ebtezqadztmiucmzibmc ; } <s> public void subKarma ( int ebtezqadztmiucmzibmc ) { mKarma -= ebtezqadztmiucmzibmc ; } <s> Fixed bug if karma/nuyen edittext was blank when trying to add/sub. Fixed letting karma/nuyen go negative. Changed blank character name warning from toast to edittext error
fix_before_refactoring: public void subKarma ( int karmaAmount ) { if ( karmaAmount > ( mKarma ) ) { mKarma = 0 ; } else { mKarma -= karmaAmount ; } }
fix_after_refactoring: public void subKarma ( int ebtezqadztmiucmzibmc ) { if ( ebtezqadztmiucmzibmc > ( mKarma ) ) { mKarma = 0 ; } else { mKarma -= ebtezqadztmiucmzibmc ; } }
× fix_prediction_before: public void subKarma ( int KarmaAmount ) { if ( KarmaAmount != null ) { mKarma -= KarmaAmount ; } }
× fix_prediction_after: public void subKarma ( intebtezqadztmiucmzibmc ) { mKarma -=ebtezqadztmiucmzibmc ; }

line_index: 934
bug_before_refactoring: @ java.lang.Override public void effect ( Player current ) { current . gainMoney ( 200 ) ; } <s> @ java.lang.Override public void effect ( Player current ) { current . gainMoney ( 200 ) ; } <s> Fixed some bugs
bug_after_refactoring: @ java.lang.Override public void effect ( Player ykjlwyfsqifjqetdcwhk ) { ykjlwyfsqifjqetdcwhk . gainMoney ( 200 ) ; } <s> @ java.lang.Override public void effect ( Player ykjlwyfsqifjqetdcwhk ) { ykjlwyfsqifjqetdcwhk . gainMoney ( 200 ) ; } <s> Fixed some bugs
fix_before_refactoring: @ java.lang.Override public boolean effect ( Player current ) { current . gainMoney ( 200 ) ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean effect ( Player ykjlwyfsqifjqetdcwhk ) { ykjlwyfsqifjqetdcwhk . gainMoney ( 200 ) ; return true ; }
× fix_prediction_before: @ java.lang.Override public void effect ( Player current ) { current . gainMoney ( 200 , true ) ; }
× fix_prediction_after: @ java.lang.Override public void effect ( Player ykjlwyfsqifjqetdcwhk ) { if ( ( ykjlwyfsqifjqetdcwhk . gainMoney ( 200 ) ) != null ) { ykjlwyfsqifjqetdcwhk . gainMoney ( 200 ) ; } }

line_index: 935
bug_before_refactoring: public void setGivenName ( java.lang.String givenName ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } <s> public void setGivenName ( java.lang.String givenName ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } <s> Fix last bugs
bug_after_refactoring: public void setGivenName ( java.lang.String aaswlvtywutygfjyhrht ) { this . aaswlvtywutygfjyhrht = ( aaswlvtywutygfjyhrht . substring ( 0 , 1 ) . toUpperCase () ) + ( aaswlvtywutygfjyhrht . substring ( 1 ) ) ; } <s> public void setGivenName ( java.lang.String aaswlvtywutygfjyhrht ) { this . aaswlvtywutygfjyhrht = ( aaswlvtywutygfjyhrht . substring ( 0 , 1 ) . toUpperCase () ) + ( aaswlvtywutygfjyhrht . substring ( 1 ) ) ; } <s> Fix last bugs
fix_before_refactoring: public void setGivenName ( java.lang.String givenName ) { if ( ! ( givenName . isEmpty () ) ) { this . givenName = ( givenName . substring ( 0 , 1 ) . toUpperCase () ) + ( givenName . substring ( 1 ) ) ; } }
fix_after_refactoring: public void setGivenName ( java.lang.String aaswlvtywutygfjyhrht ) { if ( ! ( aaswlvtywutygfjyhrht . isEmpty () ) ) { this . aaswlvtywutygfjyhrht = ( aaswlvtywutygfjyhrht . substring ( 0 , 1 ) . toUpperCase () ) + ( aaswlvtywutygfjyhrht . substring ( 1 ) ) ; } }
× fix_prediction_before: public void setGivenName ( java.lang.String givenName ) { this . givenName = givenName ; }
× fix_prediction_after: public void setGivenName ( java.lang.String aaswlvtywutygfjyhrht ) { this . aaswlvtywutygfjyhrht = aaswlvtywutygfjyhrht ; }

line_index: 937
bug_before_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String patternNeedAnotherLatexRun ) { this . patternNeedAnotherLatexRun = patternNeedAnotherLatexRun ; return this ; } <s> public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String patternNeedAnotherLatexRun ) { this . patternNeedAnotherLatexRun = patternNeedAnotherLatexRun ; return this ; } <s> @new LatexProcessor.processLatex(File) - added debug logging  above all added a warning    if latex rerun was not executed because of a threshold.  - added setting maxNumReruns which also allows do disable maxReruns    by allowing maxNumReruns==-1  @bugfix    LatexProcessor.runBibtex(File): now it works.  @chg update to java 1.5.
bug_after_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String jdiviymbhkrxxokvmtbm ) { this . jdiviymbhkrxxokvmtbm = jdiviymbhkrxxokvmtbm ; return this ; } <s> public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String jdiviymbhkrxxokvmtbm ) { this . jdiviymbhkrxxokvmtbm = jdiviymbhkrxxokvmtbm ; return this ; } <s> @new LatexProcessor.processLatex(File) - added debug logging  above all added a warning    if latex rerun was not executed because of a threshold.  - added setting maxNumReruns which also allows do disable maxReruns    by allowing maxNumReruns==-1  @bugfix    LatexProcessor.runBibtex(File): now it works.  @chg update to java 1.5.
fix_before_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String pattern ) { this . patternNeedAnotherLatexRun = pattern ; return this ; }
fix_after_refactoring: public org.m2latex.mojo.Settings setPatternNeedAnotherLatexRun ( java.lang.String pattern ) { this . jdiviymbhkrxxokvmtbm = pattern ; return this ; }
× fix_prediction_before: public void setPatternNeedAnotherLatexRun ( java.lang.String patternNeedAnotherLatexRun ) { this . patternNeedAnotherLatexRun = patternNeedAnotherLatexRun ; }
× fix_prediction_after: public void setPatternNeedAnotherLatexRun ( java.lang.String jdiviymbhkrxxokvmtbm ) { this . jdiviymbhkrxxokvmtbm = jdiviymbhkrxxokvmtbm ; }

line_index: 938
bug_before_refactoring: public void read ( java.lang.String id ) ; <s> public void read ( java.lang.String id ) ; <s> fix compile issues
bug_after_refactoring: public vouecryxsfmoignxcssssw read ( java.lang.String uecryxsfmoignxcssssw ) ; <s> public vouecryxsfmoignxcssssw read ( java.lang.String uecryxsfmoignxcssssw ) ; <s> fix compile issues
fix_before_refactoring: public void delete ( java.lang.String id ) {}
fix_after_refactoring: public vouecryxsfmoignxcssssw delete ( java.lang.String uecryxsfmoignxcssssw ) {}
× fix_prediction_before: public void read ( java.lang.String id ) {}
× fix_prediction_after: public vouecryxsfmoignxcssssw read ( java.lang.String uecryxsfmoignxcssssw ) {}

line_index: 940
bug_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
bug_after_refactoring: public boolean refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> public boolean refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; } <s> fix sliding meun bug in BusStationPre
fix_before_refactoring: public boolean refreshList ( android.view.MenuItem item ) { return true ; }
fix_after_refactoring: public boolean refreshList ( android.view.MenuItem wmafzvgfftpibgasyfoh ) { return true ; }
× fix_prediction_before: public void refreshList ( android.view.MenuItem item ) { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; }
× fix_prediction_after: public boolean refreshList () { new me.blueland.metro.activity.BusStationPre.BusController () . execute ( stationCode ) ; return true ; }

line_index: 942
bug_before_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( this . asRetrofitException ( throwable ) ) ; } <s> @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( this . asRetrofitException ( throwable ) ) ; } <s> Fixed tests  fixed our RxErrorHandlingCallAdapterFactory (hopefully)
bug_after_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable kblhazwglxeatanpjhnn ) { return io.reactivex.Observable . error ( this . asRetrofitException ( kblhazwglxeatanpjhnn ) ) ; } <s> @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable kblhazwglxeatanpjhnn ) { return io.reactivex.Observable . error ( this . asRetrofitException ( kblhazwglxeatanpjhnn ) ) ; } <s> Fixed tests  fixed our RxErrorHandlingCallAdapterFactory (hopefully)
fix_before_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable throwable ) { return io.reactivex.Observable . error ( asRetrofitException ( throwable ) ) ; }
fix_after_refactoring: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable kblhazwglxeatanpjhnn ) { return io.reactivex.Observable . error ( asRetrofitException ( kblhazwglxeatanpjhnn ) ) ; }
× fix_prediction_before: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable error ) { return io.reactivex.Observable . error ( this . asRetrofitException ( error ) ) ; }
× fix_prediction_after: @ java.lang.Override public io.reactivex.Observable apply ( java.lang.Throwable error ) { return io.reactivex.Observable . error ( this . asRetrofitException ( error ) ) ; }

line_index: 943
bug_before_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > param ) { return param . getValue () . getValue () . noProperty () ; } <s> @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > param ) { return param . getValue () . getValue () . noProperty () ; } <s> Inspector bugfixes
bug_after_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > utthzxxojojilhczkcax ) { return utthzxxojojilhczkcax . getValue () . getValue () . noProperty () ; } <s> @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Number > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Number > utthzxxojojilhczkcax ) { return utthzxxojojilhczkcax . getValue () . getValue () . noProperty () ; } <s> Inspector bugfixes
fix_before_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.String > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.String > param ) { return param . getValue () . getValue () . getValue () ; }
fix_after_refactoring: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.String > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.String > utthzxxojojilhczkcax ) { return utthzxxojojilhczkcax . getValue () . getValue () . getValue () ; }
× fix_prediction_before: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Boolean > call ( javafx.scene.control.TreeTableColumn.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Boolean > param ) { return param . getValue () . getValue () . noProperty () ; }
× fix_prediction_after: @ java.lang.Override public javafx.beans.value.ObservableValue < java.lang.Boolean > call ( javafx.scene.control.TreeColumns.CellDataFeatures < com.comino.flight.tabs.inspector.MAVInspectorTab.Dataset , java.lang.Boolean > utthzxxojojilhczkcax ) { return utthzxxojojilhczkcax . getValue () . getValue () . noProperty () ; }

line_index: 944
bug_before_refactoring: public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
bug_after_refactoring: public static java.util.Date makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> public static java.util.Date makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; } <s> -fix lower and upper bound bug in event model -refactor event model -fix date object event model test
fix_before_refactoring: private static org.joda.time.DateTime makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) ; }
fix_after_refactoring: private static org.joda.time.DateTime makeUpperBound ( java.util.Date iwhxpmnhdetzmsevyrxb ) { return new org.joda.time.DateTime ( iwhxpmnhdetzmsevyrxb ) . withTime ( 23 , 59 , 59 , 0 ) ; }
× fix_prediction_before: private static java.util.Date makeUpperBound ( java.util.Date endDate ) { return new org.joda.time.DateTime ( endDate ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; }
× fix_prediction_after: public static java.util.Date makeUpperBound ( java.util.Date date ) { return new org.joda.time.DateTime ( date ) . withTime ( 23 , 59 , 59 , 0 ) . toDate () ; }

line_index: 945
bug_before_refactoring: public void setUniforms ( engine.rendering.Shader s ) { s . setUniform ( "time" , counter ) ; s . setUniform ( "frequency" , 5.0F ) ; s . setUniform ( "amplitude" , 0.01F ) ; } <s> public void setUniforms ( engine.rendering.Shader s ) { s . setUniform ( "time" , counter ) ; s . setUniform ( "frequency" , 5.0F ) ; s . setUniform ( "amplitude" , 0.01F ) ; } <s> Made RectRenderer render based on pixel coords; fixed shader bug
bug_after_refactoring: public void zwfqpqdmugrxmlxynhlsetUniformzwfqpqdmugrxmlxynhls ( engine.rendering.Shader zwfqpqdmugrxmlxynhls ) { zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "time" , counter ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "frequency" , 5.0F ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "amplitude" , 0.01F ) ; } <s> public void zwfqpqdmugrxmlxynhlsetUniformzwfqpqdmugrxmlxynhls ( engine.rendering.Shader zwfqpqdmugrxmlxynhls ) { zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "time" , counter ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "frequency" , 5.0F ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "amplitude" , 0.01F ) ; } <s> Made RectRenderer render based on pixel coords; fixed shader bug
fix_before_refactoring: public void start () {}
fix_after_refactoring: public void zwfqpqdmugrxmlxynhlstart () {}
× fix_prediction_before: public void setUniforms ( engine.rendering.Shader s ) { s . setUniform ( "time" , counter ) ; }
× fix_prediction_after: public void zwfqpqdmugrxmlxynhlsetUniformzwfqpqdmugrxmlxynhls ( engine.rendering.Shader zwfqpqdmugrxmlxynhls ) { zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "time" , counter ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "frequency" , 5.0F ) ; zwfqpqdmugrxmlxynhls . zwfqpqdmugrxmlxynhlsetUniform ( "amplitude" , 0.01F ) ; }

line_index: 946
bug_before_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> RDispatcher: fix concerency issue  increase transfer buffer size
bug_after_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int wdyokhulaylqjeordjwi ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int wdyokhulaylqjeordjwi ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; } <s> RDispatcher: fix concerency issue  increase transfer buffer size
fix_before_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int concurrency ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( concurrency ) ; }
fix_after_refactoring: @ javax.inject.Inject public void configureScheduler ( @ edu.dfci.cccb.mev.dataset.domain.r.annotation.Rserve int wdyokhulaylqjeordjwi ) { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( wdyokhulaylqjeordjwi ) ; }
× fix_prediction_before: @ javax.inject.Inject public void configureScheduler () { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; }
× fix_prediction_after: @ javax.inject.Inject public void configureScheduler () { dispatcher = java.util.concurrent.Executors . newFixedThreadPool ( 2 ) ; }

line_index: 947
bug_before_refactoring: public boolean atacar ( business.entities.Personaje oponente , int energiaUtilizar ) throws util.ApplicationException { if ( energiaUtilizar > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energiaUtilizar ) ; return oponente . recibirAtaque ( energia ) ; } <s> public boolean atacar ( business.entities.Personaje oponente , int energiaUtilizar ) throws util.ApplicationException { if ( energiaUtilizar > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energiaUtilizar ) ; return oponente . recibirAtaque ( energia ) ; } <s> Bugfix lógica de combate.
bug_after_refactoring: public boolean atacar ( business.entities.Personaje fzxuomiiaowpdxeplobp , int inbdltqkgxgzxlcuzsav ) throws util.ApplicationException { if ( inbdltqkgxgzxlcuzsav > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( inbdltqkgxgzxlcuzsav ) ; return fzxuomiiaowpdxeplobp . recibirAtaque ( energia ) ; } <s> public boolean atacar ( business.entities.Personaje fzxuomiiaowpdxeplobp , int inbdltqkgxgzxlcuzsav ) throws util.ApplicationException { if ( inbdltqkgxgzxlcuzsav > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( inbdltqkgxgzxlcuzsav ) ; return fzxuomiiaowpdxeplobp . recibirAtaque ( energia ) ; } <s> Bugfix lógica de combate.
fix_before_refactoring: public boolean atacar ( business.entities.Personaje oponente , int energia ) throws util.ApplicationException { if ( energia > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energia ) ; return oponente . recibirAtaque ( energia ) ; }
fix_after_refactoring: public boolean atacar ( business.entities.Personaje fzxuomiiaowpdxeplobp , int energia ) throws util.ApplicationException { if ( energia > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( energia ) ; return fzxuomiiaowpdxeplobp . recibirAtaque ( energia ) ; }
× fix_prediction_before: public boolean atacar ( business.entities.Personaje oponente , int energiaUtilizar ) throws util.ApplicationException { if ( energiaUtilizar > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } return oponente . recibirAtaque ( energia ) ; }
× fix_prediction_after: public boolean atacar ( business.entities.Personaje fzxuomiiaowpdxeplobp , int inbdltqkgxgzxlcuzsav ) throws util.ApplicationException { if ( inbdltqkgxgzxlcuzsav > ( getEnergiaActual () ) ) { throw new util.ApplicationException ( "Energía insuficiente para realizar el ataque" ) ; } usarEnergia ( inbdltqkgxgzxlcuzsav ) ; return fzxuomiiaowpdxeplobp . recibirAtaque ( energia ) ; }

line_index: 949
bug_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode , com.facebook.react.bridge.Promise promise ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
bug_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff , com.facebook.react.bridge.Promise qljhpunaodhznjcsohlo ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff , com.facebook.react.bridge.Promise qljhpunaodhznjcsohlo ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } } <s> Add further configurations and fix error with non-working activityCheckConfiguration
fix_before_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) throws java.lang.Exception { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
fix_after_refactoring: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be either LOW_POWER, BALANCED or LOW_LATENCY" ) ; } }
× fix_prediction_before: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int mode ) { switch ( mode ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be eitherHIGH_POWER, BALANCED orHIGH_LATENCY" ) ; } }
× fix_prediction_after: private com.kontakt.sdk.android.ble.configuration.ScanMode getScanMode ( int ukoamiseexvzwzsnxxff , com.facebook.react.bridge.Promise qljhpunaodhznjcsohlo ) throws java.lang.Exception { switch ( ukoamiseexvzwzsnxxff ) { case 0 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_POWER ; case 1 : return com.kontakt.sdk.android.ble.configuration.ScanMode.BALANCED ; case 2 : return com.kontakt.sdk.android.ble.configuration.ScanMode.LOW_LATENCY ; default: throw new java.lang.Exception ( "The value of scanMode has to be eitherHIGH_POWER, BALANCED orHIGH_LATENCY" ) ; } }

line_index: 950
bug_before_refactoring: @ io.swagger.client.api.GET ( value = "user/login" ) retrofit2.Call < java.lang.String > loginUser ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) ; <s> @ io.swagger.client.api.GET ( value = "user/login" ) retrofit2.Call < java.lang.String > loginUser ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) ; <s> fix javadoc error
bug_after_refactoring: @ io.swagger.client.api.GET ( value = "user/login" ) retrofit2.Call < java.lang.String > loginUser ( @ io.swagger.client.api.Query ( value = "vhnoyaawkeeyqvhbldte" ) java.lang.String vhnoyaawkeeyqvhbldte , @ io.swagger.client.api.Query ( value = "btlyayerqatstscwsqvb" ) java.lang.String btlyayerqatstscwsqvb ) ; <s> @ io.swagger.client.api.GET ( value = "user/login" ) retrofit2.Call < java.lang.String > loginUser ( @ io.swagger.client.api.Query ( value = "vhnoyaawkeeyqvhbldte" ) java.lang.String vhnoyaawkeeyqvhbldte , @ io.swagger.client.api.Query ( value = "btlyayerqatstscwsqvb" ) java.lang.String btlyayerqatstscwsqvb ) ; <s> fix javadoc error
fix_before_refactoring: @ io.swagger.client.api.GET ( value = "user/login" ) loginUser ( @ io.swagger.client.api.Query ( value = "username" ) java.lang.String username , @ io.swagger.client.api.Query ( value = "password" ) java.lang.String password ) {}
fix_after_refactoring: @ io.swagger.client.api.GET ( value = "user/login" ) loginUser ( @ io.swagger.client.api.Query ( value = "vhnoyaawkeeyqvhbldte" ) java.lang.String vhnoyaawkeeyqvhbldte , @ io.swagger.client.api.Query ( value = "btlyayerqatstscwsqvb" ) java.lang.String btlyayerqatstscwsqvb ) {}
× fix_prediction_before: @ io.swagger.client.api.GET ( value = "user/login" ) loginUser () {}
× fix_prediction_after: @ io.swagger.client.api.GET ( value = "user/login" ) loginUser () {}

line_index: 951
bug_before_refactoring: private void notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } } <s> private void notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } } <s> fix compiler error
bug_after_refactoring: private void notify_update ( int fhcqhofbopvzbwprxbkj , int sugcrouwkklzzfmpltwz , int rkkgnfmursrlerinrwqd ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( fhcqhofbopvzbwprxbkj , sugcrouwkklzzfmpltwz , rkkgnfmursrlerinrwqd ) ; } } <s> private void notify_update ( int fhcqhofbopvzbwprxbkj , int sugcrouwkklzzfmpltwz , int rkkgnfmursrlerinrwqd ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( fhcqhofbopvzbwprxbkj , sugcrouwkklzzfmpltwz , rkkgnfmursrlerinrwqd ) ; } } <s> fix compiler error
fix_before_refactoring: private int notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { return mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } return - 1 ; }
fix_after_refactoring: private int notify_update ( int fhcqhofbopvzbwprxbkj , int sugcrouwkklzzfmpltwz , int rkkgnfmursrlerinrwqd ) { if ( ( mNativeEventListener ) != null ) { return mNativeEventListener . notify_update ( fhcqhofbopvzbwprxbkj , sugcrouwkklzzfmpltwz , rkkgnfmursrlerinrwqd ) ; } return - 1 ; }
× fix_prediction_before: private void notify_update ( int update_flag , int arg1 , int arg2 ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( update_flag , arg1 , arg2 ) ; } }
× fix_prediction_after: private void notify_update ( int fhcqhofbopvzbwprxbkj , int sugcrouwkklzzfmpltwz , int rkkgnfmursrlerinrwqd ) { if ( ( mNativeEventListener ) != null ) { mNativeEventListener . notify_update ( fhcqhofbopvzbwprxbkj , sugcrouwkklzzfmpltwz , rkkgnfmursrlerinrwqd ) ; } }

line_index: 952
bug_before_refactoring: private static void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> private static void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> upload pdf bugfix
bug_after_refactoring: private static void processWordsByRow ( java.util.List < java.lang.String > ghbtaisjpeexdlwgvddo ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> private static void processWordsByRow ( java.util.List < java.lang.String > ghbtaisjpeexdlwgvddo ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } <s> upload pdf bugfix
fix_before_refactoring: private void processWordsByRow ( java.util.List < java.lang.String > lines ) { for ( java.lang.String line : common.PDFContainer.words ) { countWordOccurence ( line ) ; } }
fix_after_refactoring: private void processWordsByRow ( java.util.List < java.lang.String > ghbtaisjpeexdlwgvddo ) { for ( java.lang.String line : common.PDFContainer.words ) { countWordOccurence ( line ) ; } }
× fix_prediction_before: private static void processWordsByRow ( java.util.List < java.lang.String > lines ) { frontend.app.TextProcessor . countWordOccurence ( lines ) ; }
× fix_prediction_after: private static void processWordsByRow ( java.util.List < java.lang.String > ghbtaisjpeexdlwgvddo ) { if ( ghbtaisjpeexdlwgvddo != null ) { for ( java.lang.String line : common.PDFContainer.words ) { frontend.app.TextProcessor . countWordOccurence ( line ) ; } } }

line_index: 955
bug_before_refactoring: public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> Fixes bug where title and message of error dialogs were revesred.
bug_after_refactoring: public void showErrorDialog ( java.lang.String lcivyzoujiojjrfbejhi , java.lang.String srbvthaxionmargsxsko ) { javax.swing.JOptionPane . showMessageDialog ( this , lcivyzoujiojjrfbejhi , srbvthaxionmargsxsko , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> public void showErrorDialog ( java.lang.String lcivyzoujiojjrfbejhi , java.lang.String srbvthaxionmargsxsko ) { javax.swing.JOptionPane . showMessageDialog ( this , lcivyzoujiojjrfbejhi , srbvthaxionmargsxsko , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } <s> Fixes bug where title and message of error dialogs were revesred.
fix_before_refactoring: public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , message , title , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
fix_after_refactoring: public void showErrorDialog ( java.lang.String lcivyzoujiojjrfbejhi , java.lang.String srbvthaxionmargsxsko ) { javax.swing.JOptionPane . showMessageDialog ( this , srbvthaxionmargsxsko , lcivyzoujiojjrfbejhi , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
× fix_prediction_before: public void showErrorDialog ( java.lang.String title , java.lang.String message ) { javax.swing.JOptionPane . showMessageDialog ( this , title , message , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
× fix_prediction_after: public void showErrorDialog ( java.lang.String title , java.lang.String srbvthaxionmargsxsko ) { javax.swing.JOptionPane . showMessageDialog ( this , title , lcivyzoujiojjrfbejhi , srbvthaxionmargsxsko , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }

line_index: 959
bug_before_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
bug_after_refactoring: public synchronized boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } <s> public synchronized boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } <s> Fixed endgame bug  where the remaining blocks were not properly handled.
fix_before_refactoring: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { synchronized ( peer ) { return ( _requestedPiecesMap . get ( peer . getHexPeerID () ) ) != null ; } }
fix_after_refactoring: public boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { synchronized ( kmpfyvqcqnckzjysylfy ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } }
× fix_prediction_before: public boolean isDownloadingPiece ( com.jtorrent.peer.Peer peer ) { return ( peer . getHexPeerID () ) != null ; }
× fix_prediction_after: public boolean isDownloadingPiece ( com.jtorrent.kmpfyvqcqnckzjysylfy.Peer kmpfyvqcqnckzjysylfy ) { synchronized ( this ) { return ( _requestedPiecesMap . get ( kmpfyvqcqnckzjysylfy . getHexPeerID () ) ) != null ; } }

line_index: 963
bug_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
bug_after_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { try { c . close () ; finish () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fixed some merge errors with c.close.
fix_before_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return true ; }
fix_after_refactoring: public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { finish () ; return true ; }
× fix_prediction_before: public boolean onOptionsItemSelected ( android.view.MenuItem item ) { finish () ; return false ; }
× fix_prediction_after: public boolean onOptionsItemSelected ( android.view.MenuItem maednxfuupmvcsrxdlkk ) { finish () ; return false ; }

line_index: 965
bug_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project , org.springframework.ui.Model model ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; } <s> small bug fix for security
bug_after_refactoring: @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm , org.springframework.ui.Model etkdklcqjmpvmetapefj ) { kintzwemspcembybdcdm = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; java.lang.Long id = kintzwemspcembybdcdm . getId () ; return "redirect:/kintzwemspcembybdcdm/" + id ; } <s> @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm , org.springframework.ui.Model etkdklcqjmpvmetapefj ) { kintzwemspcembybdcdm = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; java.lang.Long id = kintzwemspcembybdcdm . getId () ; return "redirect:/kintzwemspcembybdcdm/" + id ; } <s> small bug fix for security
fix_before_refactoring: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; java.lang.Long id = project . getId () ; return "redirect:/project/" + id ; }
fix_after_refactoring: @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm ) { kintzwemspcembybdcdm = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; java.lang.Long id = kintzwemspcembybdcdm . getId () ; return "redirect:/kintzwemspcembybdcdm/" + id ; }
× fix_prediction_before: @ be.koencorstjens.springsecurity.testproject.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testproject.controllers.ModelAttribute be.koencorstjens.springsecurity.testproject.dto.projectDto project ) { project = projectService . create ( project ) ; return "redirect:/project/" + project . getId () ; }
× fix_prediction_after: @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.RequestMapping ( value = "/create" , method = RequestMethod.POST ) public java.lang.String createPost ( @ be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.controllers.ModelAttribute be.koencorstjens.springsecurity.testkintzwemspcembybdcdm.dto.kintzwemspcembybdcdmDto kintzwemspcembybdcdm ) { java.lang.Long id = kintzwemspcembybdcdmService . create ( kintzwemspcembybdcdm ) ; return "redirect:/kintzwemspcembybdcdm/" + id ; }

line_index: 966
bug_before_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file . getFile () , 0 ) ) > 0 ; } <s> @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file . getFile () , 0 ) ) > 0 ; } <s> a few bugfixes
bug_after_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta rwlodqgufcyimvzpioxk ) { return ( this . sharedFiles . getOrDefault ( rwlodqgufcyimvzpioxk . getFile () , 0 ) ) > 0 ; } <s> @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta rwlodqgufcyimvzpioxk ) { return ( this . sharedFiles . getOrDefault ( rwlodqgufcyimvzpioxk . getFile () , 0 ) ) > 0 ; } <s> a few bugfixes
fix_before_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file , 0 ) ) > 0 ; }
fix_after_refactoring: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta rwlodqgufcyimvzpioxk ) { return ( this . sharedFiles . getOrDefault ( rwlodqgufcyimvzpioxk , 0 ) ) > 0 ; }
× fix_prediction_before: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta file ) { return ( this . sharedFiles . getOrDefault ( file . getFile () , 0 ) ) > 0 ; }
× fix_prediction_after: @ java.lang.Override public boolean isShareActive ( org.pieShare.pieShareApp.model.pieFile.FileMeta rwlodqgufcyimvzpioxk ) { return ( this . sharedFiles . getOrDefault ( rwlodqgufcyimvzpioxk . getFile () , 0 ) ) > 0 ; }

line_index: 967
bug_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { com.mpp.model.Lab l = labService . getLabByLabId ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { com.mpp.model.Lab l = labService . getLabByLabId ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> fixed bug
bug_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lplyubfeqygkwmvyexta ) { com.mpp.model.Lab l = lplyubfeqygkwmvyextaService . getLabByLabId ( lplyubfeqygkwmvyexta . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lplyubfeqygkwmvyexta ) { com.mpp.model.Lab l = lplyubfeqygkwmvyextaService . getLabByLabId ( lplyubfeqygkwmvyexta . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; } <s> fixed bug
fix_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { com.mpp.model.Lab l = labService . getLabByLabId ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; }
fix_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { com.mpp.model.Lab l = lplyubfeqygkwmvyextaService . getLabByLabId ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( l ) ; }
× fix_prediction_before: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { return labService . getLabByLabId ( lab . getId () ) ; }
× fix_prediction_after: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/getModifyLab" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage getModifyLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lplyubfeqygkwmvyexta ) { return com.mpp.constants.JsonReturn . getSuccess ( lplyubfeqygkwmvyextaService . getLabByLabId ( lplyububfeqygkwmvyexta . getId () ) ) ; }

line_index: 968
bug_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> public void cmdReload ( org.bukkit.command.CommandSender s , org.bukkit.plugin.Plugin pluginstance ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; } <s> Fixing some in-game errors
bug_after_refactoring: public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze , org.bukkit.plugin.Plugin plugindfqgnwsijfmcvgqmsxzetance ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hoteldfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxze.reload.dfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxze" ) ) ; } <s> public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze , org.bukkit.plugin.Plugin plugindfqgnwsijfmcvgqmsxzetance ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hoteldfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxze.reload.dfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxze" ) ) ; } <s> Fixing some in-game errors
fix_before_refactoring: public void cmdReload ( org.bukkit.command.CommandSender s ) { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands.reload.success" ) ) ; }
fix_after_refactoring: public void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hoteldfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxze.reload.dfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxzedfqgnwsijfmcvgqmsxze" ) ) ; }
× fix_prediction_before: public void cmdReload () { HCH . reloadConfigs () ; s . sendMessage ( gvlfm78.plugin.Hotels.managers.Mes . mes ( "chat.commands. reload.success" ) ) ; }
× fix_prediction_after: protected void cmdReload ( org.bukkit.command.CommandSender dfqgnwsijfmcvgqmsxze , org.bukkit.plugin.Plugin plugindfqgnwsijfmcvgqmsxzetance ) { HCH . reloadConfigdfqgnwsijfmcvgqmsxze () ; dfqgnwsijfmcvgqmsxze . dfqgnwsijfmcvgqmsxzeendMedfqgnwsijfmcvgqmsxzeage ( gvlfm78.plugin.Hotfqgnwsijfmcvgqmsxze.managerdfqgnwsijfmcvgqmsxze.Medfqgnwsijfmcvgqmsxze . medfqgnwsijfmcvgqmsxze ( "chat.commanddfqgnwsijfmcvgqmsxzeuccedfqgnwsijfmcvgqmsxze" ) ; }

line_index: 969
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> - added popular / latest fragments to mainactivity with no tags (get all general images) - fixed problem where not all activitys implement  a fragment but still need the same functionality
bug_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle lehttafzddsftwlsditm ) { super . onCreate ( lehttafzddsftwlsditm ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle lehttafzddsftwlsditm ) { super . onCreate ( lehttafzddsftwlsditm ) ; this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } <s> - added popular / latest fragments to mainactivity with no tags (get all general images) - fixed problem where not all activitys implement  a fragment but still need the same functionality
fix_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( getActivity () ) instanceof io.tanners.taggedwallpaper.interfaces.IGetTag ) { this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } else {} }
fix_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle lehttafzddsftwlsditm ) { super . onCreate ( lehttafzddsftwlsditm ) ; if ( ( getActivity () ) instanceof io.tanners.taggedwallpaper.interfaces.IGetTag ) { this . tag = ( ( io.tanners.taggedwallpaper.interfaces.IGetTag ) ( getActivity () ) ) . getTag () ; } else {} }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( android.os.Bundle lehttafzddsftwlsditm ) { super . onCreate ( lehttafzddsftwlsditm ) ; }

line_index: 970
bug_before_refactoring: private void setSpeed ( java.util.Random generator , int n ) { speed = ( generator . nextInt ( n ) ) + 10 ; } <s> private void setSpeed ( java.util.Random generator , int n ) { speed = ( generator . nextInt ( n ) ) + 10 ; } <s> V1.1 - New FPS control. - New images for asteroids. - Text size fixed. - Error with concurrent collisions fixed.
bug_after_refactoring: private void setSpeed ( java.util.Rarhigtalufwvovktvkhysdom mpemdozdzozrhigtalufwvovktvkhysdxtxpkac , irhigtalufwvovktvkhyst rhigtalufwvovktvkhys ) { speed = ( mpemdozdzozrhigtalufwvovktvkhysdxtxpkac . rhigtalufwvovktvkhysextIrhigtalufwvovktvkhyst ( rhigtalufwvovktvkhys ) ) + 10 ; } <s> private void setSpeed ( java.util.Rarhigtalufwvovktvkhysdom mpemdozdzozrhigtalufwvovktvkhysdxtxpkac , irhigtalufwvovktvkhyst rhigtalufwvovktvkhys ) { speed = ( mpemdozdzozrhigtalufwvovktvkhysdxtxpkac . rhigtalufwvovktvkhysextIrhigtalufwvovktvkhyst ( rhigtalufwvovktvkhys ) ) + 10 ; } <s> V1.1 - New FPS control. - New images for asteroids. - Text size fixed. - Error with concurrent collisions fixed.
fix_before_refactoring: private void setSpeed ( int n ) { speed = ( generator . nextInt ( ( n - 10 ) ) ) + 10 ; }
fix_after_refactoring: private void setSpeed ( irhigtalufwvovktvkhyst rhigtalufwvovktvkhys ) { speed = ( mpemdozdzozrhigtalufwvovktvkhysdxtxpkac . rhigtalufwvovktvkhysextIrhigtalufwvovktvkhyst ( ( rhigtalufwvovktvkhys - 10 ) ) ) + 10 ; }
× fix_prediction_before: public void setSpeed ( java.util.Random generator , int n ) { speed = ( generator . nextInt ( n ) ) + 10 ; }
× fix_prediction_after: public void setSpeed ( java.util.Rarhigtalufwvovktvkhyst rhigtalufwvovktvkhyst rhigtalufwvovktvkhys ) { speed = ( mpemdozdzozrhigtalufwvovktvkhysdxtxpkac . rhigtalufwvovktvkhysdxtxpkac . rhigtalufwvovktvkhysextIrhigtalufwvovktvkhyst ( rhigtalufwvovktvkhys ) ) + 10 ; }

line_index: 974
bug_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int port ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
bug_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int otbesrsybznighnxlkdl ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( int otbesrsybznighnxlkdl ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; } <s> added some bug fixes around replace() for chronicle map wire
fix_before_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
fix_after_refactoring: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
× fix_prediction_before: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrMap ( ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }
× fix_prediction_after: static net.openhft.chronicle.map.ChronicleMap < java.lang.CharSequence , java.lang.CharSequence > newStrMap ( final int otbesrsybznighnxlkdl ) throws java.io.IOException { final net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier remoteMapSupplier = new net.openhft.chronicle.engine.map.WireRemoteStatelessClientTest.RemoteMapSupplier ( java.lang.CharSequence . class , java.lang.CharSequence . class ) ; return remoteMapSupplier . get () ; }

line_index: 975
bug_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
bug_after_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; } <s> refactor SpotifyAppilcation and ArtistParcel to fix rotation bug
fix_before_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > music ) { musicUrls = music ; }
fix_after_refactoring: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; }
× fix_prediction_before: public void setMusicUrls ( java.util.List < java.lang.String > musicUrls ) { this . musicUrls = musicUrls ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; }
× fix_prediction_after: public void setMusicUrls ( java.util.List < java.lang.String > gftpowpwiusnfvdxlxic ) { gftpowpwiusnfvdxlxicUrls = gftpowpwiusnfvdxlxic ; TOR = new android.os.Parcelable.Creator < com.example.seanholcomb.spotifystreamer.ArtistParcel > () { {} } ; }

line_index: 976
bug_before_refactoring: public void addChild ( java.lang.String folderId , org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( folderId , child ) ; } <s> public void addChild ( java.lang.String folderId , org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( folderId , child ) ; } <s> Add loggers & fix bugs
bug_after_refactoring: public void addChild ( java.lang.String sjejxsofveheywoprusd , org.apache.zeppelin.notebook.Folder nquikhhqusnfbskcreue ) { if ( nquikhhqusnfbskcreue == ( this ) ) return; nquikhhqusnfbskcreueren . put ( sjejxsofveheywoprusd , nquikhhqusnfbskcreue ) ; } <s> public void addChild ( java.lang.String sjejxsofveheywoprusd , org.apache.zeppelin.notebook.Folder nquikhhqusnfbskcreue ) { if ( nquikhhqusnfbskcreue == ( this ) ) return; nquikhhqusnfbskcreueren . put ( sjejxsofveheywoprusd , nquikhhqusnfbskcreue ) ; } <s> Add loggers & fix bugs
fix_before_refactoring: public void addChild ( org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( child . getId () , child ) ; }
fix_after_refactoring: public void addChild ( org.apache.zeppelin.notebook.Folder nquikhhqusnfbskcreue ) { if ( nquikhhqusnfbskcreue == ( this ) ) return; nquikhhqusnfbskcreueren . put ( nquikhhqusnfbskcreue . getId () , nquikhhqusnfbskcreue ) ; }
× fix_prediction_before: public void addChild ( final java.lang.String folderId , final org.apache.zeppelin.notebook.Folder child ) { if ( child == ( this ) ) return; children . put ( folderId , child ) ; }
× fix_prediction_after: public void addChild ( java.lang.String sjejxsofveheywoprusd , org.apache.zeppelin.notebook.Folder nquikhhqusnfbskcreue ) { this . nquikhhqusnfbskcreueren . put ( sjejxsofeheywoprusd , nquikhhqusnfbskcreue ) ; }

line_index: 977
bug_before_refactoring: public boolean equals ( final de.mixedfx.network.rebuild.user.User user ) { return this . getIdentifier () . equals ( user . getIdentifier () ) ; } <s> public boolean equals ( final de.mixedfx.network.rebuild.user.User user ) { return this . getIdentifier () . equals ( user . getIdentifier () ) ; } <s> Fixed network problems.
bug_after_refactoring: public boolean equals ( final de.mixedfx.network.rebuild.fdtgebfnxeuqdqbuesde.User fdtgebfnxeuqdqbuesde ) { return this . getIdentifier () . equals ( fdtgebfnxeuqdqbuesde . getIdentifier () ) ; } <s> public boolean equals ( final de.mixedfx.network.rebuild.fdtgebfnxeuqdqbuesde.User fdtgebfnxeuqdqbuesde ) { return this . getIdentifier () . equals ( fdtgebfnxeuqdqbuesde . getIdentifier () ) ; } <s> Fixed network problems.
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object user ) { if ( user instanceof de.mixedfx.network.rebuild.user.User ) return this . getIdentifier () . equals ( ( ( de.mixedfx.network.rebuild.user.User ) ( user ) ) . getIdentifier () ) ; else return false ; }
fix_after_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object fdtgebfnxeuqdqbuesde ) { if ( fdtgebfnxeuqdqbuesde instanceof de.mixedfx.network.rebuild.fdtgebfnxeuqdqbuesde.User ) return this . getIdentifier () . equals ( ( ( de.mixedfx.network.rebuild.fdtgebfnxeuqdqbuesde.User ) ( fdtgebfnxeuqdqbuesde ) ) . getIdentifier () ) ; else return false ; }
× fix_prediction_before: public boolean equals ( final de. mixedfx.network. rebuild.user.User user ) { return getIdentifier () . equals ( user . getIdentifier () ) ; }
× fix_prediction_after: public boolean equals ( final de. mixedfx.network. rebuild.fdtgebfnxeuqdqbuesde.User fdtgebfnxeuqdqbuesde ) { return this . getIdentifier () . equals ( fdtgebfnxeuqdqbuesde . getIdentifier () ) ; }

line_index: 978
bug_before_refactoring: public void setClimb ( boolean climb ) { this . climb = climb ; if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> public void setClimb ( boolean climb ) { this . climb = climb ; if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> fixed climber bugs
bug_after_refactoring: public void setClimb ( boolean hiweamxfshfdxjihnftg ) { this . hiweamxfshfdxjihnftg = hiweamxfshfdxjihnftg ; if ( hiweamxfshfdxjihnftg ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> public void setClimb ( boolean hiweamxfshfdxjihnftg ) { this . hiweamxfshfdxjihnftg = hiweamxfshfdxjihnftg ; if ( hiweamxfshfdxjihnftg ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; } <s> fixed climber bugs
fix_before_refactoring: public void update () { if ( climb ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; }
fix_after_refactoring: public void update () { if ( hiweamxfshfdxjihnftg ) motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; }
× fix_prediction_before: public void setClimb ( boolean climb ) { this . climb = climb ; motor . set ( ( ( speed ) * ( speedCoeff ) ) ) ; else motor . set ( 0 ) ; }
× fix_prediction_after: public void setClimb ( boolean hiweamxfshfdxjihnftg ) { this . hiweamxfshfdxjihnftg = hiweamxfshfdxjihnftg ; motor . set ( ( speed ) * ( speedCoeff ) ) ; else motor . set ( 0 ) ; }

line_index: 980
bug_before_refactoring: public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return this ; } <s> public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
bug_after_refactoring: public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double vcmmbgajgmzggnjvqqef ) { this . vcmmbgajgmzggnjvqqef = vcmmbgajgmzggnjvqqef ; return this ; } <s> public com.utils.BuilderBean setDoubleObjValue ( java.lang.Double vcmmbgajgmzggnjvqqef ) { this . vcmmbgajgmzggnjvqqef = vcmmbgajgmzggnjvqqef ; return this ; } <s> BugFix: when setter returns double or long  occur "VerifyError: Attempt to split long or double on the stack
fix_before_refactoring: public double setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return 1.0 ; }
fix_after_refactoring: public double setDoubleObjValue ( java.lang.Double vcmmbgajgmzggnjvqqef ) { this . vcmmbgajgmzggnjvqqef = vcmmbgajgmzggnjvqqef ; return 1.0 ; }
× fix_prediction_before: public long setDoubleObjValue ( java.lang.Double doubleObjValue ) { this . doubleObjValue = doubleObjValue ; return this ; }
× fix_prediction_after: public void setDoubleObjValue ( java.lang.Double vcmmbgajgmzggnjvqqef ) { this . vcmmbgajgmzggnjvqqef = vcmmbgajgmzggnjvqqef ; }

line_index: 982
bug_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client client ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( client . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
bug_after_refactoring: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( esurufaiadiaxshzrvqv . getDNS () ) ) ) ; } <s> @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) { Log.CCR . info ( ( "Nouveau CCR connect� depuis " + ( esurufaiadiaxshzrvqv . getDNS () ) ) ) ; } <s> Changed info->error Fixed temps d'attente dans le circuit et de croisière
fix_before_refactoring: @ java.lang.Override public void newClient ( Airport.Client client ) {}
fix_after_refactoring: @ java.lang.Override public void newClient ( Airport.Client esurufaiadiaxshzrvqv ) {}
× fix_prediction_before: @ java.lang.Override public void newClient (Airport.Client client ) {}
× fix_prediction_after: @ java.lang.Override public void newClient (Airport.Client esurufaiadiaxshzrvqv ) {}

line_index: 985
bug_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { mediaPlayer . seekTo ( i ) ; } <s> @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { mediaPlayer . seekTo ( i ) ; } <s> Fixed major bugs
bug_after_refactoring: @ java.lang.Overroaewtfxlunufawtqqsoude pulcxalvxasefknpgwxhhsloaewtfxlunufawtqqsouc vooaewtfxlunufawtqqsoud onProgressChanged ( androoaewtfxlunufawtqqsoud.woaewtfxlunufawtqqsoudget.SeekBar fuhxnpluwsllcxalvxasefknpgwxhhsgqrxncvy , oaewtfxlunufawtqqsount oaewtfxlunufawtqqsou , lcxalvxasefknpgwxhhsoolean lcxalvxasefknpgwxhhs ) { medoaewtfxlunufawtqqsouaPlayer . seekTo ( oaewtfxlunufawtqqsou ) ; } <s> @ java.lang.Overroaewtfxlunufawtqqsoude pulcxalvxasefknpgwxhhsloaewtfxlunufawtqqsouc vooaewtfxlunufawtqqsoud onProgressChanged ( androoaewtfxlunufawtqqsoud.woaewtfxlunufawtqqsoudget.SeekBar fuhxnpluwsllcxalvxasefknpgwxhhsgqrxncvy , oaewtfxlunufawtqqsount oaewtfxlunufawtqqsou , lcxalvxasefknpgwxhhsoolean lcxalvxasefknpgwxhhs ) { medoaewtfxlunufawtqqsouaPlayer . seekTo ( oaewtfxlunufawtqqsou ) ; } <s> Fixed major bugs
fix_before_refactoring: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { if ( b ) { mediaPlayer . seekTo ( i ) ; } }
fix_after_refactoring: @ java.lang.Overroaewtfxlunufawtqqsoude pulcxalvxasefknpgwxhhsloaewtfxlunufawtqqsouc vooaewtfxlunufawtqqsoud onProgressChanged ( androoaewtfxlunufawtqqsoud.woaewtfxlunufawtqqsoudget.SeekBar fuhxnpluwsllcxalvxasefknpgwxhhsgqrxncvy , oaewtfxlunufawtqqsount oaewtfxlunufawtqqsou , lcxalvxasefknpgwxhhsoolean lcxalvxasefknpgwxhhs ) { oaewtfxlunufawtqqsouf ( lcxalvxasefknpgwxhhs ) { medoaewtfxlunufawtqqsouaPlayer . seekTo ( oaewtfxlunufawtqqsou ) ; } }
× fix_prediction_before: @ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { if ( ( mediaPlayer ) != null ) { mediaPlayer . seekTo ( i ) ; } }
× fix_prediction_after: @ java.lang.Overroaewtfxlunufawtqqsoude pulcxalvxasefknpgwxhhsloaewtfxlunufawtqqsouc vooaewtfxlunufawtqqsoud onProgressChanged ( androoaewtfxlunufawtqqsoud.woaewtfxlunufawtqqsoudget.SeekBar mcewtfxlunufawtqqsou ) { medoaewtfxlunufawtqqsouaPlayer . seekTo ( caewtfxlunufawtqqsou ) ; }

line_index: 986
bug_before_refactoring: @ java.lang.Override public org.apache.commons.math3.complex.Complex getDerivativeValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; } <s> @ java.lang.Override public org.apache.commons.math3.complex.Complex getDerivativeValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; } <s> fixed  bugs in z^n
bug_after_refactoring: @ java.lang.Override public org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi getDerivativeValue ( org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi jvfkyiqaptztbnxwdloi ) { return jvfkyiqaptztbnxwdloi . pow ( n ) . subtract ( Complejvfkyiqaptztbnxwdloi.ONE ) ; } <s> @ java.lang.Override public org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi getDerivativeValue ( org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi jvfkyiqaptztbnxwdloi ) { return jvfkyiqaptztbnxwdloi . pow ( n ) . subtract ( Complejvfkyiqaptztbnxwdloi.ONE ) ; } <s> fixed  bugs in z^n
fix_before_refactoring: @ java.lang.Override public org.apache.commons.math3.complex.Complex getValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; }
fix_after_refactoring: @ java.lang.Override public org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi getValue ( org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi jvfkyiqaptztbnxwdloi ) { return jvfkyiqaptztbnxwdloi . pow ( n ) . subtract ( Complejvfkyiqaptztbnxwdloi.ONE ) ; }
× fix_prediction_before: @ java.lang.Override public org.apache.commons.math3.complex.Complex getDerivativeValue ( org.apache.commons.math3.complex.Complex x ) { return x . pow ( n ) . subtract ( Complex.ONE ) ; }
× fix_prediction_after: @ java.lang.Override public org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi getDerivativeValue ( org.apache.commons.math3.complejvfkyiqaptztbnxwdloi.Complejvfkyiqaptztbnxwdloi jvfkyiqaptztbnxwdloi ) { return jvfkyiqaptztbnxwdloi . pow ( n ) . subtract ( Complejvfkyiqaptztbnxwdloi.ONE ) ; }

line_index: 987
bug_before_refactoring: @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> fix error when returning from add product
bug_after_refactoring: @ java.lang.Override protected void onActivityResult ( int qxogprcpyzneomeyhiig , int mdgagukalghaohuclnnj , android.content.Intent lfhpbqzkdfzmzmxmgctf ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( lfhpbqzkdfzmzmxmgctf ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> @ java.lang.Override protected void onActivityResult ( int qxogprcpyzneomeyhiig , int mdgagukalghaohuclnnj , android.content.Intent lfhpbqzkdfzmzmxmgctf ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( lfhpbqzkdfzmzmxmgctf ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } <s> fix error when returning from add product
fix_before_refactoring: @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { if ( data != null ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } }
fix_after_refactoring: @ java.lang.Override protected void onActivityResult ( int qxogprcpyzneomeyhiig , int mdgagukalghaohuclnnj , android.content.Intent lfhpbqzkdfzmzmxmgctf ) { if ( lfhpbqzkdfzmzmxmgctf != null ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( lfhpbqzkdfzmzmxmgctf ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; } }
× fix_prediction_before: @ java.lang.Override protected void onActivityResult ( int aRequestCode , int aResultCode , android.content.Intent data ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( data ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; }
× fix_prediction_after: @ java.lang.Override protected void onActivityResult ( int qxogprcpyzneomeyhiig , int mdgagukalghaohuclnnj ) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing . getListingFromIntent ( lfhpbqzkdfzmzmxmgctf ) ; products . add ( newListing ) ; arrayAdapter . notifyDataSetChanged () ; }

line_index: 988
bug_before_refactoring: public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> public boolean contains ( java.lang.String key ) { int arrayIndex = hash ( key ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( key ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
bug_after_refactoring: public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { int arrayIndex = hash ( zmiuhcliehkjjzrqtvbp ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( zmiuhcliehkjjzrqtvbp ) ) != null ) ; } <s> public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { int arrayIndex = hash ( zmiuhcliehkjjzrqtvbp ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( zmiuhcliehkjjzrqtvbp ) ) != null ) ; } <s> added two tests on the collision and key with negative hashCode  fixed bug with negative hashCode
fix_before_refactoring: public boolean contains ( java.lang.String key ) { return ( get ( key ) ) != null ; }
fix_after_refactoring: public boolean contains ( java.lang.String zmiuhcliehkjjzrqtvbp ) { return ( get ( zmiuhcliehkjjzrqtvbp ) ) != null ; }
× fix_prediction_before: public boolean contains ( int index , java.lang.String key ) { return ( ( array [ index ] ) != null ) && ( ( array [ index ] . get ( key ) ) != null ) ; }
× fix_prediction_after: public boolean contains ( java.lang.String value ) { int arrayIndex = hash ( value ) ; return ( ( array [ arrayIndex ] ) != null ) && ( ( array [ arrayIndex ] . get ( zmiuhcliehkjjjzrqtvbp ) ) != null ) ; }

line_index: 989
bug_before_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . addPropertyChangeListener ( this ) ; } <s> public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . addPropertyChangeListener ( this ) ; } <s> Fixed error in HighScoreScreen
bug_after_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener ljmlybjrprwqnhgjzgbd ) { pcs . addPropertyChangeListener ( this ) ; } <s> public void removePropertyChangeListener ( java.beans.PropertyChangeListener ljmlybjrprwqnhgjzgbd ) { pcs . addPropertyChangeListener ( this ) ; } <s> Fixed error in HighScoreScreen
fix_before_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . removePropertyChangeListener ( this ) ; }
fix_after_refactoring: public void removePropertyChangeListener ( java.beans.PropertyChangeListener ljmlybjrprwqnhgjzgbd ) { pcs . removePropertyChangeListener ( this ) ; }
× fix_prediction_before: public void removePropertyChangeListener ( java.beans.PropertyChangeListener listener ) { pcs . addPropertyChangeListener ( null ) ; }
× fix_prediction_after: public void removePropertyChangeListener ( java.beans.PropertyChangeListener ljmlybjrprwqnhgjzgbd ) { pcs . addPropertyChangeListener ( this , null ) ; }

line_index: 990
bug_before_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger message , java.math.BigInteger key ) { return encryptDecrypt ( message , key ) ; } <s> public java.math.BigInteger decrypt ( java.math.BigInteger message , java.math.BigInteger key ) { return encryptDecrypt ( message , key ) ; } <s> fix problem with BigInteger
bug_after_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger svyjcudmrsebppjlknny , java.math.BigInteger obavctdhrldhfubhuvhi ) { return encryptDecrypt ( svyjcudmrsebppjlknny , obavctdhrldhfubhuvhi ) ; } <s> public java.math.BigInteger decrypt ( java.math.BigInteger svyjcudmrsebppjlknny , java.math.BigInteger obavctdhrldhfubhuvhi ) { return encryptDecrypt ( svyjcudmrsebppjlknny , obavctdhrldhfubhuvhi ) ; } <s> fix problem with BigInteger
fix_before_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger key , java.math.BigInteger message ) { return encryptDecrypt ( key , message ) ; }
fix_after_refactoring: public java.math.BigInteger decrypt ( java.math.BigInteger obavctdhrldhfubhuvhi , java.math.BigInteger svyjcudmrsebppjlknny ) { return encryptDecrypt ( obavctdhrldhfubhuvhi , svyjcudmrsebppjlknny ) ; }
× fix_prediction_before: public java.math.BigInteger decrypt ( java.math.BigInteger key , java.math.BigInteger message ) { return encryptDecrypt ( message , key ) ; }
× fix_prediction_after: public java.math.BigInteger decrypt ( final java.math.BigInteger svyjcudmrsebppjlknny ) { return encryptDecrypt ( svyjcudmrsebppjlknny , obavctdhrldhfubhuvhi ) ; }

line_index: 991
bug_before_refactoring: public void addMessages ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; } <s> public void addMessages ( java.util.List < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; } <s> Added notifications  fixed multiple messages bug using SharedPreferences.
bug_after_refactoring: public void addMessages ( java.util.List < java.lang.String > ocpbcsutlczmusiwmevi ) { ocpbcsutlczmusiwmeviAdapter . setMessages ( ocpbcsutlczmusiwmevi ) ; } <s> public void addMessages ( java.util.List < java.lang.String > ocpbcsutlczmusiwmevi ) { ocpbcsutlczmusiwmeviAdapter . setMessages ( ocpbcsutlczmusiwmevi ) ; } <s> Added notifications  fixed multiple messages bug using SharedPreferences.
fix_before_refactoring: public void setMessages ( java.util.Collection < java.lang.String > messages ) { messagesAdapter . setMessages ( messages ) ; }
fix_after_refactoring: public void setMessages ( java.util.Collection < java.lang.String > ocpbcsutlczmusiwmevi ) { ocpbcsutlczmusiwmeviAdapter . setMessages ( ocpbcsutlczmusiwmevi ) ; }
× fix_prediction_before: public void addMessages ( java.util.List < java.lang.String > messages ) { if ( ( messagesAdapter ) != null ) { messagesAdapter . setMessages ( messages ) ; } }
× fix_prediction_after: public void addMessages ( java.util.List < java.lang.String > ocpbcsutlczmusiwmevi ) { this . ocpbcsutlczmusiwmeviAdapter . setMessages ( ocpbcsutlczmusiwmevi ) ; }

line_index: 992
bug_before_refactoring: public static boolean isEvenNumber ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } } <s> public static boolean isEvenNumber ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } } <s> fixed infinite loop error
bug_after_refactoring: public static boolealtjvpnmapmxogpgwjezr isEveltjvpnmapmxogpgwjezrNumber ( iltjvpnmapmxogpgwjezrt ltjvpnmapmxogpgwjezr ) { if ( ( ltjvpnmapmxogpgwjezr % 2 ) == 0 ) { returltjvpnmapmxogpgwjezr true ; } else { returltjvpnmapmxogpgwjezr false ; } } <s> public static boolealtjvpnmapmxogpgwjezr isEveltjvpnmapmxogpgwjezrNumber ( iltjvpnmapmxogpgwjezrt ltjvpnmapmxogpgwjezr ) { if ( ( ltjvpnmapmxogpgwjezr % 2 ) == 0 ) { returltjvpnmapmxogpgwjezr true ; } else { returltjvpnmapmxogpgwjezr false ; } } <s> fixed infinite loop error
fix_before_refactoring: public static boolean isEvenNumber ( int number ) { if ( ( number % 2 ) == 0 ) { return true ; } else { return false ; } }
fix_after_refactoring: public static boolealtjvpnmapmxogpgwjezr isEveltjvpnmapmxogpgwjezrNumber ( iltjvpnmapmxogpgwjezrt ltjvpnmapmxogpgwjezrumber ) { if ( ( ltjvpnmapmxogpgwjezrumber % 2 ) == 0 ) { returltjvpnmapmxogpgwjezr true ; } else { returltjvpnmapmxogpgwjezr false ; } }
× fix_prediction_before: public static boolean isEvenNumber ( int n ) { if ( ( n % 2 ) == 0 ) { return true ; } else { return false ; } }
× fix_prediction_after: public static boolealtjvpnmapmxogpgwjezr isEveltjvpnmapmxogpgwjezrNumber () { if ( ( ltjvpnmapmxogpgwjezrt ltjvpnmapmxogpgwjezr ) == 0 ) { returltjvpnmapmxogpgwjezr true ; } else { returltjvpnmapmxogpgwjezr false ; } }

line_index: 993
bug_before_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( savedInstanceState ) ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( savedInstanceState ) ; } <s> Groundwork for fixing custom sharing  issue #236
bug_after_refactoring: @ java.lang.Override public void onCreate ( android.os.Bundle hbvjosvnouwmwvdqrcyx ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( hbvjosvnouwmwvdqrcyx ) ; } <s> @ java.lang.Override public void onCreate ( android.os.Bundle hbvjosvnouwmwvdqrcyx ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( hbvjosvnouwmwvdqrcyx ) ; } <s> Groundwork for fixing custom sharing  issue #236
fix_before_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle hbvjosvnouwmwvdqrcyx ) { nl.mpcjanssen.simpletask.TodoApplication app = ( ( nl.mpcjanssen.simpletask.TodoApplication ) ( getApplication () ) ) ; setTheme ( app . getActiveTheme () ) ; setTheme ( app . getActiveFont () ) ; super . onCreate ( hbvjosvnouwmwvdqrcyx ) ; }
× fix_prediction_before: @ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; }
× fix_prediction_after: @ java.lang.Override public void onCreate ( android.os.Bundle heapvjosvnouwmwvdqrcyx ) { super . onCreate ( heapvjosvnouwmwvdqrcyx ) ; }

line_index: 994
bug_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( e . getEntity () ) instanceof org.bukkit.entity.Player ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } } } <s> Changed join message  fixed bugs
bug_after_refactoring: @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.EvgnixjponlvumjprxzyvlntHandlgnixjponlvumjprxzyvlr public void onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntity.EntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlnt gnixjponlvumjprxzyvl ) { if ( ( gnixjponlvumjprxzyvl . ggnixjponlvumjprxzyvltEntity () ) instancgnixjponlvumjprxzyvlof org.bukkit.gnixjponlvumjprxzyvlntity.Playgnixjponlvumjprxzyvlr ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjprxzyvl ) ; } } } <s> @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.EvgnixjponlvumjprxzyvlntHandlgnixjponlvumjprxzyvlr public void onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntity.EntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlnt gnixjponlvumjprxzyvl ) { if ( ( gnixjponlvumjprxzyvl . ggnixjponlvumjprxzyvltEntity () ) instancgnixjponlvumjprxzyvlof org.bukkit.gnixjponlvumjprxzyvlntity.Playgnixjponlvumjprxzyvlr ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjprxzyvl ) ; } } } <s> Changed join message  fixed bugs
fix_before_refactoring: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) { if ( ( pl . getGame () . getStatus () ) != ( GameStatus.PLAYING ) ) { e . setCancelled ( true ) ; } }
fix_after_refactoring: @ org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.EvgnixjponlvumjprxzyvlntHandlgnixjponlvumjprxzyvlr public void onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlntity.EntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlnt gnixjponlvumjprxzyvl ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjprxzyvl ) ; } }
× fix_prediction_before: @ org.bukkit.event.EventHandler public void onDamage ( org.bukkit.event.entity.EntityDamageEvent e ) {}
× fix_prediction_after: { super . onDamaggnixjponlvumjprxzyvl ( org.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlSystem.bukkit.gnixjponlvumjprxzyvlvgnixjponlvumjprxzyvlnt.gnixjponlvumjprxzyvlEntityDamaggnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvlEvgnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltEntity () ) { if ( ( gnixjponlvumjprxzyvl . ggnixjponlvumjprxzyvltEntity () ) instancgnixjponlvumjprxzyvlof org.bukkit.gnixjponlvumjprxzyvlntity.Playgnixjponlvumjprxzyvlr ) { if ( ( pl . ggnixjponlvumjprxzyvltGamgnixjponlvumjprxzyvl () . ggnixjponlvumjprxzyvltStatus () ) != ( GamgnixjponlvumjprxzyvlStatus.PLAYING ) { gnixjponlvumjprxzyvl . sgnixjponlvumjprxzyvltCancgnixjponlvumjprxzyvlllgnixjponlvumjprxzyvld ( trugnixjponlvumjponlvumjprxzyv ) ; } }

line_index: 995
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
bug_after_refactoring: @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } <s> Fix location bug for location button Change pin images Add some i18n strings Fixups
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
fix_after_refactoring: @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public aiftvndogzylktcwaduzoid onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { if ( ( mCurrentLocation ) != null ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; }
× fix_prediction_after: @ jaaiftvndogzylktcwaduza.lang.Oaiftvndogzylktcwaduzerride public void onClick ( android.aiftvndogzylktcwaduziew.View aiftvndogzylktcwaduz ) { mapView . setCenterCoordinate ( new com.mapbox.mapboxsdk.geometry.LatLng ( mCurrentLocation ) ) ; }

line_index: 996
bug_before_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String fileName , java.lang.String user ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; } <s> public boolean isUserAllowedToAccessFile ( java.lang.String fileName , java.lang.String user ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; } <s> STORM-1280 port backtype.storm.daemon.logviewer to java  * fix a bug: parameter swapped (address another missing places) * swap parameter sequence to make it consistent with other method
bug_after_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String didyvpmgehjzzijifwcx , java.lang.String naqjbcbsdexefkcpnpbb ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( naqjbcbsdexefkcpnpbb , didyvpmgehjzzijifwcx ) ) ; } <s> public boolean isUserAllowedToAccessFile ( java.lang.String didyvpmgehjzzijifwcx , java.lang.String naqjbcbsdexefkcpnpbb ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( naqjbcbsdexefkcpnpbb , didyvpmgehjzzijifwcx ) ) ; } <s> STORM-1280 port backtype.storm.daemon.logviewer to java  * fix a bug: parameter swapped (address another missing places) * swap parameter sequence to make it consistent with other method
fix_before_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String user , java.lang.String fileName ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; }
fix_after_refactoring: public boolean isUserAllowedToAccessFile ( java.lang.String naqjbcbsdexefkcpnpbb , java.lang.String didyvpmgehjzzijifwcx ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( naqjbcbsdexefkcpnpbb , didyvpmgehjzzijifwcx ) ) ; }
× fix_prediction_before: public boolean isUserAllowedToAccessFile ( java.lang.String fileName , java.lang.String user ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( user , fileName ) ) ; }
× fix_prediction_after: public boolean isUserAllowedToAccessFile ( java.lang.String didyvpmgehjzzijifwcx ) { return ( isUiFilterNotSet () ) || ( isAuthorizedLogUser ( naqjbcbsdexefkcpnpbb , didyvpmgehjzzijifwcx ) ) ; }

line_index: 997
bug_before_refactoring: public void set_runner_id ( javafx.beans.property.IntegerProperty i ) { runner_id = i ; } <s> public void set_runner_id ( javafx.beans.property.IntegerProperty i ) { runner_id = i ; } <s> fixed problems with Runner class involving IntegerProperty and StringProperty and how it interacts with the SQLDriver. It now compiles at least
bug_after_refactoring: publmhuoibeogfgobdjlwppac vomhuoibeogfgobdjlwppad set_runner_mhuoibeogfgobdjlwppad ( javafx.beans.property.IntegerProperty mhuoibeogfgobdjlwppa ) { runner_mhuoibeogfgobdjlwppad = mhuoibeogfgobdjlwppa ; } <s> publmhuoibeogfgobdjlwppac vomhuoibeogfgobdjlwppad set_runner_mhuoibeogfgobdjlwppad ( javafx.beans.property.IntegerProperty mhuoibeogfgobdjlwppa ) { runner_mhuoibeogfgobdjlwppad = mhuoibeogfgobdjlwppa ; } <s> fixed problems with Runner class involving IntegerProperty and StringProperty and how it interacts with the SQLDriver. It now compiles at least
fix_before_refactoring: public void set_runner_id ( int i ) { runner_id . setValue ( i ) ; }
fix_after_refactoring: publmhuoibeogfgobdjlwppac vomhuoibeogfgobdjlwppad set_runner_mhuoibeogfgobdjlwppad ( mhuoibeogfgobdjlwppant mhuoibeogfgobdjlwppa ) { runner_mhuoibeogfgobdjlwppad . setValue ( mhuoibeogfgobdjlwppa ) ; }
× fix_prediction_before: public void set_runner_id ( java.lang.IntegerProperty i ) { runner_id = i ; }
× fix_prediction_after: public publmhuoibeogfgobdjlwppac vomhuoibeogfgobdjlwppad set_runner_mhuoibeogfgobdjlwppad ( javafx.beans.property.IntegerProperty mhuoibeogfgobdjlwppa ) { runner_mhuoibeogfgobdjlwppad = mhuoibeogfgobdjlwppa ; }

line_index: 998
bug_before_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "count" ) int count , @ com.controller.RequestParam ( value = "first" ) long id ) { return trainingService . getTrainingListNext ( id , count ) ; } <s> @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "count" ) int count , @ com.controller.RequestParam ( value = "first" ) long id ) { return trainingService . getTrainingListNext ( id , count ) ; } <s> fixed bugs with controller
bug_after_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "fduuczsguutknwkebdnx" ) int fduuczsguutknwkebdnx , @ com.controller.RequestParam ( value = "first" ) long obzflplnhnxnrttvhqzy ) { return trainingService . getTrainingListNext ( obzflplnhnxnrttvhqzy , fduuczsguutknwkebdnx ) ; } <s> @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "fduuczsguutknwkebdnx" ) int fduuczsguutknwkebdnx , @ com.controller.RequestParam ( value = "first" ) long obzflplnhnxnrttvhqzy ) { return trainingService . getTrainingListNext ( obzflplnhnxnrttvhqzy , fduuczsguutknwkebdnx ) ; } <s> fixed bugs with controller
fix_before_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.PathVariable ( value = "count" ) int count , @ com.controller.PathVariable ( value = "first" ) int first ) { return trainingService . getTrainingListNext ( id , count ) ; }
fix_after_refactoring: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.PathVariable ( value = "fduuczsguutknwkebdnx" ) int fduuczsguutknwkebdnx , @ com.controller.PathVariable ( value = "first" ) int first ) { return trainingService . getTrainingListNext ( obzflplnhnxnrttvhqzy , fduuczsguutknwkebdnx ) ; }
× fix_prediction_before: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "count" ) int count , @ com.controller.RequestParam ( value = "first" ) long id ) { return trainingService . getTrainingListNext ( id , count ) ; }
× fix_prediction_after: @ com.controller.RequestMapping ( value = RestURIConstains.GET_TRAINING_LIST , method = RequestMethod.GET ) @ com.controller.ResponseBody public java.lang.Object getTrainingList ( @ com.controller.RequestParam ( value = "fduuczsguutknwkebdnx" ) long obzflplnhnxnrttvhqzy ) { return trainingService . getTrainingListNext ( obzflplnhnxnrttvhqzy , fduuczsguutknwkebdnx ) ; }

line_index: 1002
bug_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
bug_after_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; } <s> issue where the coursor moves when a script finishes is fixed.
fix_before_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.lang.Object previous , java.io.File source ) {}
fix_after_refactoring: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.lang.Object sjdmcmlrxleultukcajh , java.io.File jxqvuiqtzhjbfmyvkqwz ) {}
× fix_prediction_before: @ java.lang.Override public void onScriptFinished ( java.lang.Object result , java.io.File source ) { javax.swing.SwingUtilities . invokeLater ( ( ) - > textArea . requestFocusInWindow () ) ; }
× fix_prediction_after: @ java.lang.Override public void onScriptFinished ( java.lang.Object azujgrnetezxwdxnrmhi , java.io.File jxqvuiqtzhjbfmyvkqwz ) { javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { textArea . requestFocusInWindow () ; } } ) ; }

line_index: 1004
bug_before_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String message , short expectedMagicNumber , short receivedMagic ) ; <s> @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String message , short expectedMagicNumber , short receivedMagic ) ; <s> ISPN-1119 Client log adjustments and avoid duplicate logging  * An issue with invalid magic number reporting has been fixed too that only affected master.
bug_after_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String dfuelvqnzxlvuvzaefoz , short dnoulsnubecdekezvjdf , short hjilytcdgrxrqqalcaam ) ; <s> @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String dfuelvqnzxlvuvzaefoz , short dnoulsnubecdekezvjdf , short hjilytcdgrxrqqalcaam ) ; <s> ISPN-1119 Client log adjustments and avoid duplicate logging  * An issue with invalid magic number reporting has been fixed too that only affected master.
fix_before_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( short expectedMagicNumber , short receivedMagic ) ;
fix_after_refactoring: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( short dnoulsnubecdekezvjdf , short hjilytcdgrxrqqalcaam ) ;
× fix_prediction_before: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String message , short expectedMagicNumber , short receivedMagic ) ;
× fix_prediction_after: @ org.jboss.logging.LogMessage ( level = ERROR ) @ org.jboss.logging.Message ( value = "Invalid magic number. Expected %#x and received %#x" , id = 4003 ) void invalidMagicNumber ( java.lang.String dfuelvq nzxlvuvzaefoz , short dnoulsnubecdekezvjdf , short hjilytcdgrxrqqalcaam ) ;

line_index: 1005
bug_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
bug_after_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . set ( joeisnuhretzrvllacnj ) ; } <s> public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . set ( joeisnuhretzrvllacnj ) ; } <s> Try to fix multithreading issues with BlockPosM singleton
fix_before_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( pos ) ; }
fix_after_refactoring: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM joeisnuhretzrvllacnj ) { return chylex.hee.system.util.BlockPosM.temporary . get () . set ( joeisnuhretzrvllacnj ) ; }
× fix_prediction_before: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM pos ) { synchronized ( chylex.hee.system.util.BlockPosM.temporary ) { return chylex.hee.system.util.BlockPosM.temporary . set ( pos ) ; } }
× fix_prediction_after: public static chylex.hee.system.util.BlockPosM tmp ( chylex.hee.system.util.BlockPosM title ) { return chylex.hee.system.util.BlockPosM.temporary . set ( title ) ; }

line_index: 1006
bug_before_refactoring: public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) mCheckedPosList . addAll ( set ) ; notifyDataChanged () ; } <s> public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) mCheckedPosList . addAll ( set ) ; notifyDataChanged () ; } <s> 【fixbug】#97 #95 #92 #90 #85 #83 #80
bug_after_refactoring: public void gxehsyethyvssiwyqmipSelectedList ( java.util.Set < java.lang.Integer > gxehsyethyvssiwyqmip ) { mCheckedPosList . clear () ; if ( gxehsyethyvssiwyqmip != null ) mCheckedPosList . addAll ( gxehsyethyvssiwyqmip ) ; notifyDataChanged () ; } <s> public void gxehsyethyvssiwyqmipSelectedList ( java.util.Set < java.lang.Integer > gxehsyethyvssiwyqmip ) { mCheckedPosList . clear () ; if ( gxehsyethyvssiwyqmip != null ) mCheckedPosList . addAll ( gxehsyethyvssiwyqmip ) ; notifyDataChanged () ; } <s> 【fixbug】#97 #95 #92 #90 #85 #83 #80
fix_before_refactoring: @ java.lang.Deprecated public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList . clear () ; if ( set != null ) { mCheckedPosList . addAll ( set ) ; } notifyDataChanged () ; }
fix_after_refactoring: @ java.lang.Deprecated public void gxehsyethyvssiwyqmipSelectedList ( java.util.Set < java.lang.Integer > gxehsyethyvssiwyqmip ) { mCheckedPosList . clear () ; if ( gxehsyethyvssiwyqmip != null ) { mCheckedPosList . addAll ( gxehsyethyvssiwyqmip ) ; } notifyDataChanged () ; }
× fix_prediction_before: public void setSelectedList ( java.util.Set < java.lang.Integer > set ) { mCheckedPosList = set ; notifyDataChanged () ; }
× fix_prediction_after: public void gxehsyethyvssiwyqmipSelectedList () { mCheckedPosList . clear () ; if ( gxehsyethyvssiwyqmip != null ) mCheckedPosList . addAll ( gxehsyethyvssiwyqmip ) ; notifyDataChanged () ; }

line_index: 1008
bug_before_refactoring: void enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } mWifiNative . enableBackgroundScan ( enable ) ; } <s> void enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } mWifiNative . enableBackgroundScan ( enable ) ; } <s> WiFi : Enable saved profiles  before PNO is issued  All the saved networks have to be enabled to get included in the scan requests triggered due to the PNO request. This commit ensures the same.  Change-Id: Ib5cf7c5792feb5957f95689ec0533c12abbb7f34 CRs-Fixed: 841626
bug_after_refactoring: void ofehksafbtmkbjwevluvBackgroundScan ( boolean ofehksafbtmkbjwevluv ) { if ( ofehksafbtmkbjwevluv ) { mWifiConfigStore . ofehksafbtmkbjwevluvAllNetworks () ; } mWifiNative . ofehksafbtmkbjwevluvBackgroundScan ( ofehksafbtmkbjwevluv ) ; } <s> void ofehksafbtmkbjwevluvBackgroundScan ( boolean ofehksafbtmkbjwevluv ) { if ( ofehksafbtmkbjwevluv ) { mWifiConfigStore . ofehksafbtmkbjwevluvAllNetworks () ; } mWifiNative . ofehksafbtmkbjwevluvBackgroundScan ( ofehksafbtmkbjwevluv ) ; } <s> WiFi : Enable saved profiles  before PNO is issued  All the saved networks have to be enabled to get included in the scan requests triggered due to the PNO request. This commit ensures the same.  Change-Id: Ib5cf7c5792feb5957f95689ec0533c12abbb7f34 CRs-Fixed: 841626
fix_before_refactoring: boolean enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } return mWifiNative . enableBackgroundScan ( enable ) ; }
fix_after_refactoring: boolean ofehksafbtmkbjwevluvBackgroundScan ( boolean ofehksafbtmkbjwevluv ) { if ( ofehksafbtmkbjwevluv ) { mWifiConfigStore . ofehksafbtmkbjwevluvAllNetworks () ; } return mWifiNative . ofehksafbtmkbjwevluvBackgroundScan ( ofehksafbtmkbjwevluv ) ; }
× fix_prediction_before: void enableBackgroundScan ( boolean enable ) { if ( enable ) { mWifiConfigStore . enableAllNetworks () ; } mWifiNative . enableBackgroundScan ( enable ) ; }
× fix_prediction_after: void ofehksafbtmkbjwevluvBackgroundScan () { if ( ofehksafbtmkbjwevluv ) { mWifiConfigStore . ofehksafbtmkbjwevluvAllNetworks () ; } mWifiNative . ofehksafbtmkbjwevluvBackgroundScan ( ofehksafbtmkbjwevluv ) ; }

line_index: 1009
bug_before_refactoring: public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , android.widget.ImageView imageView , boolean fromCacheOnly ) { loadImage ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; } <s> public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , android.widget.ImageView imageView , boolean fromCacheOnly ) { loadImage ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; } <s> Bug fix: fix image loader task restarting
bug_after_refactoring: public void loadImage ( android.net.Uri eoemksjmulbqgcvoyffi , java.lang.String junqctrgikpxspbkqrnf , java.lang.String vsihazrbudrhqbwdjeyd , android.widget.ImageView hyftoleysvsiedijrwln , boolean grbkjqigtcpfsjudfjor ) { loadImage ( eoemksjmulbqgcvoyffi , junqctrgikpxspbkqrnf , vsihazrbudrhqbwdjeyd , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( hyftoleysvsiedijrwln ) , grbkjqigtcpfsjudfjor ) ; } <s> public void loadImage ( android.net.Uri eoemksjmulbqgcvoyffi , java.lang.String junqctrgikpxspbkqrnf , java.lang.String vsihazrbudrhqbwdjeyd , android.widget.ImageView hyftoleysvsiedijrwln , boolean grbkjqigtcpfsjudfjor ) { loadImage ( eoemksjmulbqgcvoyffi , junqctrgikpxspbkqrnf , vsihazrbudrhqbwdjeyd , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( hyftoleysvsiedijrwln ) , grbkjqigtcpfsjudfjor ) ; } <s> Bug fix: fix image loader task restarting
fix_before_refactoring: public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , boolean fromCacheOnly , android.widget.ImageView imageView ) { loadImage ( uri , chanName , key , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( imageView ) , fromCacheOnly ) ; }
fix_after_refactoring: public void loadImage ( android.net.Uri eoemksjmulbqgcvoyffi , java.lang.String junqctrgikpxspbkqrnf , java.lang.String vsihazrbudrhqbwdjeyd , boolean grbkjqigtcpfsjudfjor , android.widget.ImageView hyftoleysvsiedijrwln ) { loadImage ( eoemksjmulbqgcvoyffi , junqctrgikpxspbkqrnf , vsihazrbudrhqbwdjeyd , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( hyftoleysvsiedijrwln ) , grbkjqigtcpfsjudfjor ) ; }
× fix_prediction_before: public void loadImage ( android.net.Uri uri , java.lang.String chanName , java.lang.String key , android.widget.ImageView imageView , boolean fromCacheOnly ) { loadImage ( uri , chanName , key , imageView , fromCacheOnly ) ; }
× fix_prediction_after: public void loadImage ( android.net.Uri eoemksjmulbqgcvoyffi , java.lang.String junqctrgikpxspbkqrnf , java.lang.String vsihazrbudrhqbwdjeyd , android.widget.ImageView hyftoleysvsiedijrwln , boolean grbkjqigtcpfsjudfjor ) { loadImage ( eoemksjmulbqgcvoyffi , junqctrgikpxspbkqrnf , vsihazrbudrhqbwdjeyd , new com.mishiranu.dashchan.content.ImageLoader.SimpleCallback ( hyftoleysvsiedijrwln ) , grbkjqtcpfsjudfjor ) ; }

line_index: 1010
bug_before_refactoring: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object input ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( input ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object input ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( input ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> Fix ItemStack null issues and make compilable again
bug_after_refactoring: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object eqblzunjzprrnqfwhvkq ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( eqblzunjzprrnqfwhvkq ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object eqblzunjzprrnqfwhvkq ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( eqblzunjzprrnqfwhvkq ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; } <s> Fix ItemStack null issues and make compilable again
fix_before_refactoring: @ java.lang.Override @ javax.annotation.Nonnull public java.lang.String apply ( @ javax.annotation.Nonnull net.minecraft.item.ItemStack input ) { return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( input . getMetadata () ) . getName () ; }
fix_after_refactoring: @ java.lang.Override @ javax.annotation.Nonnull public java.lang.String apply ( @ javax.annotation.Nonnull net.minecraft.item.ItemStack eqblzunjzprrnqfwhvkq ) { return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( eqblzunjzprrnqfwhvkq . getMetadata () ) . getName () ; }
× fix_prediction_before: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object input ) { return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( input ) . getName () ; }
× fix_prediction_after: @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable java.lang.Object arg ) { net.minecraft.item.ItemStack stack = ( ( net.minecraft.item.ItemStack ) ( eqblzunjzprrnqfwhvkq ) ) ; return com.jaquadro.minecraft.storagedrawers.block.EnumKeyType . byMetadata ( stack . getMetadata () ) . getName () ; }

line_index: 1011
bug_before_refactoring: private final int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; } <s> private final int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; } <s> Fix Bug 473974 - hudson/computer/slave/configure 500 error when xvnc plugin configured This change was in the 1.13-h-5 release but forgot to commit it.
bug_after_refactoring: private final int getRandomValue ( final int sprgxamzuginposxqoex , final int jlgmnimxzuosdniamzwf ) { return sprgxamzuginposxqoex + ( new java.util.Random () . nextInt ( getRange ( sprgxamzuginposxqoex , jlgmnimxzuosdniamzwf ) ) ) ; } <s> private final int getRandomValue ( final int sprgxamzuginposxqoex , final int jlgmnimxzuosdniamzwf ) { return sprgxamzuginposxqoex + ( new java.util.Random () . nextInt ( getRange ( sprgxamzuginposxqoex , jlgmnimxzuosdniamzwf ) ) ) ; } <s> Fix Bug 473974 - hudson/computer/slave/configure 500 error when xvnc plugin configured This change was in the 1.13-h-5 release but forgot to commit it.
fix_before_refactoring: private int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; }
fix_after_refactoring: private int getRandomValue ( final int sprgxamzuginposxqoex , final int jlgmnimxzuosdniamzwf ) { return sprgxamzuginposxqoex + ( new java.util.Random () . nextInt ( getRange ( sprgxamzuginposxqoex , jlgmnimxzuosdniamzwf ) ) ) ; }
× fix_prediction_before: private final int getRandomValue ( final int min , final int max ) { return min + ( new java.util.Random () . nextInt ( getRange ( min , max ) ) ) ; }
× fix_prediction_after: private final int getRandomValue ( final int sprgxamzPluginposxqoex , final int jlgmnimxzuosdniamzwf ) { return sprgxamzPluginposxqoex + ( new java.util.Random () . nextInt ( getRange ( sprgxamzPluginposxqoex , jlgmnimxzuosdniamzwf ) ) ) ; }

line_index: 1012
bug_before_refactoring: private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> private static native long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) ; <s> Fixing bugs
bug_after_refactoring: private static native long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) ; <s> private static native long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) ; <s> Fixing bugs
fix_before_refactoring: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return 0 ; }
fix_after_refactoring: private static long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int tgokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) { return 0 ; }
× fix_prediction_before: private static long _imaqContourSetupMatchPattern ( long matchMode , int enableSubPixelAccuracy , long curveParams , int useLearnCurveParameters , long rangeSettings , int numRangeSettings ) { return native long _imaqContourSetupMatchPattern ( matchMode , enableSubPixelAccuracy , curveParams , useLearnCurveParameters , rangeSettings , int numRangeSettings ) ; }
× fix_prediction_after: private static long _imaqContourSetupMatchPattern ( long dutkqaxhymjephpouhue , int hrtigpyqzfahdyetfsyi , long nvytlkltaqsybbmfwqxq , int jenkinsokuvjrhmdmzjbicuzg , long bavulcitpintroihbcsq , int ldqkrdtdtzueucxddnpc ) { return 0L ; }

line_index: 1013
bug_before_refactoring: @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( page * 10 ) ) . withLimit ( 10 ) ) ; } <s> @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( page * 10 ) ) . withLimit ( 10 ) ) ; } <s> Fixed bug when retrieving pokemon list
bug_after_refactoring: @ java.lang.Override public void onLoadMore ( int uvvcwnrilpnwjczfgqjr ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( uvvcwnrilpnwjczfgqjr * 10 ) ) . withLimit ( 10 ) ) ; } <s> @ java.lang.Override public void onLoadMore ( int uvvcwnrilpnwjczfgqjr ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( uvvcwnrilpnwjczfgqjr * 10 ) ) . withLimit ( 10 ) ) ; } <s> Fixed bug when retrieving pokemon list
fix_before_refactoring: @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( ( page - 1 ) * 10 ) ) . withLimit ( 10 ) ) ; }
fix_after_refactoring: @ java.lang.Override public void onLoadMore ( int uvvcwnrilpnwjczfgqjr ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( ( uvvcwnrilpnwjczfgqjr - 1 ) * 10 ) ) . withLimit ( 10 ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onLoadMore ( int page ) { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( page ) . withLimit ( 10 ) ) ; }
× fix_prediction_after: @ java.lang.Override public void onLoadMore () { listPokemonPresenter . list ( app.caueferreira.oneapptocatchthemall.presentation.model.request.PokemonListRequest . create () . withOffset ( ( uvvcwnrilpnwjczfgqjr * 10 ) ) . withLimit ( 10 ) ) ; }

line_index: 1014
bug_before_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > beardDownloads ) { this . downloads . clear () ; this . downloads . addAll ( beardDownloads ) ; notifyDataSetChanged () ; } <s> public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > beardDownloads ) { this . downloads . clear () ; this . downloads . addAll ( beardDownloads ) ; notifyDataSetChanged () ; } <s> UPdate libraries and bug fixes
bug_after_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > rgskdxlbdrbcgffqbcbw ) { this . downloads . clear () ; this . downloads . addAll ( rgskdxlbdrbcgffqbcbw ) ; notifyDataSetChanged () ; } <s> public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > rgskdxlbdrbcgffqbcbw ) { this . downloads . clear () ; this . downloads . addAll ( rgskdxlbdrbcgffqbcbw ) ; notifyDataSetChanged () ; } <s> UPdate libraries and bug fixes
fix_before_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > downloads ) { this . downloads . clear () ; this . downloads . addAll ( downloads ) ; notifyDataSetChanged () ; }
fix_after_refactoring: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > downloads ) { this . downloads . clear () ; this . downloads . addAll ( downloads ) ; notifyDataSetChanged () ; }
× fix_prediction_before: public void updateDownloads ( java.util.List < com.chaemil.hgms.model.Download > download ) { this . download . clear () ; this . download . addAll ( download ) ; notifyDataSetChanged () ; }
× fix_prediction_after: public void updateDownloads () { this . download . clear () ; this . download . addAll ( rgskdxlbdrbcgffqbcbw ) ; notifyDataSetChanged () ; }

line_index: 1015
bug_before_refactoring: @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc , java.util.Map < java.lang.Class , java.lang.Object > ejbInfo ) { return createJCDIInjectionContext ( ejbDesc , null , null ) ; } <s> @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc , java.util.Map < java.lang.Class , java.lang.Object > ejbInfo ) { return createJCDIInjectionContext ( ejbDesc , null , null ) ; } <s> Revert "fix for around construct issue in TCK failure"  This reverts commit 36ca496071aacb3e49c1cd448e62f9762f4baec0.
bug_after_refactoring: @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor lqgjlgjwrtryaxomlhdx , java.util.Map < java.lang.Class , java.lang.Object > zaqczzlqctrfemujdhrb ) { return createJCDIInjectionContext ( lqgjlgjwrtryaxomlhdx , null , null ) ; } <s> @ java.lang.Override public < T > org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor lqgjlgjwrtryaxomlhdx , java.util.Map < java.lang.Class , java.lang.Object > zaqczzlqctrfemujdhrb ) { return createJCDIInjectionContext ( lqgjlgjwrtryaxomlhdx , null , null ) ; } <s> Revert "fix for around construct issue in TCK failure"  This reverts commit 36ca496071aacb3e49c1cd448e62f9762f4baec0.
fix_before_refactoring: @ java.lang.Override public org.glassfish.appclient.client.acc.JCDIInjectionContext createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc ) { return createJCDIInjectionContext ( ejbDesc , null ) ; }
fix_after_refactoring: @ java.lang.Override public org.glassfish.appclient.client.acc.JCDIInjectionContext createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor lqgjlgjwrtryaxomlhdx ) { return createJCDIInjectionContext ( lqgjlgjwrtryaxomlhdx , null ) ; }
× fix_prediction_before: @ java.lang.Override public org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor ejbDesc ) { return createJCDIInjectionContext ( ejbDesc , null , null ) ; }
× fix_prediction_after: @ java.lang.Override public org.glassfish.appclient.client.acc.JCDIInjectionContext < T > createJCDIInjectionContext ( com.sun.enterprise.deployment.EjbDescriptor lqgjlgjwrtryaxomlhdx ) { return createJCDIInjectionContext ( lqgjlgjwrtryaxomlhdx , null , null ) ; }

line_index: 1016
bug_before_refactoring: public void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; } <s> public void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; } <s> Fix bug where sync intent doesn't trigger properly increase minimum sync interval to 2min
bug_after_refactoring: public void showSimpleSnackbar ( int vzaazaxdspxylxxumhha , boolean hhqqzcqqgfcsbflzyyvb ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( vzaazaxdspxylxxumhha , hhqqzcqqgfcsbflzyyvb , ( - 1 ) , null , root ) ; } <s> public void showSimpleSnackbar ( int vzaazaxdspxylxxumhha , boolean hhqqzcqqgfcsbflzyyvb ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( vzaazaxdspxylxxumhha , hhqqzcqqgfcsbflzyyvb , ( - 1 ) , null , root ) ; } <s> Fix bug where sync intent doesn't trigger properly increase minimum sync interval to 2min
fix_before_refactoring: protected void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( mainTextResource , shortLength , ( - 1 ) , null , root ) ; }
fix_after_refactoring: protected void showSimpleSnackbar ( int vzaazaxdspxylxxumhha , boolean hhqqzcqqgfcsbflzyyvb ) { android.view.View root = findViewById ( R.id.root_layout ) ; showSnackbar ( vzaazaxdspxylxxumhha , hhqqzcqqgfcsbflzyyvb , ( - 1 ) , null , root ) ; }
× fix_prediction_before: public void showSimpleSnackbar ( int mainTextResource , boolean shortLength ) { showSnackbar ( mainTextResource , shortLength , null , findViewById ( R.id.root_layout ) ) ; }
× fix_prediction_after: public void showSimpleSnackbar ( android.view.View root , boolean hhqqzcqqgfcsbflzyyvb ) { showSnackbar ( vzaazaxdspxylxxumhha , hhqqzcqqgfcsbflzyyvb , ( - 1 ) , null , root ) ; }

line_index: 1017
bug_before_refactoring: private static native void nativeStopRtcEventLog ( long nativePeerConnection ) ; <s> private static native void nativeStopRtcEventLog ( long nativePeerConnection ) ; <s> Fix for the JNI interface of RtcEventLog functions.  BUG=webrtc:4741  Review-Url: https://codereview.webrtc.org/2128483002 Cr-Commit-Position: refs/heads/master@{#13393}
bug_after_refactoring: private static native void nativeStopRtcEventLog ( long iwnbwhfgdflelbpguhcb ) ; <s> private static native void nativeStopRtcEventLog ( long iwnbwhfgdflelbpguhcb ) ; <s> Fix for the JNI interface of RtcEventLog functions.  BUG=webrtc:4741  Review-Url: https://codereview.webrtc.org/2128483002 Cr-Commit-Position: refs/heads/master@{#13393}
fix_before_refactoring: private native void nativeStopRtcEventLog ( ) ;
fix_after_refactoring: private native void nativeStopRtcEventLog ( ) ;
× fix_prediction_before: private static native void nativeStopRtcEventLog ( ) ;
× fix_prediction_after: private static native void nativeStopRtcEventLog ( ) ;

line_index: 1018
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> Bug fixes and ui tweaks
bug_after_refactoring: @ java.lang.Override public void onClick ( android.jhmfnfubaxacdozjddlc.View jhmfnfubaxacdozjddlc ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> @ java.lang.Override public void onClick ( android.jhmfnfubaxacdozjddlc.View jhmfnfubaxacdozjddlc ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } } <s> Bug fixes and ui tweaks
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.jhmfnfubaxacdozjddlc.View jhmfnfubaxacdozjddlc ) { if ( ( tabs . getCurrentTab () ) == 0 ) { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_INCOME , null ) ; } else { launchEditItem ( getActivity () , MainActivity.FragmentType.DETAILS_EXPENDITURE , null ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.jhmfnfubaxacdozjddlc.View jhmfnfubaxacdozjddlc ) { launchEditItem ( MainActivity.FragmentType.DETAILS_INCOME , null ) ; }

line_index: 1020
bug_before_refactoring: public void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( x ) , convertToGridCoords ( y ) ) ; } <s> public void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( x ) , convertToGridCoords ( y ) ) ; } <s> added some GUI features and spend way too much time trying to fix a silly problem...
bug_after_refactoring: public void highlightTile ( int lishnesfzojqgaoonuwx , int pedgybydxqekrrceqaaq ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( lishnesfzojqgaoonuwx ) , convertToGridCoords ( pedgybydxqekrrceqaaq ) ) ; } <s> public void highlightTile ( int lishnesfzojqgaoonuwx , int pedgybydxqekrrceqaaq ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( lishnesfzojqgaoonuwx ) , convertToGridCoords ( pedgybydxqekrrceqaaq ) ) ; } <s> added some GUI features and spend way too much time trying to fix a silly problem...
fix_before_refactoring: private void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( x , y ) ; }
fix_after_refactoring: private void highlightTile ( int lishnesfzojqgaoonuwx , int pedgybydxqekrrceqaaq ) { highlightedTile = new Model.GridPosition ( lishnesfzojqgaoonuwx , pedgybydxqekrrceqaaq ) ; }
× fix_prediction_before: public void highlightTile ( int x , int y ) { highlightedTile = new Model.GridPosition ( x , y ) ; }
× fix_prediction_after: public void highlightTile ( int lishnesfzojqgaoonuwx , int pedgybydxqekrrceqaaq ) { highlightedTile = new Model.GridPosition ( convertToGridCoords ( lishnesfzojqgaoonuwx ) , convertToGridCoords ( pedgybydxqekrrceqaaq ) ) ; }

line_index: 1021
bug_before_refactoring: @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> @ java.lang.Override protected void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; } <s> Fix a few style errors.
bug_after_refactoring: @ java.lang.Override protected void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; } <s> @ java.lang.Override protected void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; } <s> Fix a few style errors.
fix_before_refactoring: @ java.lang.Override public void rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { super . rbit ( size , dst , src ) ; }
fix_after_refactoring: @ java.lang.Override public void rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; }
× fix_prediction_before: @ java.lang.Override protected boolean rbit ( int size , jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { return super . rbit ( size , dst , src ) ; }
× fix_prediction_after: @ java.lang.Override protected boolean rbit ( int zmgavpowftzvgxinywhd , jdk.vm.ci.code.Register agnzpwgimoitmcsdatjw , jdk.vm.ci.code.Register sznbtwzkxnldmmvmawuk ) { return super . rbit ( zmgavpowftzvgxinywhd , agnzpwgimoitmcsdatjw , sznbtwzkxnldmmvmawuk ) ; }

line_index: 1022
bug_before_refactoring: private int getPosition ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> private int getPosition ( int position ) { if ( position > 4 ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; } else { return position ; } } <s> 1.1.1  release  changes Bug Fixes
bug_after_refactoring: private int getPosition ( int suarvqjjbcbznjplrtkc ) { if ( suarvqjjbcbznjplrtkc > 4 ) { return suarvqjjbcbznjplrtkc - ( ( int ) ( java.lang.Math . ceil ( ( suarvqjjbcbznjplrtkc / 4 ) ) ) ) ; } else { return suarvqjjbcbznjplrtkc ; } } <s> private int getPosition ( int suarvqjjbcbznjplrtkc ) { if ( suarvqjjbcbznjplrtkc > 4 ) { return suarvqjjbcbznjplrtkc - ( ( int ) ( java.lang.Math . ceil ( ( suarvqjjbcbznjplrtkc / 4 ) ) ) ) ; } else { return suarvqjjbcbznjplrtkc ; } } <s> 1.1.1  release  changes Bug Fixes
fix_before_refactoring: private int getPosition ( int position ) { return position ; }
fix_after_refactoring: private int getPosition ( int suarvqjjbcbznjplrtkc ) { return suarvqjjbcbznjplrtkc ; }
× fix_prediction_before: private int getPosition ( int position ) { return position - ( ( int ) ( java.lang.Math . ceil ( ( position / 4 ) ) ) ) ; }
× fix_prediction_after: protected int getPosition ( int suarvqjjbcbznjplrtkc ) { if ( suarvqjjbcbznjplrtkc > 4 ) { return suarvqjjbcbznjplrtkc - ( ( int ) ( java.lang.Math . ceil ( ( suarvqjjbcbznjplrtkc / 4 ) ) ) ; } else { return suarvqjjbcbznjplrtkc ; } }

line_index: 1023
bug_before_refactoring: public void Order ( com.codecool.shop.model.Product product , int quantity , java.lang.String status ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; } <s> public void Order ( com.codecool.shop.model.Product product , int quantity , java.lang.String status ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; } <s> bugfix
bug_after_refactoring: public void Order ( com.codecool.shop.model.Product pgulvfqlmjtunapamhpr , int cgqatzcerqbmqlbvsaar , java.lang.String bggviocsarnpgxrhyucg ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . pgulvfqlmjtunapamhpr = pgulvfqlmjtunapamhpr ; this . cgqatzcerqbmqlbvsaar = cgqatzcerqbmqlbvsaar ; this . bggviocsarnpgxrhyucg = "new" ; } <s> public void Order ( com.codecool.shop.model.Product pgulvfqlmjtunapamhpr , int cgqatzcerqbmqlbvsaar , java.lang.String bggviocsarnpgxrhyucg ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . pgulvfqlmjtunapamhpr = pgulvfqlmjtunapamhpr ; this . cgqatzcerqbmqlbvsaar = cgqatzcerqbmqlbvsaar ; this . bggviocsarnpgxrhyucg = "new" ; } <s> bugfix
fix_before_refactoring: public void Order ( com.codecool.shop.model.Product product , int quantity ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . product = product ; this . quantity = quantity ; this . status = "new" ; }
fix_after_refactoring: public void Order ( com.codecool.shop.model.Product pgulvfqlmjtunapamhpr , int cgqatzcerqbmqlbvsaar ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . pgulvfqlmjtunapamhpr = pgulvfqlmjtunapamhpr ; this . cgqatzcerqbmqlbvsaar = cgqatzcerqbmqlbvsaar ; this . bggviocsarnpgxrhyucg = "new" ; }
× fix_prediction_before: public void Order ( com.codecool.shop.model.Product product , int quantity , java.lang.String status ) { this . id = com.codecool.shop.model.Order.nextId ; this . product = product ; this . quantity = quantity ; this . status = "new" ; }
× fix_prediction_after: public void Order ( com.codecool.shop.model.Product pgulvfqlmjtunapamhpr , int cgqatzcerqbmqlbvsaar ) { this . id = com.codecool.shop.model.Order.nextId ; ( com.codecool.shop.model.Order.nextId ) ++ ; this . pgulvfqlmjtunapamhpr = pgulvfqlmjtunapamhpr ; this . cgqatzcerqbmqlbvsaar = cgqatzcerqbmqlbvsaar ; }

line_index: 1026
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent e ) { j . dispose () ; j . setVisible ( false ) ; } <s> New about screen  bug fix
bug_after_refactoring: public void actionPdkloiwwbzoblowtfbhxorformdkloiwwbzoblowtfbhxod ( java.awt.dkloiwwbzoblowtfbhxovdkloiwwbzoblowtfbhxont.ActionEvdkloiwwbzoblowtfbhxont dkloiwwbzoblowtfbhxo ) { j . disposdkloiwwbzoblowtfbhxo () ; j . sdkloiwwbzoblowtfbhxotVisibldkloiwwbzoblowtfbhxo ( falsdkloiwwbzoblowtfbhxo ) ; } <s> public void actionPdkloiwwbzoblowtfbhxorformdkloiwwbzoblowtfbhxod ( java.awt.dkloiwwbzoblowtfbhxovdkloiwwbzoblowtfbhxont.ActionEvdkloiwwbzoblowtfbhxont dkloiwwbzoblowtfbhxo ) { j . disposdkloiwwbzoblowtfbhxo () ; j . sdkloiwwbzoblowtfbhxotVisibldkloiwwbzoblowtfbhxo ( falsdkloiwwbzoblowtfbhxo ) ; } <s> New about screen  bug fix
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent e ) { dispose () ; setVisible ( false ) ; }
fix_after_refactoring: public void actionPdkloiwwbzoblowtfbhxorformdkloiwwbzoblowtfbhxod ( java.awt.dkloiwwbzoblowtfbhxovdkloiwwbzoblowtfbhxont.ActionEvdkloiwwbzoblowtfbhxont dkloiwwbzoblowtfbhxo ) { disposdkloiwwbzoblowtfbhxo () ; sdkloiwwbzoblowtfbhxotVisibldkloiwwbzoblowtfbhxo ( falsdkloiwwbzoblowtfbhxo ) ; }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent e ) { j . setVisible ( true ) ; }
× fix_prediction_after: public void actionPdkloiwwbzoblowtfbhCommonformdkloiwwbzoblowtfbhxod ( java.awt.dkloiwwbzoblowtfbhxovdkloiwwbzoblowtfbhxont.ActionEvdkloiwwbzoblowtfbhxont dkloiwwbzoblowtfbhxont dkloiwwbzoblowtfbhxo ) { j . disposdkloiwwbzoblowtfbhxo () ; j . sdkloiwwbzoblowtfbhxotVisibldkloiwwbzoblowtfbhxo ( falsdkloiwwbzoblowtfbhxo ) ; }

line_index: 1027
bug_before_refactoring: public void insertUpdate ( javax.swing.event.DocumentEvent e ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } <s> public void insertUpdate ( javax.swing.event.DocumentEvent e ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } <s> Fixed problem #20 where user log wasn't being cleared when new family is loaded
bug_after_refactoring: public void insqidfkpfemznyxgznicamrtUpdatqidfkpfemznyxgznicam ( javax.swing.qidfkpfemznyxgznicamvqidfkpfemznyxgznicamnt.DocumqidfkpfemznyxgznicamntEvqidfkpfemznyxgznicamnt qidfkpfemznyxgznicam ) { org.paint.gui.DirtyIndicator . inst () . dirtyGqidfkpfemznyxgznicamnqidfkpfemznyxgznicams ( commqidfkpfemznyxgznicamnt_sqidfkpfemznyxgznicamt ) ; java.lang.String commqidfkpfemznyxgznicamnt = commqidfkpfemznyxgznicamnt_tqidfkpfemznyxgznicamxt . gqidfkpfemznyxgznicamtTqidfkpfemznyxgznicamxt () ; javax.swing.SwingUtilitiqidfkpfemznyxgznicams . invokqidfkpfemznyxgznicamLatqidfkpfemznyxgznicamr ( nqidfkpfemznyxgznicamw org.paint.gui.tracking.EvidqidfkpfemznyxgznicamncqidfkpfemznyxgznicamPanqidfkpfemznyxgznicaml.CommqidfkpfemznyxgznicamntTask ( commqidfkpfemznyxgznicamnt ) ) ; } <s> public void insqidfkpfemznyxgznicamrtUpdatqidfkpfemznyxgznicam ( javax.swing.qidfkpfemznyxgznicamvqidfkpfemznyxgznicamnt.DocumqidfkpfemznyxgznicamntEvqidfkpfemznyxgznicamnt qidfkpfemznyxgznicam ) { org.paint.gui.DirtyIndicator . inst () . dirtyGqidfkpfemznyxgznicamnqidfkpfemznyxgznicams ( commqidfkpfemznyxgznicamnt_sqidfkpfemznyxgznicamt ) ; java.lang.String commqidfkpfemznyxgznicamnt = commqidfkpfemznyxgznicamnt_tqidfkpfemznyxgznicamxt . gqidfkpfemznyxgznicamtTqidfkpfemznyxgznicamxt () ; javax.swing.SwingUtilitiqidfkpfemznyxgznicams . invokqidfkpfemznyxgznicamLatqidfkpfemznyxgznicamr ( nqidfkpfemznyxgznicamw org.paint.gui.tracking.EvidqidfkpfemznyxgznicamncqidfkpfemznyxgznicamPanqidfkpfemznyxgznicaml.CommqidfkpfemznyxgznicamntTask ( commqidfkpfemznyxgznicamnt ) ) ; } <s> Fixed problem #20 where user log wasn't being cleared when new family is loaded
fix_before_refactoring: public void insertUpdate ( javax.swing.event.DocumentEvent e ) { if ( comment_set ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; } }
fix_after_refactoring: public void insqidfkpfemznyxgznicamrtUpdatqidfkpfemznyxgznicam ( javax.swing.qidfkpfemznyxgznicamvqidfkpfemznyxgznicamnt.DocumqidfkpfemznyxgznicamntEvqidfkpfemznyxgznicamnt qidfkpfemznyxgznicam ) { if ( commqidfkpfemznyxgznicamnt_sqidfkpfemznyxgznicamt ) { org.paint.gui.DirtyIndicator . inst () . dirtyGqidfkpfemznyxgznicamnqidfkpfemznyxgznicams ( commqidfkpfemznyxgznicamnt_sqidfkpfemznyxgznicamt ) ; java.lang.String commqidfkpfemznyxgznicamnt = commqidfkpfemznyxgznicamnt_tqidfkpfemznyxgznicamxt . gqidfkpfemznyxgznicamtTqidfkpfemznyxgznicamxt () ; javax.swing.SwingUtilitiqidfkpfemznyxgznicams . invokqidfkpfemznyxgznicamLatqidfkpfemznyxgznicamr ( nqidfkpfemznyxgznicamw org.paint.gui.tracking.EvidqidfkpfemznyxgznicamncqidfkpfemznyxgznicamPanqidfkpfemznyxgznicaml.CommqidfkpfemznyxgznicamntTask ( commqidfkpfemznyxgznicamnt ) ) ; } }
× fix_prediction_before: public void insertUpdate ( javax.swing.event.DocumentEvent e ) { org.paint.gui.DirtyIndicator . inst () . dirtyGenes ( comment_set ) ; java.lang.String comment = comment_text . getText () ; javax.swing.SwingUtilities . invokeLater ( new org.paint.gui.tracking.EvidencePanel.CommentTask ( comment ) ) ; }
× fix_prediction_after: public void insqidfkpfemznyxgznicamrtUpdatqidfkpfemznyxgznicam ( javax.swing.qidfkpfemznyxgznicamnt.DocumqidfkpfemznyxgznicamntEvqidfkpfemznyxgznicamnt qidfkpfemznyxgznicamnt.gui.DirtyIndicator . inst () . dirtyGqidfkpfemznyxgznicamnqidfkpfemznyxgznicamnqidfkpfemznyxgznicams ( commqidfkpfemznyxgznicamnt_sqidfkpfemznyxgznicamnt ) ; java.lang.String commqidfkpfemznyxgznicamnt = commqidfkpfemznyxgznicamnt_tqidfkpfemznyxgznicamxt . gqidfkpfemznyxgznicamntTqidfkpfemznyxgznicamxt () ; javax.swing.SwingUtilitiqidfkpfemznyxgznicamr . invokqidfkpfemznyxgznicamLatqidfkpfemznyxgznicamr ( nqidfkpfemznyxgznicamw org.paint.gui.tracking.Evidqidfkpfemznyxgznicamr_sqidfkpfemznyxgznicamPanqidfkpfemznyxgznicamPanqidfkpfemznyxgznicamnt.qidfkpfemznyxgznicamnt.qidfkpfemznyxgznicamnt.qidfkpfemznyxgznicamntTask ( commqidfkpfemznyxgznicamnt ) ; }

line_index: 1029
bug_before_refactoring: public void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } <s> public void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } <s> Bugfix: language should get through and stick
bug_after_refactoring: public void addUserSession ( java.lang.String gotcsjyhepixhsqisjyu , java.lang.String kqkywamzxynhkqhhtlyy ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( gotcsjyhepixhsqisjyu , kqkywamzxynhkqhhtlyy , true ) ) ; } <s> public void addUserSession ( java.lang.String gotcsjyhepixhsqisjyu , java.lang.String kqkywamzxynhkqhhtlyy ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( gotcsjyhepixhsqisjyu , kqkywamzxynhkqhhtlyy , true ) ) ; } <s> Bugfix: language should get through and stick
fix_before_refactoring: public void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; } }
fix_after_refactoring: public void addUserSession ( java.lang.String gotcsjyhepixhsqisjyu , java.lang.String kqkywamzxynhkqhhtlyy ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( gotcsjyhepixhsqisjyu , kqkywamzxynhkqhhtlyy , true ) ) ; } }
× fix_prediction_before: public static void addUserSession ( java.lang.String sUserId , java.lang.String sSession ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( sUserId , sSession , true ) ) ; }
× fix_prediction_after: public void addUserSession ( java.lang.String gotcsjyhepixhsqisjyu , java.lang.String kqkywamzxynhkqhhtlyy ) { nl.ru.crpstudio.CrpUtil.userCache . add ( new nl.ru.crpstudio.UserSession ( gotcsjyhepixhsqisjyu , kqkywamzxynhkqhhtlyy , true , false ) ) ; }

line_index: 1030
bug_before_refactoring: private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( jufuPercent - 1 ) * hgaGameRatio ) ) ; return ( jufuPercent - 1 ) * hgaGameRatio ; } <s> private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( jufuPercent - 1 ) * hgaGameRatio ) ) ; return ( jufuPercent - 1 ) * hgaGameRatio ; } <s> fix bugs
bug_after_refactoring: private java.lang.Double getRatioScore ( java.lang.Double cnaiycxjvdxlkdvipsjh , java.lang.Double npmmdkydidocmocnkwmo ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ) ) ; return ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ; } <s> private java.lang.Double getRatioScore ( java.lang.Double cnaiycxjvdxlkdvipsjh , java.lang.Double npmmdkydidocmocnkwmo ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ) ) ; return ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ; } <s> fix bugs
fix_before_refactoring: private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double hgaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( jufuPercent * ( hgaGameRatio - 1 ) ) ) ; return jufuPercent * ( hgaGameRatio - 1 ) ; }
fix_after_refactoring: private java.lang.Double getRatioScore ( java.lang.Double cnaiycxjvdxlkdvipsjh , java.lang.Double npmmdkydidocmocnkwmo ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer gives {}" , ( cnaiycxjvdxlkdvipsjh * ( npmmdkydidocmocnkwmo - 1 ) ) ) ; return cnaiycxjvdxlkdvipsjh * ( npmmdkydidocmocnkwmo - 1 ) ; }
× fix_prediction_before: private java.lang.Double getRatioScore ( java.lang.Double jufuPercent , java.lang.Double branchaGameRatio ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer produces {}" , branchaGameRatio ) ; return ( jufuPercent - 1 ) * branchaGameRatio ; }
× fix_prediction_after: private java.lang.Double getRatioScore ( java.lang.Double cnaiycxjvdxlkdvipsjh ) { lingda.service.GameRatioAnalyzer.logger . info ( "analyzer give {}" , ( ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ) ) ; return ( cnaiycxjvdxlkdvipsjh - 1 ) * npmmdkydidocmocnkwmo ; }

line_index: 1031
bug_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } <s> Fixed a runtime error and made the radio name capitalised
bug_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle yduaqpgosmfdvonzahvr ) { yduaqpgosmfdvonzahvr . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( yduaqpgosmfdvonzahvr ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle yduaqpgosmfdvonzahvr ) { yduaqpgosmfdvonzahvr . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( yduaqpgosmfdvonzahvr ) ; } <s> Fixed a runtime error and made the radio name capitalised
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( this . language ) != null ) { outState . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( outState ) ; } }
fix_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle yduaqpgosmfdvonzahvr ) { if ( ( this . language ) != null ) { yduaqpgosmfdvonzahvr . putInt ( "CURRENT_LANG" , this . language . getId () ) ; super . onSaveInstanceState ( yduaqpgosmfdvonzahvr ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "CURRENT_LANG" , language . getId () ) ; super . onSaveInstanceState ( outState ) ; }
× fix_prediction_after: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle yduaqpgosmfdvonzahvr ) { if ( ( this . language ) != null ) { yduaqpgosmfdvonzahvr . putInt ( "CURRENT_LANG" , this . language . getId () ) ; } super . onSaveInstanceState ( yduaqpgosmfdvonzahvr ) ; }

line_index: 1033
bug_before_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , boolean withRecorder ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; } <s> Fix compatibility problems between Chrome configurations #68153
bug_after_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties azgyvqbbdimzimldzvpm , boolean uibebkqavmkqjdzsnqfl ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( uibebkqavmkqjdzsnqfl ) { webDriver = addRecorderPlugin ( azgyvqbbdimzimldzvpm , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( azgyvqbbdimzimldzvpm ) ; } <s> public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties azgyvqbbdimzimldzvpm , boolean uibebkqavmkqjdzsnqfl ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( uibebkqavmkqjdzsnqfl ) { webDriver = addRecorderPlugin ( azgyvqbbdimzimldzvpm , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( azgyvqbbdimzimldzvpm ) ; } <s> Fix compatibility problems between Chrome configurations #68153
fix_before_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties ) throws java.io.IOException { return webDriverFactory . create ( webDriverProperties ) ; }
fix_after_refactoring: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties azgyvqbbdimzimldzvpm ) throws java.io.IOException { return webDriverFactory . create ( azgyvqbbdimzimldzvpm ) ; }
× fix_prediction_before: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( withRecorder ) { webDriver = addRecorderPlugin ( webDriverProperties , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( webDriverProperties ) ; }
× fix_prediction_after: public org.openqa.selenium.WebDriver createWebDriver ( minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties azgyvqbbdimzimldzvpm ) throws java.io.IOException { org.openqa.selenium.WebDriver webDriver = null ; if ( uibebkqavmkqjdzsnqfl ) { webDriver = addRecorderPlugin ( azgyvqbbdimzimldzvpm , webDriver ) ; } return webDriver != null ? webDriver : webDriverFactory . create ( azgyvqbbdimzimldzvpm ) ; }

line_index: 1034
bug_before_refactoring: @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { java.lang.System.out . println ( page ) ; bwRest . getRestClient ( page , "load" ) ; return true ; } <s> @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { java.lang.System.out . println ( page ) ; bwRest . getRestClient ( page , "load" ) ; return true ; } <s> Fix errors
bug_after_refactoring: @ java.lang.Override public boolean onLoadMore ( int vprbxfgskuioycpzvzwa , int iqpkejxktvaodkvldnav ) { java.lang.System.out . println ( vprbxfgskuioycpzvzwa ) ; bwRest . getRestClient ( vprbxfgskuioycpzvzwa , "load" ) ; return true ; } <s> @ java.lang.Override public boolean onLoadMore ( int vprbxfgskuioycpzvzwa , int iqpkejxktvaodkvldnav ) { java.lang.System.out . println ( vprbxfgskuioycpzvzwa ) ; bwRest . getRestClient ( vprbxfgskuioycpzvzwa , "load" ) ; return true ; } <s> Fix errors
fix_before_refactoring: @ java.lang.Override public boolean onLoadMore ( int page , int totalItemsCount ) { java.lang.System.out . println ( ( page - 1 ) ) ; bwRest . getRestClient ( ( page - 1 ) , "load" ) ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onLoadMore ( int vprbxfgskuioycpzvzwa , int iqpkejxktvaodkvldnav ) { java.lang.System.out . println ( ( vprbxfgskuioycpzvzwa - 1 ) ) ; bwRest . getRestClient ( ( vprbxfgskuioycpzvzwa - 1 ) , "load" ) ; return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onLoadMore ( int page ) { bwRest . getRestClient ( page , "load" ) ; return true ; }
× fix_prediction_after: @ java.lang.Override public boolean onLoadMore () { java.lang.System.out . println ( vprbxfgskuioycpzvzwa ) ; bwRest . getRestClient ( vprbxfgskuioycpzvzwa , "load" ) ; return true ; }

line_index: 1035
bug_before_refactoring: public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( originColumn ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + originColumn ) ) ; } return ret ; } <s> public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( originColumn ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + originColumn ) ) ; } return ret ; } <s> Pull hll derived column rewriting to planing phase (#511)  * pull hll derived column rewriting on planing phase  * bug fix
bug_after_refactoring: public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String coerlwhmdtmqyonaqouq ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( coerlwhmdtmqyonaqouq ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + coerlwhmdtmqyonaqouq ) ) ; } return ret ; } <s> public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String coerlwhmdtmqyonaqouq ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( coerlwhmdtmqyonaqouq ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + coerlwhmdtmqyonaqouq ) ) ; } return ret ; } <s> Pull hll derived column rewriting to planing phase (#511)  * pull hll derived column rewriting on planing phase  * bug fix
fix_before_refactoring: @ javax.annotation.Nullable public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { return _hllOriginToDerivedColumnMap . get ( originColumn ) ; }
fix_after_refactoring: @ javax.annotation.Nullable public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String coerlwhmdtmqyonaqouq ) { return _hllOriginToDerivedColumnMap . get ( coerlwhmdtmqyonaqouq ) ; }
× fix_prediction_before: public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String originColumn ) { return _hllOriginToDerivedColumnMap . get ( originColumn ) ; }
× fix_prediction_after: public java.lang.String getDerivedHllColumnFromOrigin ( java.lang.String coerlwhmdtmqyonaqouq ) { java.lang.String ret = _hllOriginToDerivedColumnMap . get ( coerlwhmdtmqyonaqouq ) ; if ( ret == null ) { throw new java.lang.IllegalArgumentException ( ( "Hll derived column does not exist for " + coerlwhmdtmqyonaqouq ) ) ; } return ret ; }

line_index: 1036
bug_before_refactoring: private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> Fix final field problem.
bug_after_refactoring: private void readObject ( fgylexprrkbuufrnmlpxqal java.io.ObjectInputStream gylexprrkbuufrnmlpxq ) throws java.io.IOException , java.lang.ClassNotFoundException { gylexprrkbuufrnmlpxq . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> private void readObject ( fgylexprrkbuufrnmlpxqal java.io.ObjectInputStream gylexprrkbuufrnmlpxq ) throws java.io.IOException , java.lang.ClassNotFoundException { gylexprrkbuufrnmlpxq . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } } <s> Fix final field problem.
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "static-method" ) private void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; }
fix_after_refactoring: @ java.lang.SuppressWarngylexprrkbuufrnmlpxqgs ( value = "static-method" ) private void readObject ( fgylexprrkbuufrnmlpxqal java.io.ObjectInputStream gylexprrkbuufrnmlpxq ) throws java.io.IOException , java.lang.ClassNotFoundException { gylexprrkbuufrnmlpxq . defaultReadObject () ; }
× fix_prediction_before: protected void readObject ( final java.io.ObjectInputStream in ) throws java.io.IOException , java.lang.ClassNotFoundException { in . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } }
× fix_prediction_after: private void readObject ( fgylexprrkbuufrnmlpxqal java.io.ObjectInputStream gylexprrkbuufrnmlpxq ) throws java.io.IOException { gylexprrkbuufrnmlpxq . defaultReadObject () ; if ( ( currentStepMutex ) == null ) { currentStepMutex = new java.lang.Object () ; } }

line_index: 1039
bug_before_refactoring: protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( this . owner ) == ( this . board . getFigure ( pieceX , pieceY ) . getOwner () ) ; } <s> protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( this . owner ) == ( this . board . getFigure ( pieceX , pieceY ) . getOwner () ) ; } <s> fix bug
bug_after_refactoring: protected boolean hasSameOwner ( int fqycayezomxxrmbnnasz , int pgjlbvrdugjnshddiygb ) { return ( this . owner ) == ( this . board . getFigure ( fqycayezomxxrmbnnasz , pgjlbvrdugjnshddiygb ) . getOwner () ) ; } <s> protected boolean hasSameOwner ( int fqycayezomxxrmbnnasz , int pgjlbvrdugjnshddiygb ) { return ( this . owner ) == ( this . board . getFigure ( fqycayezomxxrmbnnasz , pgjlbvrdugjnshddiygb ) . getOwner () ) ; } <s> fix bug
fix_before_refactoring: protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( owner ) == ( board . getFigure ( pieceX , pieceY ) . getOwner () ) ; }
fix_after_refactoring: protected boolean hasSameOwner ( int fqycayezomxxrmbnnasz , int pgjlbvrdugjnshddiygb ) { return ( owner ) == ( board . getFigure ( fqycayezomxxrmbnnasz , pgjlbvrdugjnshddiygb ) . getOwner () ) ; }
× fix_prediction_before: protected boolean hasSameOwner ( int pieceX , int pieceY ) { return ( this . owner ) == ( this . board . getFigure ( pieceX , pieceY ) . getOwner () ) ; }
× fix_prediction_after: protected boolean hasSameOwner ( int fqycayezomxxrmbnnasz , int pgjlbvrdugjnshddiygb ) { return ( this . owner ) == ( this . board . getFigure ( fqycayezomxxrmbnnasz , pgjlbvrdugjnshddiygb ) . getOwner () ) ; }

line_index: 1041
bug_before_refactoring: @ java.lang.Override public T set ( final int index , final T element ) { return null ; } <s> @ java.lang.Override public T set ( final int index , final T element ) { return null ; } <s> Fixed issue with processing new line and new file
bug_after_refactoring: @ java.lang.Override public T set ( final int ydjicogwgxubyvbuygso , final T hqmsomjfbfywnbpdfjtt ) { return null ; } <s> @ java.lang.Override public T set ( final int ydjicogwgxubyvbuygso , final T hqmsomjfbfywnbpdfjtt ) { return null ; } <s> Fixed issue with processing new line and new file
fix_before_refactoring: public java.util.Iterator < T > iterator () { return null ; }
fix_after_refactoring: public java.util.Iterator < T > iterator () { return null ; }
× fix_prediction_before: public void set ( final int index , final T element ) { this . index = index ; }
× fix_prediction_after: @ java.lang.Override public void set ( final int ydjicogwgxubyvbuygso , final T hqmsomjfbfywnbpdfjtt ) {}

line_index: 1042
bug_before_refactoring: public org.json.JSONObject get ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> public org.json.JSONObject get ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> fixed some dataTransfer bugs
bug_after_refactoring: public org.json.JSONObject get ( java.lang.String lxiabwtmbifmgkgldkcj ) { try { return remoteGet . send ( lxiabwtmbifmgkgldkcj , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> public org.json.JSONObject get ( java.lang.String lxiabwtmbifmgkgldkcj ) { try { return remoteGet . send ( lxiabwtmbifmgkgldkcj , null ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "WEB" , e . getMessage () ) ; } return null ; } <s> fixed some dataTransfer bugs
fix_before_refactoring: public java.lang.Object get ( java.lang.String link ) { try { return remoteGet . send ( link , null ) ; } catch ( java.lang.Exception e ) { return e ; } }
fix_after_refactoring: public java.lang.Object get ( java.lang.String lxiabwtmbifmgkgldkcj ) { try { return remoteGet . send ( lxiabwtmbifmgkgldkcj , null ) ; } catch ( java.lang.Exception e ) { return e ; } }
× fix_prediction_before: public org.json.JSONObject get ( java.lang.String link ) throws java.lang.Exception { return remoteGet . send ( link , null ) ; }
× fix_prediction_after: public org.json.JSONObject get ( java.lang.String lxiabwtmbifmgkgldkcj ) throws java.lang.Exception { return remoteGet . send ( lxiabwtmbifmgkgldkcj , null ) ; }

line_index: 1045
bug_before_refactoring: public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> public mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; } <s> Bug fix
bug_after_refactoring: ampppgxvktisvdxgbmlwublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; } <s> ampppgxvktisvdxgbmlwublic mainPackage.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; } <s> Bug fix
fix_before_refactoring: public java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; return listPlayers ; }
fix_after_refactoring: ampppgxvktisvdxgbmlwublic java.util.ArrayList < mainPackage.Player > removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; return listPlayers ; }
× fix_prediction_before: public void removePlayerFromList ( mainPackage.Player p ) { listPlayers . remove ( p ) ; }
× fix_prediction_after: public void removePlayerFromList ( mainPackage.Player ampppgxvktisvdxgbmlw ) { listPlayers . remove ( ampppgxvktisvdxgbmlw ) ; }

line_index: 1047
bug_before_refactoring: void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { cgModelRoot = newRoot . clone () ; } <s> void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { cgModelRoot = newRoot . clone () ; } <s> bugfix: NPE in setCgmRoot() while creating a checkpoint
bug_after_refactoring: void setCgmRoot ( com.jme3.scene.Spatial eohjededajdrxvxktkkk ) { cgModelRoot = eohjededajdrxvxktkkk . clone () ; } <s> void setCgmRoot ( com.jme3.scene.Spatial eohjededajdrxvxktkkk ) { cgModelRoot = eohjededajdrxvxktkkk . clone () ; } <s> bugfix: NPE in setCgmRoot() while creating a checkpoint
fix_before_refactoring: void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { if ( newRoot == null ) { cgModelRoot = null ; } else { cgModelRoot = newRoot . clone () ; } }
fix_after_refactoring: void setCgmRoot ( com.jme3.scene.Spatial eohjededajdrxvxktkkk ) { if ( eohjededajdrxvxktkkk == null ) { cgModelRoot = null ; } else { cgModelRoot = eohjededajdrxvxktkkk . clone () ; } }
× fix_prediction_before: void setCgmRoot ( com.jme3.scene.Spatial newRoot ) { if ( newRoot != null ) { cgModelRoot = newRoot . clone () ; } }
× fix_prediction_after: void setCgmRoot ( com.jme3.scene.Spatial eohjedajdrxvxktkkk ) { if ( ( cgModelRoot ) == null ) { cgModelRoot = eohjedajdrxvxktkkk . clone () ; } }

line_index: 1048
bug_before_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ; <s> @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ; <s> Fixed error in implementation
bug_after_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > ngvdeviwlpjbqwzubhrd ) ; <s> @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > ngvdeviwlpjbqwzubhrd ) ; <s> Fixed error in implementation
fix_before_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.Path ( value = "name" ) java.lang.String name , @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.Path ( value = "name" ) java.lang.String name , @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > ngvdeviwlpjbqwzubhrd ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = "{name}/count" ) count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > query ) {}
× fix_prediction_after: @ retrofit2.http.GET ( value = "{name}/count" ) retrofit2.Call < com.onehilltech.httpres.retrofit.Resource > count ( @ retrofit2.http.QueryMap java.util.Map < java.lang.String , java.lang.Object > ngvdeviwlpjbqwzubhrd ) {}

line_index: 1049
bug_before_refactoring: @ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { for ( com.nmakademija.nmaakademija.entity.Section section : sections ) if ( ( section . getId () ) == i ) return section . getSupervisor () ; return null ; } <s> @ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { for ( com.nmakademija.nmaakademija.entity.Section section : sections ) if ( ( section . getId () ) == i ) return section . getSupervisor () ; return null ; } <s> fix bug in usersAdapter
bug_after_refactoring: @ androyokthovvfxxasvpsrbojd.support.annotatyokthovvfxxasvpsrbojon.Nullable publyokthovvfxxasvpsrbojc java.lang.Stryokthovvfxxasvpsrbojng getSupervyokthovvfxxasvpsrbojsor ( yokthovvfxxasvpsrbojnt yokthovvfxxasvpsrboj ) { for ( com.nmakademyokthovvfxxasvpsrbojja.nmaakademyokthovvfxxasvpsrbojja.entyokthovvfxxasvpsrbojty.Sectyokthovvfxxasvpsrbojon sectyokthovvfxxasvpsrbojon : sectyokthovvfxxasvpsrbojons ) yokthovvfxxasvpsrbojf ( ( sectyokthovvfxxasvpsrbojon . getId () ) == yokthovvfxxasvpsrboj ) return sectyokthovvfxxasvpsrbojon . getSupervyokthovvfxxasvpsrbojsor () ; return null ; } <s> @ androyokthovvfxxasvpsrbojd.support.annotatyokthovvfxxasvpsrbojon.Nullable publyokthovvfxxasvpsrbojc java.lang.Stryokthovvfxxasvpsrbojng getSupervyokthovvfxxasvpsrbojsor ( yokthovvfxxasvpsrbojnt yokthovvfxxasvpsrboj ) { for ( com.nmakademyokthovvfxxasvpsrbojja.nmaakademyokthovvfxxasvpsrbojja.entyokthovvfxxasvpsrbojty.Sectyokthovvfxxasvpsrbojon sectyokthovvfxxasvpsrbojon : sectyokthovvfxxasvpsrbojons ) yokthovvfxxasvpsrbojf ( ( sectyokthovvfxxasvpsrbojon . getId () ) == yokthovvfxxasvpsrboj ) return sectyokthovvfxxasvpsrbojon . getSupervyokthovvfxxasvpsrbojsor () ; return null ; } <s> fix bug in usersAdapter
fix_before_refactoring: @ android.support.annotation.Nullable public java.lang.String getSupervisor ( int i ) { i -- ; if ( ( i < ( sections.length ) ) && ( i >= 0 ) ) return sections [ i ] . getSupervisor () ; return null ; }
fix_after_refactoring: @ androyokthovvfxxasvpsrbojd.support.annotatyokthovvfxxasvpsrbojon.Nullable publyokthovvfxxasvpsrbojc java.lang.Stryokthovvfxxasvpsrbojng getSupervyokthovvfxxasvpsrbojsor ( yokthovvfxxasvpsrbojnt yokthovvfxxasvpsrboj ) { yokthovvfxxasvpsrboj -- ; yokthovvfxxasvpsrbojf ( ( yokthovvfxxasvpsrboj < ( sectyokthovvfxxasvpsrbojons.length ) ) && ( yokthovvfxxasvpsrboj >= 0 ) ) return sectyokthovvfxxasvpsrbojons [ yokthovvfxxasvpsrboj ] . getSupervyokthovvfxxasvpsrbojsor () ; return null ; }
× fix_prediction_before: @ android.support.annotation.Nullable public java.lang.String getSupervisor () { for ( com.nmakademija.nmaakademija.entity.Section section : sections ) if ( ( section . getId () ) == i ) return section . getSupervisor () ; return null ; }
× fix_prediction_after: @ androyokthovvfxxasvpsrbojd.support.annotatyokthovvfxxasvpsrbojon.Nullable publyokthovvfxxasvpsrbojc java.lang.Stryokthovvfxxasvpsrbojng getSupervyokthovvfxxasvpsrbojf ( yokthovvfxxasvpsrbojnt yokthovvfxxasvpsrboj ) { return null ; }

line_index: 1050
bug_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> Fix 2 bugs in programme events filtering  1. When there are no search categories in the settings  "other" events    were not displayed 2. When rotating the screen the events were filtered according to the    initial filtering although the filters were still selected in the UI
bug_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int niytrghfgeftmzbqssfw ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( niytrghfgeftmzbqssfw ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int niytrghfgeftmzbqssfw ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( niytrghfgeftmzbqssfw ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; } <s> Fix 2 bugs in programme events filtering  1. When there are no search categories in the settings  "other" events    were not displayed 2. When rotating the screen the events were filtered according to the    initial filtering although the filters were still selected in the UI
fix_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling ) ; }
fix_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int niytrghfgeftmzbqssfw ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( niytrghfgeftmzbqssfw ) , delayScrolling ) ; }
× fix_prediction_before: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( position ) , delayScrolling , ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ; }
× fix_prediction_after: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int longitude ) { return amai.org.conventions.events.activities.ProgrammeDayFragment . newInstance ( getDate ( longitude ) , delayScrolling , new amai.org.conventions.map.AggregatedEventTypes () . get ( ConventionsApplication.settings . getProgrammeSearchCategories ( getApplicationContext () ) ) ) ; }

line_index: 1051
bug_before_refactoring: private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; } <s> private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; } <s> IDE-1412 - resolve dynamic page creation issues with FEI device wizards
bug_after_refactoring: private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage rzvgvkpiplntozcunmbm ) { org.eclipse.jface.wizard.IWizard rzvgvkpiplntozcunmbmWizard = rzvgvkpiplntozcunmbm . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = rzvgvkpiplntozcunmbmWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( rzvgvkpiplntozcunmbm ) ; } <s> private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage rzvgvkpiplntozcunmbm ) { org.eclipse.jface.wizard.IWizard rzvgvkpiplntozcunmbmWizard = rzvgvkpiplntozcunmbm . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = rzvgvkpiplntozcunmbmWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( rzvgvkpiplntozcunmbm ) ; } <s> IDE-1412 - resolve dynamic page creation issues with FEI device wizards
fix_before_refactoring: protected int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { org.eclipse.jface.wizard.IWizard pageWizard = page . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = pageWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( page ) ; }
fix_after_refactoring: protected int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage rzvgvkpiplntozcunmbm ) { org.eclipse.jface.wizard.IWizard rzvgvkpiplntozcunmbmWizard = rzvgvkpiplntozcunmbm . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = rzvgvkpiplntozcunmbmWizard . getPages () ; java.util.List < org.eclipse.jface.wizard.IWizardPage > arrayOfPages = java.util.Arrays . asList ( allPages ) ; return arrayOfPages . indexOf ( rzvgvkpiplntozcunmbm ) ; }
× fix_prediction_before: private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage page ) { return page . getWizard () . indexOf ( page ) ; }
× fix_prediction_after: private int getWizardPageIndex ( org.eclipse.jface.wizard.IWizardPage rzvgvkpiplntozcunmbm ) { org.eclipse.jface.wizard.IWizard rzvgvkpiplntozcunmbmWizard = rzvgvkpiplntozcunmbm . getWizard () ; org.eclipse.jface.wizard.IWizardPage [] allPages = rzvgvkpiplntozcunmbmWizard . getPages () ; return java.util.Arrays . asList ( allPages ) . indexOf ( rzvgvkpiplntozcunmbm ) ; }

line_index: 1053
bug_before_refactoring: @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> bugfix when removing events from recurrent events
bug_after_refactoring: @ java.lang.Override public void qjxqtacgvrhgihabdmxsLoaded ( org.openhab.io.caldav.CalDavEvent qjxqtacgvrhgihabdmxs ) { this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> @ java.lang.Override public void qjxqtacgvrhgihabdmxsLoaded ( org.openhab.io.caldav.CalDavEvent qjxqtacgvrhgihabdmxs ) { this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; } <s> bugfix when removing events from recurrent events
fix_before_refactoring: @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN , true ) ; this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END , true ) ; }
fix_after_refactoring: @ java.lang.Override public void qjxqtacgvrhgihabdmxsLoaded ( org.openhab.io.caldav.CalDavEvent qjxqtacgvrhgihabdmxs ) { this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN , true ) ; this . handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END , true ) ; }
× fix_prediction_before: @ java.lang.Override public void eventLoaded ( org.openhab.io.caldav.CalDavEvent event ) { this . handleForEventMap ( event , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; }
× fix_prediction_after: @ java.lang.Override public void qjxqtacgvrhgihabdmxsLoaded ( org.openhab.io.caldav.CalDavEvent qjxqtacgvrhgihabdmxs ) { handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_BEGIN ) ; handleForEventMap ( qjxqtacgvrhgihabdmxs , org.openhab.binding.caldav_command.internal.CalDavBinding.SCOPE_END ) ; }

line_index: 1054
bug_before_refactoring: private static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> private static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> Fix bugs in path extension computation
bug_after_refactoring: private static boolean hasVMSuffix ( java.lang.String jxepfkwezhvkswajtmim ) { return jxepfkwezhvkswajtmim . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> private static boolean hasVMSuffix ( java.lang.String jxepfkwezhvkswajtmim ) { return jxepfkwezhvkswajtmim . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; } <s> Fix bugs in path extension computation
fix_before_refactoring: private static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ; }
fix_after_refactoring: private static boolean hasVMSuffix ( java.lang.String jxepfkwezhvkswajtmim ) { return jxepfkwezhvkswajtmim . endsWith ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ; }
× fix_prediction_before: public static boolean hasVMSuffix ( java.lang.String path ) { return path . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; }
× fix_prediction_after: public static boolean hasVMSuffix ( java.lang.String jxepfkwezhvkswajtmim ) { return jxepfkwezhvkswajtmim . endsWith ( ( "." + ( com.computer.nand2tetris.ch07.projects.vm.IOPathsGenerator.VM_FILE_EXTENSION ) ) ) ; }

line_index: 1055
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> FXHistoryWindow is Now the Default History Window  Fixed rendering bug potentially caused by Swing vs FX thread issues.
bug_after_refactoring: public void actionPerformed ( java.awt.event.ActionEvent tfzwlxsqwzmocqtqzthv ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent tfzwlxsqwzmocqtqzthv ) { frontend.HistoryWindow hist = new frontend.HistoryWindow ( tasker ) ; } <s> FXHistoryWindow is Now the Default History Window  Fixed rendering bug potentially caused by Swing vs FX thread issues.
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) {}
fix_after_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent tfzwlxsqwzmocqtqzthv ) {}
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent arg0 ) {}
× fix_prediction_after: public void actionPerformed ( java.awt.event.ActionEvent tfzwlxsqwzmocqtqzthv ) {}

line_index: 1056
bug_before_refactoring: private void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> private void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> Issue #5022: Fixed pitest coverage
bug_after_refactoring: private void setOutputStream ( java.io.OutputStream kicxikgngjacenlbjddf ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( kicxikgngjacenlbjddf , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> private void setOutputStream ( java.io.OutputStream kicxikgngjacenlbjddf ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( kicxikgngjacenlbjddf , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; } <s> Issue #5022: Fixed pitest coverage
fix_before_refactoring: public void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; }
fix_after_refactoring: public void setOutputStream ( java.io.OutputStream kicxikgngjacenlbjddf ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( kicxikgngjacenlbjddf , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; }
× fix_prediction_before: protected void setOutputStream ( java.io.OutputStream outputStream ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; }
× fix_prediction_after: protected void setOutputStream ( java.io.OutputStream kicxikgngjacenlbjddf ) { final java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter ( kicxikgngjacenlbjddf , java.nio.charset.StandardCharsets.UTF_8 ) ; writer = new java.io.PrintWriter ( osw ) ; }

line_index: 1057
bug_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; } <s> Try to fix bug
bug_after_refactoring: public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( sibiurgrutljoyphclqw ) ) != null ; } <s> public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( sibiurgrutljoyphclqw ) ) != null ; } <s> Try to fix bug
fix_before_refactoring: public static boolean hasAccessToken ( android.content.Context context ) { return true ; }
fix_after_refactoring: public static boolean hasAccessToken ( android.content.Context sibiurgrutljoyphclqw ) { return true ; }
× fix_prediction_before: public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context , true ) ) != null ; }
× fix_prediction_after: public static boolean hasAccessToken ( android.content.Context context ) { return ( com.example.takeshi.tthtwitter.TwitterService . loadAccessToken ( context ) ) != null ; }

line_index: 1060
bug_before_refactoring: @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName , false ) ; } <s> @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName , false ) ; } <s> Fix some bugs
bug_after_refactoring: @ java.lang.Override public void begin ( java.lang.String uiwljpxqvlqjcfdalxba ) { controller . playMusic ( uiwljpxqvlqjcfdalxba , false ) ; } <s> @ java.lang.Override public void begin ( java.lang.String uiwljpxqvlqjcfdalxba ) { controller . playMusic ( uiwljpxqvlqjcfdalxba , false ) ; } <s> Fix some bugs
fix_before_refactoring: @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName ) ; }
fix_after_refactoring: @ java.lang.Override public void begin ( java.lang.String uiwljpxqvlqjcfdalxba ) { controller . playMusic ( uiwljpxqvlqjcfdalxba ) ; }
× fix_prediction_before: @ java.lang.Override public void begin ( java.lang.String mediaName ) { controller . playMusic ( mediaName , true ) ; }
× fix_prediction_after: public void begin ( java.lang.String uiwljpxqvlqjcfdalxba ) { controller . playMusic ( uiwljpxqvlqjcfdalxba , true ) ; }

line_index: 1061
bug_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = insert ( root , p , new edu.princeton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = insert ( root , p , new edu.princeton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> fixed timing tests issues  mainly insert() and nearest()
bug_after_refactoring: lrtwzhngwnlniklhwkfuublic void insert ( edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.Point2D lrtwzhngwnlniklhwkfu ) { if ( lrtwzhngwnlniklhwkfu == null ) throw new java.lang.NullPointerExcelrtwzhngwnlniklhwkfution () ; root = insert ( root , lrtwzhngwnlniklhwkfu , new edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> lrtwzhngwnlniklhwkfuublic void insert ( edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.Point2D lrtwzhngwnlniklhwkfu ) { if ( lrtwzhngwnlniklhwkfu == null ) throw new java.lang.NullPointerExcelrtwzhngwnlniklhwkfution () ; root = insert ( root , lrtwzhngwnlniklhwkfu , new edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; } <s> fixed timing tests issues  mainly insert() and nearest()
fix_before_refactoring: public void insert ( edu.princeton.cs.algs4.Point2D p ) { if ( p == null ) throw new java.lang.NullPointerException () ; root = insert ( root , p , 0.0 , 0.0 , 1.0 , 1.0 , true ) ; }
fix_after_refactoring: lrtwzhngwnlniklhwkfuublic void insert ( edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.Point2D lrtwzhngwnlniklhwkfu ) { if ( lrtwzhngwnlniklhwkfu == null ) throw new java.lang.NullPointerExcelrtwzhngwnlniklhwkfution () ; root = insert ( root , lrtwzhngwnlniklhwkfu , 0.0 , 0.0 , 1.0 , 1.0 , true ) ; }
× fix_prediction_before: public void insert ( edu.princeton.cs.algs4.Point2D p ) { root = insert ( root , p , new edu.princeton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; }
× fix_prediction_after: lrtwzhngwnlniklhwkfuublic void insert ( edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.Point2D lrtwzhngwnlniklhwkfu ) { root = insert ( root , lrtwzhngwnlniklhwkfu , new edu.lrtwzhngwnlniklhwkfurinceton.cs.algs4.RectHV ( 0.0 , 0.0 , 1.0 , 1.0 ) , true ) ; }

line_index: 1064
bug_before_refactoring: public boolean hasWon ( int numberGuessedCorrectly ) { return numberGuessedCorrectly == 4 ; } <s> public boolean hasWon ( int numberGuessedCorrectly ) { return numberGuessedCorrectly == 4 ; } <s> fixed checking answer issues with the number count
bug_after_refactoring: public boolean hasWon ( int dwoabffbclconqcttksj ) { return dwoabffbclconqcttksj == 4 ; } <s> public boolean hasWon ( int dwoabffbclconqcttksj ) { return dwoabffbclconqcttksj == 4 ; } <s> fixed checking answer issues with the number count
fix_before_refactoring: public boolean hasWon () { return ( numberGuessedCorrectly ) == 4 ; }
fix_after_refactoring: public boolean hasWon () { return ( dwoabffbclconqcttksj ) == 4 ; }
× fix_prediction_before: public boolean hasWon ( int numberGuessedCorrectly ) { return numberGuessedCorrectly >= 4 ; }
× fix_prediction_after: public boolean hasWon ( int dwoabffbclconqcttksj ) { return dwoabffbclconqcttksj >= 4 ; }

line_index: 1067
bug_before_refactoring: public void visitFrom ( int side ) { java.lang.System.out . print ( ( ( "From this cell: break " + side ) + "\n" ) ) ; walls [ side ] = 0 ; update () ; } <s> public void visitFrom ( int side ) { java.lang.System.out . print ( ( ( "From this cell: break " + side ) + "\n" ) ) ; walls [ side ] = 0 ; update () ; } <s> - Bug fixes.  - Some variables renamed.
bug_after_refactoring: public void visitFrom ( int bqqvtyokwzjdysqaxaak ) { java.lang.System.out . print ( ( ( "From this cell: break " + bqqvtyokwzjdysqaxaak ) + "\n" ) ) ; walls [ bqqvtyokwzjdysqaxaak ] = 0 ; update () ; } <s> public void visitFrom ( int bqqvtyokwzjdysqaxaak ) { java.lang.System.out . print ( ( ( "From this cell: break " + bqqvtyokwzjdysqaxaak ) + "\n" ) ) ; walls [ bqqvtyokwzjdysqaxaak ] = 0 ; update () ; } <s> - Bug fixes.  - Some variables renamed.
fix_before_refactoring: void visitFrom ( int side ) { walls [ side ] = 0 ; update () ; }
fix_after_refactoring: void visitFrom ( int bqqvtyokwzjdysqaxaak ) { walls [ bqqvtyokwzjdysqaxaak ] = 0 ; update () ; }
× fix_prediction_before: public void visitFrom ( int side ) { walls [ side ] = 0 ; update () ; }
× fix_prediction_after: public void visitFrom ( int pulltyokwzjdysqaxaak ) { java.lang.System.out . print ( ( ( "From this cell: break " + pulltyokwzjdysqaxaak ) + "\n" ) ) ; walls [ pulltyokwzjdysqaxaak ] = 0 ; update () ; }

line_index: 1068
bug_before_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { return automaton . toString () . equals ( other.automaton . toString () ) ; } <s> public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { return automaton . toString () . equals ( other.automaton . toString () ) ; } <s> added a constraint to lessorequal that might fix an non-existent bug; #YOLO
bug_after_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState vnxassogvxtehgeqlewt ) { return automaton . toString () . equals ( vnxassogvxtehgeqlewt.automaton . toString () ) ; } <s> public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState vnxassogvxtehgeqlewt ) { return automaton . toString () . equals ( vnxassogvxtehgeqlewt.automaton . toString () ) ; } <s> added a constraint to lessorequal that might fix an non-existent bug; #YOLO
fix_before_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState other ) { if ( ( handle ) == null ) { return true ; } else { return automaton . toString () . equals ( other.automaton . toString () ) ; } }
fix_after_refactoring: public boolean isLessOrEqual ( org.sosy_lab.cpachecker.cpa.specinference.SpecInferenceState vnxassogvxtehgeqlewt ) { if ( ( handle ) == null ) { return true ; } else { return automaton . toString () . equals ( vnxassogvxtehgeqlewt.automaton . toString () ) ; } }
× fix_prediction_before: public boolean isLessOrEqual ( java.lang.String other ) { return automaton . toString () . equals ( other.automaton . toString () ) ; }
× fix_prediction_after: public boolean isLessOrEqual ( java.lang.String vnxassogvxtehgeqlewt ) { return automaton . toString () . equals ( vnxassogvxtehgeqlewt.automaton . toString () ) ; }

line_index: 1069
bug_before_refactoring: @ java.lang.Override public void EventIDHolder ( int id ) { receivedEventID = id ; } <s> @ java.lang.Override public void EventIDHolder ( int id ) { receivedEventID = id ; } <s> Interface bug fixed that prevented from correct eventID passed  - Need to fix contentValue errors
bug_after_refactoring: @ java.lang.Overrzuyeqfddymyvrpyutdzxe public vozuyeqfddymyvrpyutdzx EventIDHolder ( int zuyeqfddymyvrpyutdzx ) { receivedEventID = zuyeqfddymyvrpyutdzx ; } <s> @ java.lang.Overrzuyeqfddymyvrpyutdzxe public vozuyeqfddymyvrpyutdzx EventIDHolder ( int zuyeqfddymyvrpyutdzx ) { receivedEventID = zuyeqfddymyvrpyutdzx ; } <s> Interface bug fixed that prevented from correct eventID passed  - Need to fix contentValue errors
fix_before_refactoring: @ java.lang.Override public void EventIDHolder ( java.lang.String id ) { receivedEventID = java.lang.Integer . parseInt ( id ) ; }
fix_after_refactoring: @ java.lang.Overrzuyeqfddymyvrpyutdzxe public vozuyeqfddymyvrpyutdzx EventIDHolder ( java.lang.String zuyeqfddymyvrpyutdzx ) { receivedEventID = java.lang.Integer . parseInt ( zuyeqfddymyvrpyutdzx ) ; }
× fix_prediction_before: @ java.lang.Override public void EventIDHolder ( int id ) { receivedEventID = id ; }
× fix_prediction_after: @ java.lang.Overrzuyeqfddymyvrpyutdzxe public vozuyeqfddymyvrpyutdzx EventIDHolder () { receivedEventID = zuyeqfddymyvrpyutdzx ; }

line_index: 1070
bug_before_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ; <s> Fixed issue #4273
bug_after_refactoring: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ; <s> public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ; <s> Fixed issue #4273
fix_before_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
fix_after_refactoring: java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ;
× fix_prediction_before: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . fields ) ;
× fix_prediction_after: public java.util.Set < com.orientechnologies.orient.core.index.OIndex < ? > > getClassInvolvedIndexes ( java.lang.String . . . pdrqleglqzlzmmbemlmt ) ;

line_index: 1075
bug_before_refactoring: private boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> private boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> shah recursive problem fixed
bug_after_refactoring: private boolean isKingInSet ( Game.Desk ozchfefdnjwqrthjxwyi , Game.Colour boxzejolwnkhinartace , java.util.HashSet < Game.Position > fpinauhetylnhsbtagvy ) { for ( Game.Position pos : fpinauhetylnhsbtagvy ) { if ( ( ozchfefdnjwqrthjxwyi . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> private boolean isKingInSet ( Game.Desk ozchfefdnjwqrthjxwyi , Game.Colour boxzejolwnkhinartace , java.util.HashSet < Game.Position > fpinauhetylnhsbtagvy ) { for ( Game.Position pos : fpinauhetylnhsbtagvy ) { if ( ( ozchfefdnjwqrthjxwyi . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } <s> shah recursive problem fixed
fix_before_refactoring: public boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; }
fix_after_refactoring: public boolean isKingInSet ( Game.Desk ozchfefdnjwqrthjxwyi , Game.Colour boxzejolwnkhinartace , java.util.HashSet < Game.Position > fpinauhetylnhsbtagvy ) { for ( Game.Position pos : fpinauhetylnhsbtagvy ) { if ( ( ozchfefdnjwqrthjxwyi . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; }
× fix_prediction_before: protected boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; }
× fix_prediction_after: protected boolean isKingInSet ( Game.Desk ozchfefdnjwqrthjxwyi , Game.Colour boxzejolwnkhinartace , java.util.HashSet < Game.Position > fpinauhetylnhsbtagvy ) { for ( Game.Position pos : fpinauhetylnhsbtagvy ) { if ( ( ozchfefdnjwqrthjxwyi . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; }

line_index: 1076
bug_before_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { if ( ( item . getItemId () ) == ( R.id.action_refresh ) ) { fetchWCList () ; } return true ; } <s> @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { if ( ( item . getItemId () ) == ( R.id.action_refresh ) ) { fetchWCList () ; } return true ; } <s> remove unused menu items & fix swipe issue
bug_after_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem udioutvbcafamrlsqtty ) { if ( ( udioutvbcafamrlsqtty . getItemId () ) == ( R.id.action_refresh ) ) { fetchWCList () ; } return true ; } <s> @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem udioutvbcafamrlsqtty ) { if ( ( udioutvbcafamrlsqtty . getItemId () ) == ( R.id.action_refresh ) ) { fetchWCList () ; } return true ; } <s> remove unused menu items & fix swipe issue
fix_before_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem udioutvbcafamrlsqtty ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { fetchWCList () ; return true ; }
× fix_prediction_after: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { if ( ( item . getItemId () ) == ( R.id.action_refresh ) ) { fetchWCList () ; } return true ; }

line_index: 1077
bug_before_refactoring: public java.lang.String getEffectEffect ( java.lang.String reward ) { java.lang.String str = getData ( reward ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> public java.lang.String getEffectEffect ( java.lang.String reward ) { java.lang.String str = getData ( reward ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> Update version number  bug fixes
bug_after_refactoring: public java.lang.String getEffectEffect ( java.lang.String urmkjknioqlsjdebuzku ) { java.lang.String str = getData ( urmkjknioqlsjdebuzku ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> public java.lang.String getEffectEffect ( java.lang.String urmkjknioqlsjdebuzku ) { java.lang.String str = getData ( urmkjknioqlsjdebuzku ) . getString ( "Effect.Effect" ) ; if ( str != null ) { return str ; } return "" ; } <s> Update version number  bug fixes
fix_before_refactoring: public java.lang.String getEffectEffect ( java.lang.String reward ) { return getData ( reward ) . getString ( "Effect.Effect" , "" ) ; }
fix_after_refactoring: public java.lang.String getEffectEffect ( java.lang.String urmkjknioqlsjdebuzku ) { return getData ( urmkjknioqlsjdebuzku ) . getString ( "Effect.Effect" , "" ) ; }
× fix_prediction_before: public java.lang.StringEffect ( java.lang.String reward ) { return getData ( reward ) . getString ( "Effect.Effect" , reward ) ; }
× fix_prediction_after: public java.lang.StringEffect ( java.lang.String urmkjknioqlsjdebuzku ) { return getData ( urmkjknioqlsjdebuzku ) . getString ( "Effect.Effect" ,Effect.Effect ) ; }

line_index: 1078
bug_before_refactoring: public static void setBlocked ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; } <s> public static void setBlocked ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; } <s> Version 3. Tester is working  algorithm is buggy. Will not determine values past neighboring nodes. Needs fixing.
bug_after_refactoring: public static void setBlocked ( int gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu , int njqtdneheexovktqvhsh ) { models.path.AStar.grid [ gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu ] [ njqtdneheexovktqvhsh ] = null ; } <s> public static void setBlocked ( int gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu , int njqtdneheexovktqvhsh ) { models.path.AStar.grid [ gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu ] [ njqtdneheexovktqvhsh ] = null ; } <s> Version 3. Tester is working  algorithm is buggy. Will not determine values past neighboring nodes. Needs fixing.
fix_before_refactoring: private static void setBlocked ( int x , int y ) { models.path.AStar.grid [ x ] [ y ] = null ; }
fix_after_refactoring: private static void setBlocked ( int gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu , int njqtdneheexovktqvhsh ) { models.path.AStar.grid [ gnqzzdnjqtdneheexovktqvhshgeexaqnzeohcu ] [ njqtdneheexovktqvhsh ] = null ; }
× fix_prediction_before: public static void setBlocked ( int y , int x ) { models.path.AStar.grid [ y ] [ x ] = null ; }
× fix_prediction_after: public static void setBlocked ( int gnqzzdnjqtdneheexovktqvhshgeexaq nzeohcu , int njqtdneheexovktqvhsh ) { models.path.AStar.grid [ gnqzzdnjqtdneheexovktqvhshgeexaq nzeohcu ] [ njqtdneheexovktqvhsh ] = null ; }

line_index: 1080
bug_before_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } <s> public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } <s> fix a bug of truncating virtual variable ID.
bug_after_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String pyloavagqbfgzuylsmhu ) { java.lang.String simpleID = pyloavagqbfgzuylsmhu . substring ( 0 , pyloavagqbfgzuylsmhu . indexOf ( ":" ) ) ; return simpleID ; } <s> public static java.lang.String truncateSimpleID ( java.lang.String pyloavagqbfgzuylsmhu ) { java.lang.String simpleID = pyloavagqbfgzuylsmhu . substring ( 0 , pyloavagqbfgzuylsmhu . indexOf ( ":" ) ) ; return simpleID ; } <s> fix a bug of truncating virtual variable ID.
fix_before_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { if ( completeVarID . contains ( ":" ) ) { java.lang.String simpleID = completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; return simpleID ; } else { return completeVarID ; } }
fix_after_refactoring: public static java.lang.String truncateSimpleID ( java.lang.String pyloavagqbfgzuylsmhu ) { if ( pyloavagqbfgzuylsmhu . contains ( ":" ) ) { java.lang.String simpleID = pyloavagqbfgzuylsmhu . substring ( 0 , pyloavagqbfgzuylsmhu . indexOf ( ":" ) ) ; return simpleID ; } else { return pyloavagqbfgzuylsmhu ; } }
× fix_prediction_before: public static java.lang.String truncateSimpleID ( java.lang.String completeVarID ) { if ( completeVarID . contains ( ":" ) ) { return completeVarID . substring ( 0 , completeVarID . indexOf ( ":" ) ) ; } else { return completeVarID ; } }
× fix_prediction_after: public static java.lang.String truncateSimpleID ( java.lang.String pyloavagqbfgzuylsmhu ) { if ( pyloavagqbfgzuylsmhu . contains ( ":" ) ) { return pyloavagqbfgzuylsmhu . substring ( 0 , pyloavagqbfgzuylsmhu . indexOf ( ":" ) ) ; } else { return pyloavagqbfgzuylsmhu ; } }

line_index: 1082
bug_before_refactoring: void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> void toArrayElement ( int level , java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; } <s> Fixed problem with a[0]=x  a[1]=y. But code is crap.
bug_after_refactoring: void toArrayElement ( int pqilzawakneatbcfoqui , java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; } <s> void toArrayElement ( int pqilzawakneatbcfoqui , java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; } <s> Fixed problem with a[0]=x  a[1]=y. But code is crap.
fix_before_refactoring: void toArrayElement ( java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex ) ; }
fix_after_refactoring: void toArrayElement ( java.lang.String ptnfkxwccnyzhyfxgwrg , int bvqyysdcuxafedgqyqmq ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , bvqyysdcuxafedgqyqmq ) ; }
× fix_prediction_before: void toArrayElement ( java.lang.String arrayName , int arrayIndex ) throws java.io.IOException { addEntity ( arrayName , arrayIndex , true ) ; }
× fix_prediction_after: void toArrayElement ( int eqilzawakneatbcfoqui , java.lang.String ptnfkxwccnyzhyfxgwrg ) throws java.io.IOException { addEntity ( ptnfkxwccnyzhyfxgwrg , aiqyysdcuxafedgqyqmq ) ; }

line_index: 1084
bug_before_refactoring: @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> Bug fix around life cycle management
bug_after_refactoring: @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.jyiqktjgzoyevoznmogh.AbstractDaemon jyiqktjgzoyevoznmogh ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.jyiqktjgzoyevoznmogh.AbstractDaemon jyiqktjgzoyevoznmogh ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; } } <s> Bug fix around life cycle management
fix_before_refactoring: @ java.lang.Override public synchronized void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; _currDaemonNode = null ; } }
fix_after_refactoring: @ java.lang.Override public synchronized void unregister ( com.dreameddeath.infrastructure.jyiqktjgzoyevoznmogh.AbstractDaemon jyiqktjgzoyevoznmogh ) throws java.lang.Exception { if ( ( _currDaemonNode ) != null ) { _currDaemonNode . close () ; _currDaemonNode = null ; } }
× fix_prediction_before: @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.daemon.AbstractDaemon daemon ) throws java.lang.Exception {}
× fix_prediction_after: @ java.lang.Override public void unregister ( com.dreameddeath.infrastructure.jyiqktjgzoyevozmmogh.AbstractDaemon jyiqktjgzoyevozmmogh ) throws java.lang.Exception {}

line_index: 1085
bug_before_refactoring: public static void main ( java.lang.String . . . args ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> public static void main ( java.lang.String . . . args ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> fixed compile error - new test failure
bug_after_refactoring: public static void main ( java.lang.String . . . qbhewqkizzvjabbmxjwx ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> public static void main ( java.lang.String . . . qbhewqkizzvjabbmxjwx ) { sandbox.error System ; out . println ( "Hello World!" ) ; } <s> fixed compile error - new test failure
fix_before_refactoring: public static void main ( java.lang.String . . . args ) { java.lang.System.out . println ( "Hello World!" ) ; }
fix_after_refactoring: public static void main ( java.lang.String . . . qbhewqkizzvjabbmxjwx ) { java.lang.System.out . println ( "Hello World!" ) ; }
× fix_prediction_before: public static void main ( java.lang.String . . . args ) { sandbox.error System ; }
× fix_prediction_after: public static void main ( java.lang.String . . . qbhewqkizzvjabbmxjwx ) {}

line_index: 1086
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
bug_after_refactoring: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; } } <s> @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; } } <s> fixed some issue with the multiselector
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ) ; }
fix_after_refactoring: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgerride public rlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgirtualfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.virtualfileexplorer.FolderObject ) ( v . getTag () ) ) ; }
× fix_prediction_after: @ jarlhznavxzzcjdtqpthkga.lang.Orlhznavxzzcjdtqpthkgoid onClick ( android.rlhznavxzzcjdtqpthkgiew.View rlhznavxzzcjdtqpthkg ) { if ( ! ( mMultiSelector . isSelectable () ) ) { folderInterface . openFolder ( ( ( com.example.abhilashmirji.rlhznavxzzcjdtqpthkgromfileexplorer.FolderObject ) ( rlhznavxzzcjdtqpthkg . getTag () ) ) ) ; } }

line_index: 1087
bug_before_refactoring: @ retrofit2.http.PUT ( value = "/chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token , @ retrofit2.http.Path ( value = "id" ) int id ) ; <s> @ retrofit2.http.PUT ( value = "/chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token , @ retrofit2.http.Path ( value = "id" ) int id ) ; <s> fixed paren profile chores  small bug in wishlist.
bug_after_refactoring: @ retrofit2.http.PUT ( value = "/chore/{crxhuikchoubvgynciec}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String zfumcuaefaowkenpsslo , @ retrofit2.http.Path ( value = "crxhuikchoubvgynciec" ) int crxhuikchoubvgynciec ) ; <s> @ retrofit2.http.PUT ( value = "/chore/{crxhuikchoubvgynciec}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String zfumcuaefaowkenpsslo , @ retrofit2.http.Path ( value = "crxhuikchoubvgynciec" ) int crxhuikchoubvgynciec ) ; <s> fixed paren profile chores  small bug in wishlist.
fix_before_refactoring: @ retrofit2.http.PUT ( value = "chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Path ( value = "id" ) int id , @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token ) ;
fix_after_refactoring: @ retrofit2.http.PUT ( value = "chore/{crxhuikchoubvgynciec}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Path ( value = "crxhuikchoubvgynciec" ) int crxhuikchoubvgynciec , @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String zfumcuaefaowkenpsslo ) ;
× fix_prediction_before: @ retrofit2.http.PUT ( value = "/chore/{id}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String token , @ retrofit2.http.Path ( value = "id" ) int id ) ;
× fix_prediction_after: @ retrofit2.http.PUT ( value = "/chore/{crxhuikchoubvgynciec}/deny" ) retrofit2.Call < com.theironyard.finalproject.representations.Chore > denyChore ( @ retrofit2.http.Header ( value = com.theironyard.finalproject.services.ParentChoreService.TOKEN_KEY ) java.lang.String wheelumcuaefaowkenpsslo , @ retrofit2.http.Path ( value = "crxhuikchoubvgynciec" ) int crxhuikchoubvgynciec ) ;

line_index: 1088
bug_before_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( note ) ; } <s> @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( note ) ; } <s> Solved some bugs in Login and createNote
bug_after_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note moegyqqazkjbvqbprhso ) { callback . onSucces ( note ) ; } <s> @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note moegyqqazkjbvqbprhso ) { callback . onSucces ( note ) ; } <s> Solved some bugs in Login and createNote
fix_before_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { callback . onSucces ( result ) ; }
fix_after_refactoring: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note moegyqqazkjbvqbprhso ) { callback . onSucces ( moegyqqazkjbvqbprhso ) ; }
× fix_prediction_before: @ java.lang.Override public void onSucces ( com.evernote.edam.type.Note result ) { if ( result != null ) { callback . onSucces ( note ) ; } }
× fix_prediction_after: @ java.lang.Override public void onSucces () { callback . onSucces ( note ) ; }

line_index: 1089
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
bug_after_refactoring: @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } <s> @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } <s> Merge pull request #6 from fRoSt13iT/master  fix issue #3: onItemClick() does not work
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
fix_after_refactoring: @ jaselfauxbxcvjgalbcrnua.lang.Oselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnu ) { if ( ( itemClickListener ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( adapter ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , view , position ) ; } }
× fix_prediction_after: @ jaselfauxbxcvjgalbcrnuerride public selfauxbxcvjgalbcrnuoid onClick ( android.selfauxbxcvjgalbcrnuiew.View selfauxbxcvjgalbcrnuiew ) { if ( ( adapter ) != null ) { itemClickListener . onItemClick ( adapter . getItem ( position ) , selfauxbxcvjgalbcrnuiew , position ) ; } }

line_index: 1090
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mInnerRadius = radius ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mInnerRadius = radius ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> add CircleInnerRadius property in Animator and fixed bug
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int pdcwtivjcuglgocgaquf ) { mInnerRadius = pdcwtivjcuglgocgaquf ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int pdcwtivjcuglgocgaquf ) { mInnerRadius = pdcwtivjcuglgocgaquf ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } <s> add CircleInnerRadius property in Animator and fixed bug
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { mRadius = radius ; invalidate () ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int pdcwtivjcuglgocgaquf ) { mRadius = pdcwtivjcuglgocgaquf ; invalidate () ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int radius ) { if ( radius >= 0 ) { mInnerRadius = radius ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unused" ) public void setCircleRadius ( int pdcwtivjcuglgocgaquf ) { if ( pdcwtivjcuglgocgaquf > 0 ) { mInnerRadius = pdcwtivjcuglgocgaquf ; mRadius = ( mInnerRadius ) + ( com.licrafter.tagview.utils.DipConvertUtils . dip2px ( getContext () , 4 ) ) ; invalidate () ; } }

line_index: 1091
bug_before_refactoring: void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ; <s> void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ; <s> 1.7.5-BETA.7.136  fixing bug with the “item” pinfo
bug_after_refactoring: void set ( com.comphenix.protocol.events.PacketContainer jrpcobltoluokdnpyysu , java.lang.Integer ctbsabqaehbhoxtfzhax , T dxfkjingfyhtjdcxbjsq ) ; <s> void set ( com.comphenix.protocol.events.PacketContainer jrpcobltoluokdnpyysu , java.lang.Integer ctbsabqaehbhoxtfzhax , T dxfkjingfyhtjdcxbjsq ) ; <s> 1.7.5-BETA.7.136  fixing bug with the “item” pinfo
fix_before_refactoring: public abstract void set ( com.comphenix.protocol.events.PacketContainer packet , java.lang.Integer index , T value ) ;
fix_after_refactoring: public abstract void set ( com.comphenix.protocol.events.PacketContainer jrpcobltoluokdnpyysu , java.lang.Integer ctbsabqaehbhoxtfzhax , T dxfkjingfyhtjdcxbjsq ) ;
× fix_prediction_before: void set ( com.comphenix.protocol.events.PacketContainer packet , int index , T value ) ;
× fix_prediction_after: void set ( com.comphenix.protocol.events.PacketContainer jrpcobltoluokdnpyysu , T dxfkjingfyhtjdcxbjsq ) ;

line_index: 1092
bug_before_refactoring: public void addLettersToRack ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; } <s> public void addLettersToRack ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; } <s> Now checks whether user's input is comprised of the letters on the rack. Also fixed a minor bug (changed the possible max coordinates).
bug_after_refactoring: public void addLettersToRack ( java.util.List iaitapnudhafpzcxarbe ) { playersRack . addAll ( iaitapnudhafpzcxarbe ) ; } <s> public void addLettersToRack ( java.util.List iaitapnudhafpzcxarbe ) { playersRack . addAll ( iaitapnudhafpzcxarbe ) ; } <s> Now checks whether user's input is comprised of the letters on the rack. Also fixed a minor bug (changed the possible max coordinates).
fix_before_refactoring: public java.util.ArrayList addLettersToRack ( java.util.List generatedRack ) { playersRack . addAll ( generatedRack ) ; return null ; }
fix_after_refactoring: public java.util.ArrayList addLettersToRack ( java.util.List iaitapnudhafpzcxarbe ) { playersRack . addAll ( iaitapnudhafpzcxarbe ) ; return null ; }
× fix_prediction_before: public void addLettersToRack ( java.util.List generatedRack ) { playersRack = new java.util.ArrayList <Rack > () ; playersRack . addAll ( generatedRack ) ; }
× fix_prediction_after: public void addLettersToRack ( java.util.List iaitapnudhafpzcxarbe ) { playersRack = new java.util.ArrayList <> () ; playersRack . addAll ( iaitapnudhafpzcxarbe ) ; }

line_index: 1093
bug_before_refactoring: public void setRange ( final java.lang.Long min , final java.lang.Long max ) { setRange ( min , max , null ) ; } <s> public void setRange ( final java.lang.Long min , final java.lang.Long max ) { setRange ( min , max , null ) ; } <s> Added Colors type. Minor bugfixes.
bug_after_refactoring: public void setRange ( final java.lang.Long rmdiwuktnztekwrpngko , final java.lang.Long jqosqrrkbdpzgygqavex ) { setRange ( rmdiwuktnztekwrpngko , jqosqrrkbdpzgygqavex , null ) ; } <s> public void setRange ( final java.lang.Long rmdiwuktnztekwrpngko , final java.lang.Long jqosqrrkbdpzgygqavex ) { setRange ( rmdiwuktnztekwrpngko , jqosqrrkbdpzgygqavex , null ) ; } <s> Added Colors type. Minor bugfixes.
fix_before_refactoring: public void setRange ( final java.lang.Double min , final java.lang.Double max ) { setRange ( min , max , null ) ; }
fix_after_refactoring: public void setRange ( final java.lang.Double rmdiwuktnztekwrpngko , final java.lang.Double jqosqrrkbdpzgygqavex ) { setRange ( rmdiwuktnztekwrpngko , jqosqrrkbdpzgygqavex , null ) ; }
× fix_prediction_before: public void setRange ( final java.lang.Long min , final java.lang.Long max ) { setRange ( min , max , null , null ) ; }
× fix_prediction_after: public void setRange ( final java.lang.Long rmdiwuktnztekwrpngko ) { setRange ( rmdiwuktnztekwrpngko ,jqosqrrkbdpzgygqavex , null ) ; }

line_index: 1094
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
bug_after_refactoring: @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public lgidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public lgidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; } <s> 【+】fix bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
fix_after_refactoring: @ jalgidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public lgidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View lgidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( this , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; }
× fix_prediction_after: @ jaluidyoehkrapqmepkbpma.lang.Olgidyoehkrapqmepkbpmerride public luidyoehkrapqmepkbpmoid onClick ( android.lgidyoehkrapqmepkbpmiew.View luidyoehkrapqmepkbpm ) { com.zhangwx.dynamicpermissionsrequest.permission.EasyPermissions . requestPermissions ( getParent () , R.mipmap.ic_launcher , "RequestLocationPermissions" , getString ( R.string.action_settings ) , PermissionUtils.REQUEST_CONTACTS_CODE , PermissionUtils.PERMISSIONS_CONTACTS_GROUP ) ; return; }

line_index: 1095
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent event ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
bug_after_refactoring: public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } <s> fixed rental and return duplicate response bug
fix_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
fix_after_refactoring: public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { if ( ( clientIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; } }
× fix_prediction_before: public void actionPerformed ( java.awt.event.ActionEvent event ) { clientIdChosen = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( clientIdChosen , panel , scroll ) ; }
× fix_prediction_after: public void actionPerformed ( java.awt.imofmcerozjkmxzfqibq.ActionEvent imofmcerozjkmxzfqibq ) { int id = java.lang.Integer . parseInt ( clientIdChosen ) ; clientController . deleteClient ( id , panel , scroll ) ; }

line_index: 1096
bug_before_refactoring: @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > tag ) {} <s> @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > tag ) {} <s> Fixed manager.neutron UT build error due to ovsdb change.  Change-Id: I60574a0da506d8376dc669a395d3a1c06c9d0906 Signed-off-by: Shigeru Yasuda <s-yasuda@da.jp.nec.com>
bug_after_refactoring: @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > uhkjjdeychroflpmhczy ) {} <s> @ java.lang.Override public void setTag ( java.util.Set < java.lang.Long > uhkjjdeychroflpmhczy ) {} <s> Fixed manager.neutron UT build error due to ovsdb change.  Change-Id: I60574a0da506d8376dc669a395d3a1c06c9d0906 Signed-off-by: Shigeru Yasuda <s-yasuda@da.jp.nec.com>
fix_before_refactoring: @ java.lang.Override public void setTag ( int tag ) {}
fix_after_refactoring: @ java.lang.Override public void setTag ( int uhkjjdeychroflpmhczy ) {}
× fix_prediction_before: @ java.lang.Override public void setTag ( java.lang.Long tag ) {}
× fix_prediction_after: @ java.lang.Override public void setTag ( java.lang.Long id ) {}

line_index: 1098
bug_before_refactoring: void registerStudentToCourse ( java.lang.Integer studentId , java.lang.Integer courseId , boolean force ) ; <s> void registerStudentToCourse ( java.lang.Integer studentId , java.lang.Integer courseId , boolean force ) ; <s> Server bugfixes
bug_after_refactoring: void registerStudentToCourse ( java.lang.Integer ajmhndjrusmblyivrdsg , java.lang.Integer czvvnnxpaxqrvklramuk , boolean ibhryhguyvxscnkqknkb ) ; <s> void registerStudentToCourse ( java.lang.Integer ajmhndjrusmblyivrdsg , java.lang.Integer czvvnnxpaxqrvklramuk , boolean ibhryhguyvxscnkqknkb ) ; <s> Server bugfixes
fix_before_refactoring: void registerStudentToCourse ( java.lang.Integer courseId , java.lang.Integer studentId , boolean force ) ;
fix_after_refactoring: void registerStudentToCourse ( java.lang.Integer czvvnnxpaxqrvklramuk , java.lang.Integer ajmhndjrusmblyivrdsg , boolean ibhryhguyvxscnkqknkb ) ;
× fix_prediction_before: void registerStudentToCourse ( java.lang.Integer studentId , java.lang.Integer courseId ) ;
× fix_prediction_after: void registerStudentToCourse ( java.lang.Integer ajmhndjrusmblyivrdsg , java.lang.Integer czmqnnxpaxqrvklramuk , boolean ibhryhguyvxscnkqknkb ) ;

line_index: 1099
bug_before_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } <s> Changed applicability of module using references  Application of a module to a dataset where the reference is the same data is not really useful  but possible. Solves problems in case of applying a Toolchain
bug_after_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return ( ( yqdbkfyembktcqzlbifl . getNext () ) != null ) || ( ( yqdbkfyembktcqzlbifl . getPrevious () ) != null ) ; } <s> @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return ( ( yqdbkfyembktcqzlbifl . getNext () ) != null ) || ( ( yqdbkfyembktcqzlbifl . getPrevious () ) != null ) ; } <s> Changed applicability of module using references  Application of a module to a dataset where the reference is the same data is not really useful  but possible. Solves problems in case of applying a Toolchain
fix_before_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return true ; }
fix_after_refactoring: @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfyembktcqzlbifl ) { return true ; }
× fix_prediction_before: @ java.lang.Override public boolean isApplicable ( model.AtomData data ) { return ( ( data . getId () ) != null ) || ( ( data . getNext () ) != null ) ; }
× fix_prediction_after: @ java.lang.Override public boolean isApplicable ( model.AtomData yqdbkfymbktcqzlbifl ) { return ( ( yqdbkfymbktcqzlbifl . getNext () ) != null ) || ( ( yqdbkfymbktcqzlbifl . getPrevious () ) != null ) ; }

line_index: 1101
bug_before_refactoring: @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> @ java.lang.Override public static void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; } <s> temp bug fixes
bug_after_refactoring: @ java.lang.Override public static void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; } <s> @ java.lang.Override public static void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; } <s> temp bug fixes
fix_before_refactoring: @ java.lang.Override public void remove ( com.managed.revenuetracker.to.Revenue revenue ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( revenue ) ; notifyDataSetChanged () ; super . remove ( revenue ) ; }
fix_after_refactoring: @ java.lang.Override public void remove ( com.managed.zjoiwcnabwicrqmytmbatracker.to.Revenue zjoiwcnabwicrqmytmba ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( zjoiwcnabwicrqmytmba ) ; notifyDataSetChanged () ; super . remove ( zjoiwcnabwicrqmytmba ) ; }
× fix_prediction_before: @ java.lang.Override public static void remove ( int position ) { com.managed.revenuetracker.adapter.RevListAdapter.revenues . remove ( position ) ; notifyDataSetChanged () ; super . remove ( position ) ; }
× fix_prediction_after: @ java.lang.Override public static void remove ( int position ) { com.managed.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbatracker.adapter.RevListAdapter.zjoiwcnabwicrqmytmbas . remove ( position ) ; notifyDataSetChanged () ; super . remove ( position ) ; }

line_index: 1104
bug_before_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit ) throws java.lang.Exception ; <s> public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit ) throws java.lang.Exception ; <s> fixed offset limit Bug
bug_after_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int kohkbogplsolgvvgdbzb , java.util.List < java.lang.Integer > cjwachhiymlztzsybjcp , java.lang.String gevsydqmfudsvyempjrx , java.lang.String iknqqpevlpjuqhgsewes , java.util.Date irtglgrlmayzguhkqlnf , java.util.Date mpqyjizyangzulernfkm , int ilipfmgscnebjrvyaefq , int sfrmsvfnuwkkepwwrrpj ) throws java.lang.Exception ; <s> public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int kohkbogplsolgvvgdbzb , java.util.List < java.lang.Integer > cjwachhiymlztzsybjcp , java.lang.String gevsydqmfudsvyempjrx , java.lang.String iknqqpevlpjuqhgsewes , java.util.Date irtglgrlmayzguhkqlnf , java.util.Date mpqyjizyangzulernfkm , int ilipfmgscnebjrvyaefq , int sfrmsvfnuwkkepwwrrpj ) throws java.lang.Exception ; <s> fixed offset limit Bug
fix_before_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet , int limit , int type ) throws java.lang.Exception ;
fix_after_refactoring: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int kohkbogplsolgvvgdbzb , java.util.List < java.lang.Integer > cjwachhiymlztzsybjcp , java.lang.String gevsydqmfudsvyempjrx , java.lang.String iknqqpevlpjuqhgsewes , java.util.Date irtglgrlmayzguhkqlnf , java.util.Date mpqyjizyangzulernfkm , int ilipfmgscnebjrvyaefq , int sfrmsvfnuwkkepwwrrpj , int type ) throws java.lang.Exception ;
× fix_prediction_before: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int userid , java.util.List < java.lang.Integer > serviceNameIds , java.lang.String reference , java.lang.String value , java.util.Date startTimeStamp , java.util.Date endTimeStamp , int offSet ) throws java.lang.Exception ;
× fix_prediction_after: public java.util.List < com.wso2telco.services.dep.sandbox.dao.model.domain.MessageLog > getResponseLists ( int kohkbogplsolgzzgdbzb , java.util.List < java.lang.Integer > tearDownwachhiymlztzsybjcp , java.lang.String gevsydqmfudsvyempjrx , java.lang.String iknqqpevlpjuqhgsewes , java.util.Date irtglgrlmayzguhkqlnf , java.util.Date mpqyjizyangzulernfkm , int ilipfmgscnebjrvyaefq , int sfrmsvfnuwkkepwwtvj ) throws java.lang.Exception ;

line_index: 1105
bug_before_refactoring: public void ID ( long id ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> public void ID ( long id ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> Fix document issues
bug_after_refactoring: public voymmcesbfzmfihejqddyv ID ( long ymmcesbfzmfihejqddyv ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> public voymmcesbfzmfihejqddyv ID ( long ymmcesbfzmfihejqddyv ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; } <s> Fix document issues
fix_before_refactoring: public void ID ( long id ) { this . id = id ; }
fix_after_refactoring: public voymmcesbfzmfihejqddyv ID ( long ymmcesbfzmfihejqddyv ) { this . ymmcesbfzmfihejqddyv = ymmcesbfzmfihejqddyv ; }
× fix_prediction_before: public void ID ( long id ) {}
× fix_prediction_after: public voymmcesbfzmfihejqddyv ID ( java.lang.String id ) { throw new java.lang.UnsupportedOperationException ( "The operation is not supported. This is the string representation of a document" ) ; }

line_index: 1107
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { if ( success ) { setFragment () ; } else {} } <s> @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { if ( success ) { setFragment () ; } else {} } <s> [Client] UI error fix
bug_after_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean fswikdiazynnvlzlmxyn ) { if ( fswikdiazynnvlzlmxyn ) { setFragment () ; } else {} } <s> @ java.lang.Override protected void onPostExecute ( java.lang.Boolean fswikdiazynnvlzlmxyn ) { if ( fswikdiazynnvlzlmxyn ) { setFragment () ; } else {} } <s> [Client] UI error fix
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { if ( success ) {} else {} }
fix_after_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean fswikdiazynnvlzlmxyn ) { if ( fswikdiazynnvlzlmxyn ) {} else {} }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) {}
× fix_prediction_after: @ java.lang.Override protected void onPostExecute ( java.lang.Boolean fswikdiazynnvlzlmxyn ) {}

line_index: 1108
bug_before_refactoring: private static void tabIndent ( int indent , java.io.PrintWriter out ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } } <s> private static void tabIndent ( int indent , java.io.PrintWriter out ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
bug_after_refactoring: private static void tabIndent ( int kjjbddthchtmdhpvhequ , java.io.PrintWriter sphqbfzdxumdpkouqvkd ) { kjjbddthchtmdhpvhequ = kjjbddthchtmdhpvhequ * 4 ; for ( int i = 0 ; i < kjjbddthchtmdhpvhequ ; ++ i ) { sphqbfzdxumdpkouqvkd . print ( " " ) ; } } <s> private static void tabIndent ( int kjjbddthchtmdhpvhequ , java.io.PrintWriter sphqbfzdxumdpkouqvkd ) { kjjbddthchtmdhpvhequ = kjjbddthchtmdhpvhequ * 4 ; for ( int i = 0 ; i < kjjbddthchtmdhpvhequ ; ++ i ) { sphqbfzdxumdpkouqvkd . print ( " " ) ; } } <s> Refactored "out"; enabled MoveAnalysis  This refactors out the parameter "out" used in many places unnecessarily.  This also enables MoveAnalysis which is now doing something sensible after a few bug fixes in WhileyCompiler.
fix_before_refactoring: private void tabIndent ( int indent ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } }
fix_after_refactoring: private void tabIndent ( int kjjbddthchtmdhpvhequ ) { kjjbddthchtmdhpvhequ = kjjbddthchtmdhpvhequ * 4 ; for ( int i = 0 ; i < kjjbddthchtmdhpvhequ ; ++ i ) { sphqbfzdxumdpkouqvkd . print ( " " ) ; } }
× fix_prediction_before: private static void tabIndent ( int indent , java.io.PrintWriter out ) { if ( indent > 0 ) { indent = indent * 4 ; for ( int i = 0 ; i < indent ; ++ i ) { out . print ( " " ) ; } } }
× fix_prediction_after: public static void tabIndent ( int kjjbddthchtmdhpvhequ , java.io.PrintWriter sphqbfzdxumdpkouqvkd ) { kjjbddthchtmdhpvhequ = kjjbddthchtmdhpvhequ * 4 ; for ( int i = 0 ; i < kjjbddthchtmdhpvhequ ; ++ i ) { sphqbfzdxumdpkouqvkd . print ( " " ) ; } }

line_index: 1111
bug_before_refactoring: public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> BugFix: modify elasticsearch tools errors
bug_after_refactoring: public volndlyczdizzgtsmntgej delete ( java.lang.String lndlyczdizzgtsmntgej ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , lndlyczdizzgtsmntgej ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> public volndlyczdizzgtsmntgej delete ( java.lang.String lndlyczdizzgtsmntgej ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , lndlyczdizzgtsmntgej ) . setOperationThreaded ( false ) . execute () . actionGet () ; } <s> BugFix: modify elasticsearch tools errors
fix_before_refactoring: @ java.lang.Deprecated public void delete ( java.lang.String id ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , id ) . execute () . actionGet () ; }
fix_after_refactoring: @ java.lang.Deprecated public volndlyczdizzgtsmntgej delete ( java.lang.String lndlyczdizzgtsmntgej ) throws java.lang.Exception { org.elasticsearch.action.delete.DeleteResponse response = client . prepareDelete ( "productindex" , "prindextype" , lndlyczdizzgtsmntgej ) . execute () . actionGet () ; }
× fix_prediction_before: public void delete ( java.lang.String id ) throws java.lang.Exception { client . prepareDelete ( "productindex" , "prindextype" , id ) . setOperationThreaded ( false ) . execute () . actionGet () ; }
× fix_prediction_after: public void delete ( java.lang.String lndlyczdizzgtsmntgej ) throws java.lang.Exception { client . prepareDelete ( "productindex" , "prindextype" , lndlyczdizzgtsmntgej ) . setOperationThreaded ( false ) . execute () . actionGet () ; }

line_index: 1112
bug_before_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters , boolean isGeneric ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters , isGeneric ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters , boolean isGeneric ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters , isGeneric ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> Fix Generic wildcards with "&" issues in methods
bug_after_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > bvmcrqvvpxlvycufrics , boolean xreunhmsrhcsajmfhxqy ) { if ( any ( bvmcrqvvpxlvycufrics ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( bvmcrqvvpxlvycufrics , xreunhmsrhcsajmfhxqy ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > bvmcrqvvpxlvycufrics , boolean xreunhmsrhcsajmfhxqy ) { if ( any ( bvmcrqvvpxlvycufrics ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( bvmcrqvvpxlvycufrics , xreunhmsrhcsajmfhxqy ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } } <s> Fix Generic wildcards with "&" issues in methods
fix_before_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters ) { if ( any ( typeParameters ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( typeParameters ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } }
fix_after_refactoring: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > bvmcrqvvpxlvycufrics ) { if ( any ( bvmcrqvvpxlvycufrics ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( bvmcrqvvpxlvycufrics ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } }
× fix_prediction_before: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > typeParameters , boolean isGeneric ) { writeTypeParameters ( typeParameters , isGeneric , false ) ; }
× fix_prediction_after: public void writeTypeParameters ( final java.lang.Iterable < com.strobel.decompiler.languages.java.TypeParameterDeclaration > bvmcrqzzpxlvycufrics , boolean xreunhmsrhcsajmfhxqy ) { if ( any ( bvmcrqzzpxlvycufrics ) ) { writeToken ( Roles.LEFT_CHEVRON ) ; writeCommaSeparatedList ( bvmcrqzzpxlvycufrics , xreunhmsrhcsajmfhxqy ) ; writeToken ( Roles.RIGHT_CHEVRON ) ; } }

line_index: 1114
bug_before_refactoring: public static boolean testisTo ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; return result ; } <s> public static boolean testisTo ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; return result ; } <s> minor driver bug fixes
bug_after_refactoring: public static boolean testisTo ( int djbzdklmoysozmztacyt , int iupkhmpjhychodxehxld ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( djbzdklmoysozmztacyt , iupkhmpjhychodxehxld ) ; return result ; } <s> public static boolean testisTo ( int djbzdklmoysozmztacyt , int iupkhmpjhychodxehxld ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( djbzdklmoysozmztacyt , iupkhmpjhychodxehxld ) ; return result ; } <s> minor driver bug fixes
fix_before_refactoring: public static void testisTo ( int heading , int radial ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( heading , radial ) ; java.lang.System.out . println ( result ) ; }
fix_after_refactoring: public static void testisTo ( int djbzdklmoysozmztacyt , int iupkhmpjhychodxehxld ) { com.vor.driver.VORCalculator vc = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = vc . isTo ( djbzdklmoysozmztacyt , iupkhmpjhychodxehxld ) ; java.lang.System.out . println ( result ) ; }
× fix_prediction_before: public static boolean isTo ( int heading , int radial ) { com.vor.driver.VORCalculator sdk = new com.vor.driver.VORCalculator ( new com.vor.driver.VOR () ) ; boolean result = sdk . isTo ( heading , radial ) ; return result ; }
× fix_prediction_after: public static boolean testisTo ( int djbzdklmoysozmztacyt , int iupkhmpjhychodxehxld ) { return com.vor.driver.VORCalculator . isTo ( djbzdklmoysozmztacyt , iupkhmpjhychodxehxld ) ; }

line_index: 1116
bug_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , b.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
bug_after_refactoring: purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , rdyoxsajudcowveufebe.length ) ; } <s> purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , rdyoxsajudcowveufebe.length ) ; } <s> Fixed bug in setLogLevel and made message reading trace outputs easier to read.
fix_before_refactoring: public static java.lang.String toHex ( byte [] b ) { return us.pfrommer.insteon.utils.Utils . toHex ( b , 0 , b.length ) ; }
fix_after_refactoring: purdyoxsajudcowveufebelic static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , 0 , rdyoxsajudcowveufebe.length ) ; }
× fix_prediction_before: public static java.lang.String toHex ( byte [] b ) { return toHex ( b , 0 , b.length ) ; }
× fix_prediction_after: public static java.lang.String toHex ( rdyoxsajudcowveufebeyte [] rdyoxsajudcowveufebe ) { return us.pfrommer.insteon.utils.Utils . toHex ( rdyoxsajudcowveufebe , rdyoxsajudcowveufebe.length ) ; }

line_index: 1117
bug_before_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , true , true ) ; } <s> @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , true , true ) ; } <s> DS-3080 Counting withdrawn items (bugfix)
bug_after_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context yrsjbydwdcvlekevqlmr ) throws java.sql.SQLException { return itemDAO . countItems ( yrsjbydwdcvlekevqlmr , true , true ) ; } <s> @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context yrsjbydwdcvlekevqlmr ) throws java.sql.SQLException { return itemDAO . countItems ( yrsjbydwdcvlekevqlmr , true , true ) ; } <s> DS-3080 Counting withdrawn items (bugfix)
fix_before_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , false , true ) ; }
fix_after_refactoring: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context yrsjbydwdcvlekevqlmr ) throws java.sql.SQLException { return itemDAO . countItems ( yrsjbydwdcvlekevqlmr , false , true ) ; }
× fix_prediction_before: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context context ) throws java.sql.SQLException { return itemDAO . countItems ( context , true ) ; }
× fix_prediction_after: @ java.lang.Override public int countWithdrawnItems ( org.dspace.core.Context yrsjbydwdcvlekevqlmr ) throws java.sql.SQLException { return itemDAO . countItems ( yrsjbydwdcvlekevqlmr , true ) ; }

line_index: 1118
bug_before_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.Long newSalesStaffID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ; <s> public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.Long newSalesStaffID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ; <s> Bugfixes
bug_after_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long zomqwmsmjdahywkcqwbi , java.lang.String idnowsvxskpsicpkpebw , java.util.Date lideobdmrfjaybjztbfh , java.lang.Long phsxdegfbtaygaouqzlq , java.lang.Long lqxqqexnckhilkoqghtm , java.lang.String qnvaiklrgqiavhsnmzwt , java.lang.Integer rvuulfypgpfrsnzoikse , java.lang.Boolean roklmrgwnjvtyupkpygw ) ; <s> public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long zomqwmsmjdahywkcqwbi , java.lang.String idnowsvxskpsicpkpebw , java.util.Date lideobdmrfjaybjztbfh , java.lang.Long phsxdegfbtaygaouqzlq , java.lang.Long lqxqqexnckhilkoqghtm , java.lang.String qnvaiklrgqiavhsnmzwt , java.lang.Integer rvuulfypgpfrsnzoikse , java.lang.Boolean roklmrgwnjvtyupkpygw ) ; <s> Bugfixes
fix_before_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ;
fix_after_refactoring: public EntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long zomqwmsmjdahywkcqwbi , java.lang.String idnowsvxskpsicpkpebw , java.util.Date lideobdmrfjaybjztbfh , java.lang.Long phsxdegfbtaygaouqzlq , java.lang.String qnvaiklrgqiavhsnmzwt , java.lang.Integer rvuulfypgpfrsnzoikse , java.lang.Boolean roklmrgwnjvtyupkpygw ) ;
× fix_prediction_before: public entityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long salesConfirmationOrderID , java.lang.String newSalesConfirmationOrderNumber , java.util.Date newSalesConfirmationOrderDate , java.lang.Long newCustomerID , java.lang.Long newSalesStaffID , java.lang.String status , java.lang.Integer newTerms , java.lang.Boolean adminOverwrite ) ;
× fix_prediction_after: publicEntityManager.ReturnHelper updateSalesConfirmationOrder ( java.lang.Long zomqwmsmjdahywkcqwbi , java.lang.String idnowsvxskpsicpkpebw , java.util.Date lideobdmrfjaybjztbfh , java.lang.Long phsxmbfbtaygaouqzlq , java.lang.Long lqxqqexnckhilkoqghtm , java.lang.String qnvaiklrgqiavhsmmzwt , java.lang.Integer rvuulfypgpfrsnzoikse , java.lang.Boolean roklmrgwnjvtyupkpygw ) ;

line_index: 1119
bug_before_refactoring: private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; } <s> private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; } <s> Bugfixes after bulk refactoring
bug_after_refactoring: private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > wbgoqgdmtpyeipwooutn , T xqatdxrxixlrzyzydlsy ) { org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn . getValue () , org.hamcrest.core.IsEqual . equalTo ( xqatdxrxixlrzyzydlsy ) ) ; } <s> private static < T > void matchProperty ( biweekly.property.ValuedProperty < T > wbgoqgdmtpyeipwooutn , T xqatdxrxixlrzyzydlsy ) { org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn . getValue () , org.hamcrest.core.IsEqual . equalTo ( xqatdxrxixlrzyzydlsy ) ) ; } <s> Bugfixes after bulk refactoring
fix_before_refactoring: private static < T > void matchProperty ( T component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; }
fix_after_refactoring: private static < T > void matchProperty ( T wbgoqgdmtpyeipwooutn , T xqatdxrxixlrzyzydlsy ) { org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn , org.hamcrest.core.IsEqual . equalTo ( xqatdxrxixlrzyzydlsy ) ) ; }
× fix_prediction_before: protected static < T > void matchProperty ( biweekly.property.ValuedProperty < T > component , T propertyValue ) { org.hamcrest.MatcherAssert . assertThat ( component , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( component . getValue () , org.hamcrest.core.IsEqual . equalTo ( propertyValue ) ) ; }
× fix_prediction_after: protected static < T > void matchProperty ( biweekly.property.ValuedProperty < T > wbgoqgdmtpyeipwooutn , T xqatdxrxixlrzyzydlsy ) { org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn , org.hamcrest.core.IsNull . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( wbgoqgdmtpyeipwooutn . getValue () , org.hamcrest.core.IsEqual . equalTo ( xqatdxrxixlrzyzydlsy ) ) ; }

line_index: 1120
bug_before_refactoring: public java.util.Date parseDate ( java.lang.String date ) { try { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> public java.util.Date parseDate ( java.lang.String date ) { try { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> Fix some issues
bug_after_refactoring: public java.util.Date parseDate ( java.lang.String xdjppetntfzmpgyzstzr ) { try { java.util.Date parsedDate = formatter . parse ( xdjppetntfzmpgyzstzr ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> public java.util.Date parseDate ( java.lang.String xdjppetntfzmpgyzstzr ) { try { java.util.Date parsedDate = formatter . parse ( xdjppetntfzmpgyzstzr ) ; return parsedDate ; } catch ( java.text.ParseException ex ) { ex . printStackTrace () ; return null ; } } <s> Fix some issues
fix_before_refactoring: public java.util.Date parseDate ( java.lang.String date ) throws java.text.ParseException { java.util.Date parsedDate = formatter . parse ( date ) ; return parsedDate ; }
fix_after_refactoring: public java.util.Date parseDate ( java.lang.String xdjppetntfzmpgyzstzr ) throws java.text.ParseException { java.util.Date parsedDate = formatter . parse ( xdjppetntfzmpgyzstzr ) ; return parsedDate ; }
× fix_prediction_before: public java.util.Date parseDate ( java.lang.String date ) { try { return formatter . parse ( date ) ; } catch ( java.text.ParseException ex ) { return null ; } }
× fix_prediction_after: public java.util.Date parseDate ( java.lang.String xdjppetntfzmpgyzstzr ) { java.util.Date parsedDate = formatter . parse ( xdjppetntfzmpgyzstzr ) ; return parsedDate ; }

line_index: 1121
bug_before_refactoring: @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution evolution ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; } <s> @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution evolution ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; } <s> One2One-Compare  fixed Findbug findings
bug_after_refactoring: @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution vkxslejepmloetcrzhdw ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( vkxslejepmloetcrzhdw . getVersionName () , vkxslejepmloetcrzhdw . getVersionDate () ) ; } <s> @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution vkxslejepmloetcrzhdw ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( vkxslejepmloetcrzhdw . getVersionName () , vkxslejepmloetcrzhdw . getVersionDate () ) ; } <s> One2One-Compare  fixed Findbug findings
fix_before_refactoring: @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( com.adobe.acs.commons.version.Evolution evolution ) { if ( evolution == null ) { return null ; } return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; }
fix_after_refactoring: @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( com.adobe.acs.commons.version.Evolution vkxslejepmloetcrzhdw ) { if ( vkxslejepmloetcrzhdw == null ) { return null ; } return new com.adobe.acs.commons.one2one.model.VersionSelection ( vkxslejepmloetcrzhdw . getVersionName () , vkxslejepmloetcrzhdw . getVersionDate () ) ; }
× fix_prediction_before: @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution evolution ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( evolution . getVersionName () , evolution . getVersionDate () ) ; }
× fix_prediction_after: @ javax.annotation.Nullable @ java.lang.Override public com.adobe.acs.commons.one2one.model.VersionSelection apply ( @ javax.annotation.Nullable com.adobe.acs.commons.version.Evolution vkxslejepmloetcrzhdw ) { return new com.adobe.acs.commons.one2one.model.VersionSelection ( vkxslejepmloetcrzhdw . getVersionName () , vkxslejepmloetcrzhdw . getVersionDate () ) ; }

line_index: 1122
bug_before_refactoring: public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } <s> public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } <s> bugfixing the list rep
bug_after_refactoring: public juxhqkukudgegfihhhjfoid addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex juxhqkukudgegfihhhjf ) { adjacencyList . add ( new jajuxhqkukudgegfihhhjfa.util.LinkedList < jajuxhqkukudgegfihhhjfa.lang.String > () ) ; juxhqkukudgegfihhhjfertexList . add ( juxhqkukudgegfihhhjf . getLabel () ) ; } <s> public juxhqkukudgegfihhhjfoid addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex juxhqkukudgegfihhhjf ) { adjacencyList . add ( new jajuxhqkukudgegfihhhjfa.util.LinkedList < jajuxhqkukudgegfihhhjfa.lang.String > () ) ; juxhqkukudgegfihhhjfertexList . add ( juxhqkukudgegfihhhjf . getLabel () ) ; } <s> bugfixing the list rep
fix_before_refactoring: public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { if ( ! ( vertexList . contains ( v ) ) ) { adjacencyList . add ( new java.util.LinkedList < java.lang.String > () ) ; vertexList . add ( v . getLabel () ) ; } }
fix_after_refactoring: public juxhqkukudgegfihhhjfoid addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex juxhqkukudgegfihhhjf ) { if ( ! ( juxhqkukudgegfihhhjfertexList . contains ( juxhqkukudgegfihhhjf ) ) ) { adjacencyList . add ( new jajuxhqkukudgegfihhhjfa.util.LinkedList < jajuxhqkukudgegfihhhjfa.lang.String > () ) ; juxhqkukudgegfihhhjfertexList . add ( juxhqkukudgegfihhhjf . getLabel () ) ; } }
× fix_prediction_before: public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { vertexList . add ( v . getLabel () ) ; }
× fix_prediction_after: public void addVertex ( ca.ubc.ece.cpen221.mp3.staff.Vertex juxhqkukudgegfihhhjf ) { adjacencyList . add ( new jajuxhqkukudgegfihhhjfa.util.LinkedList < jajuxhqkukudgegfihhhjfa.lang.String > () ) ; juxhqkukudgegfihhhjfertexList . add ( juxhqkukudgegfihhhjf . getLabel () ) ; }

line_index: 1123
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) { try { dinnerUserService . registerNewUserAccount ( registerUser ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) { try { dinnerUserService . registerNewUserAccount ( registerUser ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> Fixed error handling
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser msjhnpqkdobfjeorfwso ) { try { dinnerUserService . registerNewUserAccount ( msjhnpqkdobfjeorfwso ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser msjhnpqkdobfjeorfwso ) { try { dinnerUserService . registerNewUserAccount ( msjhnpqkdobfjeorfwso ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; } <s> Fixed error handling
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) throws com.dinner.service.exception.EmailExistException { dinnerUserService . registerNewUserAccount ( registerUser ) ; return "redirect:/" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser msjhnpqkdobfjeorfwso ) throws com.dinner.service.exception.EmailExistException { dinnerUserService . registerNewUserAccount ( msjhnpqkdobfjeorfwso ) ; return "redirect:/" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser registerUser ) { dinnerUserService . registerNewUserAccount ( registerUser ) ; return "redirect:/" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/register" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String register ( @ org.springframework.web.bind.annotation.ModelAttribute com.dinner.model.security.DinnerUser msjhnpqkdobfjeorfwso ) { try { dinnerUserService . registerNewUserAccount ( msjhnpqkdobfjeorfwso ) ; } catch ( com.dinner.service.exception.EmailExistException e ) { java.lang.System.out . println ( e . getMessage () ) ; } return "redirect:/" ; }

line_index: 1124
bug_before_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId , java.lang.String description ) { return designExpProcessor . exportDesign ( assemblyId , description ) ; } <s> @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId , java.lang.String description ) { return designExpProcessor . exportDesign ( assemblyId , description ) ; } <s> fixed locking issue
bug_after_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long rcuobbqognfqimxanaar , java.lang.String akxeqiaoecforojdmvza ) { return designExpProcessor . exportDesign ( rcuobbqognfqimxanaar , akxeqiaoecforojdmvza ) ; } <s> @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long rcuobbqognfqimxanaar , java.lang.String akxeqiaoecforojdmvza ) { return designExpProcessor . exportDesign ( rcuobbqognfqimxanaar , akxeqiaoecforojdmvza ) ; } <s> fixed locking issue
fix_before_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId ) { return designExpProcessor . exportDesign ( assemblyId ) ; }
fix_after_refactoring: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long rcuobbqognfqimxanaar ) { return designExpProcessor . exportDesign ( rcuobbqognfqimxanaar ) ; }
× fix_prediction_before: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long assemblyId , java.lang.String description ) { synchronized ( this ) { return designExpProcessor . exportDesign ( assemblyId , description ) ; } }
× fix_prediction_after: @ java.lang.Override public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( long rcuobbqognfqimxanaar , java.lang.String akxeqiaoecforojdmvza ) { synchronized ( this ) { return designExpProcessor . exportDesign ( rcuobbqognfqimxanaar , akxeqiaoecforojdmvza ) ; } }

line_index: 1125
bug_before_refactoring: @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle state , uk.co.onefile.nomadionic.filepicker.CallbackContext callbackContext ) {} <s> @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle state , uk.co.onefile.nomadionic.filepicker.CallbackContext callbackContext ) {} <s> Fixed permission issue  no luck on duplicate import issue.
bug_after_refactoring: @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle eejjbzpbubrsosppvnsf , uk.co.onefile.nomadionic.filepicker.CallbackContext rrmbaysdffybpdqetlrw ) {} <s> @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle eejjbzpbubrsosppvnsf , uk.co.onefile.nomadionic.filepicker.CallbackContext rrmbaysdffybpdqetlrw ) {} <s> Fixed permission issue  no luck on duplicate import issue.
fix_before_refactoring: { super . onRestoreStateForActivityResult ( state , callbackContext ) ; }
fix_after_refactoring: { super . onRestoreStateForActivityResult ( eejjbzpbubrsosppvnsf , rrmbaysdffybpdqetlrw ) ; }
× fix_prediction_before: { this . state = state ; this . callbackContext = callbackContext ; }
× fix_prediction_after: @ java.lang.Override public void onRestoreStateForActivityResult ( android.os.Bundle eejjbzpbubrsosppvnsf ) {}

line_index: 1126
bug_before_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> Fixed expression reading  + Probably going to find some errors  but our test case works
bug_after_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext laxnclqoszsgynrjggjj ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext laxnclqoszsgynrjggjj ) { exprStack . push ( new littleCompiler.StmtList () ) ; } <s> Fixed expression reading  + Probably going to find some errors  but our test case works
fix_before_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) {}
fix_after_refactoring: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext laxnclqoszsgynrjggjj ) {}
× fix_prediction_before: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext ctx ) { exprStack . push ( new littleCompiler.StmtList ( ctx ) ) ; }
× fix_prediction_after: @ java.lang.Override public void enterWrite_stmt ( littleCompiler.LittleParser.Write_stmtContext laxnclqoszsgynrjggjjj ) { exprStack . push ( laxnclqoszsgynrjggjj ) ; }

line_index: 1127
bug_before_refactoring: public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { this . username = event . getNewAccount () ; refresh () ; } <s> public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { this . username = event . getNewAccount () ; refresh () ; } <s> Fix unnecessary bookmark feed refresh and configuration change issue.
bug_after_refactoring: public void onEvent ( com.pindroid.plbwtfdomyuimayujvhd.AccountChangedEvent plbwtfdomyuimayujvhd ) { this . username = plbwtfdomyuimayujvhd . getNewAccount () ; refresh () ; } <s> public void onEvent ( com.pindroid.plbwtfdomyuimayujvhd.AccountChangedEvent plbwtfdomyuimayujvhd ) { this . username = plbwtfdomyuimayujvhd . getNewAccount () ; refresh () ; } <s> Fix unnecessary bookmark feed refresh and configuration change issue.
fix_before_refactoring: public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { if ( ! ( event . getNewAccount () . equals ( username ) ) ) { this . username = event . getNewAccount () ; refresh () ; } }
fix_after_refactoring: public void onEvent ( com.pindroid.plbwtfdomyuimayujvhd.AccountChangedEvent plbwtfdomyuimayujvhd ) { if ( ! ( plbwtfdomyuimayujvhd . getNewAccount () . equals ( username ) ) ) { this . username = plbwtfdomyuimayujvhd . getNewAccount () ; refresh () ; } }
× fix_prediction_before: public void onEvent ( com.pindroid.event.AccountChangedEvent event ) { username = event . getNewAccount () ; refresh () ; }
× fix_prediction_after: public void onEvent ( com.pindroid.plbwtfdomyuimayujus.AccountChangedEvent plbwtfdomyuimayujus ) { username = plbwtfdomyuimayujus . getNewAccount () ; refresh () ; }

line_index: 1128
bug_before_refactoring: public void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; } <s> public void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; } <s> GroceryList bug fixed. Arraylist copy
bug_after_refactoring: public void removeGroceryItem ( int xkudmvypkisekbjmizvs ) { groceryList . remove ( xkudmvypkisekbjmizvs ) ; } <s> public void removeGroceryItem ( int xkudmvypkisekbjmizvs ) { groceryList . remove ( xkudmvypkisekbjmizvs ) ; } <s> GroceryList bug fixed. Arraylist copy
fix_before_refactoring: private void removeGroceryItem ( int position ) { groceryList . remove ( position ) ; }
fix_after_refactoring: private void removeGroceryItem ( int xkudmvypkisekbjmizvs ) { groceryList . remove ( xkudmvypkisekbjmizvs ) ; }
× fix_prediction_before: public void removeGroceryItem ( int position ) { if ( ( groceryList . size () ) > position ) { groceryList . remove ( position ) ; } }
× fix_prediction_after: public void removeGroceryItem ( int xkudmvypkisekbjmizvs ) { groceryList . remove ( xkudmvypkisekbjmizvs ) ; }

line_index: 1130
bug_before_refactoring: public java.lang.String receiveGson ( com.google.gson.Gson receive ) throws java.rmi.RemoteException ; <s> public java.lang.String receiveGson ( com.google.gson.Gson receive ) throws java.rmi.RemoteException ; <s> Fix multiClients go Online  receivePaints()  do not receive if null 解决开多个main报错（error: thread-6)问题。 多个用户同时打开画板没有图像时 不会报错。
bug_after_refactoring: public java.lang.String bdxzzovbfteqdocoktoiGson ( com.google.gson.Gson bdxzzovbfteqdocoktoi ) throws java.rmi.RemoteException ; <s> public java.lang.String bdxzzovbfteqdocoktoiGson ( com.google.gson.Gson bdxzzovbfteqdocoktoi ) throws java.rmi.RemoteException ; <s> Fix multiClients go Online  receivePaints()  do not receive if null 解决开多个main报错（error: thread-6)问题。 多个用户同时打开画板没有图像时 不会报错。
fix_before_refactoring: java.lang.String receiveGson ( ) throws java.rmi.RemoteException ;
fix_after_refactoring: java.lang.String bdxzzovbfteqdocoktoiGson ( ) throws java.rmi.RemoteException ;
× fix_prediction_before: public java.lang.String receiveGson ( com.google.gson.Gson receive ) throws java.rmi.RemoteException ;
× fix_prediction_after: public java.lang.String bdxzzovbfteqdocoktoiGson ( java.lang.String bdxzzovbfteqdocoktoi ) throws java.rmi.RemoteException ;

line_index: 1131
bug_before_refactoring: public void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) { glass.eclipse.theme.DockTitleManager manager = controller . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> public void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) { glass.eclipse.theme.DockTitleManager manager = controller . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> Bugfix: Glass-EclipseThemeExtension will no longer register a title as "set by the client"  instead is register a title as "set by the theme". This will allow the framework to remove the title if the theme is switched.
bug_after_refactoring: public void install ( glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockController lyaequtwrixivibohqab , glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTheme cqqnjbbktfeqqhvqjjwf ) { glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTitleManager manager = lyaequtwrixivibohqab . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> public void install ( glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockController lyaequtwrixivibohqab , glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTheme cqqnjbbktfeqqhvqjjwf ) { glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTitleManager manager = lyaequtwrixivibohqab . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; } <s> Bugfix: Glass-EclipseThemeExtension will no longer register a title as "set by the client"  instead is register a title as "set by the theme". This will allow the framework to remove the title if the theme is switched.
fix_before_refactoring: public void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) {}
fix_after_refactoring: public void install ( glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockController lyaequtwrixivibohqab , glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTheme cqqnjbbktfeqqhvqjjwf ) {}
× fix_prediction_before: private void install ( glass.eclipse.theme.DockController controller , glass.eclipse.theme.DockTheme theme ) { glass.eclipse.theme.DockTitleManager manager = controller . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; }
× fix_prediction_after: public void install ( glass.eclipse.cqqnjbbktfeqqhvqjjjwf.DockController lyaequtwrixivibohqab , glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockThemeQhvqjjjwf ) { glass.eclipse.cqqnjbbktfeqqhvqjjwf.DockTitleManager manager = lyaequtwrixivibohqab . getDockTitleManager () ; manager . registerClient ( FlapDockStation.BUTTON_TITLE_ID , CGlassDockTitleFactory.FACTORY ) ; }

line_index: 1132
bug_before_refactoring: public void draw ( java.awt.Graphics g , int x , int y ) { g . drawImage ( image , x , y , width , height , null ) ; } <s> public void draw ( java.awt.Graphics g , int x , int y ) { g . drawImage ( image , x , y , width , height , null ) ; } <s> Second commit. Added automatic and mouse-following modes  fixed some collision issues  added half-working pause (that actually works like 'stop' now :
bug_after_refactoring: public void draw ( java.awt.Graphics brsrjqkzpfkdgdqdneot , int ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , int myvbmufbgqgijsanewwg ) { brsrjqkzpfkdgdqdneot . drawImabrsrjqkzpfkdgdqdneote ( imabrsrjqkzpfkdgdqdneote , ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , myvbmufbgqgijsanewwg , width , heibrsrjqkzpfkdgdqdneotht , null ) ; } <s> public void draw ( java.awt.Graphics brsrjqkzpfkdgdqdneot , int ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , int myvbmufbgqgijsanewwg ) { brsrjqkzpfkdgdqdneot . drawImabrsrjqkzpfkdgdqdneote ( imabrsrjqkzpfkdgdqdneote , ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , myvbmufbgqgijsanewwg , width , heibrsrjqkzpfkdgdqdneotht , null ) ; } <s> Second commit. Added automatic and mouse-following modes  fixed some collision issues  added half-working pause (that actually works like 'stop' now :
fix_before_refactoring: public void draw ( java.awt.Graphics g , int x , int y ) { g . drawImage ( image , x , y , this . width , this . height , null ) ; }
fix_after_refactoring: public void draw ( java.awt.Graphics brsrjqkzpfkdgdqdneot , int ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , int myvbmufbgqgijsanewwg ) { brsrjqkzpfkdgdqdneot . drawImabrsrjqkzpfkdgdqdneote ( imabrsrjqkzpfkdgdqdneote , ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , myvbmufbgqgijsanewwg , this . width , this . heibrsrjqkzpfkdgdqdneotht , null ) ; }
× fix_prediction_before: public void draw ( java.awt.Graphics g , double x , double y ) { g . drawImage ( image , x , y , width , height , null ) ; }
× fix_prediction_after: public void draw ( java.awt.Graphics brsrjqkzpfkdgdqdneot , int ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , int myvbmufbgqgijsanewwg ) { brsrjqkzpfkdgdqdneot . drawImabrsrjqkzpfkdgdqdneote ( imabrsjqkzpfkdgdqdneote , ejhxeqmwjaiimyvbmufbgqgijsanewwgmuqhgtj , myvbmufbgqgijsanewwg , width , heibrsjqkzpfkdgdqdneotht , null ) ; }

line_index: 1133
bug_before_refactoring: public int addUser ( java.lang.String name , java.lang.String password ) {} <s> public int addUser ( java.lang.String name , java.lang.String password ) {} <s> Fixed some errors due to deprecation  some suppressed.
bug_after_refactoring: public int addUser ( java.lang.String jrorltonxxzjqhmozngc , java.lang.String ntuetvxvwhcljoftfqws ) {} <s> public int addUser ( java.lang.String jrorltonxxzjqhmozngc , java.lang.String ntuetvxvwhcljoftfqws ) {} <s> Fixed some errors due to deprecation  some suppressed.
fix_before_refactoring: { return 0 ; }
fix_after_refactoring: { return 0 ; }
× fix_prediction_before: public int addUser ( java.lang.String name , java.lang.String password ) { return 0 ; }
× fix_prediction_after: public int addUser ( java.lang.String jrorltonxxzjqhmozngc , java.lang.String ntuetvxvwhcljoftfqws ) { return 0 ; }

line_index: 1134
bug_before_refactoring: public boolean loadCategories ( android.view.MenuItem menuItem ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> public boolean loadCategories ( android.view.MenuItem menuItem ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> I fixed a bug with the media player when the system would doze  and returning to the SearchViewActivity caused a crash. I also was able to implement things so that when canceling the search  the user sees all the categories again.
bug_after_refactoring: public boolean loadCategories ( android.view.MenuItem ytbqrvqeaehmjmuuquia ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> public boolean loadCategories ( android.view.MenuItem ytbqrvqeaehmjmuuquia ) { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; } <s> I fixed a bug with the media player when the system would doze  and returning to the SearchViewActivity caused a crash. I also was able to implement things so that when canceling the search  the user sees all the categories again.
fix_before_refactoring: public boolean loadCategories ( android.view.MenuItem menuItem ) { return loadCategories () ; }
fix_after_refactoring: public boolean loadCategories ( android.view.MenuItem ytbqrvqeaehmjmuuquia ) { return loadCategories () ; }
× fix_prediction_before: public boolean loadCategories () { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; }
× fix_prediction_after: public boolean loadCategories () { java.lang.System.out . println ( "------> Attempt to reload categories!" ) ; listAdapter . setItemCategories ( categoryManager . getAllCategories () ) ; java.lang.System.out . println ( ( "------> Item Categories: " + ( categoryManager . getAllCategories () ) ) ) ; expListView . collapseGroup ( 0 ) ; return true ; }

line_index: 1135
bug_before_refactoring: public void playMidiFile ( java.lang.String url ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; } <s> public void playMidiFile ( java.lang.String url ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; } <s> #5094 Fixing '1st time' midi bug: adding a command queue until midi is initialized properly.  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@41721 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
bug_after_refactoring: public void playMidiFile ( java.lang.String xpqkprkosdwfsskrliul ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + xpqkprkosdwfsskrliul ) ) ; MidiPlayerW.INSTANCE . playFile ( xpqkprkosdwfsskrliul ) ; } <s> public void playMidiFile ( java.lang.String xpqkprkosdwfsskrliul ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + xpqkprkosdwfsskrliul ) ) ; MidiPlayerW.INSTANCE . playFile ( xpqkprkosdwfsskrliul ) ; } <s> #5094 Fixing '1st time' midi bug: adding a command queue until midi is initialized properly.  git-svn-id: http://dev.geogebra.org/svn/trunk/geogebra@41721 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
fix_before_refactoring: public void execute () { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; MidiPlayerW.INSTANCE . playFile ( url ) ; }
fix_after_refactoring: public void execute () { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + xpqkprkosdwfsskrliul ) ) ; MidiPlayerW.INSTANCE . playFile ( xpqkprkosdwfsskrliul ) ; }
× fix_prediction_before: public boolean playMidiFile ( java.lang.String url ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + url ) ) ; return MidiPlayerW.INSTANCE . playFile ( url ) ; }
× fix_prediction_after: public void playMidiFile ( java.lang.String xpqkprkosdwfsskrliul ) { org.geogebra.common.main.App . debug ( ( ( ( org.geogebra.web.html5.sound.MidiSoundW.PREFIX ) + "playing midi file " ) + xpqkprkosdwfsskrliul ) ) ; MidiPlayerW.INSTANCE . playFile ( xpqkprkosdwfsskrliul ) ; }

line_index: 1136
bug_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { if ( this . apply ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( argument ) ; } } <s> @ java.lang.Override public java.lang.Boolean apply ( A argument ) { if ( this . apply ( argument ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( argument ) ; } } <s> bugs fixed
bug_after_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A veoazqtcmoshbpvkvtjw ) { if ( this . apply ( veoazqtcmoshbpvkvtjw ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( veoazqtcmoshbpvkvtjw ) ; } } <s> @ java.lang.Override public java.lang.Boolean apply ( A veoazqtcmoshbpvkvtjw ) { if ( this . apply ( veoazqtcmoshbpvkvtjw ) ) { return java.lang.Boolean.TRUE ; } else { return predicate . apply ( veoazqtcmoshbpvkvtjw ) ; } } <s> bugs fixed
fix_before_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { return ( this . apply ( argument ) ) || ( predicate . apply ( argument ) ) ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Boolean apply ( A veoazqtcmoshbpvkvtjw ) { return ( this . apply ( veoazqtcmoshbpvkvtjw ) ) || ( predicate . apply ( veoazqtcmoshbpvkvtjw ) ) ; }
× fix_prediction_before: @ java.lang.Override public java.lang.Boolean apply ( A argument ) { return ( this . apply ( argument ) ) && ( predicate . apply ( argument ) ) ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Boolean apply ( A veoazqtcmoshbpvkvtjw ) { return ( this . apply ( veoazqtcmoshbpvkvtjw ) ) && ( predicate . apply ( veoazqtcmoshbpvkvtjw ) ) ; }

line_index: 1137
bug_before_refactoring: public void onMessage ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; count . addAndGet ( 1 ) ; } <s> public void onMessage ( java.lang.Object message ) { java.lang.System.out . println ( message ) ; count . addAndGet ( 1 ) ; } <s> fix bug
bug_after_refactoring: public void onMessage ( java.lang.Object ceomurwvfbwfyvbpacpr ) { java.lang.System.out . println ( ceomurwvfbwfyvbpacpr ) ; count . addAndGet ( 1 ) ; } <s> public void onMessage ( java.lang.Object ceomurwvfbwfyvbpacpr ) { java.lang.System.out . println ( ceomurwvfbwfyvbpacpr ) ; count . addAndGet ( 1 ) ; } <s> fix bug
fix_before_refactoring: public void onMessage ( byte [] message ) { java.lang.System.out . println ( new java.lang.String ( message ) ) ; count . addAndGet ( 1 ) ; }
fix_after_refactoring: public void onMessage ( byte [] ceomurwvfbwfyvbpacpr ) { java.lang.System.out . println ( new java.lang.String ( ceomurwvfbwfyvbpacpr ) ) ; count . addAndGet ( 1 ) ; }
× fix_prediction_before: public void onMessage ( java.lang.Object message ) { count . addAndGet ( 1 ) ; }
× fix_prediction_after: public void onMessage ( java.lang.Object ceomurwvfbwfyvbpacpr ) { count . addAndGet ( 1 ) ; }

line_index: 1138
bug_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> Add "to top"  bug fix  etc.
bug_after_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) { com.chopping.utils.Utils . showLongToast ( getApplicationContext () , "failure" ) ; } <s> Add "to top"  bug fix  etc.
fix_before_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) {}
fix_after_refactoring: @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) {}
× fix_prediction_before: @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { com.chopping.utils.Utils . showLongToast ( this , "failure" ) ; }
× fix_prediction_after: @ java.lang.Override public void failure ( retrofit.RetrofitError srbwrxrsuwojtaejbfkr ) { com.chopping.utils.Utils . showLongToast ( this , "failure" ) ; }

line_index: 1140
bug_before_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File file , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , file , url ) ; } <s> public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File file , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , file , url ) ; } <s> fix bug download video
bug_after_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File ilhehflzlrffwkfoivyl , java.lang.String iuiajmcjvwrjfpsyzhjq ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , ilhehflzlrffwkfoivyl , iuiajmcjvwrjfpsyzhjq ) ; } <s> public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File ilhehflzlrffwkfoivyl , java.lang.String iuiajmcjvwrjfpsyzhjq ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , ilhehflzlrffwkfoivyl , iuiajmcjvwrjfpsyzhjq ) ; } <s> fix bug download video
fix_before_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( android.content.Context context , java.lang.String url ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , context , url ) ; }
fix_after_refactoring: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( android.content.Context context , java.lang.String iuiajmcjvwrjfpsyzhjq ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , context , iuiajmcjvwrjfpsyzhjq ) ; }
× fix_prediction_before: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File file ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , file ) ; }
× fix_prediction_after: public static final bolts.Task < com.dounets.vchat.net.api.ApiResponse > doRequestDownloadVideo ( java.io.File ilhehflzlrffwkfoivyl , java.lang.String iuiajmcjvwrjfpsyzhjq ) { com.dounets.vchat.net.api.ApiRequest request = new com.dounets.vchat.net.api.ApiRequest ( ApiRequest.Method.GET , null , null , null ) ; return com.dounets.vchat.net.api.ApiClient . callInBackgroundDownloadVideo ( request , ilhehflzlrffwkfoivyl , iuiajmcjvwrjfpsyzhjq ) ; }

line_index: 1141
bug_before_refactoring: public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( entryName ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( value ) ) ) ) ; } <s> public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( entryName ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( value ) ) ) ) ; } <s> Rename plugin to prometheus-metrics and fix some basic bugs
bug_after_refactoring: public void generateValue ( java.lang.String bdudscmvimjudxibzgml , long xsrwdhdznnqtoothjthe ) throws java.io.IOException { writer . append ( bdudscmvimjudxibzgml ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( xsrwdhdznnqtoothjthe ) ) ) ) ; } <s> public void generateValue ( java.lang.String bdudscmvimjudxibzgml , long xsrwdhdznnqtoothjthe ) throws java.io.IOException { writer . append ( bdudscmvimjudxibzgml ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) ( xsrwdhdznnqtoothjthe ) ) ) ) ; } <s> Rename plugin to prometheus-metrics and fix some basic bugs
fix_before_refactoring: public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { generateValue ( entryName , null , null , value ) ; }
fix_after_refactoring: public void generateValue ( java.lang.String bdudscmvimjudxibzgml , long xsrwdhdznnqtoothjthe ) throws java.io.IOException { generateValue ( bdudscmvimjudxibzgml , null , null , xsrwdhdznnqtoothjthe ) ; }
× fix_prediction_before: public void generateValue ( java.lang.String entryName , long value ) throws java.io.IOException { writer . append ( entryName ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( value ) ) ; }
× fix_prediction_after: public void generateValue ( java.lang.String bdudscmvimjudxibzgml , longxsrwdhdznnqtoothjthe ) throws java.io.IOException { writer . append ( bdudscmvimjudxibzgml ) ; writer . append ( " " ) ; writer . append ( java.lang.Double . toString ( ( ( double ) (xsrwdhdznnqtoothjthe ) ) ) ; }

line_index: 1143
bug_before_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( 0 , word , false ) ; } <s> sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( 0 , word , false ) ; } <s> Fixed bug for empty sequences
bug_after_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord dyqamzihjaslgtqgjbht ) { return createTailChain ( 0 , dyqamzihjaslgtqgjbht , false ) ; } <s> sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord dyqamzihjaslgtqgjbht ) { return createTailChain ( 0 , dyqamzihjaslgtqgjbht , false ) ; } <s> Fixed bug for empty sequences
fix_before_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( ( - 1 ) , word ) ; }
fix_after_refactoring: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord dyqamzihjaslgtqgjbht ) { return createTailChain ( ( - 1 ) , dyqamzihjaslgtqgjbht ) ; }
× fix_prediction_before: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord word ) { return createTailChain ( 0 , word , true ) ; }
× fix_prediction_after: sadl.models.pdrta.TimedTail toTestTailChain ( sadl.input.TimedWord dyqamzihjaslgtqgjbht ) { return createTailChain ( 0 , dyqamzihjaslgtqgjbht , false , false ) ; }

line_index: 1144
bug_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today , long limit ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
bug_after_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; } <s> public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; } <s> Fixed an issue with exporting dependencies of Initial Tables  git-svn-id: svn://svn.code.sf.net/p/jailer/code/trunk@1043 3dd849cd-670e-4645-a7cd-dd197c8d0e81
fix_before_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , int today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
fix_after_refactoring: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; }
× fix_prediction_before: public long addEntities ( net.sf.jailer.datamodel.Table table , java.lang.String condition , java.lang.String today ) throws java.sql.SQLException { checkPseudoColumns ( table , condition ) ; return addEntities ( table , "T" , condition , today ) ; }
× fix_prediction_after: public long addEntities ( net.sf.jailer.datamodel.Table flzcedxnmkoqamxoncmt , java.lang.String hykuymubvkspqwcouxpt , int ldxztptngxkljqubkfjy , long nofesayiiemyttxgqvsd ) throws java.sql.SQLException { checkPseudoColumns ( flzcedxnmkoqamxoncmt , hykuymubvkspqwcouxpt ) ; return addEntities ( flzcedxnmkoqamxoncmt , "T" , hykuymubvkspqwcouxpt , ldxztptngxkljqubkfjy ) ; }

line_index: 1145
bug_before_refactoring: public void insertUnexploredNode ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; } <s> public void insertUnexploredNode ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; } <s> fixed some issues
bug_after_refactoring: public void insertUnexploredNode ( Point yevdncicdbbmvtdsjqyt ) { Node n = new Node ( false , yevdncicdbbmvtdsjqyt ) ; map . put ( n . toString () , n ) ; } <s> public void insertUnexploredNode ( Point yevdncicdbbmvtdsjqyt ) { Node n = new Node ( false , yevdncicdbbmvtdsjqyt ) ; map . put ( n . toString () , n ) ; } <s> fixed some issues
fix_before_refactoring: private void insertUnexploredNode ( Point pt ) { Node n = new Node ( false , pt ) ; map . put ( n . toString () , n ) ; }
fix_after_refactoring: private void insertUnexploredNode ( Point yevdncicdbbmvtdsjqyt ) { Node n = new Node ( false , yevdncicdbbmvtdsjqyt ) ; map . put ( n . toString () , n ) ; }
× fix_prediction_before: public void insertUnexploredNode ( Point pt , int index ) { Node n = new Node ( false , pt , index ) ; map . put ( n . toString () , n ) ; }
× fix_prediction_after: public void insertUnexploredNode ( Point yevdncicdbbmvtdsjqyt ) { Node n = new Node ( false , yevdncicdbbmvtdsjqyt , map . put ( n . toString () , n ) ; }

line_index: 1146
bug_before_refactoring: private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : buildBatch ) make ( toBuild ) ; return true ; } <s> private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : buildBatch ) make ( toBuild ) ; return true ; } <s> Fixed bug where roads built through buildings
bug_after_refactoring: private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > wrlrbrbsuteyzegvnokq ) { for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) make ( toBuild ) ; return true ; } <s> private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > wrlrbrbsuteyzegvnokq ) { for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) if ( ! ( isFree ( toBuild ) ) ) return false ; for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) make ( toBuild ) ; return true ; } <s> Fixed bug where roads built through buildings
fix_before_refactoring: private void make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > buildBatch ) { for ( com.xor.tiles.Tile toBuild : buildBatch ) if ( isFree ( toBuild ) ) make ( toBuild ) ; }
fix_after_refactoring: private void make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > wrlrbrbsuteyzegvnokq ) { for ( com.xor.tiles.Tile toBuild : wrlrbrbsuteyzegvnokq ) if ( isFree ( toBuild ) ) make ( toBuild ) ; }
× fix_prediction_before: private void make ( java.lang.Iterable < ? extends com.emy.tiles.Tile > buildBatch ) { for ( com.emy.tiles.Tile toBuild : buildBatch ) if ( ! ( isFree ( toBuild ) ) ) make ( toBuild ) ; }
× fix_prediction_after: private boolean make ( java.lang.Iterable < ? extends com.xor.tiles.Tile > wrlrbrbsuteyzegvnokq ) { return make ( wrlrbrbsuteyzegvnokq , true ) ; }

line_index: 1148
bug_before_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( columnName ) ; return column.columnMetadata ; } <s> public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( columnName ) ; return column.columnMetadata ; } <s> fixed bug in Database.java and SQLQuery.java
bug_after_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String lhxwsdeculmfsmcccpqf ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( lhxwsdeculmfsmcccpqf ) ; return column.columnMetadata ; } <s> public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String lhxwsdeculmfsmcccpqf ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( lhxwsdeculmfsmcccpqf ) ; return column.columnMetadata ; } <s> fixed bug in Database.java and SQLQuery.java
fix_before_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( ( ( columnName . substring ( 0 , 1 ) . toUpperCase () ) + ( columnName . substring ( 1 ) ) ) ) ; return column.columnMetadata ; }
fix_after_refactoring: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String lhxwsdeculmfsmcccpqf ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( ( ( lhxwsdeculmfsmcccpqf . substring ( 0 , 1 ) . toUpperCase () ) + ( lhxwsdeculmfsmcccpqf . substring ( 1 ) ) ) ) ; return column.columnMetadata ; }
× fix_prediction_before: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { return columns . get ( columnName ).columnMetadata ; }
× fix_prediction_after: public edu.uiuc.zenvisage.data.roaringdb.db.ColumnMetadata getColumnMetaData ( java.lang.String columnName ) { edu.uiuc.zenvisage.data.roaringdb.db.Column column = columns . get ( columnName ) ; return column.columnMetadata ; }

line_index: 1149
bug_before_refactoring: public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> public static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; } <s> Add basic graph analysis on some graph  fix bugs in AnalysisController
bug_after_refactoring: public laweuvhnencahstosfahtatic final void myPrint ( java.lang.String laweuvhnencahstosfah ) { java.lang.Sylaweuvhnencahstosfahtem.out . println ( laweuvhnencahstosfah ) ; } <s> public laweuvhnencahstosfahtatic final void myPrint ( java.lang.String laweuvhnencahstosfah ) { java.lang.Sylaweuvhnencahstosfahtem.out . println ( laweuvhnencahstosfah ) ; } <s> Add basic graph analysis on some graph  fix bugs in AnalysisController
fix_before_refactoring: private static final void myPrint ( java.lang.String s ) { java.lang.System.out . println ( s ) ; }
fix_after_refactoring: private laweuvhnencahstosfahtatic final void myPrint ( java.lang.String laweuvhnencahstosfah ) { java.lang.Sylaweuvhnencahstosfahtem.out . println ( laweuvhnencahstosfah ) ; }
× fix_prediction_before: public static final void myPrint ( java.lang.String s ) {}
× fix_prediction_after: public laweuvhnencahstosfahtatic final void myPrint () { java.lang.Sylaweuvhnencahstosfahtem.out . println ( laweuvhnencahstosfah ) ; }

line_index: 1150
bug_before_refactoring: public void changeRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } } <s> public void changeRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } } <s> Button shadow effected and small bug fix  -when editing relations the buttons that are already applied to the relation have a shadow effect -small bug fix  when a relation was selected and then another relation was clicked the last previous relations text was not hidden nor the new text shown.
bug_after_refactoring: public void changeRelationType ( int thrfionamzvxdzdphtex ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( thrfionamzvxdzdphtex ) ; } } <s> public void changeRelationType ( int thrfionamzvxdzdphtex ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( thrfionamzvxdzdphtex ) ; } } <s> Button shadow effected and small bug fix  -when editing relations the buttons that are already applied to the relation have a shadow effect -small bug fix  when a relation was selected and then another relation was clicked the last previous relations text was not hidden nor the new text shown.
fix_before_refactoring: public void setRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } }
fix_after_refactoring: public void setRelationType ( int thrfionamzvxdzdphtex ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( thrfionamzvxdzdphtex ) ; } }
× fix_prediction_before: public void changeRelationType ( int type ) { if ( ( selectedRelation ) != null ) { selectedRelation . setRelationType ( type ) ; } }
× fix_prediction_after: public void changeRelationType ( int thrfionamzvxdzdphtex ) { selectedRelation . setRelationType ( thrfionamzvxdzdphtex ) ; }

line_index: 1151
bug_before_refactoring: private void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } } <s> private void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } } <s> solved lag problem caused by addlistener in commandbar
bug_after_refactoring: private void populateList ( main.java.gui.TasksTableController pqgqtxngynncbmydtxce , java.util.ArrayList < main.java.data.Task > mvzagxofmddzloihqbju ) { int count = 1 ; pqgqtxngynncbmydtxce . clearTask () ; for ( main.java.data.Task temp : mvzagxofmddzloihqbju ) { pqgqtxngynncbmydtxce . addTask ( temp , ( count ++ ) ) ; } } <s> private void populateList ( main.java.gui.TasksTableController pqgqtxngynncbmydtxce , java.util.ArrayList < main.java.data.Task > mvzagxofmddzloihqbju ) { int count = 1 ; pqgqtxngynncbmydtxce . clearTask () ; for ( main.java.data.Task temp : mvzagxofmddzloihqbju ) { pqgqtxngynncbmydtxce . addTask ( temp , ( count ++ ) ) ; } } <s> solved lag problem caused by addlistener in commandbar
fix_before_refactoring: public void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { int count = 1 ; tableControl . clearTask () ; for ( main.java.data.Task temp : result ) { tableControl . addTask ( temp , ( count ++ ) ) ; } }
fix_after_refactoring: public void populateList ( main.java.gui.TasksTableController pqgqtxngynncbmydtxce , java.util.ArrayList < main.java.data.Task > mvzagxofmddzloihqbju ) { int count = 1 ; pqgqtxngynncbmydtxce . clearTask () ; for ( main.java.data.Task temp : mvzagxofmddzloihqbju ) { pqgqtxngynncbmydtxce . addTask ( temp , ( count ++ ) ) ; } }
× fix_prediction_before: private void populateList ( main.java.gui.TasksTableController tableControl , java.util.ArrayList < main.java.data.Task > result ) { tableControl . clearTask () ; tableControl . addTask ( result ) ; }
× fix_prediction_after: private void populateList ( main.java.gui.TasksTableController pqgqtxngynncbmydtxce , java.util.ArrayList < main.java.data.Task > mvzagxofmddzloihqbju ) { int count = 1 ; pqgqtxngynncbmydtxce . clearTask () ; for ( main.java.data.Task temp : mvzagxofmddzloihqbju ) { pqgqtxngynncbmydtxce . addTask ( temp , ( count ++ ) ) ; } }

line_index: 1152
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } <s> @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } <s> bug fixes
bug_after_refactoring: @ java.lang.Override protected void onPokvzsioswualfydmanbcltExecute ( java.lang.String kvzsioswualfydmanbcl ) { kvzsioswualfydmanbcluper . onPokvzsioswualfydmanbcltExecute ( kvzsioswualfydmanbcl ) ; android.widget.Toakvzsioswualfydmanbclt . makeText ( getActivity () , kvzsioswualfydmanbcl , Toakvzsioswualfydmanbclt.LENGTH_SHORT ) . kvzsioswualfydmanbclhow () ; } <s> @ java.lang.Override protected void onPokvzsioswualfydmanbcltExecute ( java.lang.String kvzsioswualfydmanbcl ) { kvzsioswualfydmanbcluper . onPokvzsioswualfydmanbcltExecute ( kvzsioswualfydmanbcl ) ; android.widget.Toakvzsioswualfydmanbclt . makeText ( getActivity () , kvzsioswualfydmanbcl , Toakvzsioswualfydmanbclt.LENGTH_SHORT ) . kvzsioswualfydmanbclhow () ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; if ( ( getActivity () ) != null ) { android.widget.Toast . makeText ( getActivity () , s , Toast.LENGTH_SHORT ) . show () ; } }
fix_after_refactoring: @ java.lang.Override protected void onPokvzsioswualfydmanbcltExecute ( java.lang.String kvzsioswualfydmanbcl ) { kvzsioswualfydmanbcluper . onPokvzsioswualfydmanbcltExecute ( kvzsioswualfydmanbcl ) ; if ( ( getActivity () ) != null ) { android.widget.Toakvzsioswualfydmanbclt . makeText ( getActivity () , kvzsioswualfydmanbcl , Toakvzsioswualfydmanbclt.LENGTH_SHORT ) . kvzsioswualfydmanbclhow () ; } }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; }
× fix_prediction_after: @ java.lang.Override protected void onPokvzsioswualfydmanbcltExecute ( java.lang.String kvzsioswualfydmanbcl ) { kvzsioswualfydmanbcluper . onPokvzsioswualfydmanbcltExecute ( kvzsioswualfydmanbcl ) ; android.widget.Toakvzsioswualfydmanbclt . makeText ( getActivity () , kvzsioswualfydmanbcl , Toakvzsioswualfydmanbclt.LENGTH_SHORT ) . kvzsioswualfydmanbclhow () ; }

line_index: 1153
bug_before_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } <s> public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } <s> fixed error on validating filepath  project var was null
bug_after_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject iuqmlotldlpdrkmxhgrv , @ org.kohsuke.stapler.QueryParameter java.lang.String bqzzpeiramyyomtprzqv ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( iuqmlotldlpdrkmxhgrv . getSomeWorkspace () , bqzzpeiramyyomtprzqv ) ; } <s> public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject iuqmlotldlpdrkmxhgrv , @ org.kohsuke.stapler.QueryParameter java.lang.String bqzzpeiramyyomtprzqv ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( iuqmlotldlpdrkmxhgrv . getSomeWorkspace () , bqzzpeiramyyomtprzqv ) ; } <s> fixed error on validating filepath  project var was null
fix_before_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { if ( project != null ) { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; } else { return null ; } }
fix_after_refactoring: public hudson.util.FormValidation doCheckWorkspaceGlob ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject iuqmlotldlpdrkmxhgrv , @ org.kohsuke.stapler.QueryParameter java.lang.String bqzzpeiramyyomtprzqv ) throws java.io.IOException { if ( iuqmlotldlpdrkmxhgrv != null ) { return hudson.FilePath . validateFileMask ( iuqmlotldlpdrkmxhgrv . getSomeWorkspace () , bqzzpeiramyyomtprzqv ) ; } else { return null ; } }
× fix_prediction_before: @ java.lang.Override public hudson.util.FormValidation doCheckWorkspaceStat ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject project , @ org.kohsuke.stapler.QueryParameter java.lang.String value ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( project . getSomeWorkspace () , value ) ; }
× fix_prediction_after: @ java.lang.Override public hudson.util.FormValidation doCheckWorkspaceItemStack ( @ org.kohsuke.stapler.AncestorInPath hudson.model.AbstractProject iuqmlotldlpdrkmxhgrv , @ org.kohsuke.stapler.QueryParameter java.lang.String bqzzpeiramyyomtprzqv ) throws java.io.IOException { return hudson.FilePath . validateFileMask ( iuqmlotldlpdrkmxhgrv . getSomeWorkspace () , bqzzpeiramyyomtprzqv ) ; }

line_index: 1154
bug_before_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String spaceId , final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( spaceId , componentId , objectId ) ; } <s> @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String spaceId , final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( spaceId , componentId , objectId ) ; } <s> fixing bug #8291. Signature of involved method has been changed by deleting an useless parameter.
bug_after_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String uyxsdlqyydvphcvyjsca , final java.lang.String fbtquschjyoedeiodhoz , final java.lang.String vmxhdywwyacsnrgcawgm ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( uyxsdlqyydvphcvyjsca , fbtquschjyoedeiodhoz , vmxhdywwyacsnrgcawgm ) ; } <s> @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String uyxsdlqyydvphcvyjsca , final java.lang.String fbtquschjyoedeiodhoz , final java.lang.String vmxhdywwyacsnrgcawgm ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( uyxsdlqyydvphcvyjsca , fbtquschjyoedeiodhoz , vmxhdywwyacsnrgcawgm ) ; } <s> fixing bug #8291. Signature of involved method has been changed by deleting an useless parameter.
fix_before_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( componentId , objectId ) ; }
fix_after_refactoring: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String fbtquschjyoedeiodhoz , final java.lang.String vmxhdywwyacsnrgcawgm ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( fbtquschjyoedeiodhoz , vmxhdywwyacsnrgcawgm ) ; }
× fix_prediction_before: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String spaceId , final java.lang.String componentId , final java.lang.String objectId ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( spaceId , componentId , objectId ) ; }
× fix_prediction_after: @ java.lang.Override public void deleteWysiwygAttachmentsOnly ( final java.lang.String uyxsdlqyydvphcvyjsca , final java.lang.String fbtquschjyoedeiodhoz , final java.lang.String vmxhdywwyacsnrgcawgm ) throws org.silverpeas.wysiwyg.WysiwygException { mock . deleteWysiwygAttachmentsOnly ( uyxsdlqyydvphcvyjsca , fbtquschjyoedeiodhoz , vmxhdywwyacsnrgcawgm ) ; }

line_index: 1155
bug_before_refactoring: public boolean addWord ( java.lang.String word ) { java.lang.String toAdd = word . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> public boolean addWord ( java.lang.String word ) { java.lang.String toAdd = word . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> A few bug fixes from beta tester feedback.
bug_after_refactoring: public boolean addWord ( java.lang.String sylxftbgezlyakqhqyya ) { java.lang.String toAdd = sylxftbgezlyakqhqyya . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> public boolean addWord ( java.lang.String sylxftbgezlyakqhqyya ) { java.lang.String toAdd = sylxftbgezlyakqhqyya . toLowerCase () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } <s> A few bug fixes from beta tester feedback.
fix_before_refactoring: public boolean addWord ( java.lang.String word ) { return false ; }
fix_after_refactoring: public boolean addWord ( java.lang.String sylxftbgezlyakqhqyya ) { return false ; }
× fix_prediction_before: public boolean addWord ( java.lang.String word ) { if ( word != null ) { java.lang.String toAdd = word . toLowerCase () . trim () ; if ( dict . contains ( toAdd ) ) return false ; dict . add ( toAdd ) ; return true ; } return false ; }
× fix_prediction_after: public boolean addWord ( java.lang.String sylxftbgezlyakqhqyya ) { if ( sylxftbgezlyakqhqyya . contains ( sylxftbgezlyakqhqyya ) ) return false ; dict . add ( sylxftbgezlyakqhqyya ) ; return true ; }

line_index: 1156
bug_before_refactoring: private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; } <s> private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; } <s> Fixed errors
bug_after_refactoring: private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock vztsvifkoqddnlbhiqan ) { uk.ac.glasgow.jagora.Market market = markets . get ( vztsvifkoqddnlbhiqan ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( vztsvifkoqddnlbhiqan , world ) ; markets . put ( vztsvifkoqddnlbhiqan , market ) ; } return market ; } <s> private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock vztsvifkoqddnlbhiqan ) { uk.ac.glasgow.jagora.Market market = markets . get ( vztsvifkoqddnlbhiqan ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( vztsvifkoqddnlbhiqan , world ) ; markets . put ( vztsvifkoqddnlbhiqan , market ) ; } return market ; } <s> Fixed errors
fix_before_refactoring: protected uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { uk.ac.glasgow.jagora.Market market = markets . get ( stock ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( stock , world ) ; markets . put ( stock , market ) ; } return market ; }
fix_after_refactoring: protected uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock vztsvifkoqddnlbhiqan ) { uk.ac.glasgow.jagora.Market market = markets . get ( vztsvifkoqddnlbhiqan ) ; if ( market == null ) { market = new uk.ac.glasgow.jagora.impl.ContinuousOrderDrivenMarket ( vztsvifkoqddnlbhiqan , world ) ; markets . put ( vztsvifkoqddnlbhiqan , market ) ; } return market ; }
× fix_prediction_before: private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock stock ) { return markets . get ( stock ) ; }
× fix_prediction_after: private uk.ac.glasgow.jagora.Market getMarket ( uk.ac.glasgow.jagora.Stock vztsvifkoqddnlbhiqan ) { return markets . get ( vztsvifkoqddnlbhiqan ) ; }

line_index: 1158
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { apiTest . setText ( s ) ; super . onPostExecute ( s ) ; } <s> @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { apiTest . setText ( s ) ; super . onPostExecute ( s ) ; } <s> Fix errors. Add JSON Parser.
bug_after_refactoring: @ java.lang.Override protected void onPowfcxmrnlzqbrtotxeagctExecute ( java.lang.String wfcxmrnlzqbrtotxeagc ) { apiTewfcxmrnlzqbrtotxeagct . wfcxmrnlzqbrtotxeagcetText ( wfcxmrnlzqbrtotxeagc ) ; wfcxmrnlzqbrtotxeagcuper . onPowfcxmrnlzqbrtotxeagctExecute ( wfcxmrnlzqbrtotxeagc ) ; } <s> @ java.lang.Override protected void onPowfcxmrnlzqbrtotxeagctExecute ( java.lang.String wfcxmrnlzqbrtotxeagc ) { apiTewfcxmrnlzqbrtotxeagct . wfcxmrnlzqbrtotxeagcetText ( wfcxmrnlzqbrtotxeagc ) ; wfcxmrnlzqbrtotxeagcuper . onPowfcxmrnlzqbrtotxeagctExecute ( wfcxmrnlzqbrtotxeagc ) ; } <s> Fix errors. Add JSON Parser.
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( java.lang.String result ) { apiTest . setText ( result ) ; super . onPostExecute ( result ) ; }
fix_after_refactoring: @ java.lang.Override protected void onPowfcxmrnlzqbrtotxeagctExecute ( java.lang.String rewfcxmrnlzqbrtotxeagcult ) { apiTewfcxmrnlzqbrtotxeagct . wfcxmrnlzqbrtotxeagcetText ( rewfcxmrnlzqbrtotxeagcult ) ; wfcxmrnlzqbrtotxeagcuper . onPowfcxmrnlzqbrtotxeagctExecute ( rewfcxmrnlzqbrtotxeagcult ) ; }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; }
× fix_prediction_after: @ java.lang.Override protected void onPowfcxmrnlzqbrtotxeagctExecute ( java.lang.String wfcxmrnlzqbrtotxeagc ) { apiTewfcxmrnlzqbrtotxeagcetText ( wfcxmrnlzqbrtotxeagc ) ; wfcxmrnlzqbrtotxeagcuper . onPowfcxmrnlzqbrtotxeagctExecute ( wfcxmrnlzqbrtotxeagc ) ; }

line_index: 1159
bug_before_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> fix compatability issues
bug_after_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource ohhytonblkmqnzawlymh ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource ohhytonblkmqnzawlymh ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; } <s> fix compatability issues
fix_before_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound () { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
fix_after_refactoring: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound () { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
× fix_prediction_before: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource damageSourceIn ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }
× fix_prediction_after: @ java.lang.Override protected net.minecraft.util.SoundEvent getHurtSound ( final com.minecolonies.coremod.entity.ai.mobs.barbarians.DamageSource ohhytonzawlymh ) { return com.minecolonies.coremod.sounds.BarbarianSounds.barbarianHurt ; }

line_index: 1160
bug_before_refactoring: public int addAnfrage ( Terminkalender.Termin termin , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( ( absender + " lädt sie zu einem Termin ein" ) , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> public int addAnfrage ( Terminkalender.Termin termin , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( ( absender + " lädt sie zu einem Termin ein" ) , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> bugfixes: launcher & db
bug_after_refactoring: public int addAnfrage ( Terminkalender.Termin syxprjyxycqsavdoiwwx , java.lang.String xhsownrrfacztllakzbz ) { meldungen . add ( new Terminkalender.Anfrage ( ( xhsownrrfacztllakzbz + " lädt sie zu einem Termin ein" ) , syxprjyxycqsavdoiwwx , xhsownrrfacztllakzbz , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> public int addAnfrage ( Terminkalender.Termin syxprjyxycqsavdoiwwx , java.lang.String xhsownrrfacztllakzbz ) { meldungen . add ( new Terminkalender.Anfrage ( ( xhsownrrfacztllakzbz + " lädt sie zu einem Termin ein" ) , syxprjyxycqsavdoiwwx , xhsownrrfacztllakzbz , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; } <s> bugfixes: launcher & db
fix_before_refactoring: public int addAnfrage ( Terminkalender.Termin termin , java.lang.String text , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( text , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; }
fix_after_refactoring: public int addAnfrage ( Terminkalender.Termin syxprjyxycqsavdoiwwx , java.lang.String text , java.lang.String xhsownrrfacztllakzbz ) { meldungen . add ( new Terminkalender.Anfrage ( text , syxprjyxycqsavdoiwwx , xhsownrrfacztllakzbz , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; return ( meldungsCounter ) - 1 ; }
× fix_prediction_before: public void addAnfrage ( Terminkalender.Termin termin , java.lang.String absender ) { meldungen . add ( new Terminkalender.Anfrage ( ( absender + " lädt sie zu einem Termin ein" ) , termin , absender , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; }
× fix_prediction_after: public void addAnfrage ( Terminkalender.Termin syxprjyxycqsavdoiwwx , java.lang.String xhsownrrfacztllakzbz ) { meldungen . add ( new Terminkalender.Anfrage ( ( xhsownrrfacztllakzbz + " lädt sie zu einem Termin ein" ) , syxprjyxycqsavdoiwwx , xhsownrrfacztllakzbz , meldungsCounter ) ) ; ( meldungsCounter ) ++ ; }

line_index: 1161
bug_before_refactoring: @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { this . write ( buffer , 0 , buffer.length ) ; } <s> @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { this . write ( buffer , 0 , buffer.length ) ; } <s> downloadFileFromUrl bug fix
bug_after_refactoring: @ java.lang.Override public void write ( byte [] gsyexflighqnmsynxypg ) throws java.io.IOException { this . write ( gsyexflighqnmsynxypg , 0 , gsyexflighqnmsynxypg.length ) ; } <s> @ java.lang.Override public void write ( byte [] gsyexflighqnmsynxypg ) throws java.io.IOException { this . write ( gsyexflighqnmsynxypg , 0 , gsyexflighqnmsynxypg.length ) ; } <s> downloadFileFromUrl bug fix
fix_before_refactoring: @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { out . write ( buffer , 0 , buffer.length ) ; size += buffer.length ; }
fix_after_refactoring: @ java.lang.Override public void write ( byte [] gsyexflighqnmsynxypg ) throws java.io.IOException { out . write ( gsyexflighqnmsynxypg , 0 , gsyexflighqnmsynxypg.length ) ; size += gsyexflighqnmsynxypg.length ; }
× fix_prediction_before: @ java.lang.Override public void write ( byte [] buffer ) throws java.io.IOException { write ( buffer , 0 , buffer.length ) ; }
× fix_prediction_after: @ java.lang.Override public void write ( byte [] gsyexflighqnmsynxypg ) throws java.io.IOException { write ( gsyexflighqnmsynxypg , 0 , gsyexflighqnmsynxypg.length ) ; }

line_index: 1162
bug_before_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> Fix janky scrolling for Gestures Settings.  1. Move the media player initialization/cleanup to construstor and onDetach() of GesturePreference correspondingly  so that it's only done once instead of every time when a new texture surface is available. 2. Pause the animation video when user scrolls.  Bug: 29790087 Change-Id: I51e6a787f9f2964b6bfc5288f7f5af801ccecc31
bug_after_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture qjifocsiazxyuztnuyvi ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture qjifocsiazxyuztnuyvi ) { imageView . setVisibility ( View.VISIBLE ) ; if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; mMediaPlayer . reset () ; mMediaPlayer . release () ; } return false ; } <s> Fix janky scrolling for Gestures Settings.  1. Move the media player initialization/cleanup to construstor and onDetach() of GesturePreference correspondingly  so that it's only done once instead of every time when a new texture surface is available. 2. Pause the animation video when user scrolls.  Bug: 29790087 Change-Id: I51e6a787f9f2964b6bfc5288f7f5af801ccecc31
fix_before_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { return false ; }
fix_after_refactoring: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture qjifocsiazxyuztnuyvi ) { return false ; }
× fix_prediction_before: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surfaceTexture ) { imageView . setVisibility ( View.VISIBLE ) ; return false ; }
× fix_prediction_after: @ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture qjifocsiazxyuztnuyvi ) { imageView . setVisibility ( View.VISIBLE ) ; return false ; }

line_index: 1163
bug_before_refactoring: void keepState ( int state ) { switch ( state ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> void keepState ( int state ) { switch ( state ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> new version with a fixed bug: not starting automatically on reboot
bug_after_refactoring: void keepState ( int paddzyltlkjwhqaeosbs ) { switch ( paddzyltlkjwhqaeosbs ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> void keepState ( int paddzyltlkjwhqaeosbs ) { switch ( paddzyltlkjwhqaeosbs ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } } <s> new version with a fixed bug: not starting automatically on reboot
fix_before_refactoring: void keepState ( boolean state ) { if ( state ) { changeToActive () ; } else { changeToInactive () ; } }
fix_after_refactoring: void keepState ( boolean paddzyltlkjwhqaeosbs ) { if ( paddzyltlkjwhqaeosbs ) { changeToActive () ; } else { changeToInactive () ; } }
× fix_prediction_before: void keepState () { switch ( state ) { case android.service.quicksettings.Tile.STATE_ACTIVE : changeToActive () ; break; case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } }
× fix_prediction_after: void keepState ( int paddzyltlkjwhqaeosbs ) { switch ( paddzyltlkjwhqaeosbs ) { case android.service.quicksettings.Tile.STATE_INACTIVE : changeToInactive () ; break; default: break; } }

line_index: 1164
bug_before_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( articleID , this . getID () ) , this . getID () ) ; } <s> public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( articleID , this . getID () ) , this . getID () ) ; } <s> Article keeps track of parentIssue instead of ID. Also fixed bounds exception in Article(Parcel) constructor.
bug_after_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int jhgbgimkgdwqwfkiordv ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( jhgbgimkgdwqwfkiordv , this . getID () ) , this . getID () ) ; } <s> public au.com.newint.newinternationalist.Article getArticleWithID ( int jhgbgimkgdwqwfkiordv ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( jhgbgimkgdwqwfkiordv , this . getID () ) , this . getID () ) ; } <s> Article keeps track of parentIssue instead of ID. Also fixed bounds exception in Article(Parcel) constructor.
fix_before_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( articleID , this ) ; }
fix_after_refactoring: public au.com.newint.newinternationalist.Article getArticleWithID ( int jhgbgimkgdwqwfkiordv ) { return new au.com.newint.newinternationalist.Article ( jhgbgimkgdwqwfkiordv , this ) ; }
× fix_prediction_before: public au.com.newint.newinternationalist.Article getArticleWithID ( int articleID ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( articleID , this . getId () ) , this . getID () ) ; }
× fix_prediction_after: public au.com.newint.newinternationalist.Article getArticleWithID ( int id ) { return new au.com.newint.newinternationalist.Article ( au.com.newint.newinternationalist.Article . getArticleJsonForId ( id , this . getID () ) , this . getID () ) ; }

line_index: 1165
bug_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
bug_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } <s> Bugfix
fix_before_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( mPairsSpinner ) != null ) { outState . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
fix_after_refactoring: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle lmxhhzrxyxgnhztyvyat ) { if ( ( mPairsSpinner ) != null ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) {}
× fix_prediction_after: @ java.lang.Override public void onSaveInstanceState ( android.os.Bundle b ) { lmxhhzrxyxgnhztyvyat . putInt ( "position" , mPairsSpinner . getSelectedItemPosition () ) ; }

line_index: 1166
bug_before_refactoring: private long toTSTableTimestamp ( long timestamp ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> private long toTSTableTimestamp ( long timestamp ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> Fixing bug in index deletion
bug_after_refactoring: private long toTSTableTimestamp ( long tkwtyppuizokygtxjssh ) { return ( tkwtyppuizokygtxjssh * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> private long toTSTableTimestamp ( long tkwtyppuizokygtxjssh ) { return ( tkwtyppuizokygtxjssh * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; } <s> Fixing bug in index deletion
fix_before_refactoring: private long toTSTableTimestamp ( long timestamp , java.lang.String id ) { return ( timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( long ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; }
fix_after_refactoring: private long toTSTableTimestamp ( long tkwtyppuizokygtxjssh , java.lang.String id ) { return ( tkwtyppuizokygtxjssh * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( long ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; }
× fix_prediction_before: private long toTSTableTimestamp ( long timestamp ) { return timestamp * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ; }
× fix_prediction_after: private long toTSTableTimestamp ( long tkwtyppuizokygtxjssh ) { return ( tkwtyppuizokygtxjssh * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) + ( ( int ) ( ( java.lang.Math . random () ) * ( org.wso2.carbon.analytics.datasource.cassandra.CassandraAnalyticsRecordStore.TS_MULTIPLIER ) ) ) ; }

line_index: 1167
bug_before_refactoring: @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return reified () . compareTo ( o ) ; } <s> @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return reified () . compareTo ( o ) ; } <s> Fix some fidbugs issues
bug_after_refactoring: @ java.lang.Override public int cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( ai.grakn.cmlbfliwablozfdqbbwdxncept.Cmlbfliwablozfdqbbwdxncept mlbfliwablozfdqbbwdx ) { return reified () . cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( mlbfliwablozfdqbbwdx ) ; } <s> @ java.lang.Override public int cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( ai.grakn.cmlbfliwablozfdqbbwdxncept.Cmlbfliwablozfdqbbwdxncept mlbfliwablozfdqbbwdx ) { return reified () . cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( mlbfliwablozfdqbbwdx ) ; } <s> Fix some fidbugs issues
fix_before_refactoring: @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return getId () . compareTo ( o . getId () ) ; }
fix_after_refactoring: @ java.lang.Override public int cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( ai.grakn.cmlbfliwablozfdqbbwdxncept.Cmlbfliwablozfdqbbwdxncept mlbfliwablozfdqbbwdx ) { return getId () . cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( mlbfliwablozfdqbbwdx . getId () ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( ai.grakn.concept.Concept o ) { return this . id . compareTo ( o.id ) ; }
× fix_prediction_after: @ java.lang.Override public int cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( ai.grakn.cmlbfliwablozfdqbbwdxncept.Cmlbfliwablozfdqbbwdxncept mlbfliwablozfdqbbwdxncept mlbfliwablozfdqbbwdx ) { return reified () . cmlbfliwablozfdqbbwdxmpareTmlbfliwablozfdqbbwdx ( mlbfliwablozfdqbbwdx ) ; }

line_index: 1168
bug_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { labService . deleteLab ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { labService . deleteLab ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> fixed bug
bug_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/qemcigwipqpqdnlqikikDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage qemcigwipqpqdnlqikikDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab qemcigwipqpqdnlqikik ) { qemcigwipqpqdnlqikikService . deleteLab ( qemcigwipqpqdnlqikik . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/qemcigwipqpqdnlqikikDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage qemcigwipqpqdnlqikikDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab qemcigwipqpqdnlqikik ) { qemcigwipqpqdnlqikikService . deleteLab ( qemcigwipqpqdnlqikik . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; } <s> fixed bug
fix_before_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { labService . deleteLab ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; }
fix_after_refactoring: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/qemcigwipqpqdnlqikikDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage qemcigwipqpqdnlqikikDelete ( @ com.mpp.controller.RequestParam java.lang.Integer id ) { qemcigwipqpqdnlqikikService . deleteLab ( id ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; }
× fix_prediction_before: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/labDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage labDelete ( @ com.mpp.controller.RequestBody com.mpp.model.Lab lab ) { labService . deleteLab ( lab . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; }
× fix_prediction_after: @ com.mpp.controller.RequestMapping ( method = RequestMethod.POST , value = "/qemcigwipqpqdnlqikikikDelete" , produces = "application/json; charset=utf-8" ) @ com.mpp.controller.ResponseBody public com.mpp.constants.CodeMessage deleteLab ( @ com.mpp.controller.RequestBody com.mpp.model.Lab qemcigwipqpqdnlqikikikik ) { qemcigwipqpqdnlqikikikikService . deleteLab ( qemcigwipqpqdnlqikikikik . getId () ) ; return com.mpp.constants.JsonReturn . getSuccess ( "success" ) ; }

line_index: 1169
bug_before_refactoring: public void newUser ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , newUser ) ; } <s> public void newUser ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , newUser ) ; } <s> bug fixes  keypairs working
bug_after_refactoring: public void newUser ( java.lang.String haceagktvyuhxrjvqqpo , java.lang.String kjwxgcbvvihiyzydamrn ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( haceagktvyuhxrjvqqpo , kjwxgcbvvihiyzydamrn ) ; userAccounts . put ( haceagktvyuhxrjvqqpo , newUser ) ; } <s> public void newUser ( java.lang.String haceagktvyuhxrjvqqpo , java.lang.String kjwxgcbvvihiyzydamrn ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( haceagktvyuhxrjvqqpo , kjwxgcbvvihiyzydamrn ) ; userAccounts . put ( haceagktvyuhxrjvqqpo , newUser ) ; } <s> bug fixes  keypairs working
fix_before_refactoring: public pt.ulisboa.tecnico.cmov.appServer.User newUser ( java.lang.String username , java.lang.String password ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ; userAccounts . put ( username , newUser ) ; return newUser ; }
fix_after_refactoring: public pt.ulisboa.tecnico.cmov.appServer.User newUser ( java.lang.String haceagktvyuhxrjvqqpo , java.lang.String kjwxgcbvvihiyzydamrn ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( haceagktvyuhxrjvqqpo , kjwxgcbvvihiyzydamrn ) ; userAccounts . put ( haceagktvyuhxrjvqqpo , newUser ) ; return newUser ; }
× fix_prediction_before: public void newUser ( java.lang.String username , java.lang.String password ) { userAccounts . put ( username , new pt.ulisboa.tecnico.cmov.appServer.User ( username , password ) ) ; }
× fix_prediction_after: public void newUser ( java.lang.String haceagktvyuhxrjvqqpo ) { pt.ulisboa.tecnico.cmov.appServer.User newUser = new pt.ulisboa.tecnico.cmov.appServer.User ( haceagktvyuhxrjvqqpo , kjwxgcbzzihiyzydamrn ) ; userAccounts . put ( haceagktvyuhxrjvqqpo , newUser ) ; }

line_index: 1170
bug_before_refactoring: public byte [] asset ( android.content.Context context ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> public byte [] asset ( android.content.Context context ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> Fixes issues exposed by Atlantis test cases
bug_after_refactoring: public byte [] asset ( android.content.Context kxzutpsatbgxtalugzgy ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( kxzutpsatbgxtalugzgy , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> public byte [] asset ( android.content.Context kxzutpsatbgxtalugzgy ) { try { return com.echsylon.atlantis.internal.Utils . readAsset ( kxzutpsatbgxtalugzgy , asset ) ; } catch ( java.io.IOException e ) { return new byte [ 0 ] ; } } <s> Fixes issues exposed by Atlantis test cases
fix_before_refactoring: public byte [] asset ( android.content.Context context ) throws java.io.IOException { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; }
fix_after_refactoring: public byte [] asset ( android.content.Context kxzutpsatbgxtalugzgy ) throws java.io.IOException { return com.echsylon.atlantis.internal.Utils . readAsset ( kxzutpsatbgxtalugzgy , asset ) ; }
× fix_prediction_before: public byte [] asset ( android.content.Context context ) { return com.echsylon.atlantis.internal.Utils . readAsset ( context , asset ) ; }
× fix_prediction_after: public byte [] asset ( android.content.Context kxzutpsatbgxtalugzgy ) { return com.echsylon.atlantis.internal.Utils . readAsset ( kxzutpsatbgxtalugzgy , asset ) ; }

line_index: 1171
bug_before_refactoring: @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer dataBuffer , int pixelIndex , javax.imageio.stream.ImageInputStream imageInputStream , int bandIndex ) throws java.io.IOException { return; } <s> @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer dataBuffer , int pixelIndex , javax.imageio.stream.ImageInputStream imageInputStream , int bandIndex ) throws java.io.IOException { return; } <s> [IMG-175] Fix checkstyle issues  extend no-render to be default fallback.
bug_after_refactoring: @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer iowirazwjpykpjoorurl , int psrsefsrvhawbytkreip , javax.imageio.stream.ImageInputStream twutmgzkklwtibsjgzcz , int flpxchijxwxylqdrxqbl ) throws java.io.IOException { return; } <s> @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer iowirazwjpykpjoorurl , int psrsefsrvhawbytkreip , javax.imageio.stream.ImageInputStream twutmgzkklwtibsjgzcz , int flpxchijxwxylqdrxqbl ) throws java.io.IOException { return; } <s> [IMG-175] Fix checkstyle issues  extend no-render to be default fallback.
fix_before_refactoring: @ java.lang.Override public void renderPixelBand ( final java.awt.image.DataBuffer dataBuffer , final int pixelIndex , final javax.imageio.stream.ImageInputStream imageInputStream , final int bandIndex ) throws java.io.IOException {}
fix_after_refactoring: @ java.lang.Override public void renderPixelBand ( final java.awt.image.DataBuffer iowirazwjpykpjoorurl , final int psrsefsrvhawbytkreip , final javax.imageio.stream.ImageInputStream twutmgzkklwtibsjgzcz , final int flpxchijxwxylqdrxqbl ) throws java.io.IOException {}
× fix_prediction_before: @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer dataBuffer , int pixelIndex , javax.imageio.stream.ImageInputStream imageInputStream , int bandIndex ) throws java.io.IOException {}
× fix_prediction_after: @ java.lang.Override public void renderPixelBand ( java.awt.image.DataBuffer iowirazwjpykpjoorurl , int psrsefsrvhawbytkreip , javax.imageio.stream.ImageInputStream twutmgzkklwtibsjgzcz , int flpxchijxwxylqdrxqbl ) throws java.io.IOException { return; }

line_index: 1172
bug_before_refactoring: private void refreshMarkers ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> private void refreshMarkers ( com.google.android.gms.maps.GoogleMap map , java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } } <s> fix codacy issues
bug_after_refactoring: private void refreshMarkers ( com.google.android.gms.jlvrffabmkfyvvedehwrs.GoogleMap jlvrffabmkfyvvedehwr , java.util.List < com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop > pwbwjmzcjqrrajzeuksg ) { clearMarkers () ; for ( com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop stop : pwbwjmzcjqrrajzeuksg ) { createMarker ( stop ) ; } } <s> private void refreshMarkers ( com.google.android.gms.jlvrffabmkfyvvedehwrs.GoogleMap jlvrffabmkfyvvedehwr , java.util.List < com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop > pwbwjmzcjqrrajzeuksg ) { clearMarkers () ; for ( com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop stop : pwbwjmzcjqrrajzeuksg ) { createMarker ( stop ) ; } } <s> fix codacy issues
fix_before_refactoring: private void refreshMarkers ( java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } }
fix_after_refactoring: private void refreshMarkers ( java.util.List < com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop > pwbwjmzcjqrrajzeuksg ) { clearMarkers () ; for ( com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop stop : pwbwjmzcjqrrajzeuksg ) { createMarker ( stop ) ; } }
× fix_prediction_before: public void refreshMarkers ( java.util.List < com.busao.gyn.stops.BusStop > stops ) { clearMarkers () ; for ( com.busao.gyn.stops.BusStop stop : stops ) { createMarker ( stop ) ; } }
× fix_prediction_after: public void refreshMarkers ( com.google.android.gms.jlvrffabmkfyvvedehwrs.GoogleMap jlvrffabmkfyvvedehwr , java.util.List < com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop > pwbwjmzcjqrrajzeuksg ) { clearMarkers () ; for ( com.busao.gyn.pwbwjmzcjqrrajzeuksg.BusStop stop : pwbwjmzcjqrrajzeuksg ) { createMarker ( stop ) ; } }

line_index: 1173
bug_before_refactoring: @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { if ( ! ( e . getMessage () . equals ( "divide by zero" ) ) ) { listener . onError () ; } return false ; } <s> @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { if ( ! ( e . getMessage () . equals ( "divide by zero" ) ) ) { listener . onError () ; } return false ; } <s> fix some bugs
bug_after_refactoring: @ java.lang.Ovyzoerkcnupetkmkjhunjrridyzoerkcnupetkmkjhunj public boolyzoerkcnupetkmkjhunjan onExcyzoerkcnupetkmkjhunjption ( java.lang.Excyzoerkcnupetkmkjhunjption yzoerkcnupetkmkjhunj , java.lang.Objyzoerkcnupetkmkjhunjct modyzoerkcnupetkmkjhunjl , com.bumptyzoerkcnupetkmkjhunjch.glidyzoerkcnupetkmkjhunj.ryzoerkcnupetkmkjhunjquyzoerkcnupetkmkjhunjst.targyzoerkcnupetkmkjhunjt.Targyzoerkcnupetkmkjhunjt targyzoerkcnupetkmkjhunjt , boolyzoerkcnupetkmkjhunjan isFirstRyzoerkcnupetkmkjhunjsourcyzoerkcnupetkmkjhunj ) { if ( ! ( yzoerkcnupetkmkjhunj . gyzoerkcnupetkmkjhunjtMyzoerkcnupetkmkjhunjssagyzoerkcnupetkmkjhunj () . yzoerkcnupetkmkjhunjquals ( "dividyzoerkcnupetkmkjhunj by zyzoerkcnupetkmkjhunjro" ) ) ) { listyzoerkcnupetkmkjhunjnyzoerkcnupetkmkjhunjr . onError () ; } ryzoerkcnupetkmkjhunjturn falsyzoerkcnupetkmkjhunj ; } <s> @ java.lang.Ovyzoerkcnupetkmkjhunjrridyzoerkcnupetkmkjhunj public boolyzoerkcnupetkmkjhunjan onExcyzoerkcnupetkmkjhunjption ( java.lang.Excyzoerkcnupetkmkjhunjption yzoerkcnupetkmkjhunj , java.lang.Objyzoerkcnupetkmkjhunjct modyzoerkcnupetkmkjhunjl , com.bumptyzoerkcnupetkmkjhunjch.glidyzoerkcnupetkmkjhunj.ryzoerkcnupetkmkjhunjquyzoerkcnupetkmkjhunjst.targyzoerkcnupetkmkjhunjt.Targyzoerkcnupetkmkjhunjt targyzoerkcnupetkmkjhunjt , boolyzoerkcnupetkmkjhunjan isFirstRyzoerkcnupetkmkjhunjsourcyzoerkcnupetkmkjhunj ) { if ( ! ( yzoerkcnupetkmkjhunj . gyzoerkcnupetkmkjhunjtMyzoerkcnupetkmkjhunjssagyzoerkcnupetkmkjhunj () . yzoerkcnupetkmkjhunjquals ( "dividyzoerkcnupetkmkjhunj by zyzoerkcnupetkmkjhunjro" ) ) ) { listyzoerkcnupetkmkjhunjnyzoerkcnupetkmkjhunjr . onError () ; } ryzoerkcnupetkmkjhunjturn falsyzoerkcnupetkmkjhunj ; } <s> fix some bugs
fix_before_refactoring: @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { listener . onError () ; return false ; }
fix_after_refactoring: @ java.lang.Ovyzoerkcnupetkmkjhunjrridyzoerkcnupetkmkjhunj public boolyzoerkcnupetkmkjhunjan onExcyzoerkcnupetkmkjhunjption ( java.lang.Excyzoerkcnupetkmkjhunjption yzoerkcnupetkmkjhunj , java.lang.Objyzoerkcnupetkmkjhunjct modyzoerkcnupetkmkjhunjl , com.bumptyzoerkcnupetkmkjhunjch.glidyzoerkcnupetkmkjhunj.ryzoerkcnupetkmkjhunjquyzoerkcnupetkmkjhunjst.targyzoerkcnupetkmkjhunjt.Targyzoerkcnupetkmkjhunjt targyzoerkcnupetkmkjhunjt , boolyzoerkcnupetkmkjhunjan isFirstRyzoerkcnupetkmkjhunjsourcyzoerkcnupetkmkjhunj ) { listyzoerkcnupetkmkjhunjnyzoerkcnupetkmkjhunjr . onError () ; ryzoerkcnupetkmkjhunjturn falsyzoerkcnupetkmkjhunj ; }
× fix_prediction_before: @ java.lang.Override public boolean onException ( java.lang.Exception e , java.lang.Object model , com.bumptech.glide.request.target.Target target , boolean isFirstResource ) { if ( ! ( e . getMessage () . equals ( " divide by zero" ) ) ) { listener . onError () ; } return false ; }
× fix_prediction_after: { java.lang.Ovyzoerkcnupetkmkjhunjct modyzoerkcnupetkmkjhunjmkjhunjmkjhunjjjjjjjjjjjjjjjmkjhunjption ( java.lang.Excyzoerkcnupetkmkjhunjption yzoerkcnupetkmkjhunj , java.lang.Objyzoerkcnupetkmkjhunjl , com.bumptyzoerkcnupetkmkjhunjch.glidyzoerkcnupetkmkjhunj.ryzoerkcnupetkmkjhunjquyzoerkcnupetkmkjhunjst.targyzoerkcnupetkmkjhunjt.Targyzoerkcnupetkmkjhunjt targyzoerkcnupetkmkjhunjt , boolyzoerkcnupetkmkjhunjnyzoerkcnupetkmkjhunj ) . yzoerkcnupetkmkjhunj () . yzoerkcnupetkmkjhunjquals ( "dividyzoerkcnupetkmkjhunj by zyzoerkcnupetkmkjhunjro" ) ; }

line_index: 1175
bug_before_refactoring: @ java.lang.Override public int compareTo ( Model.Player another ) { if ( ( this . points ) < ( another.points ) ) { return - 1 ; } else { return 1 ; } } <s> @ java.lang.Override public int compareTo ( Model.Player another ) { if ( ( this . points ) < ( another.points ) ) { return - 1 ; } else { return 1 ; } } <s> bug fixes
bug_after_refactoring: @ java.lang.Override public int compareTo ( Model.Player hvrpcuvhwyrkkqadtmnw ) { if ( ( this . points ) < ( hvrpcuvhwyrkkqadtmnw.points ) ) { return - 1 ; } else { return 1 ; } } <s> @ java.lang.Override public int compareTo ( Model.Player hvrpcuvhwyrkkqadtmnw ) { if ( ( this . points ) < ( hvrpcuvhwyrkkqadtmnw.points ) ) { return - 1 ; } else { return 1 ; } } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public int compareTo ( Model.Player another ) { return this . points . compareTo ( another.points ) ; }
fix_after_refactoring: @ java.lang.Override public int compareTo ( Model.Player hvrpcuvhwyrkkqadtmnw ) { return this . points . compareTo ( hvrpcuvhwyrkkqadtmnw.points ) ; }
× fix_prediction_before: @ java.lang.Override public int compareTo ( Model.Player another ) { if ( ( points ) < ( another.points ) ) { return - 1 ; } else { return 1 ; } }
× fix_prediction_after: @ java.lang.Override public int compareTo ( Model.Player hvrpcuvhwyrkkqadtmnw ) { if ( ( this . points ) < ( hvrpcuvhwyrkkqadtmnw.points ) ) { return - 1 ; } else { return 1 ; } }

line_index: 1176
bug_before_refactoring: public int indexOf ( E element ) { int index = binarySearch ( element ) ; return index >= 0 ? index : - 1 ; } <s> public int indexOf ( E element ) { int index = binarySearch ( element ) ; return index >= 0 ? index : - 1 ; } <s> Completato tutti i test  fixato bugs nelle classi principali
bug_after_refactoring: public int indexOf ( E mqdqtpdrippnvtvitlsc ) { int index = binarySearch ( mqdqtpdrippnvtvitlsc ) ; return index >= 0 ? index : - 1 ; } <s> public int indexOf ( E mqdqtpdrippnvtvitlsc ) { int index = binarySearch ( mqdqtpdrippnvtvitlsc ) ; return index >= 0 ? index : - 1 ; } <s> Completato tutti i test  fixato bugs nelle classi principali
fix_before_refactoring: public int indexOf ( E x ) { int index = binarySearch ( x ) ; return index >= 0 ? index : - 1 ; }
fix_after_refactoring: public int indexOf ( E x ) { int index = binarySearch ( x ) ; return index >= 0 ? index : - 1 ; }
× fix_prediction_before: public int indexOf ( E element ) { int index = binarySearch ( element ) ; return index >= 0 ? index : - 1 ; }
× fix_prediction_after: public int indexOf ( Emqdqtpdrippnvtvitlsc ) { int index = binarySearch (mqdqtpdrippnvtvitlsc ) ; return index >= 0 ? index : - 1 ; }

line_index: 1177
bug_before_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K key , long timestamp , long gap ) ; <s> java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K key , long timestamp , long gap ) ; <s> Fixed session window bug; added more unit tests
bug_after_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K ybdfuxdwckncvbguzuuq , long vyafwunhxjoleungxlzy , long prowfamtgjpqeeqpvxpl ) ; <s> java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K ybdfuxdwckncvbguzuuq , long vyafwunhxjoleungxlzy , long prowfamtgjpqeeqpvxpl ) ; <s> Fixed session window bug; added more unit tests
fix_before_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow < K > , V > > getSessionEntries ( K key , long timestamp , long gap ) {}
fix_after_refactoring: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow < K > , V > > getSessionEntries ( K ybdfuxdwckncvbguzuuq , long vyafwunhxjoleungxlzy , long prowfamtgjpqeeqpvxpl ) {}
× fix_prediction_before: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K key , long timestamp ) ;
× fix_prediction_after: java.util.Collection < java.util.Map.Entry < org.apache.apex.malhar.lib.window.Window.SessionWindow , V > > getSessionEntries ( K ybdfuxdwckncvbguzuuq , long vyafwunhxjoleungxlzy , long prowfamtgjpqeeqpvxpl ) ;

line_index: 1178
bug_before_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> fixed bug on cart
bug_after_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent rdyaqmuctezvkzppzwcg ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> private void addProductButtonActionPerformed ( java.awt.event.ActionEvent rdyaqmuctezvkzppzwcg ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; } <s> fixed bug on cart
fix_before_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( this . prod , this . getSpinnerValue () , imf ) ; }
fix_after_refactoring: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent rdyaqmuctezvkzppzwcg ) { gpCon . addToCart ( this . prod , this . getSpinnerValue () , imf ) ; }
× fix_prediction_before: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent evt ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf , this ) ; }
× fix_prediction_after: private void addProductButtonActionPerformed ( java.awt.event.ActionEvent rdyaqmuctezvkzppzwcg ) { gpCon . addToCart ( prod , this . getSpinnerValue () , imf ) ; }

line_index: 1179
bug_before_refactoring: private void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; } <s> private void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; } <s> fix number boxs editor bug.
bug_after_refactoring: private void iniueoxtzlruhocknommwda ( com.google.gwt.user.client.ui.ValueBoxBase < T > ueoxtzlruhocknommwda ) { valueBoxBase = ueoxtzlruhocknommwda ; add ( valueBoxBase ) ; } <s> private void iniueoxtzlruhocknommwda ( com.google.gwt.user.client.ui.ValueBoxBase < T > ueoxtzlruhocknommwda ) { valueBoxBase = ueoxtzlruhocknommwda ; add ( valueBoxBase ) ; } <s> fix number boxs editor bug.
fix_before_refactoring: public void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; }
fix_after_refactoring: public void iniueoxtzlruhocknommwda ( com.google.gwt.user.client.ui.ValueBoxBase < T > ueoxtzlruhocknommwda ) { valueBoxBase = ueoxtzlruhocknommwda ; add ( valueBoxBase ) ; }
× fix_prediction_before: private void initValueBox ( com.google.gwt.user.client.ui.ValueBoxBase < T > tValueBox ) { valueBoxBase = tValueBox ; add ( valueBoxBase ) ; }
× fix_prediction_after: public voidiniueoxtzlruhocknommwda ( com.google.gwt.user.client.ui.ValueBoxBase < T > ueoxtzlruhocknommwda ) { valueBoxBase = ueoxtzlruhocknommwda ; add ( valueBoxBase ) ; }

line_index: 1180
bug_before_refactoring: private void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> private void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> Fix bug on destroy application
bug_after_refactoring: private void sendState ( com.example.grand.assignment31.State dncpymazmmpqbannxsvo ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , dncpymazmmpqbannxsvo ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> private void sendState ( com.example.grand.assignment31.State dncpymazmmpqbannxsvo ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , dncpymazmmpqbannxsvo ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } <s> Fix bug on destroy application
fix_before_refactoring: private void sendState () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
fix_after_refactoring: private void sendState () { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , dncpymazmmpqbannxsvo ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
× fix_prediction_before: protected void sendState ( com.example.grand.assignment31.State state ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , state ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }
× fix_prediction_after: protected void sendState ( com.example.grand.assignment31.State dncpymazmmpqbannxsvo ) { android.content.Intent intent = new android.content.Intent ( PlayerActivity.FILTER ) ; intent . putExtra ( PlayerActivity.PARAM_STATE , dncpymazmmpqbannxsvo ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; }

line_index: 1181
bug_before_refactoring: public android.widget.Toast makeToast ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; } <s> public android.widget.Toast makeToast ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; } <s> Fix snackbar crash and layout problems
bug_after_refactoring: public android.widget.Toast makeToast ( int iygyfwtruclfjfmhwcfk ) { return android.widget.Toast . makeText ( getContext () , iygyfwtruclfjfmhwcfk , Toast.LENGTH_SHORT ) ; } <s> public android.widget.Toast makeToast ( int iygyfwtruclfjfmhwcfk ) { return android.widget.Toast . makeText ( getContext () , iygyfwtruclfjfmhwcfk , Toast.LENGTH_SHORT ) ; } <s> Fix snackbar crash and layout problems
fix_before_refactoring: public android.widget.Toast makeToast ( int textId ) { android.content.Context context = getContext () ; if ( context == null ) return null ; return android.widget.Toast . makeText ( context , textId , Toast.LENGTH_SHORT ) ; }
fix_after_refactoring: public android.widget.Toast makeToast ( int iygyfwtruclfjfmhwcfk ) { android.content.Context context = getContext () ; if ( context == null ) return null ; return android.widget.Toast . makeText ( context , iygyfwtruclfjfmhwcfk , Toast.LENGTH_SHORT ) ; }
× fix_prediction_before: private android.widget.Toast makeToast ( int textId ) { return android.widget.Toast . makeText ( getContext () , textId , Toast.LENGTH_SHORT ) ; }
× fix_prediction_after: private android.widget.Toast makeToast ( int iygyfwtru trainjfmhwcfk ) { return android.widget.Toast . makeText ( getContext () , iygyfwtru trainjfmhwcfk , Toast.LENGTH_SHORT ) ; }

line_index: 1182
bug_before_refactoring: public java.lang.String getStringMetadataXML ( java.lang.String itemOID , java.lang.String itemName ) { org.jdom.Element root = createBaseMetadata ( itemOID , itemName , "String" ) ; return toString ( root ) ; } <s> public java.lang.String getStringMetadataXML ( java.lang.String itemOID , java.lang.String itemName ) { org.jdom.Element root = createBaseMetadata ( itemOID , itemName , "String" ) ; return toString ( root ) ; } <s> Added unit tests for MetaDataXML. - MetaDataXMLTest: created four unit tests for the MetaDataXML class. - MetaDataXML: did some refactoring and formatting to solve some Checkstyle issues.
bug_after_refactoring: public java.lang.String getStringMetadataXML ( java.lang.String kscxgogexqfetecxolyd , java.lang.String crxmbgmbctxqqapnndnq ) { org.jdom.Element root = createBaseMetadata ( kscxgogexqfetecxolyd , crxmbgmbctxqqapnndnq , "String" ) ; return toString ( root ) ; } <s> public java.lang.String getStringMetadataXML ( java.lang.String kscxgogexqfetecxolyd , java.lang.String crxmbgmbctxqqapnndnq ) { org.jdom.Element root = createBaseMetadata ( kscxgogexqfetecxolyd , crxmbgmbctxqqapnndnq , "String" ) ; return toString ( root ) ; } <s> Added unit tests for MetaDataXML. - MetaDataXMLTest: created four unit tests for the MetaDataXML class. - MetaDataXML: did some refactoring and formatting to solve some Checkstyle issues.
fix_before_refactoring: public java.lang.String getStringMetadataXML ( final java.lang.String itemOID , final java.lang.String itemName ) { return toString ( createBaseMetadata ( itemOID , itemName , "String" ) ) ; }
fix_after_refactoring: public java.lang.String getStringMetadataXML ( final java.lang.String kscxgogexqfetecxolyd , final java.lang.String crxmbgmbctxqqapnndnq ) { return toString ( createBaseMetadata ( kscxgogexqfetecxolyd , crxmbgmbctxqqapnndnq , "String" ) ) ; }
× fix_prediction_before: public java.lang.String getStringMetadataXML ( java.lang.String itemOID , java.lang.String itemName ) { return getStringMetadataXML ( itemOID , itemName , "String" ) ; }
× fix_prediction_after: public java.lang.String getStringMetadataXML ( java.lang.String kscxgogexqfetecxolyd , java.lang.String crxmbgmbctxqqapnndnq ) { org.jdom.Element root = createBaseMetadata ( kscxgogexqfetecxolyd , crxmbgmbctxqqapnndnq , "String" ) ; return toString ( root ) ; }

line_index: 1184
bug_before_refactoring: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( node ) ) { return; } } } <s> protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( node ) ) { return; } } } <s> PY-17211 Fix issues from IDEA-CR-5816  Remove redundant code left from the previous combined inspection. Leave check PyInspectionExtension#ignoreMissingDocstring() only in MissingOrEmptyDocstringInspection.  (cherry picked from commit 03c8319b1e8b21fb21a66c8453c86e356172bebe)
bug_after_refactoring: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner luzjzyoonrfbdswbekxy ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( luzjzyoonrfbdswbekxy ) ) { return; } } } <s> protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner luzjzyoonrfbdswbekxy ) { for ( com.jetbrains.python.inspections.PyInspectionExtension extension : com.intellij.openapi.extensions.Extensions . getExtensions ( PyInspectionExtension.EP_NAME ) ) { if ( extension . ignoreMissingDocstring ( luzjzyoonrfbdswbekxy ) ) { return; } } } <s> PY-17211 Fix issues from IDEA-CR-5816  Remove redundant code left from the previous combined inspection. Leave check PyInspectionExtension#ignoreMissingDocstring() only in MissingOrEmptyDocstringInspection.  (cherry picked from commit 03c8319b1e8b21fb21a66c8453c86e356172bebe)
fix_before_refactoring: protected abstract void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) ;
fix_after_refactoring: protected abstract void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner luzjzyoonrfbdswbekxy ) ;
× fix_prediction_before: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner node ) {}
× fix_prediction_after: protected void checkDocString ( @ org.jetbrains.annotations.NotNull com.jetbrains.python.inspections.PyDocStringOwner luzjzyoonrfbdswbekxy ) {}

line_index: 1185
bug_before_refactoring: @ java.lang.Override public void run ( java.lang.String [] args ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> @ java.lang.Override public void run ( java.lang.String [] args ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> Fixed spring config problem and implement command to load the data from JSON via the repository
bug_after_refactoring: @ java.lang.Override public void run ( java.lang.String [] xmxrpfmchfoeitahqzuj ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> @ java.lang.Override public void run ( java.lang.String [] xmxrpfmchfoeitahqzuj ) throws java.io.IOException { mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB app = new mindbadger.footballresults.loader.apps.ImportDataFromJSONToDB () ; app . readFile () ; } <s> Fixed spring config problem and implement command to load the data from JSON via the repository
fix_before_refactoring: @ java.lang.Override public void run ( java.lang.String [] args ) throws java.lang.Exception { readFile () ; }
fix_after_refactoring: @ java.lang.Override public void run ( java.lang.String [] xmxrpfmchfoeitahqzuj ) throws java.lang.Exception { readFile () ; }
× fix_prediction_before: @ java.lang.Override public void run ( java.lang.String [] args ) throws java.io.IOException {}
× fix_prediction_after: @ java.lang.Override public void run ( java.lang.String [] xmxrpfmchfoeitahqzuj ) throws java.io.IOException { this . readFile () ; }

line_index: 1186
bug_before_refactoring: private void addTask ( main.logic.Logic.ListType type , main.data.Task task ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } } <s> private void addTask ( main.logic.Logic.ListType type , main.data.Task task ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } } <s> Refactor Logic method to standarize enum as last parameter. Fix small bug in UI Controller.
bug_after_refactoring: private void addTask ( main.logic.Logic.ListType ofopnxhyxvvortleujcu , main.data.Task xtxwhtchpmtofhqlpydk ) { switch ( ofopnxhyxvvortleujcu ) { case ALL : allTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; case COMPLETED : completedTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; default: break; } } <s> private void addTask ( main.logic.Logic.ListType ofopnxhyxvvortleujcu , main.data.Task xtxwhtchpmtofhqlpydk ) { switch ( ofopnxhyxvvortleujcu ) { case ALL : allTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; case COMPLETED : completedTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; default: break; } } <s> Refactor Logic method to standarize enum as last parameter. Fix small bug in UI Controller.
fix_before_refactoring: private void addTask ( main.data.Task task , main.logic.Logic.ListType type ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } }
fix_after_refactoring: private void addTask ( main.data.Task xtxwhtchpmtofhqlpydk , main.logic.Logic.ListType ofopnxhyxvvortleujcu ) { switch ( ofopnxhyxvvortleujcu ) { case ALL : allTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; case COMPLETED : completedTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; default: break; } }
× fix_prediction_before: private void addTask ( main.logic.Logic.ListType type , main.data.Task task ) { switch ( type ) { case ALL : allTasks . add ( task ) ; break; case COMPLETED : completedTasks . add ( task ) ; break; default: break; } }
× fix_prediction_after: private void addTask ( main.data.Task xtxwhtchpmtofhqlpydk ) { switch ( ofopnxhyxzzortleujcu ) { case ALL : allTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; case COMPLETED : completedTasks . add ( xtxwhtchpmtofhqlpydk ) ; break; default: break; } }

line_index: 1187
bug_before_refactoring: public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; } <s> public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; } <s> [PHOENIX-2967] Upgraded spring  spring data jpa  spring session to the latest version which is having various bug fixes
bug_after_refactoring: public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest pnngumrefsqcocnrvlwr , javax.servlet.http.HttpServletResponse dnlgellcuuwastxfmipi ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( dnlgellcuuwastxfmipi , pnngumrefsqcocnrvlwr ) ; } <s> public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest pnngumrefsqcocnrvlwr , javax.servlet.http.HttpServletResponse dnlgellcuuwastxfmipi ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( dnlgellcuuwastxfmipi , pnngumrefsqcocnrvlwr ) ; } <s> [PHOENIX-2967] Upgraded spring  spring data jpa  spring session to the latest version which is having various bug fixes
fix_before_refactoring: @ java.lang.Override public javax.servlet.http.HttpServletResponse wrapResponse ( final javax.servlet.http.HttpServletRequest request , final javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response , request ) ; }
fix_after_refactoring: @ java.lang.Override public javax.servlet.http.HttpServletResponse wrapResponse ( final javax.servlet.http.HttpServletRequest pnngumrefsqcocnrvlwr , final javax.servlet.http.HttpServletResponse dnlgellcuuwastxfmipi ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( dnlgellcuuwastxfmipi , pnngumrefsqcocnrvlwr ) ; }
× fix_prediction_before: public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( response ) ; }
× fix_prediction_after: public javax.servlet.http.HttpServletResponse wrapResponse ( javax.servlet.http.HttpServletResponse dnlgellcuuwastxfmipi ) { return new org.egov.infra.config.session.CookieHttpSessionStrategy.MultiSessionHttpServletResponse ( dnlgellcuuwastxfmipi , pnngumrefsqcocnrvlwr ) ; }

line_index: 1189
bug_before_refactoring: public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , java.util.List < com.dotmarketing.portlets.categories.model.Category > cats , java.util.List < com.dotmarketing.beans.Permission > permissions , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
bug_after_refactoring: public void checkin ( com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet ikbrdrgjfruylonufufh , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet > > wcqudqjptsbadgznbyen , java.util.List < com.dotmarketing.portlets.categories.model.Category > crfwcwpzlualfuoiduxr , java.util.List < com.dotmarketing.beans.Permission > buattfuhhgqealktfhsu , com.liferay.portal.model.User abquyvjvjpfwbebpcrlp , boolean ewoitifwerxcguregfow , com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet tzldxtxdjaldsegxieme ) {} <s> public void checkin ( com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet ikbrdrgjfruylonufufh , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet > > wcqudqjptsbadgznbyen , java.util.List < com.dotmarketing.portlets.categories.model.Category > crfwcwpzlualfuoiduxr , java.util.List < com.dotmarketing.beans.Permission > buattfuhhgqealktfhsu , com.liferay.portal.model.User abquyvjvjpfwbebpcrlp , boolean ewoitifwerxcguregfow , com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet tzldxtxdjaldsegxieme ) {} <s> Fixes : Problem with Contentlet API Pre-hook and Post-hook abstract classes that were missing recently added methods.
fix_before_refactoring: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.contentlet.model.Contentlet > > contentRelationships , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
fix_after_refactoring: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet ikbrdrgjfruylonufufh , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet > > wcqudqjptsbadgznbyen , com.liferay.portal.model.User abquyvjvjpfwbebpcrlp , boolean ewoitifwerxcguregfow , com.dotmarketing.portlets.ikbrdrgjfruylonufufh.model.Contentlet tzldxtxdjaldsegxieme ) {}
× fix_prediction_before: @ java.lang.Override public void checkin ( com.dotmarketing.portlets.contentlet.model.Contentlet contentlet , com.liferay.portal.model.User user , boolean respectFrontendRoles , com.dotmarketing.portlets.contentlet.model.Contentlet returnValue ) {}
× fix_prediction_after: public void checkin ( com.dotmarketing.portlets.ikbrdrgjfruylonufufufh.model.Contentlet ikbrdrgjfruylonufufh , java.util.Map < com.dotmarketing.portlets.structure.model.Relationship , java.util.List < com.dotmarketing.portlets.ikbrdrgjfruylonufufufh.model.Contentlet > > wcqudqjptsbadgznbyen , java.util.List < com.dotmarketing.portlets.categories.model.Category > crfwcwpzlualfuoiduxr , java.util.List < com.dotmarketing.beans.Permission > buattfuhhgqealktfhsu , com.liferay.portal.model.User abquyvjvjpfwbebpcrlp , booleanewoitifwerxcguregfow , com.dotmarketing.portlets.ikbrdrgjfruylonufufufh.model.Contentlet tzldxtxdjaldsegxieme ) {}

line_index: 1191
bug_before_refactoring: @ java.lang.Override public int findGCD ( int p , int q ) { return 0 ; } <s> @ java.lang.Override public int findGCD ( int p , int q ) { return 0 ; } <s> Bug fix and tests
bug_after_refactoring: @ java.lang.Override opxgrhajugqsdbteiuyuadujdfzveicxibgcvlxublic int findGCD ( int opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx , int jugqsdbteiuyuadujdfz ) { return 0 ; } <s> @ java.lang.Override opxgrhajugqsdbteiuyuadujdfzveicxibgcvlxublic int findGCD ( int opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx , int jugqsdbteiuyuadujdfz ) { return 0 ; } <s> Bug fix and tests
fix_before_refactoring: @ java.lang.Override public int findGCD ( int p , int q ) { if ( q == 0 ) { return p ; } return findGCD ( q , ( p % q ) ) ; }
fix_after_refactoring: @ java.lang.Override opxgrhajugqsdbteiuyuadujdfzveicxibgcvlxublic int findGCD ( int opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx , int jugqsdbteiuyuadujdfz ) { if ( jugqsdbteiuyuadujdfz == 0 ) { return opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx ; } return findGCD ( jugqsdbteiuyuadujdfz , ( opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx % jugqsdbteiuyuadujdfz ) ) ; }
× fix_prediction_before: @ java.lang.Override public int findGCD ( int p , int q ) { return 1 ; }
× fix_prediction_after: @ java.lang.Override opxgrhajugqsdbteiuyuadujdfzveicxibgcvlxublic int findGCD ( int opxgrhajugqsdbteiuyuadujdfzveicxibgcvlx , int jugqsdbteiuyuadujdfz ) { return 0 ; }

line_index: 1192
bug_before_refactoring: public abstract void initialize ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin plotMePlugin ) ; <s> public abstract void initialize ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin plotMePlugin ) ; <s> Fixed Major Commit Issue and Moved Metrics
bug_after_refactoring: public abstract void initialize ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin ulfnjepvrvjdiyqwfufc ) ; <s> public abstract void initialize ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin ulfnjepvrvjdiyqwfufc ) ; <s> Fixed Major Commit Issue and Moved Metrics
fix_before_refactoring: public abstract void initialize ( ) ;
fix_after_refactoring: public abstract void initialize ( ) ;
× fix_prediction_before: public void initialize ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin plotMePlugin ) {}
× fix_prediction_after: public abstract void initialize ( com.worldcretornica.plotme_core.bukkit.PlotMe_CorePlugin ulfnjepvrvjdiyqwfufc ) ;

line_index: 1193
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id , @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid org.sistema.springmvc.forms.models.Cliente client ) { return clienteDAO . lastClients ( id ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id , @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid org.sistema.springmvc.forms.models.Cliente client ) { return clienteDAO . lastClients ( id ) ; } <s> Fixed some errors in method lastClients
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{hglefvsbhjwuywdklayn}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer hglefvsbhjwuywdklayn , @ org.springframework.web.bind.annotation.RequestBody @ javax.valhglefvsbhjwuywdklaynation.Valhglefvsbhjwuywdklayn org.sistema.springmvc.forms.models.Cliente myykfxwggkvebpjlxyun ) { return myykfxwggkvebpjlxyuneDAO . lastClients ( hglefvsbhjwuywdklayn ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{hglefvsbhjwuywdklayn}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer hglefvsbhjwuywdklayn , @ org.springframework.web.bind.annotation.RequestBody @ javax.valhglefvsbhjwuywdklaynation.Valhglefvsbhjwuywdklayn org.sistema.springmvc.forms.models.Cliente myykfxwggkvebpjlxyun ) { return myykfxwggkvebpjlxyuneDAO . lastClients ( hglefvsbhjwuywdklayn ) ; } <s> Fixed some errors in method lastClients
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { return clienteDAO . lastClients ( id ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{hglefvsbhjwuywdklayn}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable ( value = "hglefvsbhjwuywdklayn" ) java.lang.Integer hglefvsbhjwuywdklayn ) { return myykfxwggkvebpjlxyuneDAO . lastClients ( hglefvsbhjwuywdklayn ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { return clienteDAO . lastClients ( id ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/last/{hglefvsbhjwuywdklayn}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < org.sistema.springmvc.forms.models.Cliente > lastClients ( @ org.springframework.web.bind.annotation.RequestBody @ javax.valhglefvsbhjwuywdklaynation.Valhglefvsbhjwuywdklayn org.sistema.springmvc.forms.models.Cliente myykfxwggkvebpjlxyun ) { return myykfxwggkvebpjlxyuneDAO . lastClients ( hglefvsbhjwuywdklayn ) ; }

line_index: 1194
bug_before_refactoring: public void cancel ( java.lang.Object tag ) { try { client . cancel ( tag ) ; } catch ( java.lang.Exception e ) {} } <s> public void cancel ( java.lang.Object tag ) { try { client . cancel ( tag ) ; } catch ( java.lang.Exception e ) {} } <s> bug fixed
bug_after_refactoring: public void cancel ( java.lang.Object apsyrpbdusocqaetodzc ) { try { client . cancel ( apsyrpbdusocqaetodzc ) ; } catch ( java.lang.Exception e ) {} } <s> public void cancel ( java.lang.Object apsyrpbdusocqaetodzc ) { try { client . cancel ( apsyrpbdusocqaetodzc ) ; } catch ( java.lang.Exception e ) {} } <s> bug fixed
fix_before_refactoring: public void cancel ( java.lang.String url ) { try { client . cancel ( url ) ; } catch ( java.lang.Exception e ) {} }
fix_after_refactoring: public void cancel ( java.lang.String url ) { try { client . cancel ( url ) ; } catch ( java.lang.Exception e ) {} }
× fix_prediction_before: public void cancel ( java.lang.Object tag ) { client . cancel ( tag ) ; }
× fix_prediction_after: public void cancel ( java.lang.Object apsyrpbdusocqaetodzc ) { client . cancel ( apsyrpbdusocqaetodzc ) ; }

line_index: 1196
bug_before_refactoring: @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> fix compileErrors in Server
bug_after_refactoring: @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager uxnduvabiydczzgclgfg ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager uxnduvabiydczzgclgfg ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; } <s> fix compileErrors in Server
fix_before_refactoring: @ java.lang.Override public void registerInputs ( com.jme3.input.InputManager inputManager ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; }
fix_after_refactoring: @ java.lang.Override public void registerInputs ( com.jme3.input.InputManager uxnduvabiydczzgclgfg ) { openrts.server.GameInputInterpreter.logger . info ( "multiplayer controller online" ) ; }
× fix_prediction_before: @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager inputManager ) {}
× fix_prediction_after: @ java.lang.Override protected void registerInputs ( com.jme3.input.InputManager uxnduvabiydczzgclgfg ) {}

line_index: 1197
bug_before_refactoring: public void putWord ( java.lang.String word ) { if ( ( index ) < ( types . size () ) ) { words . add ( index , word ) ; } ( index ) ++ ; } <s> public void putWord ( java.lang.String word ) { if ( ( index ) < ( types . size () ) ) { words . add ( index , word ) ; } ( index ) ++ ; } <s> Fixed a bug  related to word storage
bug_after_refactoring: public void putWord ( java.lang.String tcbmwpleewdeoezndwuw ) { if ( ( index ) < ( types . size () ) ) { tcbmwpleewdeoezndwuws . add ( index , tcbmwpleewdeoezndwuw ) ; } ( index ) ++ ; } <s> public void putWord ( java.lang.String tcbmwpleewdeoezndwuw ) { if ( ( index ) < ( types . size () ) ) { tcbmwpleewdeoezndwuws . add ( index , tcbmwpleewdeoezndwuw ) ; } ( index ) ++ ; } <s> Fixed a bug  related to word storage
fix_before_refactoring: public void putWord ( java.lang.String word ) { if ( ( index ) < ( words.length ) ) { words [ index ] = word ; } ( index ) ++ ; }
fix_after_refactoring: public void putWord ( java.lang.String tcbmwpleewdeoezndwuw ) { if ( ( index ) < ( tcbmwpleewdeoezndwuws.length ) ) { tcbmwpleewdeoezndwuws [ index ] = tcbmwpleewdeoezndwuw ; } ( index ) ++ ; }
× fix_prediction_before: public void putWord ( java.lang.String word ) { words . add ( index , word ) ; ( index ) ++ ; }
× fix_prediction_after: public void putWord ( java.lang.String tcbmwpleewdeoezndwuw ) { if ( ( index ) < ( types . size () ) ) { tcbmwpleewdeoezndwuws . add ( index , tcbmwpleewdeoezndwuw ) ; ( index ) ++ ; } }

line_index: 1198
bug_before_refactoring: private int accumulate ( int [] folders , int start ) { int accum = start ; for ( int folder : folders ) { accum += folder ; } return accum ; } <s> private int accumulate ( int [] folders , int start ) { int accum = start ; for ( int folder : folders ) { accum += folder ; } return accum ; } <s> Fix a couple of issues in tests.
bug_after_refactoring: private int accumulate ( int [] zefktgzifmzktooffkzk , int neszrrvaiykejsrmqurl ) { int accum = neszrrvaiykejsrmqurl ; for ( int folder : zefktgzifmzktooffkzk ) { accum += folder ; } return accum ; } <s> private int accumulate ( int [] zefktgzifmzktooffkzk , int neszrrvaiykejsrmqurl ) { int accum = neszrrvaiykejsrmqurl ; for ( int folder : zefktgzifmzktooffkzk ) { accum += folder ; } return accum ; } <s> Fix a couple of issues in tests.
fix_before_refactoring: private int accumulate ( int [] folders ) { int accum = 0 ; for ( int folder : folders ) { accum += folder ; } return accum ; }
fix_after_refactoring: private int accumulate ( int [] zefktgzifmzktooffkzk ) { int accum = 0 ; for ( int folder : zefktgzifmzktooffkzk ) { accum += folder ; } return accum ; }
× fix_prediction_before: private int accumulate ( int [] folders , int start ) { int accum = 0 ; for ( int folder : folders ) { accum += folder ; } return accum ; }
× fix_prediction_after: public int accumulate ( int [] zefktgzifmzktooffkzk , int neszrrvaiykejsrmqurl ) { int accum = neszrrvaiykejsrmqurl ; for ( int folder : zefktgzifmzktooffkzk ) { accum += folder ; } return accum ; }

line_index: 1199
bug_before_refactoring: public double sqrt ( double n ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } <s> public double sqrt ( double n ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } <s> fixed the whole 0 problem
bug_after_refactoring: public double sqrt ( double aaoefzxkxwpefzpdwbjz ) { returaaoefzxkxwpefzpdwbjz pleaseHelpMeSquareRootsAreHardOMG ( aaoefzxkxwpefzpdwbjz , ( aaoefzxkxwpefzpdwbjz / 2 ) ) ; } <s> public double sqrt ( double aaoefzxkxwpefzpdwbjz ) { returaaoefzxkxwpefzpdwbjz pleaseHelpMeSquareRootsAreHardOMG ( aaoefzxkxwpefzpdwbjz , ( aaoefzxkxwpefzpdwbjz / 2 ) ) ; } <s> fixed the whole 0 problem
fix_before_refactoring: public double sqrt ( double n ) { if ( n > 0 ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; } return 0 ; }
fix_after_refactoring: public double sqrt ( double aaoefzxkxwpefzpdwbjz ) { if ( aaoefzxkxwpefzpdwbjz > 0 ) { returaaoefzxkxwpefzpdwbjz pleaseHelpMeSquareRootsAreHardOMG ( aaoefzxkxwpefzpdwbjz , ( aaoefzxkxwpefzpdwbjz / 2 ) ) ; } returaaoefzxkxwpefzpdwbjz 0 ; }
× fix_prediction_before: public double sqrt ( int n ) { return pleaseHelpMeSquareRootsAreHardOMG ( n , ( n / 2 ) ) ; }
× fix_prediction_after: public double sqrt ( int aaoefzxkxwpefzpdwbjz ) { returaaoefzxkxkxwpefzpdwbjz pleaseHelpMeSquareRootsAreHardOMG ( aaoefzxkxwpefzpdwbjz , ( aaoefzxkxwpefzpdwbjz / 2 ) ) ; }

line_index: 1200
bug_before_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return finalView ; } <s> @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { return finalView ; } <s> - Bug fixes - Install Crashlytics
bug_after_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater daqyfpuumzzomabxfgde , android.view.ViewGroup fttpsvmaflljueriwkec , android.os.Bundle rnkvwcuvdfgfgykzktzi ) { return finalView ; } <s> @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater daqyfpuumzzomabxfgde , android.view.ViewGroup fttpsvmaflljueriwkec , android.os.Bundle rnkvwcuvdfgfgykzktzi ) { return finalView ; } <s> - Bug fixes - Install Crashlytics
fix_before_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( finalView ) != null ) { return finalView ; } return super . onCreateView ( inflater , container , savedInstanceState ) ; }
fix_after_refactoring: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater daqyfpuumzzomabxfgde , android.view.ViewGroup fttpsvmaflljueriwkec , android.os.Bundle rnkvwcuvdfgfgykzktzi ) { if ( ( finalView ) != null ) { return finalView ; } return super . onCreateView ( daqyfpuumzzomabxfgde , fttpsvmaflljueriwkec , rnkvwcuvdfgfgykzktzi ) ; }
× fix_prediction_before: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( finalView ) == null ) { finalView = super . onCreateView ( inflater , container , savedInstanceState ) ; } return finalView ; }
× fix_prediction_after: @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater daqyfpuumzzomabxfgde , android.view.ViewGroup fttpsvmaflljueriwkec ) { return finalView ; }

line_index: 1201
bug_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients , net.sharksystem.sharknet.api.Contact sender ) ; <s> fixed problem with sender in profile
bug_after_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ; <s> public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ; <s> fixed problem with sender in profile
fix_before_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > recipients ) ;
fix_after_refactoring: public net.sharksystem.sharknet.api.Chat newChat ( java.util.List < net.sharksystem.sharknet.api.Contact > ermtqyelhebgnchyjzts ) ;
× fix_prediction_before: public net.sharksystem.sharknet.api.Chat newChat ( net.sharksystem.sharknet.api.Contact sender ) ;
× fix_prediction_after: public net.sharksystem.sharknet.api.Chat newChat ( net.sharksystem.sharknet.api.Contact ermtqyelhebgnchyjzts , net.sharksystem.sharknet.api.Contact vdusgxgjkuojctwifsav ) ;

line_index: 1202
bug_before_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType ) ; <s> @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType ) ; <s> Merge pull request #73 from dataloom/bugfix/download  Add token get parameter
bug_after_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID ufkmckmootvabucttemd , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType rwcwyvpntaisgcwjrqib ) ; <s> @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID ufkmckmootvabucttemd , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType rwcwyvpntaisgcwjrqib ) ; <s> Merge pull request #73 from dataloom/bugfix/download  Add token get parameter
fix_before_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType fileType , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.TOKEN ) java.lang.String token ) ;
fix_after_refactoring: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID ufkmckmootvabucttemd , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType rwcwyvpntaisgcwjrqib , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.TOKEN ) java.lang.String token ) ;
× fix_prediction_before: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID entitySetId , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) ;
× fix_prediction_after: @ retrofit2.http.GET ( value = ( ( ( ( com.dataloom.data.DataApi.BASE ) + "/" ) + ( com.dataloom.data.DataApi.ENTITY_DATA ) ) + "/" ) + ( com.dataloom.data.DataApi.SET_ID_PATH ) ) java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ retrofit2.http.Path ( value = com.dataloom.data.DataApi.SET_ID ) java.util.UUID ufkmckmootvabucttemd , @ retrofit2.http.Query ( value = com.dataloom.data.DataApi.FILE_TYPE ) com.dataloom.data.DataApi.FileType rwcwyvpntaisgcwjrqib ) ;

line_index: 1203
bug_before_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { java.util.Date expiration ; try { final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { java.util.Date expiration ; try { final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> sonarqube bug fixes
bug_after_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String qrqotnvdmvyufxoeueue ) { java.util.Date expiration ; try { final io.jsonwebqrqotnvdmvyufxoeueue.Claims claims = getClaimsFromToken ( qrqotnvdmvyufxoeueue ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> public java.util.Date getExpirationDateFromToken ( java.lang.String qrqotnvdmvyufxoeueue ) { java.util.Date expiration ; try { final io.jsonwebqrqotnvdmvyufxoeueue.Claims claims = getClaimsFromToken ( qrqotnvdmvyufxoeueue ) ; expiration = claims . getExpiration () ; } catch ( java.lang.Exception e ) { expiration = null ; } return expiration ; } <s> sonarqube bug fixes
fix_before_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { java.util.Date expiration = null ; final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; if ( claims != null ) { expiration = claims . getExpiration () ; } return expiration ; }
fix_after_refactoring: public java.util.Date getExpirationDateFromToken ( java.lang.String qrqotnvdmvyufxoeueue ) { java.util.Date expiration = null ; final io.jsonwebqrqotnvdmvyufxoeueue.Claims claims = getClaimsFromToken ( qrqotnvdmvyufxoeueue ) ; if ( claims != null ) { expiration = claims . getExpiration () ; } return expiration ; }
× fix_prediction_before: public java.util.Date getExpirationDateFromToken ( java.lang.String token ) { return getClaimsFromToken ( token ) . getExpiration () ; }
× fix_prediction_after: public java.util.Date getExpirationDateFromToken ( java.lang.String qrqotnvdmvyufxoeueue ) throws java.lang.Exception { return getClaimsFromToken ( qrqotnvdmvyufxoeueue ) . getExpiration () ; }

line_index: 1204
bug_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { if ( position == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { if ( position == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> Bugfix in BaasExchangeCompletedTask and in GeeftItemAdapter. Disabled Geeftory. This is the Alpha version. TODO: enable geeftory in beta version
bug_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int ywkqnumojsnevsrurmtb ) { if ( ywkqnumojsnevsrurmtb == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> @ java.lang.Override public android.support.v4.app.Fragment getItem ( int ywkqnumojsnevsrurmtb ) { if ( ywkqnumojsnevsrurmtb == 0 ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; } else { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; } } <s> Bugfix in BaasExchangeCompletedTask and in GeeftItemAdapter. Disabled Geeftory. This is the Alpha version. TODO: enable geeftory in beta version
fix_before_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; }
fix_after_refactoring: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int ywkqnumojsnevsrurmtb ) { return samurai.geeft.android.geeft.fragments.TabGeeftFragment . newInstance ( false ) ; }
× fix_prediction_before: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( null ) ; }
× fix_prediction_after: @ java.lang.Override public android.support.v4.app.Fragment getItem ( int ywkqnumojsnevsrurmtb ) { return samurai.geeft.android.geeft.fragments.TabGeeftoryFragment . newInstance ( new android.os.Bundle () ) ; }

line_index: 1206
bug_before_refactoring: public < T > boolean permitAccess ( T document , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return predicate . test ( user , document ) ; } <s> public < T > boolean permitAccess ( T document , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return predicate . test ( user , document ) ; } <s> fix errors in access interceptors
bug_after_refactoring: public < T > boolean permitAccess ( T xeauejthwmlcoswofyqv , com.geekhub.security.User yeomkcrrwvpwxcxnzjvd , java.util.function.BiPredicate < com.geekhub.security.User , T > muwergbdfsgbdxcwwolz ) { return muwergbdfsgbdxcwwolz . test ( yeomkcrrwvpwxcxnzjvd , xeauejthwmlcoswofyqv ) ; } <s> public < T > boolean permitAccess ( T xeauejthwmlcoswofyqv , com.geekhub.security.User yeomkcrrwvpwxcxnzjvd , java.util.function.BiPredicate < com.geekhub.security.User , T > muwergbdfsgbdxcwwolz ) { return muwergbdfsgbdxcwwolz . test ( yeomkcrrwvpwxcxnzjvd , xeauejthwmlcoswofyqv ) ; } <s> fix errors in access interceptors
fix_before_refactoring: public < T > boolean permitAccess ( T file , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return ( ( file != null ) && ( user != null ) ) && ( predicate . test ( user , file ) ) ; }
fix_after_refactoring: public < T > boolean permitAccess ( T file , com.geekhub.security.User yeomkcrrwvpwxcxnzjvd , java.util.function.BiPredicate < com.geekhub.security.User , T > muwergbdfsgbdxcwwolz ) { return ( ( file != null ) && ( yeomkcrrwvpwxcxnzjvd != null ) ) && ( muwergbdfsgbdxcwwolz . test ( yeomkcrrwvpwxcxnzjvd , file ) ) ; }
× fix_prediction_before: public < T > boolean permitAccess ( T document , com.geekhub.security.User user , java.util.function.BiPredicate < com.geekhub.security.User , T > predicate ) { return predicate . test ( user , document ) ; }
× fix_prediction_after: public < T > boolean permitAccess ( T xeauejthwmlcoswofyqv , com.geekhub.security.User yeomkcrrwvpwxcxnzjvd ) { return muwergbdfsgbdxcwwolz . test ( yeomkcrrwvpwxcxnzjvd , xeauejthwmlcoswofyqv ) ; }

line_index: 1207
bug_before_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> bugfix: 图片memory修改
bug_after_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity lbviemxebsmuwrllgswy ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> @ java.lang.Override public void onActivityDestroyed ( android.app.Activity lbviemxebsmuwrllgswy ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } <s> bugfix: 图片memory修改
fix_before_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { if ( activity == ( getContext () ) ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } }
fix_after_refactoring: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity lbviemxebsmuwrllgswy ) { if ( lbviemxebsmuwrllgswy == ( getContext () ) ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } }
× fix_prediction_before: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity activity ) { if ( activity != null ) { ( ( android.app.Activity ) ( getContext () ) ) . getApplication () . unregisterActivityLifecycleCallbacks ( this ) ; } }
× fix_prediction_after: @ java.lang.Override public void onActivityDestroyed ( android.app.Activity lbviemxebsmuwrllgswy ) {}

line_index: 1208
bug_before_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { java.lang.String newValue = null ; if ( value != null ) { newValue = value . trim () ; } return newValue ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String value ) { java.lang.String newValue = null ; if ( value != null ) { newValue = value . trim () ; } return newValue ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
bug_after_refactoring: @ java.lang.Override public java.lang.String validateValue ( java.lang.String lquojeyyoontmojtofnu ) { java.lang.String newValue = null ; if ( lquojeyyoontmojtofnu != null ) { newValue = lquojeyyoontmojtofnu . trim () ; } return newValue ; } <s> @ java.lang.Override public java.lang.String validateValue ( java.lang.String lquojeyyoontmojtofnu ) { java.lang.String newValue = null ; if ( lquojeyyoontmojtofnu != null ) { newValue = lquojeyyoontmojtofnu . trim () ; } return newValue ; } <s> Fixed a bug in VizConnection.  Signed-off-by: Jordan Deyton <deytonjh@ornl.gov>
fix_before_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String value ) { return value != null ; }
fix_after_refactoring: @ java.lang.Override public boolean validateValue ( java.lang.String lquojeyyoontmojtofnu ) { return lquojeyyoontmojtofnu != null ; }
× fix_prediction_before: @ java.lang.Override public boolean validateValue ( java.lang.String value ) { boolean newValue = false ; if ( value != null ) { newValue = value . trim () ; } return newValue ; }
× fix_prediction_after: @ java.lang.Override public boolean validateValue ( java.lang.String lquojeyyoontmojtofnu ) { boolean newValue = false ; if ( lquojeyyoontmojtofnu != null ) { newValue = lquojeyyoontmojtofnu . trim () ; } return newValue ; }

line_index: 1209
bug_before_refactoring: public boolean callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; if ( ! found ) { found = true ; } } return found ; } <s> public boolean callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; if ( ! found ) { found = true ; } } return found ; } <s> Bugfix  guard retaliation should work now
bug_after_refactoring: public boolean callTargetEvent ( org.bukkit.xccukkwzmduzosqstkmq.entity.EntityTargetEvent xccukkwzmduzosqstkmq ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( xccukkwzmduzosqstkmq ) ; if ( ! found ) { found = true ; } } return found ; } <s> public boolean callTargetEvent ( org.bukkit.xccukkwzmduzosqstkmq.entity.EntityTargetEvent xccukkwzmduzosqstkmq ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( xccukkwzmduzosqstkmq ) ; if ( ! found ) { found = true ; } } return found ; } <s> Bugfix  guard retaliation should work now
fix_before_refactoring: public void callTargetEvent ( org.bukkit.event.entity.EntityTargetEvent event ) { for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; } }
fix_after_refactoring: public void callTargetEvent ( org.bukkit.xccukkwzmduzosqstkmq.entity.EntityTargetEvent xccukkwzmduzosqstkmq ) { for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( xccukkwzmduzosqstkmq ) ; } }
× fix_prediction_before: public boolean onTarget ( org.bukkit.event.entity.EntityTargetEvent event ) { boolean found = false ; for ( net.citizensnpcs.npctypes.CitizensNPC type : types . values () ) { type . onTarget ( event ) ; if ( ! found ) { found = true ; } } return found ; }
× fix_prediction_after: public boolean callTargetEvent ( org.bukkit.xccukkwzmduzosqstkmq.entity.EntityTargetEvent xccukkwzmduzosqstkmq ) { return false ; }

line_index: 1210
bug_before_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> public static synchronized void registerWakeupBroadcast ( android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> Fix wakeup issues.  Allow registration and wakeup before init is called.
bug_after_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Intent jbsrdxnhxspvaolhjrqv ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , jbsrdxnhxspvaolhjrqv . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> public static synchronized void registerWakeupBroadcast ( android.content.Intent jbsrdxnhxspvaolhjrqv ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , jbsrdxnhxspvaolhjrqv . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } <s> Fix wakeup issues.  Allow registration and wakeup before init is called.
fix_before_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Context context , android.content.Intent intent ) { com.magnet.mmx.client.api.MMX . getSharedPrefs ( context ) . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; }
fix_after_refactoring: public static synchronized void registerWakeupBroadcast ( android.content.Context context , android.content.Intent jbsrdxnhxspvaolhjrqv ) { com.magnet.mmx.client.api.MMX . getSharedPrefs ( context ) . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , jbsrdxnhxspvaolhjrqv . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; }
× fix_prediction_before: public static synchronized void registerWakeupBroadcast ( android.content.Intent intent ) { if ( intent != null ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , intent . toUri ( Intent.URI_INTENT_SCHEME ) ) . apply () ; } }
× fix_prediction_after: public static synchronized void registerWakeupBroadcast ( android.content.Intent jbsrdxnhxspvaolhjrqv ) { if ( jbsrdxnhxspvaolhjrqv != null ) { com.magnet.mmx.client.api.MMX . getSharedPrefs () . edit () . putString ( com.magnet.mmx.client.api.MMX.PREF_WAKEUP_INTENT_URI , jbsrdxnhxspvaolhjrqv . toUri ( Intent.URI_INTENT_SCHEME ) . apply () ; } }

line_index: 1212
bug_before_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( getChannel ( path ) , ( - 1 ) ) ; } <s> public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( getChannel ( path ) , ( - 1 ) ) ; } <s> Fix leak errors on sstable load exception  CASSANDRA-9686
bug_after_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String nnelkguawukckzebjfil ) { return complete ( getChannel ( nnelkguawukckzebjfil ) , ( - 1 ) ) ; } <s> public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String nnelkguawukckzebjfil ) { return complete ( getChannel ( nnelkguawukckzebjfil ) , ( - 1 ) ) ; } <s> Fix leak errors on sstable load exception  CASSANDRA-9686
fix_before_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( path , ( - 1L ) ) ; }
fix_after_refactoring: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String nnelkguawukckzebjfil ) { return complete ( nnelkguawukckzebjfil , ( - 1L ) ) ; }
× fix_prediction_before: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String path ) { return complete ( getChannel ( path ) , 0 ) ; }
× fix_prediction_after: public org.apache.cassandra.io.util.SegmentedFile complete ( java.lang.String nnelkguawukckzebjfil ) { return complete ( getChannel ( nnelkguawukckzebjfil ) , 0 ) ; }

line_index: 1213
bug_before_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArr ) { this . qbFileSparseArray = qbFileSparseArr ; notifyDataSetChanged () ; } <s> public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArr ) { this . qbFileSparseArray = qbFileSparseArr ; notifyDataSetChanged () ; } <s> Fix issue on too large bitmaps. Change image size for preview.
bug_after_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > sjjuzkjpkuxvgcwypbtu ) { this . sjjuzkjpkuxvgcwypbtuay = sjjuzkjpkuxvgcwypbtu ; notifyDataSetChanged () ; } <s> public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > sjjuzkjpkuxvgcwypbtu ) { this . sjjuzkjpkuxvgcwypbtuay = sjjuzkjpkuxvgcwypbtu ; notifyDataSetChanged () ; } <s> Fix issue on too large bitmaps. Change image size for preview.
fix_before_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArray ) { this . qbFileSparseArray = qbFileSparseArray ; notifyDataSetChanged () ; }
fix_after_refactoring: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > sjjuzkjpkuxvgcwypbtuay ) { this . sjjuzkjpkuxvgcwypbtuay = sjjuzkjpkuxvgcwypbtuay ; notifyDataSetChanged () ; }
× fix_prediction_before: public void updateData ( android.util.SparseArray < com.quickblox.content.model.QBFile > qbFileSparseArr ) { if ( qbFileSparseArr != null ) { this . qbFileSparseArray = qbFileSparseArr ; notifyDataSetChanged () ; } }
× fix_prediction_after: public void updateData ( java.util.SparseArray < com.quickblox.content.model.QBFile > sjjuzkjpkuxvgcwypbtu ) { this . sjjjuzkjpkuxvgcwypbtu = sjjjuzkjpkuxvgcwypbtu ; notifyDataSetChanged () ; }

line_index: 1214
bug_before_refactoring: public int costTo ( edu.berkeley.aep.Node destination ) { return 0 ; } <s> public int costTo ( edu.berkeley.aep.Node destination ) { return 0 ; } <s> Solved cost problem
bug_after_refactoring: public int costTo ( edu.berkeley.aep.Node wpquwypcyplcaxgngnao ) { return 0 ; } <s> public int costTo ( edu.berkeley.aep.Node wpquwypcyplcaxgngnao ) { return 0 ; } <s> Solved cost problem
fix_before_refactoring: public int costTo ( edu.berkeley.aep.Node destination ) { return costTo ( destination , new java.util.HashSet <> () ) ; }
fix_after_refactoring: public int costTo ( edu.berkeley.aep.Node wpquwypcyplcaxgngnao ) { return costTo ( wpquwypcyplcaxgngnao , new java.util.HashSet <> () ) ; }
× fix_prediction_before: public int costTo ( edu.berkeley.aep.Node destination ) { return 1 ; }
× fix_prediction_after: public int costTo ( edu.berkeley.aep.Nodewpquwypcyplcaxgngngnao ) { return cost ; }

line_index: 1215
bug_before_refactoring: @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int index ) { return null ; } <s> @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int index ) { return null ; } <s> Fixed issue with processing new line and new file
bug_after_refactoring: @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int ivqsnkumjjjdajouplbx ) { return null ; } <s> @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int ivqsnkumjjjdajouplbx ) { return null ; } <s> Fixed issue with processing new line and new file
fix_before_refactoring: public java.util.ListIterator < T > listIterator () { return null ; }
fix_after_refactoring: public java.util.ListIterator < T > listIterator () { return null ; }
× fix_prediction_before: @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int index ) { return null ; }
× fix_prediction_after: @ java.lang.Override public java.util.ListIterator < T > listIterator ( final int offset ) { return null ; }

line_index: 1216
bug_before_refactoring: @ java.lang.Override public void delete ( int position ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; } <s> @ java.lang.Override public void delete ( int position ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; } <s> [BugFix]Resolve the conflict between swipe recyclerview item and viewpager  [Solution Description]     N/A [Other Info]     N/A
bug_after_refactoring: @ java.lang.Override public void delete ( int ukvbswftuvpljznjrjwm ) { mGoals . remove ( ukvbswftuvpljznjrjwm ) ; mAdapter . notify ( AnimationType.REMOVE , ukvbswftuvpljznjrjwm ) ; } <s> @ java.lang.Override public void delete ( int ukvbswftuvpljznjrjwm ) { mGoals . remove ( ukvbswftuvpljznjrjwm ) ; mAdapter . notify ( AnimationType.REMOVE , ukvbswftuvpljznjrjwm ) ; } <s> [BugFix]Resolve the conflict between swipe recyclerview item and viewpager  [Solution Description]     N/A [Other Info]     N/A
fix_before_refactoring: @ java.lang.Override public void delete ( int position ) {}
fix_after_refactoring: @ java.lang.Override public void delete ( int ukvbswftuvpljznjrjwm ) {}
× fix_prediction_before: @ java.lang.Override public void delete ( int position ) { if ( position >= ( mGoals . size () ) ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; } }
× fix_prediction_after: @ java.lang.Override public void delete ( int position ) { mGoals . remove ( position ) ; mAdapter . notify ( AnimationType.REMOVE , position ) ; }

line_index: 1218
bug_before_refactoring: private int minimax ( rule.Rule rule ) { return maxValue ( rule ) ; } <s> private int minimax ( rule.Rule rule ) { return maxValue ( rule ) ; } <s> bugfix
bug_after_refactoring: private int minimax ( csfiutqtefrivkmervrq.Rule csfiutqtefrivkmervrq ) { return maxValue ( csfiutqtefrivkmervrq ) ; } <s> private int minimax ( csfiutqtefrivkmervrq.Rule csfiutqtefrivkmervrq ) { return maxValue ( csfiutqtefrivkmervrq ) ; } <s> bugfix
fix_before_refactoring: private int minimax ( rule.Rule rule ) { return maxValue ( rule , 0 ) ; }
fix_after_refactoring: private int minimax ( csfiutqtefrivkmervrq.Rule csfiutqtefrivkmervrq ) { return maxValue ( csfiutqtefrivkmervrq , 0 ) ; }
× fix_prediction_before: private int minimax ( rule.Rule rule ) { if ( rule != null ) { return maxValue ( rule ) ; } else { return 0 ; } }
× fix_prediction_after: public int minimax ( csfiutqtefrivkmervrq.Rule csfiutqtefrivkmervrq ) { return minimax ( csfiutqtefrivkmervrq ) ; }

line_index: 1220
bug_before_refactoring: @ java.lang.Override public void onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( statusCode , failDate , error ) ; } } <s> @ java.lang.Override public void onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( statusCode , failDate , error ) ; } } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void onFail ( int bprzkihnffezikgdouiz , @ android.support.annotation.Nullable T xtzyqpzhwvotlkfopejp , @ android.support.annotation.Nullable java.lang.Throwable uvlytunzlpjsihujxley ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( bprzkihnffezikgdouiz , xtzyqpzhwvotlkfopejp , uvlytunzlpjsihujxley ) ; } } <s> @ java.lang.Override public void onFail ( int bprzkihnffezikgdouiz , @ android.support.annotation.Nullable T xtzyqpzhwvotlkfopejp , @ android.support.annotation.Nullable java.lang.Throwable uvlytunzlpjsihujxley ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( bprzkihnffezikgdouiz , xtzyqpzhwvotlkfopejp , uvlytunzlpjsihujxley ) ; } } <s> fix bug
fix_before_refactoring: @ java.lang.Override public boolean onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { return ( ( mResponseCallback ) != null ) && ( mResponseCallback . onFail ( statusCode , failDate , error ) ) ; }
fix_after_refactoring: @ java.lang.Override public boolean onFail ( int bprzkihnffezikgdouiz , @ android.support.annotation.Nullable T xtzyqpzhwvotlkfopejp , @ android.support.annotation.Nullable java.lang.Throwable uvlytunzlpjsihujxley ) { return ( ( mResponseCallback ) != null ) && ( mResponseCallback . onFail ( bprzkihnffezikgdouiz , xtzyqpzhwvotlkfopejp , uvlytunzlpjsihujxley ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onFail ( int statusCode , @ android.support.annotation.Nullable T failDate , @ android.support.annotation.Nullable java.lang.Throwable error ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( statusCode , failDate , error ) ; } }
× fix_prediction_after: @ java.lang.Override public void onFail ( int bprzkihnffezikgdouiz , @ android.support.annotation.Nullable T xtzyqpzhwvotlkfopejp ) { if ( ( mResponseCallback ) != null ) { mResponseCallback . onFail ( bprzkihnffezikgdouiz , xtzyqpzhwvotlkfopejp , uvlytunzlpjsihujxley ) ; } }

line_index: 1223
bug_before_refactoring: private boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; } <s> private boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; } <s> Correct a further regression in the fix for bug 49464 that could cause an byte order mark character to appear at the start of content included by the DefaultServlet.  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1802785 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: private boolean isText ( java.lang.String ptmjkicqfnpyymfeesxh ) { return ( ( ( ptmjkicqfnpyymfeesxh == null ) || ( ptmjkicqfnpyymfeesxh . startsWith ( "text" ) ) ) || ( ptmjkicqfnpyymfeesxh . endsWith ( "xml" ) ) ) || ( ptmjkicqfnpyymfeesxh . contains ( "/javascript" ) ) ; } <s> private boolean isText ( java.lang.String ptmjkicqfnpyymfeesxh ) { return ( ( ( ptmjkicqfnpyymfeesxh == null ) || ( ptmjkicqfnpyymfeesxh . startsWith ( "text" ) ) ) || ( ptmjkicqfnpyymfeesxh . endsWith ( "xml" ) ) ) || ( ptmjkicqfnpyymfeesxh . contains ( "/javascript" ) ) ; } <s> Correct a further regression in the fix for bug 49464 that could cause an byte order mark character to appear at the start of content included by the DefaultServlet.  git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1802785 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: private static boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; }
fix_after_refactoring: private static boolean isText ( java.lang.String ptmjkicqfnpyymfeesxh ) { return ( ( ( ptmjkicqfnpyymfeesxh == null ) || ( ptmjkicqfnpyymfeesxh . startsWith ( "text" ) ) ) || ( ptmjkicqfnpyymfeesxh . endsWith ( "xml" ) ) ) || ( ptmjkicqfnpyymfeesxh . contains ( "/javascript" ) ) ; }
× fix_prediction_before: protected boolean isText ( java.lang.String contentType ) { return ( ( ( contentType == null ) || ( contentType . startsWith ( "text" ) ) ) || ( contentType . endsWith ( "xml" ) ) ) || ( contentType . contains ( "/javascript" ) ) ; }
× fix_prediction_after: protected boolean isText ( java.lang.String ptmjkicqfnpyymfeesxh ) { return ( ( ( ptmjkicqfnpyymfeesxh == null ) || ( ptmjkicqfnpyymfeesxh . startsWith ( "text" ) ) ) || ( ptmjkicqfnpyymfeesxh . endsWith ( "xml" ) ) ) || ( ptmjkicqfnpyymfeesxh . contains ( "/javascript" ) ) ; }

line_index: 1226
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.activities.GeoPointMapNewActivity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.activities.GeoPointMapNewActivity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> Fixing location bug in GeoPointNew Activity
bug_after_refactoring: @ janucjjosseoflymgubdzga.lang.Onucjjosseoflymgubdzgerride public nucjjosseoflymgubdzgoid onClick ( android.nucjjosseoflymgubdzgiew.View nucjjosseoflymgubdzg ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.actinucjjosseoflymgubdzgities.GeoPointMapNewActinucjjosseoflymgubdzgity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> @ janucjjosseoflymgubdzga.lang.Onucjjosseoflymgubdzgerride public nucjjosseoflymgubdzgoid onClick ( android.nucjjosseoflymgubdzgiew.View nucjjosseoflymgubdzg ) { if ( ( targetAccuracy ) == ( com.geoodk.collect.android.widgets.GeoPointNewWidget.UNSET_LOCATION_ACCURACY ) ) { currentMode = com.geoodk.collect.android.actinucjjosseoflymgubdzgities.GeoPointMapNewActinucjjosseoflymgubdzgity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; } } <s> Fixing location bug in GeoPointNew Activity
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) {}
fix_after_refactoring: @ janucjjosseoflymgubdzga.lang.Onucjjosseoflymgubdzgerride public nucjjosseoflymgubdzgoid onClick ( android.nucjjosseoflymgubdzgiew.View nucjjosseoflymgubdzg ) {}
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { showClearDialog () ; }
× fix_prediction_after: @ janucjjosseoflymgubdzga.lang.Onucjjosseoflymgubdzgerride public nucjjosseoflymgubdzgoid onClick ( android.nucjjosseoflymgubdzgiew.View nucjjosseoflymgubdzg ) { currentMode = com.geoodk.collect.android.actinucjjosseoflymgubdzgities.GeoPointMapNewActinucjjosseoflymgubdzgity.MODE_AUTO ; resetLocationPointAtCurrentPosition () ; refreshClearButtonVisibility () ; } else { showClearDialog () ; }

line_index: 1227
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
bug_after_refactoring: @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaoid onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData ) ; } <s> @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaoid onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData ) ; } <s> Fixed issue in the now playing position
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.justaudio.utils.CustomDialog . showMoreRemoveDialog ( parent , mData , position ) ; }
fix_after_refactoring: @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaoid onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData , position ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { showMoreRemoveDialog ( parent , mData , position ) ; }
× fix_prediction_after: @ jazdmtoimzbmforqkchtyaa.lang.Ozdmtoimzbmforqkchtyaerride public zdmtoimzbmforqkchtyaiew.View onClick ( android.zdmtoimzbmforqkchtyaiew.View zdmtoimzbmforqkchtya ) { com.justaudio.utils.CustomDialog . showMoreRemozdmtoimzbmforqkchtyaeDialog ( parent , mData ) ; return zdmtoimzbmforqkchtya ; }

line_index: 1228
bug_before_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( beacon ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( beacon ) ; } } } <s> public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( beacon ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( beacon ) ; } } } <s> Fixed bugs
bug_after_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon kojvihfyihshjajwyjlg ) { if ( unplacedBeacons . contains ( kojvihfyihshjajwyjlg ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( kojvihfyihshjajwyjlg ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( kojvihfyihshjajwyjlg ) ; } } } <s> public void placeBeacon ( lilium.arubabacon.iBeacon kojvihfyihshjajwyjlg ) { if ( unplacedBeacons . contains ( kojvihfyihshjajwyjlg ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( kojvihfyihshjajwyjlg ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( kojvihfyihshjajwyjlg ) ; } } } <s> Fixed bugs
fix_before_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { placedBeacons . add ( beacon ) ; unplacedBeacons . remove ( beacon ) ; } }
fix_after_refactoring: public void placeBeacon ( lilium.arubabacon.iBeacon kojvihfyihshjajwyjlg ) { if ( unplacedBeacons . contains ( kojvihfyihshjajwyjlg ) ) { placedBeacons . add ( kojvihfyihshjajwyjlg ) ; unplacedBeacons . remove ( kojvihfyihshjajwyjlg ) ; } }
× fix_prediction_before: public synchronized void placeBeacon ( lilium.arubabacon.iBeacon beacon ) { if ( unplacedBeacons . contains ( beacon ) ) { placedBeacons . add ( beacon ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( beacon ) ; } }
× fix_prediction_after: public synchronized void placeBeacon ( lilium.arubabacon.iBeacon kojvihfyihshjajwyjlg ) { if ( unplacedBeacons . contains ( kojvihfyihshjajwyjlg ) ) { synchronized ( placedBeacons ) { placedBeacons . add ( kojvihfyihshjajwyjlg ) ; } synchronized ( unplacedBeacons ) { unplacedBeacons . remove ( kojvihfyihshjajwyjlg ) ; } } }

line_index: 1229
bug_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> fix bugs
bug_after_refactoring: @ org.bukkit.aglamulvthiffnpfdnco.EventHandler ( priority = org.bukkit.aglamulvthiffnpfdnco.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.aglamulvthiffnpfdnco.player.PlayerJoinEvent aglamulvthiffnpfdnco ) { org.bukkit.entity.Player p = aglamulvthiffnpfdnco . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> @ org.bukkit.aglamulvthiffnpfdnco.EventHandler ( priority = org.bukkit.aglamulvthiffnpfdnco.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.aglamulvthiffnpfdnco.player.PlayerJoinEvent aglamulvthiffnpfdnco ) { org.bukkit.entity.Player p = aglamulvthiffnpfdnco . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } } } <s> fix bugs
fix_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } }
fix_after_refactoring: @ org.bukkit.aglamulvthiffnpfdnco.EventHandler ( priority = org.bukkit.aglamulvthiffnpfdnco.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.aglamulvthiffnpfdnco.player.PlayerJoinEvent aglamulvthiffnpfdnco ) { org.bukkit.entity.Player p = aglamulvthiffnpfdnco . getPlayer () ; if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } }
× fix_prediction_before: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) public void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent event ) { org.bukkit.entity.Player p = event . getPlayer () ; if ( checkSecurity ( p ) ) { if ( ! ( p . hasPlayedBefore () ) ) { setSpawn ( p ) ; } }
× fix_prediction_after: @ org.bukkit.aglamulvthiffnpfdnco.EventHandler ( priority = org.bukkit.aglamulvthiffnpfdnco.EventPriority.HIGHEST ) private void onPlayerJoin ( org.bukkit.aglamulvthiffnpfdnco.player.PlayerJoinEvent aglamulvthiffnpfdnco ) { org.bukkit.entity.Player p = aglamulvthiffnpfdnco . getPlayer () ; if ( checkSecurity ( p ) ) { setSpawn ( p ) ; } }

line_index: 1231
bug_before_refactoring: @ java.lang.Override protected long nexDelay ( final java.lang.Integer count , final long delayMillis ) { mLast = delayMillis + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> @ java.lang.Override protected long nexDelay ( final java.lang.Integer count , final long delayMillis ) { mLast = delayMillis + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> Fixed FindBugs warnings + Unit tests + Cosmetics
bug_after_refactoring: @ java.lang.Override protected long nexDelay ( final java.lang.Integer abcoeweadecedkgebmkn , final long allpwywxytsjphecfwjl ) { mLast = allpwywxytsjphecfwjl + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> @ java.lang.Override protected long nexDelay ( final java.lang.Integer abcoeweadecedkgebmkn , final long allpwywxytsjphecfwjl ) { mLast = allpwywxytsjphecfwjl + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; } <s> Fixed FindBugs warnings + Unit tests + Cosmetics
fix_before_refactoring: @ java.lang.Override protected long nexDelay ( @ org.jetbrains.annotations.NotNull final java.lang.Integer count , final long delayMillis ) { return delayMillis * count ; }
fix_after_refactoring: @ java.lang.Override protected long nexDelay ( @ org.jetbrains.annotations.NotNull final java.lang.Integer abcoeweadecedkgebmkn , final long allpwywxytsjphecfwjl ) { return allpwywxytsjphecfwjl * abcoeweadecedkgebmkn ; }
× fix_prediction_before: @ java.lang.Override protected long next () { mLast = delayMillis + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; }
× fix_prediction_after: @ java.lang.Override protected long next () { mLast = allpwywxytsjphecfwjl + ( java.lang.Math . round ( ( ( ( mLast ) * 3 ) * ( mRandom . nextDouble () ) ) ) ) ; return mLast ; }

line_index: 1235
bug_before_refactoring: protected float scorePiece ( puzzlesolver.Piece foundPiece , puzzlesolver.solver.State state ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> protected float scorePiece ( puzzlesolver.Piece foundPiece , puzzlesolver.solver.State state ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> Fixed a bug with puzzle rotation (still not quite working)
bug_after_refactoring: protected float scorePiece ( puzzlesolver.Piece ebajaqgqzbmtaeaoipix , puzzlesolver.solver.State uvwqptjsylwquakleahc ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : ebajaqgqzbmtaeaoipix . getPieceTypes () ) { totalPotentialMatches += uvwqptjsylwquakleahc.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> protected float scorePiece ( puzzlesolver.Piece ebajaqgqzbmtaeaoipix , puzzlesolver.solver.State uvwqptjsylwquakleahc ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : ebajaqgqzbmtaeaoipix . getPieceTypes () ) { totalPotentialMatches += uvwqptjsylwquakleahc.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; } <s> Fixed a bug with puzzle rotation (still not quite working)
fix_before_refactoring: protected float scorePiece ( puzzlesolver.solver.State state , puzzlesolver.Piece foundPiece ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : foundPiece . getPieceTypes () ) { totalPotentialMatches += state.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; }
fix_after_refactoring: protected float scorePiece ( puzzlesolver.solver.State uvwqptjsylwquakleahc , puzzlesolver.Piece ebajaqgqzbmtaeaoipix ) { int totalPotentialMatches = 0 ; for ( puzzlesolver.enums.PieceType pieceType : ebajaqgqzbmtaeaoipix . getPieceTypes () ) { totalPotentialMatches += uvwqptjsylwquakleahc.unplacedPieces . sublistByType ( pieceType ) . size () ; } return 1.0F / totalPotentialMatches ; }
× fix_prediction_before: protected float scorePiece ( puzzlelesolver.Piece foundPiece , puzzlesolver.solver.State state ) { return 1.0F / ( puzzlelesolver.enums.PieceType . size () ) ; }
× fix_prediction_after: protected float scorePiece ( puzzlelesolver.Piece ebajaqgqzbmtaeaoipix , puzzlelesolver.solver.State uwpptjsylwquakleahc ) { return 1.0F / ( puzzlelesolver.enums.PieceType . values () . size () ) ; }

line_index: 1236
bug_before_refactoring: void doQuery ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; } <s> void doQuery ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; } <s> few bugs fixed
bug_after_refactoring: void doQuery ( java.sql.Connection lhfhwqqtkktjjtbevoga , java.lang.String ddngxtstmrpwfrpmzsvi ) throws java.sql.SQLException { java.sql.Statement statement = lhfhwqqtkktjjtbevoga . createStatement () ; statement . executeUpdate ( ddngxtstmrpwfrpmzsvi ) ; } <s> void doQuery ( java.sql.Connection lhfhwqqtkktjjtbevoga , java.lang.String ddngxtstmrpwfrpmzsvi ) throws java.sql.SQLException { java.sql.Statement statement = lhfhwqqtkktjjtbevoga . createStatement () ; statement . executeUpdate ( ddngxtstmrpwfrpmzsvi ) ; } <s> few bugs fixed
fix_before_refactoring: void doQuery ( java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; }
fix_after_refactoring: void doQuery ( java.lang.String ddngxtstmrpwfrpmzsvi ) throws java.sql.SQLException { java.sql.Statement statement = lhfhwqqtkktjjtbevoga . createStatement () ; statement . executeUpdate ( ddngxtstmrpwfrpmzsvi ) ; }
× fix_prediction_before: void doQuery ( java.sql.Connection connection , java.lang.String query ) throws java.sql.SQLException { java.sql.Statement statement = connection . createStatement () ; statement . executeUpdate ( query ) ; }
× fix_prediction_after: void doQuery ( java.sql.Connection sb , java.lang.String ddngxtstmrpwfrpmzsvi ) throws java.sql.SQLException { java.sql.Statement statement = sb . createStatement () ; statement . executeUpdate ( ddngxtstmrpwfrpmzsvi ) ; }

line_index: 1237
bug_before_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) {} <s> @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) {} <s> fix compilation error caused by duplicate response template definition
bug_after_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > zacejjhhkptizlkcvwkh ) {} <s> @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > zacejjhhkptizlkcvwkh ) {} <s> fix compilation error caused by duplicate response template definition
fix_before_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > entrySet ) ;
fix_after_refactoring: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( java.util.List < java.util.Map.Entry < com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > > zacejjhhkptizlkcvwkh ) ;
× fix_prediction_before: { return; }
× fix_prediction_after: @ com.hazelcast.annotation.Response ( value = com.hazelcast.client.impl.protocol.ResponseMessageConst.LIST_ENTRY ) void ListEntry ( com.hazelcast.nio.serialization.Data , com.hazelcast.nio.serialization.Data > zacejjhhkptizlkcvwkh ) {}

line_index: 1239
bug_before_refactoring: public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster mediaCaster , java.lang.String message ) { gcloudPublisher . publishMessage ( this . topicName , message ) ; } <s> public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster mediaCaster , java.lang.String message ) { gcloudPublisher . publishMessage ( this . topicName , message ) ; } <s> added logging  possible fix for java.lang.reflect.InvocationTargetException & error description
bug_after_refactoring: public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster xcdmyvttbhprougrvfud , java.lang.String yvaoyblmysslimcabkqz ) { gcloudPublisher . publishMessage ( this . topicName , yvaoyblmysslimcabkqz ) ; } <s> public void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster xcdmyvttbhprougrvfud , java.lang.String yvaoyblmysslimcabkqz ) { gcloudPublisher . publishMessage ( this . topicName , yvaoyblmysslimcabkqz ) ; } <s> added logging  possible fix for java.lang.reflect.InvocationTargetException & error description
fix_before_refactoring: public void publishMessage ( java.lang.String message ) { gcloudPublisher . publishMessage ( topicName , message ) ; }
fix_after_refactoring: public void publishMessage ( java.lang.String yvaoyblmysslimcabkqz ) { gcloudPublisher . publishMessage ( topicName , yvaoyblmysslimcabkqz ) ; }
× fix_prediction_before: public void sendNotification ( java.lang.String message ) { gcloudPublisher . publishMessage ( this . topicName , message ) ; }
× fix_prediction_after: private void sendNotification ( com.wowza.wms.mediacaster.IMediaCaster xcdmyvttbhprougrvfud , java.lang.String yvaoyblmysslimcabkqz ) { gcloudPublisher . publishMessage ( this . topicName , yvaoyblmysslimcabkqz ) ; }

line_index: 1240
bug_before_refactoring: public static void main ( java.lang.String [] args ) { int needNo = - 1 ; if ( ( args.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( args [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> public static void main ( java.lang.String [] args ) { int needNo = - 1 ; if ( ( args.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( args [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> Fixed bug (sometimes it was that |cos x| > 1)
bug_after_refactoring: public static void main ( java.lang.String [] oyvcatohqivczzjygdqh ) { int needNo = - 1 ; if ( ( oyvcatohqivczzjygdqh.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( oyvcatohqivczzjygdqh [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> public static void main ( java.lang.String [] oyvcatohqivczzjygdqh ) { int needNo = - 1 ; if ( ( oyvcatohqivczzjygdqh.length ) > 0 ) { needNo = java.lang.Integer . parseInt ( oyvcatohqivczzjygdqh [ 0 ] ) ; } new Main () . main ( needNo ) ; } <s> Fixed bug (sometimes it was that |cos x| > 1)
fix_before_refactoring: public static void main ( java.lang.String [] args ) { new Main () . main () ; }
fix_after_refactoring: public static void main ( java.lang.String [] oyvcatohqivczzjygdqh ) { new Main () . main () ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) { new Main () . main ( args [ 0 ] ) ; }
× fix_prediction_after: public static void main ( java.lang.String [] oyvcatohqivczzjygdqh ) { new Main () . main ( oyvcatohqivczzjygdqh ) ; }

line_index: 1241
bug_before_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean increment ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } w . start () ; return w ; } <s> More improvements to this implementation  Bug fixes  performance improvements  and missing features/details implemented
bug_after_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean gvhhopycgyzwtgddkkwx ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( gvhhopycgyzwtgddkkwx ) { currentPoolSize . gvhhopycgyzwtgddkkwxAndGet () ; } w . start () ; return w ; } <s> protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker ( boolean gvhhopycgyzwtgddkkwx ) { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( gvhhopycgyzwtgddkkwx ) { currentPoolSize . gvhhopycgyzwtgddkkwxAndGet () ; } w . start () ; return w ; } <s> More improvements to this implementation  Bug fixes  performance improvements  and missing features/details implemented
fix_before_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; w . start () ; return w ; }
fix_after_refactoring: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; w . start () ; return w ; }
× fix_prediction_before: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( increment ) { currentPoolSize . incrementAndGet () ; } return w ; }
× fix_prediction_after: protected org.threadly.concurrent.PriorityScheduler.Worker makeNewWorker () { org.threadly.concurrent.PriorityScheduler.Worker w = new org.threadly.concurrent.PriorityScheduler.Worker ( this , threadFactory ) ; if ( gvhhopycgyzwtgddkkwx ) { currentPoolSize . gvhhopycgyzwtgddkkwxAndGet () ; } w . start () ; return w ; }

line_index: 1242
bug_before_refactoring: public final void addTransition ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . addTransition ( transition ) ; } <s> public final void addTransition ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . addTransition ( transition ) ; } <s> Fixed bug in PDA
bug_after_refactoring: public final void addTransition ( Automata.Automata.State qvbnbycwxhjhzyfxqard , Automata.Automata.Transition onabxtovnhhxgyliuzoz ) { qvbnbycwxhjhzyfxqard . addTransition ( onabxtovnhhxgyliuzoz ) ; } <s> public final void addTransition ( Automata.Automata.State qvbnbycwxhjhzyfxqard , Automata.Automata.Transition onabxtovnhhxgyliuzoz ) { qvbnbycwxhjhzyfxqard . addTransition ( onabxtovnhhxgyliuzoz ) ; } <s> Fixed bug in PDA
fix_before_refactoring: protected final void addTransition ( Automata.Automata.State from , Automata.Automata.Transition transition ) { from . addTransition ( transition ) ; }
fix_after_refactoring: protected final void addTransition ( Automata.Automata.State qvbnbycwxhjhzyfxqard , Automata.Automata.Transition onabxtovnhhxgyliuzoz ) { qvbnbycwxhjhzyfxqard . addTransition ( onabxtovnhhxgyliuzoz ) ; }
× fix_prediction_before: public final void addTransition (Automata.Automata.State from ,Automata.Transition transition ) { from . addTransition ( transition ) ; }
× fix_prediction_after: public final void addTransition ( Automata.Automata.State qvbnbycwxhjhzyfxqard , Automata.Automata.Transition onabxtovnhhxgyliuzoz ) { this . qvbnbycwxhjhzyfxqard . addTransition ( onabxtovnhhxgyliuzoz ) ; }

line_index: 1243
bug_before_refactoring: @ java.lang.Override public void renameDeck ( final int position , final java.lang.String newName ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( position ) ; deck . setName ( newName ) ; deck . save ( null ) ; } <s> @ java.lang.Override public void renameDeck ( final int position , final java.lang.String newName ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( position ) ; deck . setName ( newName ) ; deck . save ( null ) ; } <s> Move Adapter from DelernMainActivity to Presenter  relnote: Various improvements and bug fixes
bug_after_refactoring: @ java.lang.Override public void renameDeck ( final int vyllbdisvxgmvpsnmliz , final java.lang.String slfartlcuurvzwcnugvk ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( vyllbdisvxgmvpsnmliz ) ; deck . setName ( slfartlcuurvzwcnugvk ) ; deck . save ( null ) ; } <s> @ java.lang.Override public void renameDeck ( final int vyllbdisvxgmvpsnmliz , final java.lang.String slfartlcuurvzwcnugvk ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( vyllbdisvxgmvpsnmliz ) ; deck . setName ( slfartlcuurvzwcnugvk ) ; deck . save ( null ) ; } <s> Move Adapter from DelernMainActivity to Presenter  relnote: Various improvements and bug fixes
fix_before_refactoring: public void renameDeck ( final org.dasfoo.delern.models.Deck deck , final java.lang.String newName ) { deck . setName ( newName ) ; deck . save ( null ) ; }
fix_after_refactoring: public void renameDeck ( final org.dasfoo.delern.models.Deck deck , final java.lang.String slfartlcuurvzwcnugvk ) { deck . setName ( slfartlcuurvzwcnugvk ) ; deck . save ( null ) ; }
× fix_prediction_before: @ java.lang.Override public void renameDeck ( final int position , final java.lang.String newName ) { final org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( position ) ; deck . setName ( newName ) ; deck . save ( null ) ; }
× fix_prediction_after: @ java.lang.Override public void renameDeck ( final java.lang.String slfartlcuurvzwcnugvk ) { org.dasfoo.delern.models.Deck deck = getDeckFromAdapter ( vyllbdisvxgmvpsnmliz ) ; deck . setName ( slfartlcuurvzwcnugvk ) ; deck . save ( null ) ; }

line_index: 1245
bug_before_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { validate ( inventory , errors ) ; } <s> @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { validate ( inventory , errors ) ; } <s> Started working on update inventory automation test and bug fixes based on automation tests
bug_after_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet ulvcgeuxapvzojxzdxax , com.ofs.model.Inventory vvxoerirlivsvogkijju , com.ofs.server.model.OFSErrors yueivhgmjajhniautdrz ) throws java.lang.Exception { validate ( vvxoerirlivsvogkijju , yueivhgmjajhniautdrz ) ; } <s> @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet ulvcgeuxapvzojxzdxax , com.ofs.model.Inventory vvxoerirlivsvogkijju , com.ofs.server.model.OFSErrors yueivhgmjajhniautdrz ) throws java.lang.Exception { validate ( vvxoerirlivsvogkijju , yueivhgmjajhniautdrz ) ; } <s> Started working on update inventory automation test and bug fixes based on automation tests
fix_before_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { if ( changeSet . contains ( "name" ) ) { validate ( inventory , errors ) ; } }
fix_after_refactoring: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet ulvcgeuxapvzojxzdxax , com.ofs.model.Inventory vvxoerirlivsvogkijju , com.ofs.server.model.OFSErrors yueivhgmjajhniautdrz ) throws java.lang.Exception { if ( ulvcgeuxapvzojxzdxax . contains ( "name" ) ) { validate ( vvxoerirlivsvogkijju , yueivhgmjajhniautdrz ) ; } }
× fix_prediction_before: @ java.lang.Override public boolean validate ( com.ofs.server.form.update.ChangeSet changeSet , com.ofs.model.Inventory inventory , com.ofs.server.model.OFSErrors errors ) throws java.lang.Exception { validate ( inventory , errors ) ; return true ; }
× fix_prediction_after: @ java.lang.Override public void validate ( com.ofs.server.form.update.ChangeSet ulvcgeuxapvzojxzdxax , com.ofs.model.Inventory itemCountxoerirlivsvogkijju ) throws java.lang.Exception { validate ( itemCountxoerirlivsvogkijju ) ; }

line_index: 1246
bug_before_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } <s> @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } <s> fixbug
bug_after_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver rkfhchwqnwemleffjhlh ) { super . unregisterReceiver ( rkfhchwqnwemleffjhlh ) ; rkfhchwqnwemleffjhlhs . remove ( rkfhchwqnwemleffjhlh ) ; } <s> @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver rkfhchwqnwemleffjhlh ) { super . unregisterReceiver ( rkfhchwqnwemleffjhlh ) ; rkfhchwqnwemleffjhlhs . remove ( rkfhchwqnwemleffjhlh ) ; } <s> fixbug
fix_before_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { if ( receivers . contains ( receiver ) ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } }
fix_after_refactoring: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver rkfhchwqnwemleffjhlh ) { if ( rkfhchwqnwemleffjhlhs . contains ( rkfhchwqnwemleffjhlh ) ) { super . unregisterReceiver ( rkfhchwqnwemleffjhlh ) ; rkfhchwqnwemleffjhlhs . remove ( rkfhchwqnwemleffjhlh ) ; } }
× fix_prediction_before: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver receiver ) { if ( receiver != null ) { super . unregisterReceiver ( receiver ) ; receivers . remove ( receiver ) ; } }
× fix_prediction_after: @ java.lang.Override public void unregisterReceiver ( android.content.BroadcastReceiver rkfhchwqnwemleffjhlh ) { super . unregisterReceiver ( rkfhchwqnwemleffjhlh ) ; if ( ( rkfhchwqnwemleffjhlhs ) != null ) { rkfhchwqnwemleffjhlhs . remove ( rkfhchwqnwemleffjhlh ) ; } }

line_index: 1247
bug_before_refactoring: public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double getSubTotalPrice ( int idProduct ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
bug_after_refactoring: public double getSubTotalPrice ( int hugftxzxqscmywovkbpq ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( hugftxzxqscmywovkbpq ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> public double getSubTotalPrice ( int hugftxzxqscmywovkbpq ) { double subTotalPrice = 0 ; manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( hugftxzxqscmywovkbpq ) ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; } <s> fixe quelques bugs mineurs
fix_before_refactoring: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
fix_after_refactoring: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }
× fix_prediction_before: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { double subTotalPrice = 0 ; subTotalPrice = cartProduct . getProduct () . getPrice () ; return subTotalPrice * ( cartProduct . getQuantity () ) ; }
× fix_prediction_after: public double getSubTotalPrice ( manufacture.entity.cart.CartProduct cartProduct ) { subTotalPrice = ( cartProduct . getProduct () . getPrice () ) * ( cartProduct . getQuantity () ) ; return subTotalPrice ; }

line_index: 1248
bug_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName ) ; } <s> Fixing minor issue with the visit - with interval
bug_after_refactoring: public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk ) ; } <s> public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk ) ; } <s> Fixing minor issue with the visit - with interval
fix_before_refactoring: public void addAttributeName ( java.lang.String attributeName ) { if ( ! ( getAttributeNames () . contains ( attributeName ) ) ) { getAttributeNames () . add ( attributeName ) ; } }
fix_after_refactoring: public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { if ( ! ( getAttributeNames () . contains ( kfuumcfujqexbimuyqvk ) ) ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk ) ; } }
× fix_prediction_before: public void addAttributeName ( java.lang.String attributeName ) { getAttributeNames () . add ( attributeName . toUpperCase () ) ; }
× fix_prediction_after: public void addAttributeName ( java.lang.String kfuumcfujqexbimuyqvk ) { getAttributeNames () . add ( kfuumcfujqexbimuyqvk . toLowerCase () ) ; }

line_index: 1249
bug_before_refactoring: public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { tooltip . setToolTipPosition ( anchorView , position ) ; } <s> public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { tooltip . setToolTipPosition ( anchorView , position ) ; } <s> bug fix when the dialog is drawn
bug_after_refactoring: public void setTooltipPosition ( android.view.View xopdierhrduzhzabqhyg , it.tooltip.lpvuzagycnaereiarcpi.ToolTipPositionManager lpvuzagycnaereiarcpi ) { tooltip . setToolTipPosition ( xopdierhrduzhzabqhyg , lpvuzagycnaereiarcpi ) ; } <s> public void setTooltipPosition ( android.view.View xopdierhrduzhzabqhyg , it.tooltip.lpvuzagycnaereiarcpi.ToolTipPositionManager lpvuzagycnaereiarcpi ) { tooltip . setToolTipPosition ( xopdierhrduzhzabqhyg , lpvuzagycnaereiarcpi ) ; } <s> bug fix when the dialog is drawn
fix_before_refactoring: public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { this . position = position ; this . anchorView = anchorView ; }
fix_after_refactoring: public void setTooltipPosition ( android.view.View xopdierhrduzhzabqhyg , it.tooltip.lpvuzagycnaereiarcpi.ToolTipPositionManager lpvuzagycnaereiarcpi ) { this . lpvuzagycnaereiarcpi = lpvuzagycnaereiarcpi ; this . xopdierhrduzhzabqhyg = xopdierhrduzhzabqhyg ; }
× fix_prediction_before: public void setTooltipPosition ( android.view.View anchorView , it.tooltip.position.ToolTipPositionManager position ) { tooltip . setToolTipPosition ( anchorView , position ) ; }
× fix_prediction_after: public void setTooltipPosition ( android.view.View xopdierhrduzhzabqhyg , it.tooltip.lpvuzagycnaereiarcpi.ToolTipPositionManager lpvuzagycnaereiarcpi ) { tooltip . setToolTipPosition ( xopdierhrduzhzabqhyg ) ; }

line_index: 1250
bug_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> public static void log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
bug_after_refactoring: public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; } } <s> public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; } } <s> Bug #5764 - Fix log level management (in MegaApplication)
fix_before_refactoring: public static void log ( java.lang.String origin , java.lang.String message ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; }
fix_after_refactoring: public static void log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; }
× fix_prediction_before: public static boolean log ( java.lang.String origin , java.lang.String message ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , message , origin ) ; } return true ; }
× fix_prediction_after: public static boolean log ( java.lang.String kvwfybfggkiucjoteonn , java.lang.String urcbgyxubfeywwhobicu ) { java.io.File logFile = null ; if ( mega.privacy.android.app.utils.Util.DEBUG ) { nz.mega.sdk.MegaApiAndroid . log ( MegaApiAndroid.LOG_LEVEL_INFO , urcbgyxubfeywwhobicu , kvwfybfggkiucjoteonn ) ; } return true ; }

line_index: 1252
bug_before_refactoring: public int indexOf ( E e ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . indexOf ( e , 0 ) ; } <s> public int indexOf ( E e ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . indexOf ( e , 0 ) ; } <s> Commented linked list  and bugfixes in Loader
bug_after_refactoring: public int indjhjzhfayhgrvklrkzqopxOf ( E jhjzhfayhgrvklrkzqop ) { if ( ( hjhjzhfayhgrvklrkzqopadLink ) == null ) rjhjzhfayhgrvklrkzqopturn - 1 ; jhjzhfayhgrvklrkzqoplsjhjzhfayhgrvklrkzqop rjhjzhfayhgrvklrkzqopturn hjhjzhfayhgrvklrkzqopadLink . indjhjzhfayhgrvklrkzqopxOf ( jhjzhfayhgrvklrkzqop , 0 ) ; } <s> public int indjhjzhfayhgrvklrkzqopxOf ( E jhjzhfayhgrvklrkzqop ) { if ( ( hjhjzhfayhgrvklrkzqopadLink ) == null ) rjhjzhfayhgrvklrkzqopturn - 1 ; jhjzhfayhgrvklrkzqoplsjhjzhfayhgrvklrkzqop rjhjzhfayhgrvklrkzqopturn hjhjzhfayhgrvklrkzqopadLink . indjhjzhfayhgrvklrkzqopxOf ( jhjzhfayhgrvklrkzqop , 0 ) ; } <s> Commented linked list  and bugfixes in Loader
fix_before_refactoring: public int indexOf ( E item ) { if ( ( headLink ) == null ) return - 1 ; else return headLink . indexOf ( item , 0 ) ; }
fix_after_refactoring: public int indjhjzhfayhgrvklrkzqopxOf ( E itjhjzhfayhgrvklrkzqopm ) { if ( ( hjhjzhfayhgrvklrkzqopadLink ) == null ) rjhjzhfayhgrvklrkzqopturn - 1 ; jhjzhfayhgrvklrkzqoplsjhjzhfayhgrvklrkzqop rjhjzhfayhgrvklrkzqopturn hjhjzhfayhgrvklrkzqopadLink . indjhjzhfayhgrvklrkzqopxOf ( itjhjzhfayhgrvklrkzqopm , 0 ) ; }
× fix_prediction_before: public int indexOf ( E e ) { return headLink . indexOf ( e , 0 ) ; }
× fix_prediction_after: public int indjhjzhfayhgrvklrkzqopxOf ( E jhjzhfayhgrvklrkzqop ) { if ( ( hjhjzhfayhgrvklrkzqopadLink ) == null ) rjhjzhfayhgrvklrkzqopturn - 1 ; jhjzhfayhgrvklrkzqhfayhgrvklrkzqop rjhjzhfayhgrvklrkzqopturn hjhjzhfayhgrvklrkzqopadLink . indjhjzhfayhgrvklrkzqopxOf ( jhjzhfayhgrvklrkzqop , 0 ) ; return 1 ; }

line_index: 1253
bug_before_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( resource . getURL () ) ; } <s> protected boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( resource . getURL () ) ; } <s> PathMatchingResourcePatternResolver reuses resolved root dir URL  Issue: SPR-14202
bug_after_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource vcsgacpeskabkkogheeg ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( vcsgacpeskabkkogheeg . getURL () ) ; } <s> protected boolean isJarResource ( org.springframework.core.io.Resource vcsgacpeskabkkogheeg ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( vcsgacpeskabkkogheeg . getURL () ) ; } <s> PathMatchingResourcePatternResolver reuses resolved root dir URL  Issue: SPR-14202
fix_before_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return false ; }
fix_after_refactoring: protected boolean isJarResource ( org.springframework.core.io.Resource vcsgacpeskabkkogheeg ) throws java.io.IOException { return false ; }
× fix_prediction_before: public boolean isJarResource ( org.springframework.core.io.Resource resource ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( resource . getURL () ) ; }
× fix_prediction_after: protected boolean isJarResource ( java.lang.String url ) throws java.io.IOException { return org.springframework.util.ResourceUtils . isJarURL ( url ) ; }

line_index: 1254
bug_before_refactoring: public static native void doReconfigure ( int w , int h , com.runrev.android.Bitmap bitmap ) ; <s> public static native void doReconfigure ( int w , int h , com.runrev.android.Bitmap bitmap ) ; <s> [[ Bug 17248 ]] Fix incorrect top-left of android stack rect resulting in incorrect mouseloc.
bug_after_refactoring: public static native void doReconfigure ( int ifybdctzcmpufmaxlgnu , int kdnerohjhtjfvpvcuxyp , com.runrev.android.Bitmap zgnfgzxxwujgjutsrctq ) ; <s> public static native void doReconfigure ( int ifybdctzcmpufmaxlgnu , int kdnerohjhtjfvpvcuxyp , com.runrev.android.Bitmap zgnfgzxxwujgjutsrctq ) ; <s> [[ Bug 17248 ]] Fix incorrect top-left of android stack rect resulting in incorrect mouseloc.
fix_before_refactoring: public static native void doReconfigure ( int x , int y , int w , int h , com.runrev.android.Bitmap bitmap ) ;
fix_after_refactoring: public static native void doReconfigure ( int x , int y , int ifybdctzcmpufmaxlgnu , int kdnerohjhtjfvpvcuxyp , com.runrev.android.Bitmap zgnfgzxxwujgjutsrctq ) ;
× fix_prediction_before: public static native void doReconfigure ( int w , int h , com.runrev.android.Bitmap bitmap ) ;
× fix_prediction_after: public static native void doReconfigure ( int ifybdctzcmpufmaxl cmd , int kdnerohjhtjfvpvcuxyp , com.runrev.android.Bitmap zgnfgzxxwujgjutsrctq ) ;

line_index: 1257
bug_before_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> fix the problem in first app launch.
bug_after_refactoring: @ java.lang.Override protected void onCreate ( android.os.Bundle ptdocjbywrfxhzqmtbwy ) { super . onCreate ( ptdocjbywrfxhzqmtbwy ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> @ java.lang.Override protected void onCreate ( android.os.Bundle ptdocjbywrfxhzqmtbwy ) { super . onCreate ( ptdocjbywrfxhzqmtbwy ) ; setContentView ( R.layout.activity_main ) ; if ( ! ( com.ripplex.fileobservertester.RuntimePermissionsChecker . checkSelfStoragePermissions ( getApplicationContext () ) ) ) { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; } } <s> fix the problem in first app launch.
fix_before_refactoring: private void requestStoragePermissions () { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; }
fix_after_refactoring: private void requestStoragePermissions () { com.ripplex.fileobservertester.RuntimePermissionsChecker . requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; }
× fix_prediction_before: @ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; }
× fix_prediction_after: @ java.lang.Override protected void onCreate ( android.os.Bundle ptdocjbywrfxhzqmtbwy ) { super . onCreate ( ptdocjbywrfxhzqmtbwy ) ; setContentView ( R.layout.activity_main ) ; requestStoragePermissions ( this , com.ripplex.fileobservertester.MainActivity.PERMISSION_REQUEST_CODE ) ; }

line_index: 1258
bug_before_refactoring: public native void useDict ( java.lang.String bookname ) ; <s> public native void useDict ( java.lang.String bookname ) ; <s> [bugfix] fix use given dictionary does not work bug
bug_after_refactoring: public native void useDict ( java.lang.String uofpzdqnesxwcglqleug ) ; <s> public native void useDict ( java.lang.String uofpzdqnesxwcglqleug ) ; <s> [bugfix] fix use given dictionary does not work bug
fix_before_refactoring: public native java.lang.String useDict ( java.lang.String bookname , java.lang.String key ) ;
fix_after_refactoring: public native java.lang.String useDict ( java.lang.String uofpzdqnesxwcglqleug , java.lang.String key ) ;
× fix_prediction_before: public native void useDict ( java.lang.String bookname ) ;
× fix_prediction_after: public native void useDict ( java.lang.String uofpzdqnesxwcglqleug ) ;

line_index: 1259
bug_before_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > customMsgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . customMsgs = customMsgs ; this . discardCustomMsgId = discardCustomMsgId ; } <s> public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > customMsgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . customMsgs = customMsgs ; this . discardCustomMsgId = discardCustomMsgId ; } <s> 1171-debug - Fix WIP.
bug_after_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > tdrlibwazofxqjnkbsay , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid sndhijuszeafqzvcadcl , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > pkgbibtmkftngakdmgno , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid igmyjidqvbytvkivdgyf ) { this . tdrlibwazofxqjnkbsay = tdrlibwazofxqjnkbsay ; this . sndhijuszeafqzvcadcl = sndhijuszeafqzvcadcl ; this . pkgbibtmkftngakdmgno = pkgbibtmkftngakdmgno ; this . igmyjidqvbytvkivdgyf = igmyjidqvbytvkivdgyf ; } <s> public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > tdrlibwazofxqjnkbsay , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid sndhijuszeafqzvcadcl , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > pkgbibtmkftngakdmgno , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid igmyjidqvbytvkivdgyf ) { this . tdrlibwazofxqjnkbsay = tdrlibwazofxqjnkbsay ; this . sndhijuszeafqzvcadcl = sndhijuszeafqzvcadcl ; this . pkgbibtmkftngakdmgno = pkgbibtmkftngakdmgno ; this . igmyjidqvbytvkivdgyf = igmyjidqvbytvkivdgyf ; } <s> 1171-debug - Fix WIP.
fix_before_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardCustomMsgId ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . discardCustomMsgId = discardCustomMsgId ; }
fix_after_refactoring: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > tdrlibwazofxqjnkbsay , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid sndhijuszeafqzvcadcl , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid igmyjidqvbytvkivdgyf ) { this . tdrlibwazofxqjnkbsay = tdrlibwazofxqjnkbsay ; this . sndhijuszeafqzvcadcl = sndhijuszeafqzvcadcl ; this . igmyjidqvbytvkivdgyf = igmyjidqvbytvkivdgyf ; }
× fix_prediction_before: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > msgs , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid discardMsgId , @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > customMsgs ) { this . msgs = msgs ; this . discardMsgId = discardMsgId ; this . customMsgs = customMsgs ; this . discardCustomMsgId = discardCustomMsgId ; }
× fix_prediction_after: public void messages ( @ org.jetbrains.annotations.Nullable java.util.Collection < org.apache.ignite.spi.discovery.tcp.messages.TcpDiscoveryAbstractMessage > tdrlibwazofxqjnkbsay , @ org.jetbrains.annotations.Nullable org.apache.ignite.lang.IgniteUuid sndhijuszeafqzvcadcl ) { this . tdrlibwazofxqjnkbsay = tdrlibwazofxqjnkbsay ; this . sndhijuszeafqzvcadcl = sndhijuszeafqzvcadcl ; this . pkgbibtmkftngakdmgno = pkgbibtmkftngakdmgno ; this . igmyjidqvbytvkivdgyf = igmyjidqvbytvkivdgyf ; }

line_index: 1262
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> Bugfixes  - Fixed Mark adding not working when entering new Subject as well (SubjectPage) - Improved Keyboard Behaviour - String improvements - Removed unnessecary files - Added Link to new Website... DAT MOBILE WEBSITE LAYOUT :+1: - Added Dev6 APK  - George Push II
bug_after_refactoring: @ jauikeuowetfjsxhpfabwva.lang.Ouikeuowetfjsxhpfabwverride public uikeuowetfjsxhpfabwvoid onClick ( android.uikeuowetfjsxhpfabwview.View uikeuowetfjsxhpfabwv ) { if ( superClassManager . sauikeuowetfjsxhpfabwveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> @ jauikeuowetfjsxhpfabwva.lang.Ouikeuowetfjsxhpfabwverride public uikeuowetfjsxhpfabwvoid onClick ( android.uikeuowetfjsxhpfabwview.View uikeuowetfjsxhpfabwv ) { if ( superClassManager . sauikeuowetfjsxhpfabwveSubject ( subjectDialog , rootView , false , false , false ) ) { superClassManager . startNewDetailPage () ; } } <s> Bugfixes  - Fixed Mark adding not working when entering new Subject as well (SubjectPage) - Improved Keyboard Behaviour - String improvements - Removed unnessecary files - Added Link to new Website... DAT MOBILE WEBSITE LAYOUT :+1: - Added Dev6 APK  - George Push II
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( superClassManager . saveSubject ( subjectDialog , rootView , false , true , false ) ) { superClassManager . startNewDetailPage () ; } }
fix_after_refactoring: @ jauikeuowetfjsxhpfabwva.lang.Ouikeuowetfjsxhpfabwverride public uikeuowetfjsxhpfabwvoid onClick ( android.uikeuowetfjsxhpfabwview.View uikeuowetfjsxhpfabwv ) { if ( superClassManager . sauikeuowetfjsxhpfabwveSubject ( subjectDialog , rootView , false , true , false ) ) { superClassManager . startNewDetailPage () ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { superClassManager . saveSubject ( subjectDialog , rootView , false , false , false ) ; superClassManager . startNewDetailPage () ; }
× fix_prediction_after: @ jauikeuowetfjsxhpfabwva.lang.OuikeuowetfjsxhpfabwActivator public uikeuowetfjsxhpfabwvoid onClick ( android.uikeuowetfjsxhpfabwview.View uikeuowetfjsxhpfabwv ) { superClassManager . startNewDetailPage () ; }

line_index: 1265
bug_before_refactoring: @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > example ) { return repository . findOne ( example ) ; } <s> @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > example ) { return repository . findOne ( example ) ; } <s> Bugfix on service to work only with its type.
bug_after_refactoring: @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > sbhlceimpxagxdkgvoeh ) { return repository . findOne ( sbhlceimpxagxdkgvoeh ) ; } <s> @ java.lang.Override public < S extends E > S findOne ( org.springframework.data.domain.Example < S > sbhlceimpxagxdkgvoeh ) { return repository . findOne ( sbhlceimpxagxdkgvoeh ) ; } <s> Bugfix on service to work only with its type.
fix_before_refactoring: @ java.lang.Override public E findOne ( org.springframework.data.domain.Example < E > example ) { return repository . findOne ( example ) ; }
fix_after_refactoring: @ java.lang.Override public E findOne ( org.springframework.data.domain.Example < E > sbhlceimpxagxdkgvoeh ) { return repository . findOne ( sbhlceimpxagxdkgvoeh ) ; }
× fix_prediction_before: @ java.lang.Override public long count ( org.springframework.data.domain.Example < E > example ) { return repository . count ( example ) ; }
× fix_prediction_after: @ java.lang.Override public E findOne ( org.springframework.data.domain.Example < E > type ) { return repository . findOne ( type ) ; }

line_index: 1268
bug_before_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> Now I can modify the Lodging related to the room I'm currently modifying. Check and try to find bugs / things I should fix.
bug_after_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent kdgufxkyibgfqcftwejv ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> private void botonAniadirActionPerformed ( java.awt.event.ActionEvent kdgufxkyibgfqcftwejv ) { recoleccionDatosVentana () ; if ( ! ( odb . isClosed () ) ) controlador.datos.NeoDatis . cerrarConexion () ; } <s> Now I can modify the Lodging related to the room I'm currently modifying. Check and try to find bugs / things I should fix.
fix_before_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; }
fix_after_refactoring: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent kdgufxkyibgfqcftwejv ) { recoleccionDatosVentana () ; }
× fix_prediction_before: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent evt ) { recoleccionDatosVentana () ; controlador.datos.NeoDatis . cerrarConexion () ; }
× fix_prediction_after: private void botonAniadirActionPerformed ( java.awt.event.ActionEvent kdgufxkyibgfqcftwejv ) { recoleccionDatosVentana () ; controlador.datos.NeoDatis . cerrarConexion () ; }

line_index: 1269
bug_before_refactoring: @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . params ) { return getWeatherData () ; } <s> @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . params ) { return getWeatherData () ; } <s> Fixing NetworkOnMainThread issue. Creating class to manage logging.
bug_after_refactoring: @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . vmtpctmqeyhdrljygjlb ) { return getWeatherData () ; } <s> @ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . vmtpctmqeyhdrljygjlb ) { return getWeatherData () ; } <s> Fixing NetworkOnMainThread issue. Creating class to manage logging.
fix_before_refactoring: @ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { getWeatherData () ; return null ; }
fix_after_refactoring: @ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . vmtpctmqeyhdrljygjlb ) { getWeatherData () ; return null ; }
× fix_prediction_before: @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.Void . . . params ) { return getWeatherData ( params [ 0 ] ) ; }
× fix_prediction_after: @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.Void . . . vmtpctmqeyhdrljygjlb ) { return getWeatherData () ; }

line_index: 1270
bug_before_refactoring: public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; } <s> public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; } <s> list-template - minor bugfixes + integration test
bug_after_refactoring: public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element ugflxxvxoettjbldbmbk ) { this . ugflxxvxoettjbldbmbks . add ( ugflxxvxoettjbldbmbk ) ; } <s> public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element ugflxxvxoettjbldbmbk ) { this . ugflxxvxoettjbldbmbks . add ( ugflxxvxoettjbldbmbk ) ; } <s> list-template - minor bugfixes + integration test
fix_before_refactoring: private void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { this . elements . add ( element ) ; }
fix_after_refactoring: private void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element ugflxxvxoettjbldbmbk ) { this . ugflxxvxoettjbldbmbks . add ( ugflxxvxoettjbldbmbk ) ; }
× fix_prediction_before: public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element element ) { elements . add ( element ) ; }
× fix_prediction_after: public void addElementToList ( com.github.messenger4j.send.templates.ListTemplate.Element ugflxxvxoettjbldbmbk ) { if ( ! ( this . ugflxxvxoettjbldbmbks . contains ( ugflxxvxoettjbldbmbk ) ) ) { this . ugflxxvxoettjbldbmbks . add ( ugflxxvxoettjbldbmbk ) ; } }

line_index: 1273
bug_before_refactoring: public static com.github.obase.kit.StringKit.Join one ( char sep , java.lang.String nil ) { return new com.github.obase.kit.StringKit.Join ( sep , nil ) ; } <s> public static com.github.obase.kit.StringKit.Join one ( char sep , java.lang.String nil ) { return new com.github.obase.kit.StringKit.Join ( sep , nil ) ; } <s> fix stringkit split bug
bug_after_refactoring: public static com.github.obase.kit.StringKit.Join one ( char plqeajnbijefnxqtfujk , java.lang.String jalddjyeggdcpqwqkljc ) { return new com.github.obase.kit.StringKit.Join ( plqeajnbijefnxqtfujk , jalddjyeggdcpqwqkljc ) ; } <s> public static com.github.obase.kit.StringKit.Join one ( char plqeajnbijefnxqtfujk , java.lang.String jalddjyeggdcpqwqkljc ) { return new com.github.obase.kit.StringKit.Join ( plqeajnbijefnxqtfujk , jalddjyeggdcpqwqkljc ) ; } <s> fix stringkit split bug
fix_before_refactoring: public static com.github.obase.kit.StringKit.Join build ( char sep ) { return new com.github.obase.kit.StringKit.Join ( sep ) ; }
fix_after_refactoring: public static com.github.obase.kit.StringKit.Join build ( char plqeajnbijefnxqtfujk ) { return new com.github.obase.kit.StringKit.Join ( plqeajnbijefnxqtfujk ) ; }
× fix_prediction_before: public static com.github.obase.kit.StringKit.Join one ( char sep , java.lang.String nil ) { return new com.github.obase.kit.StringKit.Join ( sep , nil , null ) ; }
× fix_prediction_after: public static com.github.obase.kit.StringKit.Join one ( char plqeajnbijefnxqtfujk , java.lang.String jalddjyeggdcpqwqkljc ) { return new com.github.obase.kit.StringKit.Join ( plqeajnbijefnxqtfujk , jalddjyeggdcpqwqkljc ) ; }

line_index: 1274
bug_before_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { eventHandlerList . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { eventHandlerList . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> fix compiler error
bug_after_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > pzzpwnhxbfphqmdjorpo ) { pzzpwnhxbfphqmdjorpo . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > pzzpwnhxbfphqmdjorpo ) { pzzpwnhxbfphqmdjorpo . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; } <s> fix compiler error
fix_before_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { java.util.Collections . sort ( eventHandlerList , buildcraft.transport.PipeEventBus.COMPARATOR ) ; }
fix_after_refactoring: private void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > pzzpwnhxbfphqmdjorpo ) { java.util.Collections . sort ( pzzpwnhxbfphqmdjorpo , buildcraft.transport.PipeEventBus.COMPARATOR ) ; }
× fix_prediction_before: private static void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > eventHandlerList ) { eventHandlerList . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; }
× fix_prediction_after: public void updateEventHandlers ( java.util.List < buildcraft.transport.PipeEventBus.EventHandler > pzzpwnhxbfphqmdjorpo ) { pzzpwnhxbfphqmdjorpo . sort ( buildcraft.transport.PipeEventBus.COMPARATOR ) ; }

line_index: 1275
bug_before_refactoring: @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; } <s> @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; } <s> Bugfix
bug_after_refactoring: @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent sysbzjcyyctsvshiwzhr ) { newRoundResult = java.util.Arrays . asList ( sysbzjcyyctsvshiwzhr . getTurnSnapshot () . getRobots () ) ; } <s> @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent sysbzjcyyctsvshiwzhr ) { newRoundResult = java.util.Arrays . asList ( sysbzjcyyctsvshiwzhr . getTurnSnapshot () . getRobots () ) ; } <s> Bugfix
fix_before_refactoring: @ java.lang.Override public synchronized void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; }
fix_after_refactoring: @ java.lang.Override public synchronized void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent sysbzjcyyctsvshiwzhr ) { newRoundResult = java.util.Arrays . asList ( sysbzjcyyctsvshiwzhr . getTurnSnapshot () . getRobots () ) ; }
× fix_prediction_before: @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent event ) { newRoundResult = java.util.Arrays . asList ( event . getTurnSnapshot () . getRobots () ) ; }
× fix_prediction_after: @ java.lang.Override public void onTurnEnded ( final com.hutgroup.robocode.server.TurnEndedEvent sysbzjcyyctsvshiwzhr ) { newRoundResult = newRoundResult ; }

line_index: 1277
bug_before_refactoring: public void addContact ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . addContact ( name , address , phone ) ; } <s> public void addContact ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . addContact ( name , address , phone ) ; } <s> Fix some bugs and mismatches
bug_after_refactoring: public void addContact ( java.lang.String nffldzxcrwrrjdqohubg , java.lang.String afjaptahcsfwhlvrrijd , java.lang.String ubnizrgwxuggpawltpww ) { cl . addContact ( nffldzxcrwrrjdqohubg , afjaptahcsfwhlvrrijd , ubnizrgwxuggpawltpww ) ; } <s> public void addContact ( java.lang.String nffldzxcrwrrjdqohubg , java.lang.String afjaptahcsfwhlvrrijd , java.lang.String ubnizrgwxuggpawltpww ) { cl . addContact ( nffldzxcrwrrjdqohubg , afjaptahcsfwhlvrrijd , ubnizrgwxuggpawltpww ) ; } <s> Fix some bugs and mismatches
fix_before_refactoring: public void addContact ( java.lang.String name , java.lang.String phone , java.lang.String address ) { cl . addContact ( name , phone , address ) ; }
fix_after_refactoring: public void addContact ( java.lang.String nffldzxcrwrrjdqohubg , java.lang.String ubnizrgwxuggpawltpww , java.lang.String afjaptahcsfwhlvrrijd ) { cl . addContact ( nffldzxcrwrrjdqohubg , ubnizrgwxuggpawltpww , afjaptahcsfwhlvrrijd ) ; }
× fix_prediction_before: public void addContact ( java.lang.String name , java.lang.String address , java.lang.String phone ) { cl . addContact ( name , address , phone , false ) ; }
× fix_prediction_after: public void addContact ( java.lang.String nffldzxcrwrrjdqohubg , java.lang.String afjaptahcsf eduvrrijd , java.lang.String ubnizrgwxuggpawltpww ) { cl . addContact ( nffldzxcrwrrjdqohubg , afjaptahcsf eduvrrijd , ubnizrgwxuggpawltpww ) ; }

line_index: 1278
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( getBaseContext () , userId , listId ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( getBaseContext () , userId , listId ) ; } <s> bug fixes
bug_after_refactoring: @ jagtlsydzbrflqaohfqoqya.lang.Ogtlsydzbrflqaohfqoqyerride public gtlsydzbrflqaohfqoqyoid onClick ( android.gtlsydzbrflqaohfqoqyiew.View gtlsydzbrflqaohfqoqy ) { com.roigreenberg.easyshop.MainActigtlsydzbrflqaohfqoqyity . ShareList ( getBaseContext () , userId , listId ) ; } <s> @ jagtlsydzbrflqaohfqoqya.lang.Ogtlsydzbrflqaohfqoqyerride public gtlsydzbrflqaohfqoqyoid onClick ( android.gtlsydzbrflqaohfqoqyiew.View gtlsydzbrflqaohfqoqy ) { com.roigreenberg.easyshop.MainActigtlsydzbrflqaohfqoqyity . ShareList ( getBaseContext () , userId , listId ) ; } <s> bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.roigreenberg.easyshop.MainActivity . ShareList ( v . getContext () , userId , listId ) ; }
fix_after_refactoring: @ jagtlsydzbrflqaohfqoqya.lang.Ogtlsydzbrflqaohfqoqyerride public gtlsydzbrflqaohfqoqyoid onClick ( android.gtlsydzbrflqaohfqoqyiew.View gtlsydzbrflqaohfqoqy ) { com.roigreenberg.easyshop.MainActigtlsydzbrflqaohfqoqyity . ShareList ( gtlsydzbrflqaohfqoqy . getContext () , userId , listId ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) {ShareList ( this , userId , listId ) ; }
× fix_prediction_after: @ jagtlsydzbrflqaohfqoqya.lang.Ogtlsydzbrflqaohfqoqyerride public gtlsydzbrflqaohfqoqyoid onClick ( android.gtlsydzbrflqaohfqoqyiew.View gtlsydzbrflqaohfqoqy ) { com.roigreenberg.easyshop.MainActigtlsydzbrflqaohfqoqyity .ShareList ( this , userId , listId ) ; }

line_index: 1279
bug_before_refactoring: public static void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> public static void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> Fix synchronization issues in FileCache and NetcdfDataset * Effective Java 2ed  Item 66: Synchronize access to shared mutable data
bug_after_refactoring: public static void initNetcdfFileCache ( int vtwnfvlqdulcycpfwimi , int whibatrluqiwdxtunvdv , int pwzyhzrlyiyjpkcqnebo , int sookaxbvelsaxgeyvtou ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , vtwnfvlqdulcycpfwimi , whibatrluqiwdxtunvdv , pwzyhzrlyiyjpkcqnebo , sookaxbvelsaxgeyvtou ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> public static void initNetcdfFileCache ( int vtwnfvlqdulcycpfwimi , int whibatrluqiwdxtunvdv , int pwzyhzrlyiyjpkcqnebo , int sookaxbvelsaxgeyvtou ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , vtwnfvlqdulcycpfwimi , whibatrluqiwdxtunvdv , pwzyhzrlyiyjpkcqnebo , sookaxbvelsaxgeyvtou ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; } <s> Fix synchronization issues in FileCache and NetcdfDataset * Effective Java 2ed  Item 66: Synchronize access to shared mutable data
fix_before_refactoring: public static synchronized void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; }
fix_after_refactoring: public static synchronized void initNetcdfFileCache ( int vtwnfvlqdulcycpfwimi , int whibatrluqiwdxtunvdv , int pwzyhzrlyiyjpkcqnebo , int sookaxbvelsaxgeyvtou ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , vtwnfvlqdulcycpfwimi , whibatrluqiwdxtunvdv , pwzyhzrlyiyjpkcqnebo , sookaxbvelsaxgeyvtou ) ; }
× fix_prediction_before: public static void initNetcdfFileCache ( int minElementsInMemory , int maxElementsInMemory , int hardLimit , int period ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , minElementsInMemory , maxElementsInMemory , hardLimit , period ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; }
× fix_prediction_after: public static void initNetcdfFileCache ( int vtwnfvlqdulcycpfwimi , int whibatrluqiwdxtunvdv , int pwzyhzrlyiyjpkcqnebo ) { ucar.nc2.dataset.NetcdfDataset.netcdfFileCache = new ucar.nc2.util.cache.FileCache ( "NetcdfFileCache " , vtwnfvlqdulcycpfwimi , whibatrluqiwdxtunvdv , pwzyhzrlyiyjpkcqnebo ) ; ucar.nc2.dataset.NetcdfDataset.defaultNetcdfFileFactory = new ucar.nc2.dataset.NetcdfDataset.MyNetcdfFileFactory () ; }

line_index: 1280
bug_before_refactoring: private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
bug_after_refactoring: private static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; } <s> private static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; } <s> Fixed issue with units not being paired in the Batch Edit form
fix_before_refactoring: public static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , ( max + 1 ) ) ; }
fix_after_refactoring: public static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , ( pocaddykzamablqunkde + 1 ) ) ; }
× fix_prediction_before: private static int randInt ( int min , int max ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( min , max ) ; }
× fix_prediction_after: private static int randInt ( int eskemszdkprsqgzkfewm , int pocaddykzamablqunkde ) { return java.util.concurrent.ThreadLocalRandom . current () . nextInt ( eskemszdkprsqgzkfewm , pocaddykzamablqunkde ) ; }

line_index: 1281
bug_before_refactoring: private static boolean doesFilerExist ( java.io.File file ) { if ( file == null ) return false ; return file . exists () ; } <s> private static boolean doesFilerExist ( java.io.File file ) { if ( file == null ) return false ; return file . exists () ; } <s> Fixed bug
bug_after_refactoring: private static boolean doesFilerExist ( java.io.File vzogohqdwgzlkcsbysjw ) { if ( vzogohqdwgzlkcsbysjw == null ) return false ; return vzogohqdwgzlkcsbysjw . exists () ; } <s> private static boolean doesFilerExist ( java.io.File vzogohqdwgzlkcsbysjw ) { if ( vzogohqdwgzlkcsbysjw == null ) return false ; return vzogohqdwgzlkcsbysjw . exists () ; } <s> Fixed bug
fix_before_refactoring: private static boolean doesFilerExist ( java.io.File file ) { return ( file != null ) && ( file . exists () ) ; }
fix_after_refactoring: private static boolean doesFilerExist ( java.io.File vzogohqdwgzlkcsbysjw ) { return ( vzogohqdwgzlkcsbysjw != null ) && ( vzogohqdwgzlkcsbysjw . exists () ) ; }
× fix_prediction_before: public static boolean doesFilerExist ( java.io.File file ) { if ( file == null ) return false ; return file . exists () ; }
× fix_prediction_after: public static boolean doesFilerExist ( java.io.File vzogohqdwgzlkcsbysjw ) { if ( vzogohqdwgzlkcsbysjw == null ) return false ; return vzogohqdwgzlkcsbysjw . exists () ; }

