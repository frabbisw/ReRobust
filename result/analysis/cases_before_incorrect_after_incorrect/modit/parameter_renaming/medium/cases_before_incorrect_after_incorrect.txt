line_index: 1
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } <s> @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } <s> [#31] Fixed bugs in AutoDeployment and broken it down into smaller methods. Added test folders and war-files.
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String cezsjvotlchflnutdasc ) { refreshDirectory ( cezsjvotlchflnutdasc ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + cezsjvotlchflnutdasc ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } <s> @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String cezsjvotlchflnutdasc ) { refreshDirectory ( cezsjvotlchflnutdasc ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + cezsjvotlchflnutdasc ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } <s> [#31] Fixed bugs in AutoDeployment and broken it down into smaller methods. Added test folders and war-files.
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try ( java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ) { java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String cezsjvotlchflnutdasc ) { refreshDirectory ( cezsjvotlchflnutdasc ) ; try ( java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + cezsjvotlchflnutdasc ) ) ) { java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String cezsjvotlchflnutdasc ) throws java.io.IOException { refreshDirectory ( cezsjvotlchflnutdasc ) ; java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + cezsjvotlchflnutdasc ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } }

line_index: 2
bug_before_refactoring: protected boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; } <s> protected boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; } <s> Bug fix  fix1: Wrong selection of find text fix2: Document change not updating on read file
bug_after_refactoring: protected boolean find ( java.lang.String hryylcowbvofjlzlvtej , boolean tzhvgumvjibqupzbeszu , boolean axabxugzpbfbluzadprg ) { if ( ( hryylcowbvofjlzlvtej == null ) || ( hryylcowbvofjlzlvtej . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( hryylcowbvofjlzlvtej , tzhvgumvjibqupzbeszu , axabxugzpbfbluzadprg ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; } <s> protected boolean find ( java.lang.String hryylcowbvofjlzlvtej , boolean tzhvgumvjibqupzbeszu , boolean axabxugzpbfbluzadprg ) { if ( ( hryylcowbvofjlzlvtej == null ) || ( hryylcowbvofjlzlvtej . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( hryylcowbvofjlzlvtej , tzhvgumvjibqupzbeszu , axabxugzpbfbluzadprg ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; } <s> Bug fix  fix1: Wrong selection of find text fix2: Document change not updating on read file
fix_before_refactoring: public boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) textPane . select ( matcher . start () , matcher . end () ) ; return found ; }
fix_after_refactoring: public boolean find ( java.lang.String hryylcowbvofjlzlvtej , boolean tzhvgumvjibqupzbeszu , boolean axabxugzpbfbluzadprg ) { if ( ( hryylcowbvofjlzlvtej == null ) || ( hryylcowbvofjlzlvtej . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( hryylcowbvofjlzlvtej , tzhvgumvjibqupzbeszu , axabxugzpbfbluzadprg ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) textPane . select ( matcher . start () , matcher . end () ) ; return found ; }
× fix_prediction_before: protected boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; }
× fix_prediction_after: protected boolean find ( java.lang.String hryylcowbvofjlzlvtej , boolean tzhvgumvjibqupzbeszu , boolean axabxugzpbfbluzadprg ) { if ( ( hryylcowbvofjlzlvtej == null ) || ( hryylcowbvofjlzlvtej . isEmpty () ) ) return false ; matcher = createMatcher ( hryylcowbvofjlzlvtej , tzhvgumvjibqupzbeszu , axabxugzpbfbluzadprg ) ; updateMatcher = false ; } boolean found = matcher . find () ; textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; return found ; }

line_index: 3
bug_before_refactoring: private void readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } } <s> private void readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } } <s> Added multiscanning. Fixed bugs with blank database entries and redudant entries.
bug_after_refactoring: private void readJsonStream ( java.io.InputStream vjofyesmlrclvqjafcyp , com.josephcmontgomery.oqigpovhdzsnztnhzhwlscanner.BookInformation oqigpovhdzsnztnhzhwl ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( vjofyesmlrclvqjafcyp , "UTF-8" ) ) ; try { com.josephcmontgomery.oqigpovhdzsnztnhzhwlscanner.BookJsonInterpreter . processSearchResult ( reader , oqigpovhdzsnztnhzhwl ) ; } fvjofyesmlrclvqjafcypally { reader . close () ; } } <s> private void readJsonStream ( java.io.InputStream vjofyesmlrclvqjafcyp , com.josephcmontgomery.oqigpovhdzsnztnhzhwlscanner.BookInformation oqigpovhdzsnztnhzhwl ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( vjofyesmlrclvqjafcyp , "UTF-8" ) ) ; try { com.josephcmontgomery.oqigpovhdzsnztnhzhwlscanner.BookJsonInterpreter . processSearchResult ( reader , oqigpovhdzsnztnhzhwl ) ; } fvjofyesmlrclvqjafcypally { reader . close () ; } } <s> Added multiscanning. Fixed bugs with blank database entries and redudant entries.
fix_before_refactoring: private boolean readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { return com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } }
fix_after_refactoring: private boolean readJsonStream ( java.io.InputStream vjofyesmlrclvqjafcyp , com.josephcmontgomery.oqigpovhdzsnztnhzhwlscanner.BookInformation oqigpovhdzsnztnhzhwl ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( vjofyesmlrclvqjafcyp , "UTF-8" ) ) ; try { return com.josephcmontgomery.oqigpovhdzsnztnhzhwlscanner.BookJsonInterpreter . processSearchResult ( reader , oqigpovhdzsnztnhzhwl ) ; } fvjofyesmlrclvqjafcypally { reader . close () ; } }
× fix_prediction_before: private void readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { if ( ( in . length () ) > 0 ) { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } } }
× fix_prediction_after: private void readJsonStream ( java.io.InputStream vjofyesmlrclvqjafcyp , com.josephcmontgomery.oqigpovhdzsnztnhzhwlscanner.BookInformation oqigpovhdzsnztnhzhwl ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( vjofyesmlrclvqjafcyp , "UTF-8" ) ) ; try { com.josephcmontgomery.oqigpovhdzsnztnhzhwlscanner.BookJsonInterpreter . processSearchResult ( reader , oqigpovhdzsnztnhzhwl ) ; } fvjofyesmlrclvqjafcypally { reader . close () ; } }

line_index: 5
bug_before_refactoring: public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( java.util.List < java.lang.String > vertices : adjacencyList ) { for ( java.lang.String vertex : vertices ) { if ( ( v . getLabel () ) == vertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( adjacencyList . indexOf ( vertices ) ) ) ) ; } } } return upstreamNeighboursList ; } <s> public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( java.util.List < java.lang.String > vertices : adjacencyList ) { for ( java.lang.String vertex : vertices ) { if ( ( v . getLabel () ) == vertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( adjacencyList . indexOf ( vertices ) ) ) ) ; } } } return upstreamNeighboursList ; } <s> Various bug fixes in algorytm class and further work on J-unit tests
bug_after_refactoring: public jancokbfnxpitugcabafgja.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex ncokbfnxpitugcabafgj ) { jancokbfnxpitugcabafgja.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new jancokbfnxpitugcabafgja.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( jancokbfnxpitugcabafgja.util.List < jancokbfnxpitugcabafgja.lang.String > ncokbfnxpitugcabafgjertices : adjacencyList ) { for ( jancokbfnxpitugcabafgja.lang.String ncokbfnxpitugcabafgjertex : ncokbfnxpitugcabafgjertices ) { if ( ( ncokbfnxpitugcabafgj . getLabel () ) == ncokbfnxpitugcabafgjertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( ncokbfnxpitugcabafgjertexList . get ( adjacencyList . indexOf ( ncokbfnxpitugcabafgjertices ) ) ) ) ; } } } return upstreamNeighboursList ; } <s> public jancokbfnxpitugcabafgja.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex ncokbfnxpitugcabafgj ) { jancokbfnxpitugcabafgja.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new jancokbfnxpitugcabafgja.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( jancokbfnxpitugcabafgja.util.List < jancokbfnxpitugcabafgja.lang.String > ncokbfnxpitugcabafgjertices : adjacencyList ) { for ( jancokbfnxpitugcabafgja.lang.String ncokbfnxpitugcabafgjertex : ncokbfnxpitugcabafgjertices ) { if ( ( ncokbfnxpitugcabafgj . getLabel () ) == ncokbfnxpitugcabafgjertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( ncokbfnxpitugcabafgjertexList . get ( adjacencyList . indexOf ( ncokbfnxpitugcabafgjertices ) ) ) ) ; } } } return upstreamNeighboursList ; } <s> Various bug fixes in algorytm class and further work on J-unit tests
fix_before_refactoring: public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex vertex ) { java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( int i = 0 ; i < ( vertexList . size () ) ; i ++ ) { if ( adjacencyList . contains ( vertex ) ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( i ) ) ) ; } } return upstreamNeighboursList ; }
fix_after_refactoring: public jancokbfnxpitugcabafgja.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex ncokbfnxpitugcabafgjertex ) { jancokbfnxpitugcabafgja.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new jancokbfnxpitugcabafgja.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( int i = 0 ; i < ( ncokbfnxpitugcabafgjertexList . size () ) ; i ++ ) { if ( adjacencyList . contains ( ncokbfnxpitugcabafgjertex ) ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( ncokbfnxpitugcabafgjertexList . get ( i ) ) ) ; } } return upstreamNeighboursList ; }
× fix_prediction_before: public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( java.util.List < java.lang.String > vertices : adjacencyList ) { for ( java.lang.String vertex : vertices ) { if ( ( v . getLabel () ) == vertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( adjacencyList . indexOf ( vertices ) ) ) ) ; } } } return upstreamNeighboursList ; }
× fix_prediction_after: public jancokbfnxpitugcabafgja.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex ncokbfnxpitugcabafgj ) { jancokbfnxpitugcabafgja.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new jancokbfnxpitugcabafgja.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( jancokbfnxpitugcabafgja.util.List < jancokbfnxpitugcabafgja.lang.String > ncokbfnxpitugcabafgjertices : adjacencyList ) { for ( jancokbfnxpitugcabafgja.lang.String ncokbfnxpitugcabafgjertex : ncokbfnxpitugcabafgjertices ) { if ( ( ncokbfnxpitugcabafgj . getLabel () ) == ncokbfnxpitugcabafgjertex ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( ncokbfnxpitugcabafgjertexList . get ( adjacencyList . indexOf ( ncokbfnxpitugcabafgjertices ) ) ) ) ; } } return upstreamNeighboursList ; }

line_index: 7
bug_before_refactoring: private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } <s> private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } <s> Merge pull request #239 from Armageddon-/issue_inner_DirectRestService  Add test for inner DirectRestService interface  and fix
bug_after_refactoring: private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType fslvraqizfjqzfgfzzxa ) { if ( ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) != null ) { return ( ( getName ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) ) + "_" ) + ( fslvraqizfjqzfgfzzxa . getSimpleSourceName () ) ; } return fslvraqizfjqzfgfzzxa . getSimpleSourceName () ; } <s> private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType fslvraqizfjqzfgfzzxa ) { if ( ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) != null ) { return ( ( getName ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) ) + "_" ) + ( fslvraqizfjqzfgfzzxa . getSimpleSourceName () ) ; } return fslvraqizfjqzfgfzzxa . getSimpleSourceName () ; } <s> Merge pull request #239 from Armageddon-/issue_inner_DirectRestService  Add test for inner DirectRestService interface  and fix
fix_before_refactoring: protected java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; }
fix_after_refactoring: protected java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType fslvraqizfjqzfgfzzxa ) { if ( ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) != null ) { return ( ( getName ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) ) + "_" ) + ( fslvraqizfjqzfgfzzxa . getSimpleSourceName () ) ; } return fslvraqizfjqzfgfzzxa . getSimpleSourceName () ; }
× fix_prediction_before: private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; }
× fix_prediction_after: public java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType fslvraqizfjqzfgfzzxa ) { if ( ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) != null ) { return ( ( getName ( fslvraqizfjqzfgfzzxa . getEnclosingType () ) ) + "_" ) + ( fslvraqizfjqzfgfzzxa . getSimpleSourceName () ) ; } return fslvraqizfjqzfgfzzxa . getSimpleSourceName () ; }

line_index: 8
bug_before_refactoring: @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } <s> @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } <s> - Minor bug fixes after release 1.6.1
bug_after_refactoring: @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate wpsewogwcjtzqmmnghie ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( wpsewogwcjtzqmmnghie . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } <s> @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate wpsewogwcjtzqmmnghie ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( wpsewogwcjtzqmmnghie . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } <s> - Minor bug fixes after release 1.6.1
fix_before_refactoring: @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { if ( cyanogenOTAUpdate != null ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } }
fix_after_refactoring: @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate wpsewogwcjtzqmmnghie ) { if ( wpsewogwcjtzqmmnghie != null ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( wpsewogwcjtzqmmnghie . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } }
× fix_prediction_before: @ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { if ( ( cyanogenOTAUpdate != null ) && ( file . exists () ) ) { onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } }
× fix_prediction_after: @ java.lang.Override public boolean checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate wpsewogwcjtzqmmnghie ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( wpsewogwcjtzqmmnghie . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; return true ; }

line_index: 9
bug_before_refactoring: public java.lang.Long requestBook ( java.lang.Long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } <s> public java.lang.Long requestBook ( java.lang.Long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } <s> Hibernate bug fixes
bug_after_refactoring: public java.lang.Long requestBook ( java.lang.Long qlcrcuzmsasarnrcjvzd ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( qlcrcuzmsasarnrcjvzd ) ) ) { newReservation = new library_project.models.Reservation ( qlcrcuzmsasarnrcjvzd ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } <s> public java.lang.Long requestBook ( java.lang.Long qlcrcuzmsasarnrcjvzd ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( qlcrcuzmsasarnrcjvzd ) ) ) { newReservation = new library_project.models.Reservation ( qlcrcuzmsasarnrcjvzd ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } <s> Hibernate bug fixes
fix_before_refactoring: public long requestBook ( long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; }
fix_after_refactoring: public long requestBook ( long qlcrcuzmsasarnrcjvzd ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( qlcrcuzmsasarnrcjvzd ) ) ) { newReservation = new library_project.models.Reservation ( qlcrcuzmsasarnrcjvzd ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; }
× fix_prediction_before: public java.lang.Long requestBook ( java.lang.Long bookId ) { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } return null ; }
× fix_prediction_after: public java.lang.Long requestBook ( java.lang.Long qlcrcuzmsasarnrcjvzd ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; if ( ! ( isOut ( qlcrcuzmsasarnrcjvzd ) ) ) { newReservation = new library_project.models.Reservation ( qlcrcuzmsasarnrcjvzd ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } return null ; }

line_index: 11
bug_before_refactoring: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; } <s> private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; } <s> Merge remote-tracking branch 'origin/master' into sg-split-jvm-classes  * origin/master:   Fix performance issue when lots of specs of intersection exclusions are the same
bug_after_refactoring: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion nmcibjabtkptaujjwooo , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion igfrsucmlhxetxveefwg ) { if ( ( nmcibjabtkptaujjwooo instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( igfrsucmlhxetxveefwg instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( nmcibjabtkptaujjwooo ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( igfrsucmlhxetxveefwg ) ) ) ; } return null ; } <s> private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion nmcibjabtkptaujjwooo , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion igfrsucmlhxetxveefwg ) { if ( ( nmcibjabtkptaujjwooo instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( igfrsucmlhxetxveefwg instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( nmcibjabtkptaujjwooo ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( igfrsucmlhxetxveefwg ) ) ) ; } return null ; } <s> Merge remote-tracking branch 'origin/master' into sg-split-jvm-classes  * origin/master:   Fix performance issue when lots of specs of intersection exclusions are the same
fix_before_refactoring: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion two ) { if ( one . equals ( two ) ) { return one ; } if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; }
fix_after_refactoring: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion nmcibjabtkptaujjwooo , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion igfrsucmlhxetxveefwg ) { if ( nmcibjabtkptaujjwooo . equals ( igfrsucmlhxetxveefwg ) ) { return nmcibjabtkptaujjwooo ; } if ( ( nmcibjabtkptaujjwooo instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( igfrsucmlhxetxveefwg instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( nmcibjabtkptaujjwooo ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( igfrsucmlhxetxveefwg ) ) ) ; } return null ; }
× fix_prediction_before: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion two ) { if ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; }
× fix_prediction_after: private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion nmcibjabtkptaujjwooo , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion igfrsucmlhxetxveefwg ) { if ( ( nmcibjabtkptaujjwooo instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( igfrsucmlhxetxveefwg instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( nmcibjabtkptaujjwooo ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( igfrsucmlhxetxveefwg ) ) ) ; } return null ; }

line_index: 13
bug_before_refactoring: public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } } <s> public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } } <s> Fixing issues
bug_after_refactoring: public static boolean putRegistryResource ( java.lang.String dyxfeglmzngzzsugramp , org.wso2.carbon.registry.api.Resource ohscuezmdjxviatodsyg ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( dyxfeglmzngzzsugramp , ohscuezmdjxviatodsyg ) ; registry . commitTransaction () ; return true ; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry ohscuezmdjxviatodsyg : " + ( e . getMessage () ) ) , e ) ; } } <s> public static boolean putRegistryResource ( java.lang.String dyxfeglmzngzzsugramp , org.wso2.carbon.registry.api.Resource ohscuezmdjxviatodsyg ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( dyxfeglmzngzzsugramp , ohscuezmdjxviatodsyg ) ; registry . commitTransaction () ; return true ; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry ohscuezmdjxviatodsyg : " + ( e . getMessage () ) ) , e ) ; } } <s> Fixing issues
fix_before_refactoring: public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } }
fix_after_refactoring: public static boolean putRegistryResource ( java.lang.String dyxfeglmzngzzsugramp , org.wso2.carbon.registry.api.Resource ohscuezmdjxviatodsyg ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; registry . beginTransaction () ; registry . put ( dyxfeglmzngzzsugramp , ohscuezmdjxviatodsyg ) ; registry . commitTransaction () ; return true ; } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry ohscuezmdjxviatodsyg : " + ( e . getMessage () ) ) , e ) ; } }
× fix_prediction_before: public static void putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return; } else { registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } }
× fix_prediction_after: public static boolean putRegistryResource ( java.lang.String dyxfeglmzngzzsugramp , org.wso2.carbon.registry.api.Resource ohscuezmdjxviatodsyg ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; try { registry . beginTransaction () ; registry . put ( dyxfeglmzngzzsugramp , ohscuezmdjxviatodsyg ) ; registry . commitTransaction () ; return true ; } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry ohscuezmdjxviatodsyg : " + ( e . getMessage () ) ) , e ) ; } }

line_index: 14
bug_before_refactoring: private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> add structuregenerator and fix display dimensions bug
bug_after_refactoring: private void updateCell ( int txcbmtnrdhhuvzawsvhy , int maqklzmeulthqbpyrmjp ) { javafx.scene.shape.Rectangle r = getRectangle ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ; if ( game . isAlive ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> private void updateCell ( int txcbmtnrdhhuvzawsvhy , int maqklzmeulthqbpyrmjp ) { javafx.scene.shape.Rectangle r = getRectangle ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ; if ( game . isAlive ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } <s> add structuregenerator and fix display dimensions bug
fix_before_refactoring: private void updateCell ( int x , int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x , y ) ; if ( game . isAlive ( x , y ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
fix_after_refactoring: private void updateCell ( int x , int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x , y ) ; if ( game . isAlive ( x , y ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
× fix_prediction_before: protected void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
× fix_prediction_after: protected void updateCell ( int txcbmtnrdhhuvzawsvhy , int maqklzmeulthqbpyrmjp ) { javafx.scene.shape.Rectangle r = getRectangle ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ; if ( game . isAlive ( txcbmtnrdhhuvzawsvhy , maqklzmeulthqbpyrmjp ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }

line_index: 15
bug_before_refactoring: public static void printResult ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } } <s> public static void printResult ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } } <s> Working on bug fixing the simulation
bug_after_refactoring: public static void printResult ( double [] [] hhychndqusreytykcbek ) { int histWidth = hhychndqusreytykcbek.length ; int histHeight = hhychndqusreytykcbek [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( hhychndqusreytykcbek [ i ] [ j ] ) + " " ) ) ; } } } <s> public static void printResult ( double [] [] hhychndqusreytykcbek ) { int histWidth = hhychndqusreytykcbek.length ; int histHeight = hhychndqusreytykcbek [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( hhychndqusreytykcbek [ i ] [ j ] ) + " " ) ) ; } } } <s> Working on bug fixing the simulation
fix_before_refactoring: public static void printResult ( double [] result ) { java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { java.lang.System.out . print ( ( ( result [ i ] ) + " " ) ) ; } }
fix_after_refactoring: public static void printResult ( double [] result ) { java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { java.lang.System.out . print ( ( ( result [ i ] ) + " " ) ) ; } }
× fix_prediction_before: public static void printResult ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } java.lang.System.out . println () ; }
× fix_prediction_after: public static void printResult ( int [] [] hhychndqusreytykcbek ) { int histWidth = hhychndqusreytykcbek.length ; int histHeight = hhychndqusreytykcbek [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( hhychndqusreytykcbek [ i ] [ j ] ) + " " ) ) ; } } }

line_index: 17
bug_before_refactoring: public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; com.izik.recipebook.Model.resources = res ; return com.izik.recipebook.Model.instance ; } <s> public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; com.izik.recipebook.Model.resources = res ; return com.izik.recipebook.Model.instance ; } <s> fixing some model issues
bug_after_refactoring: public static com.izik.recipebook.Model instance ( android.content.pbcyflzbgwmtuizjslnl.Resources pbcyflzbgwmtuizjslnl , android.content.Context cbrcclkpmceqgizeunnz ) { if ( cbrcclkpmceqgizeunnz instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( cbrcclkpmceqgizeunnz ) ) ; } else { throw new java.lang.RuntimeException ( ( ( cbrcclkpmceqgizeunnz . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = cbrcclkpmceqgizeunnz ; com.izik.recipebook.Model.pbcyflzbgwmtuizjslnlources = pbcyflzbgwmtuizjslnl ; return com.izik.recipebook.Model.instance ; } <s> public static com.izik.recipebook.Model instance ( android.content.pbcyflzbgwmtuizjslnl.Resources pbcyflzbgwmtuizjslnl , android.content.Context cbrcclkpmceqgizeunnz ) { if ( cbrcclkpmceqgizeunnz instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( cbrcclkpmceqgizeunnz ) ) ; } else { throw new java.lang.RuntimeException ( ( ( cbrcclkpmceqgizeunnz . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = cbrcclkpmceqgizeunnz ; com.izik.recipebook.Model.pbcyflzbgwmtuizjslnlources = pbcyflzbgwmtuizjslnl ; return com.izik.recipebook.Model.instance ; } <s> fixing some model issues
fix_before_refactoring: public static com.izik.recipebook.Model instance ( android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.instance ; }
fix_after_refactoring: public static com.izik.recipebook.Model instance ( android.content.Context cbrcclkpmceqgizeunnz ) { if ( cbrcclkpmceqgizeunnz instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( cbrcclkpmceqgizeunnz ) ) ; } else { throw new java.lang.RuntimeException ( ( ( cbrcclkpmceqgizeunnz . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = cbrcclkpmceqgizeunnz ; return com.izik.recipebook.Model.instance ; }
× fix_prediction_before: public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; com.izik.recipebook.Model.resources = res ; return com.izik.recipebook.Model.instance ; }
× fix_prediction_after: public static com.izik.recipebook.Model instance () { if ( cbrcclkpmceqgizeunnz instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( cbrcclkpmceqgizeunnz ) ) ; } else { throw new java.lang.RuntimeException ( ( ( cbrcclkpmceqgizeunnz . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = cbrcclkpmceqgizeunnz ; com.izik.recipebook.Model.pbcyflzbgwmtuizjslnlources = pbcyflzbgwmtuizjslnl ; return com.izik.recipebook.Model.instance ; }

line_index: 19
bug_before_refactoring: public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { if ( auxVars . isEmpty () ) { return java.util.Collections . emptyMap () ; } else { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } } <s> public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { if ( auxVars . isEmpty () ) { return java.util.Collections . emptyMap () ; } else { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } } <s> bugfix: use empty HashMaps since the may be filled later
bug_after_refactoring: public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > lknsmbunblxtgxoipxst ) { if ( lknsmbunblxtgxoipxst . isEmpty () ) { return java.util.Collections . emptyMap () ; } else { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : lknsmbunblxtgxoipxst ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } } <s> public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > lknsmbunblxtgxoipxst ) { if ( lknsmbunblxtgxoipxst . isEmpty () ) { return java.util.Collections . emptyMap () ; } else { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : lknsmbunblxtgxoipxst ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } } <s> bugfix: use empty HashMaps since the may be filled later
fix_before_refactoring: public java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; }
fix_after_refactoring: public java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > lknsmbunblxtgxoipxst ) { final java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : lknsmbunblxtgxoipxst ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; }
× fix_prediction_before: private java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { if ( auxVars . isEmpty () ) { return java.util.Collections . emptyMap () ; } else { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } }
× fix_prediction_after: public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > lknsmbunblxtgxoipxst ) { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : lknsmbunblxtgxoipxst ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; }

line_index: 20
bug_before_refactoring: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } <s> @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } <s> Quick fix some problems in Rest
bug_after_refactoring: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{zdcglbbsklpfrsktczli}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int zdcglbbsklpfrsktczli , java.lang.String ppkshhatyyvhyctuhjoe ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( ppkshhatyyvhyctuhjoe , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } <s> @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{zdcglbbsklpfrsktczli}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int zdcglbbsklpfrsktczli , java.lang.String ppkshhatyyvhyctuhjoe ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( ppkshhatyyvhyctuhjoe , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } <s> Quick fix some problems in Rest
fix_before_refactoring: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( @ org.cba.rest.resources.PathParam ( value = "id" ) int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company == null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; }
fix_after_refactoring: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{zdcglbbsklpfrsktczli}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( @ org.cba.rest.resources.PathParam ( value = "zdcglbbsklpfrsktczli" ) int zdcglbbsklpfrsktczli , java.lang.String ppkshhatyyvhyctuhjoe ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( ppkshhatyyvhyctuhjoe , org.cba.entities.Company . class ) ; if ( company == null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; }
× fix_prediction_before: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int id ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; }
× fix_prediction_after: @ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{zdcglbbsklpfrsktczli}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int zdcglbbsklpfrsktczli ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( ppkshhatyyvhyctuhjoe , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; }

line_index: 21
bug_before_refactoring: private java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , value ) ) ; removeItem ( value ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , value ) ) ; } } return null ; } <s> private java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , value ) ) ; removeItem ( value ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , value ) ) ; } } return null ; } <s> remove static sKey and sMacKey  also fix issue 512
bug_after_refactoring: private java.lang.String decrypt ( java.lang.String jyiiapcebhcmckzqhmjf ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( jyiiapcebhcmckzqhmjf ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( jyiiapcebhcmckzqhmjf ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , jyiiapcebhcmckzqhmjf ) ) ; removeItem ( jyiiapcebhcmckzqhmjf ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , jyiiapcebhcmckzqhmjf ) ) ; } } return null ; } <s> private java.lang.String decrypt ( java.lang.String jyiiapcebhcmckzqhmjf ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( jyiiapcebhcmckzqhmjf ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( jyiiapcebhcmckzqhmjf ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , jyiiapcebhcmckzqhmjf ) ) ; removeItem ( jyiiapcebhcmckzqhmjf ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , jyiiapcebhcmckzqhmjf ) ) ; } } return null ; } <s> remove static sKey and sMacKey  also fix issue 512
fix_before_refactoring: private java.lang.String decrypt ( final java.lang.String key , java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , key ) ) ; removeItem ( key ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , key ) ) ; } } return null ; }
fix_after_refactoring: private java.lang.String decrypt ( final java.lang.String key , java.lang.String jyiiapcebhcmckzqhmjf ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( jyiiapcebhcmckzqhmjf ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( jyiiapcebhcmckzqhmjf ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , key ) ) ; removeItem ( key ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , key ) ) ; } } return null ; }
× fix_prediction_before: private java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , value ) ) ; removeItem ( value ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , value ) ) ; } } }
× fix_prediction_after: private java.lang.String decrypt ( java.lang.String jyiiapcebhcmckzqhmjf ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( jyiiapcebhcmckzqhmjf ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( jyiiapcebhcmckzqhmjf ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , jyiiapcebhcmckzqhmjf ) ) ; removeItem ( jyiiapcebhcmckzqhmjf ) ; com.microsoft.aadal.Logger . v ( com.microsoft.aadal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , jyiiapcebhcmckzqhmjf ) ) ; } } return null ; }

line_index: 22
bug_before_refactoring: @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE ( java.lang.String baseUrl ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; } <s> @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE ( java.lang.String baseUrl ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; } <s> Merge pull request #3 from bugbasters/master  FF and IE support  minor fixes
bug_after_refactoring: @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE ( java.lang.String ekvmculsqvqoxwdsoedx ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "ekvmculsqvqoxwdsoedx" ) ) ; } <s> @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE ( java.lang.String ekvmculsqvqoxwdsoedx ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "ekvmculsqvqoxwdsoedx" ) ) ; } <s> Merge pull request #3 from bugbasters/master  FF and IE support  minor fixes
fix_before_refactoring: @ WebTests.BeforeSuite ( groups = "InternetExplorer" ) public void setUpDriverIE ( ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; }
fix_after_refactoring: @ WebTests.BeforeSuite ( groups = "InternetExplorer" ) public void setUpDriverIE ( ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "ekvmculsqvqoxwdsoedx" ) ) ; }
× fix_prediction_before: @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE () throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; }
× fix_prediction_after: @ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE () throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "ekvmculsqvqoxwdsoedx" ) ) ; }

line_index: 24
bug_before_refactoring: public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fixing bugs and automizing
bug_after_refactoring: public static void main ( java.lang.String [] amiebyiuovfmfgkxmksw ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> public static void main ( java.lang.String [] amiebyiuovfmfgkxmksw ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } <s> Fixing bugs and automizing
fix_before_refactoring: public static void main ( java.lang.String [] args ) { main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
fix_after_refactoring: public static void main ( java.lang.String [] amiebyiuovfmfgkxmksw ) { main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
× fix_prediction_before: public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; }
× fix_prediction_after: public static void main ( java.lang.String [] amiebyiuovfmfgkxmksw ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAMLInRDF = new main.Files2Facts () ; try { filesAMLInRDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAMLInRDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; } catch ( java.lang.Exception e ) {} main.DeductiveDB deductiveDB = new main.DeductiveDB () ; deductiveDB . consultKB () ; }

line_index: 25
bug_before_refactoring: private void addRecord ( java.lang.String newkey , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( newkey , newList ) ; } } <s> private void addRecord ( java.lang.String newkey , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( newkey , newList ) ; } } <s> Fixed MultiIndex bug
bug_after_refactoring: private void addRecord ( java.lang.String bxgwmykxulgovxyfvtzi , T ddfrlhgelmjriewflvao ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , bxgwmykxulgovxyfvtzi ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( bxgwmykxulgovxyfvtzi ) ; if ( oldList == null ) map . put ( bxgwmykxulgovxyfvtzi , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , ddfrlhgelmjriewflvao ) ) ; else if ( ! ( oldList . contains ( ddfrlhgelmjriewflvao ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( ddfrlhgelmjriewflvao ) ; map . put ( bxgwmykxulgovxyfvtzi , newList ) ; } } <s> private void addRecord ( java.lang.String bxgwmykxulgovxyfvtzi , T ddfrlhgelmjriewflvao ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , bxgwmykxulgovxyfvtzi ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( bxgwmykxulgovxyfvtzi ) ; if ( oldList == null ) map . put ( bxgwmykxulgovxyfvtzi , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , ddfrlhgelmjriewflvao ) ) ; else if ( ! ( oldList . contains ( ddfrlhgelmjriewflvao ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( ddfrlhgelmjriewflvao ) ; map . put ( bxgwmykxulgovxyfvtzi , newList ) ; } } <s> Fixed MultiIndex bug
fix_before_refactoring: private void addRecord ( java.lang.String key , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , key ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( key ) ; if ( oldList == null ) map . put ( key , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( key , newList ) ; } }
fix_after_refactoring: private void addRecord ( java.lang.String key , T ddfrlhgelmjriewflvao ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , key ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( key ) ; if ( oldList == null ) map . put ( key , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , ddfrlhgelmjriewflvao ) ) ; else if ( ! ( oldList . contains ( ddfrlhgelmjriewflvao ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( ddfrlhgelmjriewflvao ) ; map . put ( key , newList ) ; } }
× fix_prediction_before: private void addRecord ( java.lang.String newkey , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( newkey , newList ) ; } }
× fix_prediction_after: private void addRecord ( java.lang.String bxgwmykxulgovxyfvtzi , T ddfrlhgelmjriewflvao ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , bxgwmykxulgovxyfvtzi ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( bxgwmykxulgovxyfvtzi ) ; if ( oldList == null ) map . put ( bxgwmykxulgovxyfvtzi , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , ddfrlhgelmjriewflvao ) ) ; else if ( ! ( oldList . contains ( ddfrlhgelmjriewflvao ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( ddfrlhgelmjriewflvao ) ; map . put ( bxgwmykxulgovxyfvtzi , newList ) ; } }

line_index: 26
bug_before_refactoring: public void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( requestTotal ) ++ ; } com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } } <s> public void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( requestTotal ) ++ ; } com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } } <s> bug fixing
bug_after_refactoring: public void onRequest ( java.lang.String gllnxoryyhntphgscbyn , java.sql.Timestamp qtajhzpmdyhlnlxhgjra ) { synchronized ( this ) { ( requestTotal ) ++ ; } com.hula.domain.Request request = new com.hula.domain.Request ( gllnxoryyhntphgscbyn , 1 , qtajhzpmdyhlnlxhgjra ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( qtajhzpmdyhlnlxhgjra ) ; } } <s> public void onRequest ( java.lang.String gllnxoryyhntphgscbyn , java.sql.Timestamp qtajhzpmdyhlnlxhgjra ) { synchronized ( this ) { ( requestTotal ) ++ ; } com.hula.domain.Request request = new com.hula.domain.Request ( gllnxoryyhntphgscbyn , 1 , qtajhzpmdyhlnlxhgjra ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( qtajhzpmdyhlnlxhgjra ) ; } } <s> bug fixing
fix_before_refactoring: public synchronized void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { ( requestTotal ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } }
fix_after_refactoring: public synchronized void onRequest ( java.lang.String gllnxoryyhntphgscbyn , java.sql.Timestamp qtajhzpmdyhlnlxhgjra ) { ( requestTotal ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( gllnxoryyhntphgscbyn , 1 , qtajhzpmdyhlnlxhgjra ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( qtajhzpmdyhlnlxhgjra ) ; } }
× fix_prediction_before: public void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } }
× fix_prediction_after: public void onRequest ( java.lang.String gllnxoryyhntphgscbyn , java.sql.Timestamp qtajhzpmdyhlnlxhgjra ) { synchronized ( this ) { ( requestTotal ) ++ ; } com.hula.domain.Request request = new com.hula.domain.Request ( gllnxoryyhntphgscbyn , 1 , qtajhzpmdyhlnlxhgjra ) ; requests . add ( request ) ; if ( ! ( requests . contains ( request ) ) ) { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( qtajhzpmdyhlnlxhgjra ) ; } }

line_index: 27
bug_before_refactoring: public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } <s> bug fix
bug_after_refactoring: public void setFilename ( java.lang.String xzlcbiqdtxdljsjvfqsv ) { if ( xzlcbiqdtxdljsjvfqsv . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( xzlcbiqdtxdljsjvfqsv . substring ( 0 , ( ( xzlcbiqdtxdljsjvfqsv . length () ) - 3 ) ) ) ; else connField . setText ( xzlcbiqdtxdljsjvfqsv ) ; } <s> public void setFilename ( java.lang.String xzlcbiqdtxdljsjvfqsv ) { if ( xzlcbiqdtxdljsjvfqsv . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( xzlcbiqdtxdljsjvfqsv . substring ( 0 , ( ( xzlcbiqdtxdljsjvfqsv . length () ) - 3 ) ) ) ; else connField . setText ( xzlcbiqdtxdljsjvfqsv ) ; } <s> bug fix
fix_before_refactoring: public void setFilename ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } }
fix_after_refactoring: public void setFilename ( java.lang.String xzlcbiqdtxdljsjvfqsv ) { if ( xzlcbiqdtxdljsjvfqsv != null ) { if ( xzlcbiqdtxdljsjvfqsv . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( xzlcbiqdtxdljsjvfqsv . substring ( 0 , ( ( xzlcbiqdtxdljsjvfqsv . length () ) - 3 ) ) ) ; else connField . setText ( xzlcbiqdtxdljsjvfqsv ) ; } }
× fix_prediction_before: private void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; }
× fix_prediction_after: public void setFilename ( java.lang.String fileName ) { if ( fileName . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( fileName . substring ( 0 , ( ( fileName . length () ) - 3 ) ) ) ; else connField . setText ( fileName ) ; }

line_index: 28
bug_before_refactoring: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > idList ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } <s> public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > idList ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } <s> fix bug for datatable checkbox and sql in empty list
bug_after_refactoring: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > yqvvzllsmiaqvnltfzea ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( yqvvzllsmiaqvnltfzea ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } <s> public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > yqvvzllsmiaqvnltfzea ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( yqvvzllsmiaqvnltfzea ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } <s> fix bug for datatable checkbox and sql in empty list
fix_before_refactoring: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > idList ) { if ( ( idList != null ) && ( ! ( idList . isEmpty () ) ) ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } return new java.util.ArrayList < com.JJ.controller.invoicemanagement.vo.InvoiceVO > () ; }
fix_after_refactoring: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > yqvvzllsmiaqvnltfzea ) { if ( ( yqvvzllsmiaqvnltfzea != null ) && ( ! ( yqvvzllsmiaqvnltfzea . isEmpty () ) ) ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( yqvvzllsmiaqvnltfzea ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } return new java.util.ArrayList < com.JJ.controller.invoicemanagement.vo.InvoiceVO > () ; }
× fix_prediction_before: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > idList ) { if ( ! ( idList . isEmpty () ) ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } return null ; }
× fix_prediction_after: public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.lang.Integer id ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( id ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; }

line_index: 29
bug_before_refactoring: @ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; if ( ctrlDown ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } } <s> @ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; if ( ctrlDown ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } } <s> fixed history bug
bug_after_refactoring: @ java.lang.Ovfjjioekhjlcvwgrawkmsrridfjjioekhjlcvwgrawkms public void mousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslMovfjjioekhjlcvwgrawkmsd ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt fjjioekhjlcvwgrawkms ) { int ctrlMod = ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt.CTRL_MASK ) | ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt.CTRL_DOWN_MASK ) ; int modififjjioekhjlcvwgrawkmsr = fjjioekhjlcvwgrawkms . gfjjioekhjlcvwgrawkmstModififjjioekhjlcvwgrawkmsrs () ; boolfjjioekhjlcvwgrawkmsan ctrlDown = ( modififjjioekhjlcvwgrawkmsr & ctrlMod ) != 0 ; if ( ctrlDown ) { int sign = fjjioekhjlcvwgrawkms . gfjjioekhjlcvwgrawkmstWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslRotation () ; if ( sign < 0 ) { this . cam_zoom_incrfjjioekhjlcvwgrawkmsasfjjioekhjlcvwgrawkms () ; rfjjioekhjlcvwgrawkmsturn; } if ( sign > 0 ) { this . cam_zoom_dfjjioekhjlcvwgrawkmscrfjjioekhjlcvwgrawkmsasfjjioekhjlcvwgrawkms () ; rfjjioekhjlcvwgrawkmsturn; } } } <s> @ java.lang.Ovfjjioekhjlcvwgrawkmsrridfjjioekhjlcvwgrawkms public void mousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslMovfjjioekhjlcvwgrawkmsd ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt fjjioekhjlcvwgrawkms ) { int ctrlMod = ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt.CTRL_MASK ) | ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt.CTRL_DOWN_MASK ) ; int modififjjioekhjlcvwgrawkmsr = fjjioekhjlcvwgrawkms . gfjjioekhjlcvwgrawkmstModififjjioekhjlcvwgrawkmsrs () ; boolfjjioekhjlcvwgrawkmsan ctrlDown = ( modififjjioekhjlcvwgrawkmsr & ctrlMod ) != 0 ; if ( ctrlDown ) { int sign = fjjioekhjlcvwgrawkms . gfjjioekhjlcvwgrawkmstWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslRotation () ; if ( sign < 0 ) { this . cam_zoom_incrfjjioekhjlcvwgrawkmsasfjjioekhjlcvwgrawkms () ; rfjjioekhjlcvwgrawkmsturn; } if ( sign > 0 ) { this . cam_zoom_dfjjioekhjlcvwgrawkmscrfjjioekhjlcvwgrawkmsasfjjioekhjlcvwgrawkms () ; rfjjioekhjlcvwgrawkmsturn; } } } <s> fixed history bug
fix_before_refactoring: @ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } }
fix_after_refactoring: @ java.lang.Ovfjjioekhjlcvwgrawkmsrridfjjioekhjlcvwgrawkms public void mousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslMovfjjioekhjlcvwgrawkmsd ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt fjjioekhjlcvwgrawkms ) { int sign = fjjioekhjlcvwgrawkms . gfjjioekhjlcvwgrawkmstWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslRotation () ; if ( sign < 0 ) { this . cam_zoom_incrfjjioekhjlcvwgrawkmsasfjjioekhjlcvwgrawkms () ; rfjjioekhjlcvwgrawkmsturn; } if ( sign > 0 ) { this . cam_zoom_dfjjioekhjlcvwgrawkmscrfjjioekhjlcvwgrawkmsasfjjioekhjlcvwgrawkms () ; rfjjioekhjlcvwgrawkmsturn; } }
× fix_prediction_before: @ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; if ( ctrlDown ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } }
× fix_prediction_after: @ java.lang.Ovfjjioekhjlcvwgrawkmsrridfjjioekhjlcvwgrawkms public void mousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslMovfjjioekhjlcvwgrawkmsd ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjioekhjlcvwgrawkmsWhfjjioekhjlcvwgrawkmsfjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt fjjioekhjlcvwgrawkms ) { int ctrlMod = ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjioekhjjioekhjlcvwgrawkmsWhfjjioekhjjioekhjlcvwgrawkmsWhfjjioekhjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt.CTRL_MASK ) | ( java.awt.fjjioekhjlcvwgrawkmsvfjjioekhjlcvwgrawkmsnt.MousfjjjioekhjlcvwgrawkmsfjjioekhjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmslEvfjjioekhjlcvwgrawkmsnt.CTRL_DOWN_MASK ) ; int modifjioekhjlcvwgrawkmshjlcvwgrawkmshjlcvwgrawkmshjlcvwgrawkmshjlhhhhh

line_index: 30
bug_before_refactoring: public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( context . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( context , hidden ) ) ; } dispAlbums = list ; sortAlbums ( context ) ; } <s> public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( context . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( context , hidden ) ) ; } dispAlbums = list ; sortAlbums ( context ) ; } <s> Solved 404 error on albums
bug_after_refactoring: public void loadAlbums ( android.content.Context tprtawmtlkmmpfpvlxko , boolean fbuifvvjrsdojuyzdggc ) { this . fbuifvvjrsdojuyzdggc = fbuifvvjrsdojuyzdggc ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( tprtawmtlkmmpfpvlxko . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( tprtawmtlkmmpfpvlxko ) ; list = p . getAlbums ( tprtawmtlkmmpfpvlxko , fbuifvvjrsdojuyzdggc ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( tprtawmtlkmmpfpvlxko , fbuifvvjrsdojuyzdggc ) ) ; } dispAlbums = list ; sortAlbums ( tprtawmtlkmmpfpvlxko ) ; } <s> public void loadAlbums ( android.content.Context tprtawmtlkmmpfpvlxko , boolean fbuifvvjrsdojuyzdggc ) { this . fbuifvvjrsdojuyzdggc = fbuifvvjrsdojuyzdggc ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( tprtawmtlkmmpfpvlxko . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( tprtawmtlkmmpfpvlxko ) ; list = p . getAlbums ( tprtawmtlkmmpfpvlxko , fbuifvvjrsdojuyzdggc ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( tprtawmtlkmmpfpvlxko , fbuifvvjrsdojuyzdggc ) ) ; } dispAlbums = list ; sortAlbums ( tprtawmtlkmmpfpvlxko ) ; } <s> Solved 404 error on albums
fix_before_refactoring: public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list ; org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; dispAlbums = list ; sortAlbums ( context ) ; }
fix_after_refactoring: public void loadAlbums ( android.content.Context tprtawmtlkmmpfpvlxko , boolean fbuifvvjrsdojuyzdggc ) { this . fbuifvvjrsdojuyzdggc = fbuifvvjrsdojuyzdggc ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list ; org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( tprtawmtlkmmpfpvlxko ) ; list = p . getAlbums ( tprtawmtlkmmpfpvlxko , fbuifvvjrsdojuyzdggc ) ; dispAlbums = list ; sortAlbums ( tprtawmtlkmmpfpvlxko ) ; }
× fix_prediction_before: public void loadAlbums ( android.content.Context context , boolean hidden ) { if ( SP . getBoolean ( context . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( context , hidden ) ) ; } dispAlbums = list ; sortAlbums ( context ) ; }
× fix_prediction_after: public void loadAlbums ( android.content.Context tprtawmtlkmmpfpvlxko , boolean fbuifvvjrsdojuyzdggc ) { if ( SP . getBoolean ( tprtawmtlkmmpfpvlxko . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( tprtawmtlkmmpfpvlxko ) ; list = p . getAlbums ( tprtawmtlkmmpfpvlxko , fbuifvvjrsdojuyzdggc ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( tprtawmtlkmmpfpvlxko , fbuifvvjrsdojuyzdggc ) ) ; } dispAlbums = list ; sortAlbums ( tprtawmtlkmmpfpvlxko ) ; }

line_index: 31
bug_before_refactoring: public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } <s> public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } <s> Fixed Loaders bug
bug_after_refactoring: public static java.lang.String fetchWebpageData ( java.lang.String cczvvpkqmkbhdnreyzwy , android.content.Context brapmweiaztdnwivcxog ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( cczvvpkqmkbhdnreyzwy , brapmweiaztdnwivcxog ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , brapmweiaztdnwivcxog ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } <s> public static java.lang.String fetchWebpageData ( java.lang.String cczvvpkqmkbhdnreyzwy , android.content.Context brapmweiaztdnwivcxog ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( cczvvpkqmkbhdnreyzwy , brapmweiaztdnwivcxog ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , brapmweiaztdnwivcxog ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } <s> Fixed Loaders bug
fix_before_refactoring: public static java.lang.String fetchWebpageData ( java.lang.String requestUrl ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; }
fix_after_refactoring: public static java.lang.String fetchWebpageData ( java.lang.String cczvvpkqmkbhdnreyzwy ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( cczvvpkqmkbhdnreyzwy ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; }
× fix_prediction_before: public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; }
× fix_prediction_after: public static java.lang.String fetchWebpageData ( android.content.Context brapmweiaztdnwivcxog ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( cczvvpkqmkbhdnreyzwy ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , brapmweiaztdnwivcxog ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; }

line_index: 32
bug_before_refactoring: @ java.lang.Override protected void listItemClicked ( int position ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } <s> @ java.lang.Override protected void listItemClicked ( int position ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } <s> Merge pull request #87 from MIT-Mobile/intrepid-phil-smallbug  Small fix to clicking item in list of route screen
bug_after_refactoring: @ java.lang.Override protected void listItemClicked ( int ujbamhnbuylgavvzwmcp ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( ujbamhnbuylgavvzwmcp - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } <s> @ java.lang.Override protected void listItemClicked ( int ujbamhnbuylgavvzwmcp ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( ujbamhnbuylgavvzwmcp - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } <s> Merge pull request #87 from MIT-Mobile/intrepid-phil-smallbug  Small fix to clicking item in list of route screen
fix_before_refactoring: @ java.lang.Override protected void listItemClicked ( int position ) { if ( position != 0 ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } }
fix_after_refactoring: @ java.lang.Override protected void listItemClicked ( int ujbamhnbuylgavvzwmcp ) { if ( ujbamhnbuylgavvzwmcp != 0 ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( ujbamhnbuylgavvzwmcp - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } }
× fix_prediction_before: @ java.lang.Override protected void listItemClicked ( int position ) { if ( position == 0 ) return; edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( position ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; }
× fix_prediction_after: @ java.lang.Override protected void listItemClicked ( int ujbamhnbuylgavvzwmcp ) { if ( ( getActivity () ) != null ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( ujbamhnbuylgavvzwmcp - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } }

line_index: 33
bug_before_refactoring: private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } <s> private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } <s> Fixed some bugs
bug_after_refactoring: private void addTeltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrt ( java.awt.Graphics2D hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf , java.lang.String ichobolekckgmpazezbp , int ltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxr , int vlvwacsubjnrfcfzejuu , java.awt.Color wyvwsbmqwhxbceanzlfr ) { hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . setColor ( wyvwsbmqwhxbceanzlfr ) ; hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . drawString ( ichobolekckgmpazezbp , ( ltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxr * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( vlvwacsubjnrfcfzejuu * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } <s> private void addTeltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrt ( java.awt.Graphics2D hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf , java.lang.String ichobolekckgmpazezbp , int ltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxr , int vlvwacsubjnrfcfzejuu , java.awt.Color wyvwsbmqwhxbceanzlfr ) { hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . setColor ( wyvwsbmqwhxbceanzlfr ) ; hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . drawString ( ichobolekckgmpazezbp , ( ltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxr * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( vlvwacsubjnrfcfzejuu * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } <s> Fixed some bugs
fix_before_refactoring: private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color , int size ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , size ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; }
fix_after_refactoring: private void addTeltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrt ( java.awt.Graphics2D hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf , java.lang.String ichobolekckgmpazezbp , int ltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxr , int vlvwacsubjnrfcfzejuu , java.awt.Color wyvwsbmqwhxbceanzlfr , int size ) { hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , size ) ) ; hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . setColor ( wyvwsbmqwhxbceanzlfr ) ; hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . drawString ( ichobolekckgmpazezbp , ( ltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxr * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( vlvwacsubjnrfcfzejuu * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; }
× fix_prediction_before: private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; }
× fix_prediction_after: private void addTeltdjojhubvlvwacsubjnrfcfzejuukmolf , java.lang.String ichobolekckgmpazezbp , int ltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxr , int vlvwacsubjnrfcfzejuu , java.awt.Color wyvwsbmqwhxbceanzlfr ) { hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuukmolf . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuukmolf . setColor ( wyvwsbmqwhxbceanzlfr ) ; hltdjojhubvlvwacsubjnrfcfzejuueccdcuvlvwacsubjnrfcfzejuukmolf . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , 20 ) ) ; hltdjojhubvlvwacsubjnrfcfzejuuvdrvzbbmxrqzvlvwacsubjnrfcfzejuuhfvlvwacsubjnrfcfzejuukmolf . drawString ( ichobolekckgmpazez , ( ltdjojhubvlvwacsubjnrfcfzejuu ) ) ; }

line_index: 34
bug_before_refactoring: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int id ) { jdbclib.IConnector db = null ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } <s> @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int id ) { jdbclib.IConnector db = null ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } <s> cleanup and fixing issue in routes
bug_after_refactoring: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int exikzosdravhojibukeh ) { jdbclib.IConnector db = null ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( exikzosdravhojibukeh ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } <s> @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int exikzosdravhojibukeh ) { jdbclib.IConnector db = null ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( exikzosdravhojibukeh ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } <s> cleanup and fixing issue in routes
fix_before_refactoring: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER_USERID ) int id ) { jdbclib.IConnector db ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; }
fix_after_refactoring: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER_USERID ) int exikzosdravhojibukeh ) { jdbclib.IConnector db ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( exikzosdravhojibukeh ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; }
× fix_prediction_before: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int id ) throws java.lang.Exception { jdbclib.IConnector db = null ; dto.User user = null ; db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; return user ; }
× fix_prediction_after: @ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) java.lang.String exikzosdravhojibukeh ) { jdbclib.IConnector db = null ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( exikzosdravhojibukeh ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; }

line_index: 35
bug_before_refactoring: protected static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; } <s> protected static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; } <s> fix code style issues
bug_after_refactoring: protected static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String zjtyfvevdotepfubmiqe , boolean ffwlbjwnarktololcuyz ) { java.lang.String ret = zjtyfvevdotepfubmiqe . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return ffwlbjwnarktololcuyz ? ( "%" + ret ) + "%" : ret ; } <s> protected static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String zjtyfvevdotepfubmiqe , boolean ffwlbjwnarktololcuyz ) { java.lang.String ret = zjtyfvevdotepfubmiqe . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return ffwlbjwnarktololcuyz ? ( "%" + ret ) + "%" : ret ; } <s> fix code style issues
fix_before_refactoring: public static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; }
fix_after_refactoring: public static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String zjtyfvevdotepfubmiqe , boolean ffwlbjwnarktololcuyz ) { java.lang.String ret = zjtyfvevdotepfubmiqe . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return ffwlbjwnarktololcuyz ? ( "%" + ret ) + "%" : ret ; }
× fix_prediction_before: private static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; }
× fix_prediction_after: private static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String zjtyfvevdotepfubmiqe , boolean ffwlbjwnarktololcuyz ) { java.lang.String ret = zjtyfvevdotepfubmiqe . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return ffwlbjwnarktololcuyz ? ( "%" + ret ) + "%" : ret ; }

line_index: 36
bug_before_refactoring: public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( value ) ; setChanged ( true ) ; } } <s> public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( value ) ; setChanged ( true ) ; } } <s> Fixed PL-178: error while updating an object value
bug_after_refactoring: public void setConsumptionValue ( int jyolblsyyfrayqxqnvds , com.freedomotic.model.ds.Config itgmnwcrkuhpfzhfqwlf , boolean gmxdowuzxjuasnxlohrd ) { if ( gmxdowuzxjuasnxlohrd ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only jyolblsyyfrayqxqnvds. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( jyolblsyyfrayqxqnvds ) ; setChanged ( true ) ; } } <s> public void setConsumptionValue ( int jyolblsyyfrayqxqnvds , com.freedomotic.model.ds.Config itgmnwcrkuhpfzhfqwlf , boolean gmxdowuzxjuasnxlohrd ) { if ( gmxdowuzxjuasnxlohrd ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only jyolblsyyfrayqxqnvds. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( jyolblsyyfrayqxqnvds ) ; setChanged ( true ) ; } } <s> Fixed PL-178: error while updating an object value
fix_before_refactoring: public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } consumption . setValue ( value ) ; setChanged ( true ) ; }
fix_after_refactoring: public void setConsumptionValue ( int jyolblsyyfrayqxqnvds , com.freedomotic.model.ds.Config itgmnwcrkuhpfzhfqwlf , boolean gmxdowuzxjuasnxlohrd ) { if ( gmxdowuzxjuasnxlohrd ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only jyolblsyyfrayqxqnvds. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } consumption . setValue ( jyolblsyyfrayqxqnvds ) ; setChanged ( true ) ; }
× fix_prediction_before: public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( value ) ; setChanged ( true ) ; } }
× fix_prediction_after: public void setConsumptionValue ( int jyolblsyyfrayqxqnvds , com.freedomotic.model.ds.Config itgmnwcrkuhpfzhfqwlf , boolean gmxdowuzxjuasnxlohrd ) { if ( gmxdowuzxjuasnxlohrd ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only jyolblsyyfrayqxqnvds. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } else { consumption . setValue ( jyolblsyyfrayqxqnvds ) ; setChanged ( true ) ; } }

line_index: 38
bug_before_refactoring: public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { updateStorageLocation ( ctx ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; } <s> public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { updateStorageLocation ( ctx ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
bug_after_refactoring: public void updateStorageLocation ( android.content.Context xmazdlmlzkxmjqibefbk , java.lang.String ccvsbvnjjxquhkjjayko ) { if ( ( ccvsbvnjjxquhkjjayko == null ) || ( ccvsbvnjjxquhkjjayko . equals ( "" ) ) ) { updateStorageLocation ( xmazdlmlzkxmjqibefbk ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( xmazdlmlzkxmjqibefbk ) ; if ( currentLocation . startsWith ( ccvsbvnjjxquhkjjayko ) ) { return; } java.lang.String location = ccvsbvnjjxquhkjjayko + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( xmazdlmlzkxmjqibefbk ) ) ; updateLocationPreference ( xmazdlmlzkxmjqibefbk , location ) ; } <s> public void updateStorageLocation ( android.content.Context xmazdlmlzkxmjqibefbk , java.lang.String ccvsbvnjjxquhkjjayko ) { if ( ( ccvsbvnjjxquhkjjayko == null ) || ( ccvsbvnjjxquhkjjayko . equals ( "" ) ) ) { updateStorageLocation ( xmazdlmlzkxmjqibefbk ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( xmazdlmlzkxmjqibefbk ) ; if ( currentLocation . startsWith ( ccvsbvnjjxquhkjjayko ) ) { return; } java.lang.String location = ccvsbvnjjxquhkjjayko + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( xmazdlmlzkxmjqibefbk ) ) ; updateLocationPreference ( xmazdlmlzkxmjqibefbk , location ) ; } <s> Merge pull request #468 from jjoseba/master  Issues solved
fix_before_refactoring: public boolean updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return updateStorageLocation ( ctx ) ; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return true ; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; return true ; }
fix_after_refactoring: public boolean updateStorageLocation ( android.content.Context xmazdlmlzkxmjqibefbk , java.lang.String ccvsbvnjjxquhkjjayko ) { if ( ( ccvsbvnjjxquhkjjayko == null ) || ( ccvsbvnjjxquhkjjayko . equals ( "" ) ) ) { return updateStorageLocation ( xmazdlmlzkxmjqibefbk ) ; } java.lang.String currentLocation = this . getStorageLocation ( xmazdlmlzkxmjqibefbk ) ; if ( currentLocation . startsWith ( ccvsbvnjjxquhkjjayko ) ) { return true ; } java.lang.String location = ccvsbvnjjxquhkjjayko + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( xmazdlmlzkxmjqibefbk ) ) ; updateLocationPreference ( xmazdlmlzkxmjqibefbk , location ) ; return true ; }
× fix_prediction_before: public boolean updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return false ; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return false ; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; return updateLocationPreference ( ctx , location ) ; }
× fix_prediction_after: public boolean updateStorageLocation ( android.content.Context xmazdlmlzkxmjqibefbk , java.lang.String ccvsbvnjjxquhkjjayko ) { if ( ( ccvsbvnjjxquhkjjayko == null ) || ( ccvsbvnjjxquhkjjayko . equals ( "" ) ) ) { updateStorageLocation ( xmazdlmlzkxmjqibefbk ) ; return false ; } java.lang.String currentLocation = this . getStorageLocation ( xmazdlmlzkxmjqibefbk ) ; if ( currentLocation . startsWith ( ccvsbvnjjxquhkjjayko ) ) { return false ; } java.lang.String location = ccvsbvnjjxquhkjjayko + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( xmazdlmlzkxmjqibefbk ) ) ; updateLocationPreference ( xmazdlmlzkxmjqibefbk , location ) ; return true ; }

line_index: 39
bug_before_refactoring: private boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; } <s> private boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; } <s> Bug 41431 - [EditorMgmt] Affected editors should be closed before executing project close or delete - cleanup work after fix  Using List's over arrays  using generic versions if possible.  Change-Id: Ifc25a595f1c26f36af93172c567b640f702844fa Signed-off-by: Andrey Loskutov <loskutov@gmx.de>
bug_after_refactoring: private boolean canDelete ( org.eclipse.core.yxbwioklmjnnkzxsnuje.IResource [] yxbwioklmjnnkzxsnuje ) { if ( ! ( ( containsOnlyProjects ( yxbwioklmjnnkzxsnuje ) ) || ( containsOnlyNonProjects ( yxbwioklmjnnkzxsnuje ) ) ) ) { return false ; } if ( ( yxbwioklmjnnkzxsnuje.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( yxbwioklmjnnkzxsnuje.length ) ; i ++ ) { org.eclipse.core.yxbwioklmjnnkzxsnuje.IResource resource = yxbwioklmjnnkzxsnuje [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; } <s> private boolean canDelete ( org.eclipse.core.yxbwioklmjnnkzxsnuje.IResource [] yxbwioklmjnnkzxsnuje ) { if ( ! ( ( containsOnlyProjects ( yxbwioklmjnnkzxsnuje ) ) || ( containsOnlyNonProjects ( yxbwioklmjnnkzxsnuje ) ) ) ) { return false ; } if ( ( yxbwioklmjnnkzxsnuje.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( yxbwioklmjnnkzxsnuje.length ) ; i ++ ) { org.eclipse.core.yxbwioklmjnnkzxsnuje.IResource resource = yxbwioklmjnnkzxsnuje [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; } <s> Bug 41431 - [EditorMgmt] Affected editors should be closed before executing project close or delete - cleanup work after fix  Using List's over arrays  using generic versions if possible.  Change-Id: Ifc25a595f1c26f36af93172c567b640f702844fa Signed-off-by: Andrey Loskutov <loskutov@gmx.de>
fix_before_refactoring: private boolean canDelete ( java.util.List < org.eclipse.core.resources.IResource > resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( resources . isEmpty () ) { return false ; } for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isPhantom () ) { return false ; } } return true ; }
fix_after_refactoring: private boolean canDelete ( java.util.List < org.eclipse.core.yxbwioklmjnnkzxsnuje.IResource > yxbwioklmjnnkzxsnuje ) { if ( ! ( ( containsOnlyProjects ( yxbwioklmjnnkzxsnuje ) ) || ( containsOnlyNonProjects ( yxbwioklmjnnkzxsnuje ) ) ) ) { return false ; } if ( yxbwioklmjnnkzxsnuje . isEmpty () ) { return false ; } for ( int i = 0 ; i < ( yxbwioklmjnnkzxsnuje . size () ) ; i ++ ) { org.eclipse.core.yxbwioklmjnnkzxsnuje.IResource resource = yxbwioklmjnnkzxsnuje . get ( i ) ; if ( resource . isPhantom () ) { return false ; } } return true ; }
× fix_prediction_before: protected boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; }
× fix_prediction_after: protected boolean canDelete ( org.eclipse.core.yxbwioklmjnnkzxsnuje.IResource [] yxbwioklmjnnkzxsnuje ) { if ( ! ( ( containsOnlyProjects ( yxbwioklmjnnkzxsnuje ) ) || ( containsOnlyNonProjects ( yxbwioklmjnnkzxsnuje ) ) ) ) { return false ; } if ( ( yxbwioklmjnnkzxsnuje.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( yxbwioklmjnnkzxsnuje.length ) ; i ++ ) { org.eclipse.core.yxbwioklmjnnkzxsnuje.IResource resource = yxbwioklmjnnkzxsnuje [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; }

line_index: 40
bug_before_refactoring: @ java.lang.Override protected boolean onBalloonTap ( int index , com.google.android.maps.OverlayItem item ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } <s> @ java.lang.Override protected boolean onBalloonTap ( int index , com.google.android.maps.OverlayItem item ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } <s> Fixed a bug.
bug_after_refactoring: @ java.lang.Override protected boolean onBalloonTap ( int sgtvfpepaphhohzqoqvd , com.google.android.maps.OverlayItem pwzycswbpgcutwfkxqjr ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( pwzycswbpgcutwfkxqjr ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } <s> @ java.lang.Override protected boolean onBalloonTap ( int sgtvfpepaphhohzqoqvd , com.google.android.maps.OverlayItem pwzycswbpgcutwfkxqjr ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( pwzycswbpgcutwfkxqjr ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } <s> Fixed a bug.
fix_before_refactoring: @ java.lang.Override protected boolean onBalloonTap ( int index , com.google.android.maps.OverlayItem item ) { if ( item instanceof nu.placebo.whatsup.model.ExtendedOverlayItem ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override protected boolean onBalloonTap ( int sgtvfpepaphhohzqoqvd , com.google.android.maps.OverlayItem pwzycswbpgcutwfkxqjr ) { if ( pwzycswbpgcutwfkxqjr instanceof nu.placebo.whatsup.model.ExtendedOverlayItem ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( pwzycswbpgcutwfkxqjr ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override protected boolean onBalloonTap ( int index , com.google.android.maps.OverlayItem item ) { if ( ( activity ) != null ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } return false ; }
× fix_prediction_after: @ java.lang.Override protected boolean onBalloonTap ( int sgtvfpepaphhohzqoqvd , com.google.android.maps.OverlayItem pwzycswbpgcutwfkxqjr ) { if ( ( pwzycswbpgcutwfkxqjr ) != null ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( pwzycswbpgcutwfkxqjr ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; return true ; } return false ; }

line_index: 41
bug_before_refactoring: private boolean better ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; } <s> private boolean better ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; } <s> bugfix: fragmentation problem. outline polygon was not fully connected.
bug_after_refactoring: private boolean better ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > cbepftvnwzeyyngrhnji , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > kmlnahmzygafelnrfqkd ) { return ( ( kmlnahmzygafelnrfqkd . size () ) == 0 ) || ( ( ( cbepftvnwzeyyngrhnji . size () ) < ( kmlnahmzygafelnrfqkd . size () ) ) && ( ( cbepftvnwzeyyngrhnji . size () ) != 0 ) ) ; } <s> private boolean better ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > cbepftvnwzeyyngrhnji , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > kmlnahmzygafelnrfqkd ) { return ( ( kmlnahmzygafelnrfqkd . size () ) == 0 ) || ( ( ( cbepftvnwzeyyngrhnji . size () ) < ( kmlnahmzygafelnrfqkd . size () ) ) && ( ( cbepftvnwzeyyngrhnji . size () ) != 0 ) ) ; } <s> bugfix: fragmentation problem. outline polygon was not fully connected.
fix_before_refactoring: private boolean better ( java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; }
fix_after_refactoring: private boolean better ( java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > cbepftvnwzeyyngrhnji , java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > kmlnahmzygafelnrfqkd ) { return ( ( kmlnahmzygafelnrfqkd . size () ) == 0 ) || ( ( ( cbepftvnwzeyyngrhnji . size () ) < ( kmlnahmzygafelnrfqkd . size () ) ) && ( ( cbepftvnwzeyyngrhnji . size () ) != 0 ) ) ; }
× fix_prediction_before: public boolean better ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; }
× fix_prediction_after: private boolean better ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > cbepftvnwzeyyngrhnji , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > kmlnahmzygafelnrfqkd ) { return ( ( kmlnahmzygafelnrfqkd . size () ) == 0 ) || ( ( cbepftvnwzeyyngrhnji . size () ) < ( kmlnahmzygafelnrfqkd . size () ) ) ) ; }

line_index: 42
bug_before_refactoring: private void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; } <s> private void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; } <s> fixed more bugs in reader: -- head character offsets -- missing filler mentions in relation reader
bug_after_refactoring: private void getFillersFromFile ( org.w3c.dom.Document djazpqcehpkbyzrstqhk , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View akfxnxwilzufwbyrslha ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = djazpqcehpkbyzrstqhk . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , akfxnxwilzufwbyrslha ) ; } <s> private void getFillersFromFile ( org.w3c.dom.Document djazpqcehpkbyzrstqhk , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View akfxnxwilzufwbyrslha ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = djazpqcehpkbyzrstqhk . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , akfxnxwilzufwbyrslha ) ; } <s> fixed more bugs in reader: -- head character offsets -- missing filler mentions in relation reader
fix_before_refactoring: protected void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; }
fix_after_refactoring: protected void getFillersFromFile ( org.w3c.dom.Document djazpqcehpkbyzrstqhk , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View akfxnxwilzufwbyrslha ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = djazpqcehpkbyzrstqhk . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , akfxnxwilzufwbyrslha ) ; }
× fix_prediction_before: private void getFillersFromFile ( org.w3c.dom.Document doc ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) ) ; }
× fix_prediction_after: private void getFillersFromFile ( org.w3c.dom.Document djazpqcehpkbyzrstqhk , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View akfxnxwilzufwbyrslha ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = djazpqcehpkbyzrstqhk . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , akfxnxwilzufwbyrslha ) ; }

line_index: 43
bug_before_refactoring: @ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } <s> @ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } <s> Fixed issue with Android Manifest intent action being incorrect.
bug_after_refactoring: @ java.lang.Override public void onReceive ( android.content.Context vycrtujbriysslmepqmt , android.content.Intent nxwxiadembdjlzwtvobn ) { super . onReceive ( vycrtujbriysslmepqmt , nxwxiadembdjlzwtvobn ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( nxwxiadembdjlzwtvobn . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( vycrtujbriysslmepqmt ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( vycrtujbriysslmepqmt , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } <s> @ java.lang.Override public void onReceive ( android.content.Context vycrtujbriysslmepqmt , android.content.Intent nxwxiadembdjlzwtvobn ) { super . onReceive ( vycrtujbriysslmepqmt , nxwxiadembdjlzwtvobn ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( nxwxiadembdjlzwtvobn . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( vycrtujbriysslmepqmt ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( vycrtujbriysslmepqmt , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } <s> Fixed issue with Android Manifest intent action being incorrect.
fix_before_refactoring: @ java.lang.Override public void onReceive ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull android.content.Intent intent ) { super . onReceive ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( context , getClass () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } }
fix_after_refactoring: @ java.lang.Override public void onReceive ( @ android.support.annotation.NonNull android.content.Context vycrtujbriysslmepqmt , @ android.support.annotation.NonNull android.content.Intent nxwxiadembdjlzwtvobn ) { super . onReceive ( vycrtujbriysslmepqmt , nxwxiadembdjlzwtvobn ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( nxwxiadembdjlzwtvobn . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( vycrtujbriysslmepqmt ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( vycrtujbriysslmepqmt , getClass () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } }
× fix_prediction_before: @ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( context , intent ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } }
× fix_prediction_after: @ java.lang.Override public void onReceive ( android.content.Context vycrtujbriysslmepqmt , android.content.Intent nxwxiadembdjlzwtvobn ) { super . onReceive ( vycrtujbriysslmepqmt , nxwxiadembdjlzwtvobn ) ; timber.log.Timber . d ( "Intent Received" ) ; android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( vycrtujbriysslmepqmt ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( vycrtujbriysslmepqmt , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; }

line_index: 44
bug_before_refactoring: public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } <s> public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } <s> Fix: the GrayScaleImageActivity crashed bug
bug_after_refactoring: public void initProgram ( java.lang.String wxmclgpzmufdscxbglsv , java.lang.String plilkezrefvoggxcyukn ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( wxmclgpzmufdscxbglsv , plilkezrefvoggxcyukn ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } <s> public void initProgram ( java.lang.String wxmclgpzmufdscxbglsv , java.lang.String plilkezrefvoggxcyukn ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( wxmclgpzmufdscxbglsv , plilkezrefvoggxcyukn ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } <s> Fix: the GrayScaleImageActivity crashed bug
fix_before_refactoring: public void initProgram () { vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; }
fix_after_refactoring: public void initProgram () { vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; }
× fix_prediction_before: public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; }
× fix_prediction_after: public void initProgram ( java.lang.String wxmclgpzmufdscxbglsv , java.lang.String plilkezrefvoggxcyukn ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( wxmclgpzmufdscxbglsv , plilkezrefvoggxcyukn ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; }

line_index: 45
bug_before_refactoring: public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; } <s> public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; } <s> bug fix: #107
bug_after_refactoring: public static < T > java.util.List < T > toList ( T . . . yvltmwlorfkeldutriip ) { java.util.List < T > list = new java.util.ArrayList < T > ( yvltmwlorfkeldutriip.length ) ; for ( T val : yvltmwlorfkeldutriip ) list . add ( val ) ; return list ; } <s> public static < T > java.util.List < T > toList ( T . . . yvltmwlorfkeldutriip ) { java.util.List < T > list = new java.util.ArrayList < T > ( yvltmwlorfkeldutriip.length ) ; for ( T val : yvltmwlorfkeldutriip ) list . add ( val ) ; return list ; } <s> bug fix: #107
fix_before_refactoring: @ java.lang.SafeVarargs public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) { list . add ( val ) ; } return list ; }
fix_after_refactoring: @ java.lang.SafeVarargs public static < T > java.util.List < T > toList ( T . . . yvltmwlorfkeldutriip ) { java.util.List < T > list = new java.util.ArrayList < T > ( yvltmwlorfkeldutriip.length ) ; for ( T val : yvltmwlorfkeldutriip ) { list . add ( val ) ; } return list ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; }
× fix_prediction_after: public static < T > java.util.List < T > toList () { java.util.List < T > list = new java.util.ArrayList < T > ( yvltmwlorfkeldutriip.length ) ; for ( T val : yvltmwlorfkeldutriip ) list . add ( val ) ; return list ; }

line_index: 46
bug_before_refactoring: public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } <s> public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } <s> OAK-2674 :  Fix FindBug Issues  git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1673431 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn yiafbupmlxcuruuxwfyd ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Ryiafbupmlxcuruuxwfyd rnd : yiafbupmlxcuruuxwfyd . getRyiafbupmlxcuruuxwfyds () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } <s> public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn yiafbupmlxcuruuxwfyd ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Ryiafbupmlxcuruuxwfyd rnd : yiafbupmlxcuruuxwfyd . getRyiafbupmlxcuruuxwfyds () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } <s> OAK-2674 :  Fix FindBug Issues  git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1673431 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: private static java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; }
fix_after_refactoring: private static java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn yiafbupmlxcuruuxwfyd ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Ryiafbupmlxcuruuxwfyd rnd : yiafbupmlxcuruuxwfyd . getRyiafbupmlxcuruuxwfyds () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; }
× fix_prediction_before: private java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; }
× fix_prediction_after: public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn yiafbupmlxcuruuxwfyd ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Ryiafbupmlxcuruuxwfyd rnd : yiafbupmlxcuruuxwfyd . getRyiafbupmlxcuruuxwfyds () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; }

line_index: 48
bug_before_refactoring: private boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( ( idpName . length () ) == 0 ) ) || ( idpName . equals ( idp . getName () ) ) ; } <s> private boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( ( idpName . length () ) == 0 ) ) || ( idpName . equals ( idp . getName () ) ) ; } <s> OAK-2674 : Fix FindBug Issues (null-deref in oak-auth-external)  git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1673687 13f79535-47bb-0310-9956-ffa450edef68
bug_after_refactoring: private boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity zlecdeepyltdrixvwgbq ) { java.lang.String zlecdeepyltdrixvwgbqpName = ( ( zlecdeepyltdrixvwgbq . getExternalIdRef () ) == null ) ? null : zlecdeepyltdrixvwgbq . getExternalIdRef () . getProvzlecdeepyltdrixvwgbqerName () ; return ( ( zlecdeepyltdrixvwgbqpName == null ) || ( ( zlecdeepyltdrixvwgbqpName . length () ) == 0 ) ) || ( zlecdeepyltdrixvwgbqpName . equals ( zlecdeepyltdrixvwgbqp . getName () ) ) ; } <s> private boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity zlecdeepyltdrixvwgbq ) { java.lang.String zlecdeepyltdrixvwgbqpName = ( ( zlecdeepyltdrixvwgbq . getExternalIdRef () ) == null ) ? null : zlecdeepyltdrixvwgbq . getExternalIdRef () . getProvzlecdeepyltdrixvwgbqerName () ; return ( ( zlecdeepyltdrixvwgbqpName == null ) || ( ( zlecdeepyltdrixvwgbqpName . length () ) == 0 ) ) || ( zlecdeepyltdrixvwgbqpName . equals ( zlecdeepyltdrixvwgbqp . getName () ) ) ; } <s> OAK-2674 : Fix FindBug Issues (null-deref in oak-auth-external)  git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1673687 13f79535-47bb-0310-9956-ffa450edef68
fix_before_refactoring: private boolean isMyIDP ( @ javax.annotation.Nonnull org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( idpName . isEmpty () ) ) || ( idpName . equals ( idp . getName () ) ) ; }
fix_after_refactoring: private boolean isMyIDP ( @ javax.annotation.Nonnull org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity zlecdeepyltdrixvwgbq ) { java.lang.String zlecdeepyltdrixvwgbqpName = ( ( zlecdeepyltdrixvwgbq . getExternalIdRef () ) == null ) ? null : zlecdeepyltdrixvwgbq . getExternalIdRef () . getProvzlecdeepyltdrixvwgbqerName () ; return ( ( zlecdeepyltdrixvwgbqpName == null ) || ( zlecdeepyltdrixvwgbqpName . isEmpty () ) ) || ( zlecdeepyltdrixvwgbqpName . equals ( zlecdeepyltdrixvwgbqp . getName () ) ) ; }
× fix_prediction_before: protected boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( ( idpName . length () ) == 0 ) ) || ( idpName . equals ( idp . getName () ) ) ; }
× fix_prediction_after: public boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity zlecdeepyltdrixvwgbq ) { java.lang.String zlecdeepyltdrixvwgbqpName = ( ( zlecdeepyltdrixvwgbq . getExternalIdRef () ) == null ) ? null : zlecdeepyltdrixvwgbq . getExternalIdRef () . getProvzlecdeepyltdrixvwgbqerName () ; return ( ( zlecdeepyltdrixvwgbqpName == null ) || ( ( zlecdeepyltdrixvwgbqpName . length () ) == 0 ) ) || ( zlecdeepyltdrixvwgbqpName . equals ( zlecdeepyltdrixvwgbqp . getName () ) ) ; }

line_index: 49
bug_before_refactoring: void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } resultFragment . setResult ( result ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } <s> void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } resultFragment . setResult ( result ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } <s> bug with setArguments fixed
bug_after_refactoring: void showResult ( java.lang.String jadsumtzoputvsewyavc ) { if ( withResult ) { jadsumtzoputvsewyavcFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( jadsumtzoputvsewyavcFragment ) == null ) { jadsumtzoputvsewyavcFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , jadsumtzoputvsewyavcFragment ) . commit () ; } jadsumtzoputvsewyavcFragment . setResult ( jadsumtzoputvsewyavc ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "jadsumtzoputvsewyavc" , jadsumtzoputvsewyavc ) ) ; } } <s> void showResult ( java.lang.String jadsumtzoputvsewyavc ) { if ( withResult ) { jadsumtzoputvsewyavcFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( jadsumtzoputvsewyavcFragment ) == null ) { jadsumtzoputvsewyavcFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , jadsumtzoputvsewyavcFragment ) . commit () ; } jadsumtzoputvsewyavcFragment . setResult ( jadsumtzoputvsewyavc ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "jadsumtzoputvsewyavc" , jadsumtzoputvsewyavc ) ) ; } } <s> bug with setArguments fixed
fix_before_refactoring: void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; } resultFragment . setResult ( result ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } }
fix_after_refactoring: void showResult ( java.lang.String jadsumtzoputvsewyavc ) { if ( withResult ) { jadsumtzoputvsewyavcFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( jadsumtzoputvsewyavcFragment ) == null ) { jadsumtzoputvsewyavcFragment = new com.example.uvdoha.translate.ResultFragment () ; } jadsumtzoputvsewyavcFragment . setResult ( jadsumtzoputvsewyavc ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , jadsumtzoputvsewyavcFragment ) . commit () ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "jadsumtzoputvsewyavc" , jadsumtzoputvsewyavc ) ) ; } }
× fix_prediction_before: void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } resultFragment . setResult ( result ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } }
× fix_prediction_after: private void showResult ( java.lang.String jadsumtzoputvsewyavc ) { if ( withResult ) { jadsumtzoputvsewyavcFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( jadsumtzoputvsewyavcFragment ) == null ) { jadsumtzoputvsewyavcFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , jadsumtzoputvsewyavcFragment ) . commit () ; } jadsumtzoputvsewyavcFragment . setResult ( jadsumtzoputvsewyavc ) ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "jadsumtzoputvsewyavc" , jadsumtzoputvsewyavc ) ) ; } }

line_index: 50
bug_before_refactoring: @ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace , final io.paradoxical.cassieq.ServiceConfiguration configuration ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; } <s> @ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace , final io.paradoxical.cassieq.ServiceConfiguration configuration ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; } <s> Merge pull request #115 from paradoxical-io/bugfix/setup-db-with-no-args-nullptrs  Fixing setup db null pointers
bug_after_refactoring: @ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > enrjgiowfhtkpyhufsor , final net.sourceforge.argparse4j.inf.Namespace dsnhbcptzbymklsrfgtj , final io.paradoxical.cassieq.ServiceConfiguration nlibgjpinddkozbszhtc ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( dsnhbcptzbymklsrfgtj ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; } <s> @ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > enrjgiowfhtkpyhufsor , final net.sourceforge.argparse4j.inf.Namespace dsnhbcptzbymklsrfgtj , final io.paradoxical.cassieq.ServiceConfiguration nlibgjpinddkozbszhtc ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( dsnhbcptzbymklsrfgtj ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; } <s> Merge pull request #115 from paradoxical-io/bugfix/setup-db-with-no-args-nullptrs  Fixing setup db null pointers
fix_before_refactoring: @ java.lang.Override public void run ( final io.dropwizard.setup.Bootstrap < ? > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; }
fix_after_refactoring: @ java.lang.Override public void run ( final io.dropwizard.setup.Bootstrap < ? > enrjgiowfhtkpyhufsor , final net.sourceforge.argparse4j.inf.Namespace dsnhbcptzbymklsrfgtj ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( dsnhbcptzbymklsrfgtj ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; }
× fix_prediction_before: @ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace , final io.paradoxical.cassieq.ServiceConfiguration configuration ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; }
× fix_prediction_after: @ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > enrjgiowfhtkpyhufsor , final net.sourceforge.argparse4j.inf.Namespace dsnhbcptzbymklsrfgtj , final io.paradoxical.cassieq.ServiceConfiguration nlibgjpinddkozbszhtc ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( dsnhbcptzbymklsrfgtj ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; }

line_index: 51
bug_before_refactoring: protected void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> protected void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> Edit incident: Fix bugs
bug_after_refactoring: protected amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> protected amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } <s> Edit incident: Fix bugs
fix_before_refactoring: public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
fix_after_refactoring: public amppqalpozhcxaioqmlkoid addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
× fix_prediction_before: public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
× fix_prediction_after: protected void addLikeOnClickHandler ( android.amppqalpozhcxaioqmlkiew.View amppqalpozhcxaioqmlk ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( amppqalpozhcxaioqmlk . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; jaamppqalpozhcxaioqmlka.util.HashMap < jaamppqalpozhcxaioqmlka.lang.String , jaamppqalpozhcxaioqmlka.lang.String > user = session . getUserDetails () ; final jaamppqalpozhcxaioqmlka.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final jaamppqalpozhcxaioqmlka.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }

line_index: 52
bug_before_refactoring: private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } <s> private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } <s> Changed to float precision in drawmethods Enabled anti-aliasing for some Paint (bombs specifically) Fixed a rounding error for detecting touched row/column
bug_after_refactoring: private final void drawGrid ( android.graphics.Canvas txyvmtldbqnvfijfpzrf , int rrkrpjmyiqzvcoyvnekn , int zblepnbovjervntgkjtn ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * rrkrpjmyiqzvcoyvnekn ; txyvmtldbqnvfijfpzrf . drawLine ( 0 , itimeso , zblepnbovjervntgkjtn , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; txyvmtldbqnvfijfpzrf . drawLine ( itimeso , 0 , itimeso , zblepnbovjervntgkjtn , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } <s> private final void drawGrid ( android.graphics.Canvas txyvmtldbqnvfijfpzrf , int rrkrpjmyiqzvcoyvnekn , int zblepnbovjervntgkjtn ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * rrkrpjmyiqzvcoyvnekn ; txyvmtldbqnvfijfpzrf . drawLine ( 0 , itimeso , zblepnbovjervntgkjtn , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; txyvmtldbqnvfijfpzrf . drawLine ( itimeso , 0 , itimeso , zblepnbovjervntgkjtn , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } <s> Changed to float precision in drawmethods Enabled anti-aliasing for some Paint (bombs specifically) Fixed a rounding error for detecting touched row/column
fix_before_refactoring: private final void drawGrid ( android.graphics.Canvas canvas , float offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { float itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } canvas . drawLine ( ( min - 1 ) , 0 , ( min - 1 ) , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; }
fix_after_refactoring: private final void drawGrid ( android.graphics.Canvas txyvmtldbqnvfijfpzrf , float rrkrpjmyiqzvcoyvnekn , int zblepnbovjervntgkjtn ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { float itimeso = i * rrkrpjmyiqzvcoyvnekn ; txyvmtldbqnvfijfpzrf . drawLine ( 0 , itimeso , zblepnbovjervntgkjtn , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; txyvmtldbqnvfijfpzrf . drawLine ( itimeso , 0 , itimeso , zblepnbovjervntgkjtn , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } txyvmtldbqnvfijfpzrf . drawLine ( ( zblepnbovjervntgkjtn - 1 ) , 0 , ( zblepnbovjervntgkjtn - 1 ) , zblepnbovjervntgkjtn , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; }
× fix_prediction_before: private final void drawGrid ( android.graphics.Canvas canvas , float offset , float min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { float itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } }
× fix_prediction_after: private final void drawGrid ( android.graphics.Canvas txyvmtldbqnvfijfpzrf , int rrkrpjmyiqzvcoyvnekn , int zblepnbovjervntgkjtn ) { int itimeso = i * rrkrpjmyiqzvcoyvnekn ; txyvmtldbqnvfijfpzrf . drawLine ( 0 , itimeso , zblepnbovjervntgkjtn , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; txyvmtldbqnvfijfpzrf . drawLine ( itimeso , 0 , itimeso , zblepnbovjervntgkjtn , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; }

line_index: 53
bug_before_refactoring: public int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> public int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } <s> fixbug
bug_after_refactoring: publiojlydnxwlurtfduslbtm int ojlydnxwlurtfduslbtmharCode ( ojlydnxwlurtfduslbtmhar ojlydnxwlurtfduslbtm ) { if ( java.lang.Charaojlydnxwlurtfduslbtmter . isLetter ( ojlydnxwlurtfduslbtm ) ) { return ( ojlydnxwlurtfduslbtm - 'A' ) + 1 ; } if ( ojlydnxwlurtfduslbtm == '[' ) return 27 ; if ( ojlydnxwlurtfduslbtm == '\\' ) return 28 ; if ( ojlydnxwlurtfduslbtm == ']' ) return 29 ; if ( ojlydnxwlurtfduslbtm == '^' ) return 30 ; if ( ojlydnxwlurtfduslbtm == '_' ) return 31 ; throw new java.lang.RuntimeExojlydnxwlurtfduslbtmeption ( ( "error ojlydnxwlurtfduslbtmhar: " + ojlydnxwlurtfduslbtm ) ) ; } <s> publiojlydnxwlurtfduslbtm int ojlydnxwlurtfduslbtmharCode ( ojlydnxwlurtfduslbtmhar ojlydnxwlurtfduslbtm ) { if ( java.lang.Charaojlydnxwlurtfduslbtmter . isLetter ( ojlydnxwlurtfduslbtm ) ) { return ( ojlydnxwlurtfduslbtm - 'A' ) + 1 ; } if ( ojlydnxwlurtfduslbtm == '[' ) return 27 ; if ( ojlydnxwlurtfduslbtm == '\\' ) return 28 ; if ( ojlydnxwlurtfduslbtm == ']' ) return 29 ; if ( ojlydnxwlurtfduslbtm == '^' ) return 30 ; if ( ojlydnxwlurtfduslbtm == '_' ) return 31 ; throw new java.lang.RuntimeExojlydnxwlurtfduslbtmeption ( ( "error ojlydnxwlurtfduslbtmhar: " + ojlydnxwlurtfduslbtm ) ) ; } <s> fixbug
fix_before_refactoring: private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
fix_after_refactoring: private int ojlydnxwlurtfduslbtmharCode ( ojlydnxwlurtfduslbtmhar ojlydnxwlurtfduslbtm ) { if ( java.lang.Charaojlydnxwlurtfduslbtmter . isLetter ( ojlydnxwlurtfduslbtm ) ) { return ( ojlydnxwlurtfduslbtm - 'A' ) + 1 ; } if ( ojlydnxwlurtfduslbtm == '[' ) return 27 ; if ( ojlydnxwlurtfduslbtm == '\\' ) return 28 ; if ( ojlydnxwlurtfduslbtm == ']' ) return 29 ; if ( ojlydnxwlurtfduslbtm == '^' ) return 30 ; if ( ojlydnxwlurtfduslbtm == '_' ) return 31 ; throw new java.lang.RuntimeExojlydnxwlurtfduslbtmeption ( ( "error ojlydnxwlurtfduslbtmhar: " + ojlydnxwlurtfduslbtm ) ) ; }
× fix_prediction_before: public int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; return c ; }
× fix_prediction_after: public int ojlydnxwlurtfduslbtmharCode ( ojlydnxwlurtfduslbtmhar ojlydnxwlurtfduslbtm ) { if ( java.lang.Charaojlydnxwlurtfduslbtmter . isLetter ( ojlydnxwlurtfduslbtm ) ) { return ( ojlydnxwlurtfduslbtm - 'A' ) + 1 ; } if ( ojlydnxwlurtfduslbtm == '[' ) return 27 ; if ( ojlydnxwlurtfduslbtm == '\\' ) return 28 ; if ( ojlydnxwlurtfduslbtm == ']' ) return 29 ; if ( ojlydnxwlurtfduslbtm == '^' ) return 30 ; if ( ojlydnxwlurtfduslbtm == '_' ) return 31 ; throw new java.lang.RuntimeExojlydnxwlurtfduslbtmhar: " + ojlydnxwlurtfduslbtm ) ; }

line_index: 54
bug_before_refactoring: private static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , rightDoorWidth , hasObstacle ) ; } } <s> private static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , rightDoorWidth , hasObstacle ) ; } } <s> Made small left door even smaller  and also fixed bug where the left exit in BASIC was too close to the obstacle.
bug_after_refactoring: private static void initializeRoom ( double fgszguaowtpktmpkrqjv , double mkpthvfkawczyyyzypom , boolean cykxdnipzdlyjjiflaqz ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( cykxdnipzdlyjjiflaqz ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( fgszguaowtpktmpkrqjv , mkpthvfkawczyyyzypom , cykxdnipzdlyjjiflaqz ) ; } } <s> private static void initializeRoom ( double fgszguaowtpktmpkrqjv , double mkpthvfkawczyyyzypom , boolean cykxdnipzdlyjjiflaqz ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( cykxdnipzdlyjjiflaqz ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( fgszguaowtpktmpkrqjv , mkpthvfkawczyyyzypom , cykxdnipzdlyjjiflaqz ) ; } } <s> Made small left door even smaller  and also fixed bug where the left exit in BASIC was too close to the obstacle.
fix_before_refactoring: private static void initializeRoom ( double leftDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , hasObstacle ) ; } }
fix_after_refactoring: private static void initializeRoom ( double fgszguaowtpktmpkrqjv , boolean cykxdnipzdlyjjiflaqz ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( cykxdnipzdlyjjiflaqz ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( fgszguaowtpktmpkrqjv , cykxdnipzdlyjjiflaqz ) ; } }
× fix_prediction_before: public static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , rightDoorWidth , hasObstacle ) ; } }
× fix_prediction_after: private static void initializeRoom ( double fgszguaowtpktmpkrqjv , double mkpthvfkawczyyyzypom , boolean cykxdnipzdlyjjiflaqz ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( cykxdnipzdlyjjiflaqz ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( fgszguaowtpktmpkrqjv , mkpthvfkawczyyyzypom , cykxdnipzdlyjjiflaqz ) ; } }

line_index: 55
bug_before_refactoring: protected javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; } <s> protected javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; } <s> Terrain Generator bug fixing  Player bounding box is now correct during that mode as well
bug_after_refactoring: protected javafx.scene.shape.Shape calcBoundingBox ( int picjfscmdhleelajvfni ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( picjfscmdhleelajvfni / 2 ) ) , ( ( this . getTranslateY () ) + ( picjfscmdhleelajvfni / 2 ) ) , ( ( picjfscmdhleelajvfni / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; } <s> protected javafx.scene.shape.Shape calcBoundingBox ( int picjfscmdhleelajvfni ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( picjfscmdhleelajvfni / 2 ) ) , ( ( this . getTranslateY () ) + ( picjfscmdhleelajvfni / 2 ) ) , ( ( picjfscmdhleelajvfni / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; } <s> Terrain Generator bug fixing  Player bounding box is now correct during that mode as well
fix_before_refactoring: public javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 0 ) ; return circleBBox ; }
fix_after_refactoring: public javafx.scene.shape.Shape calcBoundingBox ( int picjfscmdhleelajvfni ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( picjfscmdhleelajvfni / 2 ) ) , ( ( this . getTranslateY () ) + ( picjfscmdhleelajvfni / 2 ) ) , ( ( picjfscmdhleelajvfni / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 0 ) ; return circleBBox ; }
× fix_prediction_before: protected javafx.scene.shape.Shape calcBoundingBox ( int size ) { if ( size > 2 ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; } return null ; }
× fix_prediction_after: protected javafx.scene.shape.Shape calcBoundingBox ( int picjfscmdhleelajvfni ) { if ( ( this . getTranslateX () ) + ( picjfscmdhleelajvfni / 2 ) ) { return new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( picjfscmdhleelajvfni / 2 ) ) , ( ( this . getTranslateY () ) + ( picjfscmdhleelajvfni / 2 ) ) , ( ( picjfscmdhleelajvfni / 2 ) + 4 ) ) ; } else { return null ; } }

line_index: 56
bug_before_refactoring: public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } <s> public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } <s> Fixed bug that caused menus to randomly lose all of their data. Signed-off-by:TheDudeFromCI <linktheblademaster@yahoo.com>
bug_after_refactoring: public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy tuhkymtzptchgkuxkpyp , int hqhwyrmsrzmntjosqjzl , int vptmhnvzclntngtxhusk , build.games.wraithaven.gui.MenuComponentHeirarchy [] crbcpyrqbgwwkcvlmwxy ) { if ( hqhwyrmsrzmntjosqjzl == vptmhnvzclntngtxhusk ) { crbcpyrqbgwwkcvlmwxy [ 0 ] = tuhkymtzptchgkuxkpyp ; return - 1 ; } vptmhnvzclntngtxhusk ++ ; if ( ! ( tuhkymtzptchgkuxkpyp . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : tuhkymtzptchgkuxkpyp . getChildren () ) { vptmhnvzclntngtxhusk = getByIndex ( c , hqhwyrmsrzmntjosqjzl , vptmhnvzclntngtxhusk , crbcpyrqbgwwkcvlmwxy ) ; if ( vptmhnvzclntngtxhusk == ( - 1 ) ) { return - 1 ; } } } return vptmhnvzclntngtxhusk ; } <s> public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy tuhkymtzptchgkuxkpyp , int hqhwyrmsrzmntjosqjzl , int vptmhnvzclntngtxhusk , build.games.wraithaven.gui.MenuComponentHeirarchy [] crbcpyrqbgwwkcvlmwxy ) { if ( hqhwyrmsrzmntjosqjzl == vptmhnvzclntngtxhusk ) { crbcpyrqbgwwkcvlmwxy [ 0 ] = tuhkymtzptchgkuxkpyp ; return - 1 ; } vptmhnvzclntngtxhusk ++ ; if ( ! ( tuhkymtzptchgkuxkpyp . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : tuhkymtzptchgkuxkpyp . getChildren () ) { vptmhnvzclntngtxhusk = getByIndex ( c , hqhwyrmsrzmntjosqjzl , vptmhnvzclntngtxhusk , crbcpyrqbgwwkcvlmwxy ) ; if ( vptmhnvzclntngtxhusk == ( - 1 ) ) { return - 1 ; } } } return vptmhnvzclntngtxhusk ; } <s> Fixed bug that caused menus to randomly lose all of their data. Signed-off-by:TheDudeFromCI <linktheblademaster@yahoo.com>
fix_before_refactoring: private int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; }
fix_after_refactoring: private int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy tuhkymtzptchgkuxkpyp , int hqhwyrmsrzmntjosqjzl , int vptmhnvzclntngtxhusk , build.games.wraithaven.gui.MenuComponentHeirarchy [] crbcpyrqbgwwkcvlmwxy ) { if ( hqhwyrmsrzmntjosqjzl == vptmhnvzclntngtxhusk ) { crbcpyrqbgwwkcvlmwxy [ 0 ] = tuhkymtzptchgkuxkpyp ; return - 1 ; } vptmhnvzclntngtxhusk ++ ; if ( ! ( tuhkymtzptchgkuxkpyp . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : tuhkymtzptchgkuxkpyp . getChildren () ) { vptmhnvzclntngtxhusk = getByIndex ( c , hqhwyrmsrzmntjosqjzl , vptmhnvzclntngtxhusk , crbcpyrqbgwwkcvlmwxy ) ; if ( vptmhnvzclntngtxhusk == ( - 1 ) ) { return - 1 ; } } } return vptmhnvzclntngtxhusk ; }
× fix_prediction_before: public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return pos ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; }
× fix_prediction_after: public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy tuhkymtzptchgkuxkpyp , int hqhwyrmsrzmntjosqjzl , int vptmhnvzclntngtxhusk , int crbcpyrqbgwwkcvlmwxy ) { if ( hqhwyrmsrzmntjosqjzl == vptmhnvzclntngtxhusk ) { crbcpyrqbgwwkcvlmwxy = tuhkymtzptchgkuxkpyp ; return - 1 ; } vptmhnvzclntngtxhusk ++ ; if ( ! ( tuhkymtzptchgkuxkpyp . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : tuhkymtzptchgkuxkpyp . getChildren () ) { vptmhnvzclntngtxhusk = getByIndex ( c , hqhwyrmsrzmntjosqjzl , vptmhnvzclntngtxhusk , crbcpyrqbgwwkcvlmwxy ) ; if ( vptmhnvzclntngtxhusk == ( - 1 ) ) { return - 1 ; } } } return vptmhnvzclntngtxhusk ; }

line_index: 57
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } <s> fix bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page pmyihdxnlpppraiszodp ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page pmyihdxnlpppraiszodp ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } <s> fix bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page , @ org.springframework.web.bind.annotation.RequestParam ( value = "out" , required = false ) java.lang.String out ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page pmyihdxnlpppraiszodp , @ org.springframework.web.bind.annotation.RequestParam ( value = "out" , required = false ) java.lang.String out ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page ) throws java.lang.Exception { com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page pmyihdxnlpppraiszodp ) throws java.lang.Exception { com.fh.util.PageData pd = this . getModelAndView () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; }

line_index: 59
bug_before_refactoring: public void sendEmail ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String requestingInstitutionCode , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , requestingInstitutionCode , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } <s> public void sendEmail ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String requestingInstitutionCode , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , requestingInstitutionCode , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } <s> Jira-291 : Fixed the issue Incorrect Bib record count displayed in email.
bug_after_refactoring: public void sendEmail ( java.util.List < java.lang.String > nfeynspkagzsecngjaqw , java.lang.Integer jvkscucnorbelvafiqnx , java.lang.Integer idhnwatwuyyijsnvavfj , java.lang.String xuahxnihfvwfsfqqowxs , java.lang.String infclxwrolkovruopngy , java.lang.String hmahpswhfizsdjjbczwl , java.lang.String ycflejjsvkzugjuoturd ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( nfeynspkagzsecngjaqw ) ; emailPayLoad . setLocation ( getLocation ( infclxwrolkovruopngy , xuahxnihfvwfsfqqowxs , hmahpswhfizsdjjbczwl ) ) ; emailPayLoad . setCount ( jvkscucnorbelvafiqnx ) ; emailPayLoad . setFailedCount ( idhnwatwuyyijsnvavfj ) ; emailPayLoad . setTo ( ycflejjsvkzugjuoturd ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } <s> public void sendEmail ( java.util.List < java.lang.String > nfeynspkagzsecngjaqw , java.lang.Integer jvkscucnorbelvafiqnx , java.lang.Integer idhnwatwuyyijsnvavfj , java.lang.String xuahxnihfvwfsfqqowxs , java.lang.String infclxwrolkovruopngy , java.lang.String hmahpswhfizsdjjbczwl , java.lang.String ycflejjsvkzugjuoturd ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( nfeynspkagzsecngjaqw ) ; emailPayLoad . setLocation ( getLocation ( infclxwrolkovruopngy , xuahxnihfvwfsfqqowxs , hmahpswhfizsdjjbczwl ) ) ; emailPayLoad . setCount ( jvkscucnorbelvafiqnx ) ; emailPayLoad . setFailedCount ( idhnwatwuyyijsnvavfj ) ; emailPayLoad . setTo ( ycflejjsvkzugjuoturd ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } <s> Jira-291 : Fixed the issue Incorrect Bib record count displayed in email.
fix_before_refactoring: public void sendEmail ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; }
fix_after_refactoring: public void sendEmail ( java.util.List < java.lang.String > nfeynspkagzsecngjaqw , java.lang.Integer jvkscucnorbelvafiqnx , java.lang.Integer idhnwatwuyyijsnvavfj , java.lang.String infclxwrolkovruopngy , java.lang.String hmahpswhfizsdjjbczwl , java.lang.String ycflejjsvkzugjuoturd ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( nfeynspkagzsecngjaqw ) ; emailPayLoad . setLocation ( getLocation ( infclxwrolkovruopngy , hmahpswhfizsdjjbczwl ) ) ; emailPayLoad . setCount ( jvkscucnorbelvafiqnx ) ; emailPayLoad . setFailedCount ( idhnwatwuyyijsnvavfj ) ; emailPayLoad . setTo ( ycflejjsvkzugjuoturd ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; }
× fix_prediction_before: public void sendEmail ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String requestingInstitutionCode , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , requestingInstitutionCode , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; }
× fix_prediction_after: public void sendEmail ( java.util.List < java.lang.String > nfeynspkagzsecngjaqw , java.lang.Integer jvkscucnorbelvafiqnx , java.lang.Integer idhnwatwuyyijsnvavfj , java.lang.String xuahxnihfvwfsfqqowxs , java.lang.String infclxwrolkovruopngy , java.lang.String hmahpswhfizsdjjbczwl , java.lang.String ycflejjsvkzugjuoturd ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( nfeynspkagzsecngjaqw ) ; emailPayLoad . setLocation ( getLocation ( infclxwrolkovruopngy , xuahxnihfvwfsfqqowxs , hmahpswhfizsdjjbczwl ) ) ; emailPayLoad . setCount ( javadockscucnorbelvafiqnx ) ; emailPayLoad . setFailedCount ( idhnwatwuyyijsnvavfj ) ; emailPayLoad . setTo ( ycflejjsvkzugjuoturd ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; }

line_index: 60
bug_before_refactoring: public void putAll ( java.util.HashMap < java.lang.String , K > add ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = add . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } } <s> public void putAll ( java.util.HashMap < java.lang.String , K > add ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = add . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } } <s> Merge pull request #1359 in CH/coprhd-controller from bugfix-COP-19570-align-abstractchangetrackingmap.putall to master  * commit '1b00fe70b2ca6725952b26f283e16f343ec14d5c':   bugfix-COP-19570-align-abstractchangetrackingmap.putall
bug_after_refactoring: public void putAll ( java.util.HashMap < java.lang.String , K > ctdnkgtnoihxzdhkisys ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = ctdnkgtnoihxzdhkisys . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } } <s> public void putAll ( java.util.HashMap < java.lang.String , K > ctdnkgtnoihxzdhkisys ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = ctdnkgtnoihxzdhkisys . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } } <s> Merge pull request #1359 in CH/coprhd-controller from bugfix-COP-19570-align-abstractchangetrackingmap.putall to master  * commit '1b00fe70b2ca6725952b26f283e16f343ec14d5c':   bugfix-COP-19570-align-abstractchangetrackingmap.putall
fix_before_refactoring: @ java.lang.Override public void putAll ( java.util.Map < ? extends java.lang.String , ? extends K > add ) { for ( java.util.Map.Entry < ? extends java.lang.String , ? extends K > entry : add . entrySet () ) { put ( entry . getKey () , entry . getValue () ) ; } }
fix_after_refactoring: @ java.lang.Override public void putAll ( java.util.Map < ? extends java.lang.String , ? extends K > ctdnkgtnoihxzdhkisys ) { for ( java.util.Map.Entry < ? extends java.lang.String , ? extends K > entry : ctdnkgtnoihxzdhkisys . entrySet () ) { put ( entry . getKey () , entry . getValue () ) ; } }
× fix_prediction_before: public void putAll ( java.util.HashMap < java.lang.String , K > add ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = add . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } }
× fix_prediction_after: public void putAll ( java.util.HashMap < java.lang.String , K > ctdnkgtnoihxzdhkisys ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = ctdnkgtnoihxzdhkisys . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entry = entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } }

line_index: 61
bug_before_refactoring: @ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } <s> @ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } <s> Made the movement ver much whoow better fixed some movemend bugs(Player won't get drawn when position doesn't change)
bug_after_refactoring: @ java.lang.Override public void positionModifierChange ( int [] kxlgjxryirpmgezzjirc , int [] ndwixigwdgugkrtemxoj , boolean vedmfnquouxicawohxvt , int bhqxiemskjborwvajyox , boolean dczsehwjotuuogdjcbyl ) { this . dczsehwjotuuogdjcbyl = dczsehwjotuuogdjcbyl ; positionChanged = true ; playerOld = kxlgjxryirpmgezzjirc ; playerNew = ndwixigwdgugkrtemxoj ; this . vedmfnquouxicawohxvt = vedmfnquouxicawohxvt ; this . bhqxiemskjborwvajyox = bhqxiemskjborwvajyox ; } <s> @ java.lang.Override public void positionModifierChange ( int [] kxlgjxryirpmgezzjirc , int [] ndwixigwdgugkrtemxoj , boolean vedmfnquouxicawohxvt , int bhqxiemskjborwvajyox , boolean dczsehwjotuuogdjcbyl ) { this . dczsehwjotuuogdjcbyl = dczsehwjotuuogdjcbyl ; positionChanged = true ; playerOld = kxlgjxryirpmgezzjirc ; playerNew = ndwixigwdgugkrtemxoj ; this . vedmfnquouxicawohxvt = vedmfnquouxicawohxvt ; this . bhqxiemskjborwvajyox = bhqxiemskjborwvajyox ; } <s> Made the movement ver much whoow better fixed some movemend bugs(Player won't get drawn when position doesn't change)
fix_before_refactoring: @ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; if ( ( ( oldP [ 0 ] ) != ( newP [ 0 ] ) ) || ( ( oldP [ 1 ] ) != ( newP [ 1 ] ) ) ) { positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } }
fix_after_refactoring: @ java.lang.Override public void positionModifierChange ( int [] kxlgjxryirpmgezzjirc , int [] ndwixigwdgugkrtemxoj , boolean vedmfnquouxicawohxvt , int bhqxiemskjborwvajyox , boolean dczsehwjotuuogdjcbyl ) { this . dczsehwjotuuogdjcbyl = dczsehwjotuuogdjcbyl ; if ( ( ( kxlgjxryirpmgezzjirc [ 0 ] ) != ( ndwixigwdgugkrtemxoj [ 0 ] ) ) || ( ( kxlgjxryirpmgezzjirc [ 1 ] ) != ( ndwixigwdgugkrtemxoj [ 1 ] ) ) ) { positionChanged = true ; playerOld = kxlgjxryirpmgezzjirc ; playerNew = ndwixigwdgugkrtemxoj ; this . vedmfnquouxicawohxvt = vedmfnquouxicawohxvt ; this . bhqxiemskjborwvajyox = bhqxiemskjborwvajyox ; } }
× fix_prediction_before: @ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; }
× fix_prediction_after: @ java.lang.Override public void positionModifierChange ( int [] kxlgjxryirpmgezzjirc , int [] ndwixigwdgugkrtemxoj , boolean vedmfnquouxicawohxvt , int bhqxiemskjborwvajyox , boolean dczsehwjotuuogdjcbyl ) { this . dczsehwjotuuogdjcbyl = dczsehwjotuuogdjcbyl ; positionChanged = true ; playerOld = kxlgjxryirpmgezzjirc ; playerNew = ndwixigwdgugkrtemxoj ; this . vedmfnquouxicawohxvt = vedmfnquouxicawohxvt ; this . bhqxiemskjborwvajyox = bhqxiemskjborwvajyox ; }

line_index: 62
bug_before_refactoring: public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } <s> public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } <s> fix some bugs
bug_after_refactoring: public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String bjfkqqmddqteeoqhegsi ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where bjfkqqmddqteeoqhegsi = ?" ) , new java.lang.Object [] { bjfkqqmddqteeoqhegsi } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } <s> public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String bjfkqqmddqteeoqhegsi ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where bjfkqqmddqteeoqhegsi = ?" ) , new java.lang.Object [] { bjfkqqmddqteeoqhegsi } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } <s> fix some bugs
fix_before_refactoring: public org.smartdata.model.SystemInfo getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) . get ( 0 ) ; }
fix_after_refactoring: public org.smartdata.model.SystemInfo getByProperty ( java.lang.String bjfkqqmddqteeoqhegsi ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where bjfkqqmddqteeoqhegsi = ?" ) , new java.lang.Object [] { bjfkqqmddqteeoqhegsi } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) . get ( 0 ) ; }
× fix_prediction_before: public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; }
× fix_prediction_after: public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String bjfkqqmddqteeoqhegsi ) { if ( ( dataSource ) != null ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where bjfkqqmddqteeoqhegsi = ?" ) , new java.lang.Object [] { bjfkqqmddqteeoqhegsi } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } return new java.util.ArrayList < org.smartdata.model.SystemInfo > () ; }

line_index: 63
bug_before_refactoring: public double distance ( geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; } <s> public double distance ( geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; } <s> bugfix (HSV for GeoList)  git-svn-id: http://www.geogebra.org/svn/trunk/geogebra@14992 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
bug_after_refactoring: poogjjnmgxobxfxoqkkkublic double distance ( geogebra.common.kernel.geos.GeoPoint2 poogjjnmgxobxfxoqkkk ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; double d = geo . distance ( poogjjnmgxobxfxoqkkk ) ; if ( d < distance ) { distance = d ; } } return distance ; } <s> poogjjnmgxobxfxoqkkkublic double distance ( geogebra.common.kernel.geos.GeoPoint2 poogjjnmgxobxfxoqkkk ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; double d = geo . distance ( poogjjnmgxobxfxoqkkk ) ; if ( d < distance ) { distance = d ; } } return distance ; } <s> bugfix (HSV for GeoList)  git-svn-id: http://www.geogebra.org/svn/trunk/geogebra@14992 23ce0884-8a58-47d3-bc5c-ddf1cd5b9f9e
fix_before_refactoring: @ java.lang.Override public double distance ( final geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; final double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; }
fix_after_refactoring: @ java.lang.Override poogjjnmgxobxfxoqkkkublic double distance ( final geogebra.common.kernel.geos.GeoPoint2 poogjjnmgxobxfxoqkkk ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; final double d = geo . distance ( poogjjnmgxobxfxoqkkk ) ; if ( d < distance ) { distance = d ; } } return distance ; }
× fix_prediction_before: public final double distance ( geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; }
× fix_prediction_after: poogjjnmgxobxfxoqkkkublic double distance ( geogebra.common.kernel.geos.GeoPoint2 poogjjnmgxobxfxoqkkk ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( geogebra.common.kernel.geos.GeoElement geo : geoList ) { double d = geo . distance ( poogjjnmgxobxfxoqkkk ) ; if ( d < distance ) { distance = d ; } } return distance ; }

line_index: 64
bug_before_refactoring: public void add ( int index , long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; } <s> public void add ( int index , long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; } <s> Fixed bug in Int/Long list and added test case for the bug
bug_after_refactoring: public void add ( int xmozihaegcjacbjiptnn , long hmyciqarncysabakweco ) { boundsCheck ( xmozihaegcjacbjiptnn ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , xmozihaegcjacbjiptnn , array , ( xmozihaegcjacbjiptnn + 1 ) , ( ( end ) - xmozihaegcjacbjiptnn ) ) ; array [ xmozihaegcjacbjiptnn ] = hmyciqarncysabakweco ; } <s> public void add ( int xmozihaegcjacbjiptnn , long hmyciqarncysabakweco ) { boundsCheck ( xmozihaegcjacbjiptnn ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , xmozihaegcjacbjiptnn , array , ( xmozihaegcjacbjiptnn + 1 ) , ( ( end ) - xmozihaegcjacbjiptnn ) ) ; array [ xmozihaegcjacbjiptnn ] = hmyciqarncysabakweco ; } <s> Fixed bug in Int/Long list and added test case for the bug
fix_before_refactoring: public void add ( int index , long element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; ( end ) ++ ; } }
fix_after_refactoring: public void add ( int xmozihaegcjacbjiptnn , long hmyciqarncysabakweco ) { if ( xmozihaegcjacbjiptnn == ( size () ) ) { add ( hmyciqarncysabakweco ) ; } else { boundsCheck ( xmozihaegcjacbjiptnn ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , xmozihaegcjacbjiptnn , array , ( xmozihaegcjacbjiptnn + 1 ) , ( ( end ) - xmozihaegcjacbjiptnn ) ) ; array [ xmozihaegcjacbjiptnn ] = hmyciqarncysabakweco ; ( end ) ++ ; } }
× fix_prediction_before: public void add ( int index , long element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; } }
× fix_prediction_after: public void add ( int xmozihaegcjacbjiptnn , long hmyciqarncysabakweco ) { if ( ! ( boundsCheck ( xmozihaegcjacbjiptnn ) ) ) { enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , xmozihaegcjacbjiptnn , array , ( xmozihaegcjacbjiptnn + 1 ) , ( ( end ) - xmozihaegcjacbjiptnn ) ) ; array [ xmozihaegcjacbjiptnn ] = hmyciqarncysabakweco ; } }

line_index: 65
bug_before_refactoring: public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } <s> public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } <s> crawler dates bug fixed
bug_after_refactoring: public static java.util.Date getLatestDate ( java.lang.Class ruhermeboedlzobfrdwd ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( ruhermeboedlzobfrdwd ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( ruhermeboedlzobfrdwd ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } <s> public static java.util.Date getLatestDate ( java.lang.Class ruhermeboedlzobfrdwd ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( ruhermeboedlzobfrdwd ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( ruhermeboedlzobfrdwd ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } <s> crawler dates bug fixed
fix_before_refactoring: public static java.util.Date getLatestDate ( java.lang.Class articleClass ) throws java.lang.NullPointerException { org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; }
fix_after_refactoring: public static java.util.Date getLatestDate ( java.lang.Class ruhermeboedlzobfrdwd ) throws java.lang.NullPointerException { org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( ruhermeboedlzobfrdwd ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; }
× fix_prediction_before: public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; }
× fix_prediction_after: public static java.util.Date getLatestDate ( java.lang.Class ruhermeboedlzobfrdwd ) { org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( ruhermeboedlzobfrdwd ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; }

line_index: 66
bug_before_refactoring: @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fix fot the load bug  the task now add the book to the list on the UIThread
bug_after_refactoring: @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . uadywkvjlnllcdnuvnye ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( uadywkvjlnllcdnuvnye [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . uadywkvjlnllcdnuvnye ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( uadywkvjlnllcdnuvnye [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } <s> Fix fot the load bug  the task now add the book to the list on the UIThread
fix_before_refactoring: @ java.lang.Override protected mobop.booklist.app.data.api.ApiBook doInBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; return book ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } }
fix_after_refactoring: @ java.lang.Override protected mobop.booklist.app.data.api.ApiBook doInBackground ( java.lang.String . . . uadywkvjlnllcdnuvnye ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( uadywkvjlnllcdnuvnye [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; return book ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_before: @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } }
× fix_prediction_after: @ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . uadywkvjlnllcdnuvnye ) { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( uadywkvjlnllcdnuvnye [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } }

line_index: 67
bug_before_refactoring: @ java.lang.Override public void onSuccess ( java.lang.Void result ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; } <s> @ java.lang.Override public void onSuccess ( java.lang.Void result ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; } <s> ai-664  : bugfixing  1. always show next/previous buttons for time generated instances  2. show form designer "saved" delayed to show real progress (otherwise it may look broken)
bug_after_refactoring: @ java.lang.Override public void onSuccess ( java.lang.Void epjzrsteahapkgofukgo ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; } <s> @ java.lang.Override public void onSuccess ( java.lang.Void epjzrsteahapkgofukgo ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; } <s> ai-664  : bugfixing  1. always show next/previous buttons for time generated instances  2. show form designer "saved" delayed to show real progress (otherwise it may look broken)
fix_before_refactoring: @ java.lang.Override public boolean execute () { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; return false ; }
fix_after_refactoring: @ java.lang.Override public boolean execute () { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; return false ; }
× fix_prediction_before: @ java.lang.Override public void onSuccess ( java.lang.Boolean result ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; }
× fix_prediction_after: @ java.lang.Override public void onSuccess ( java.lang.Void epjzrsteahapkgofukgo ) { if ( ( formDesignerPanel . getSaveButton () ) != null ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; } }

line_index: 68
bug_before_refactoring: public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; } <s> public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; } <s> Fixes issue #4.
bug_after_refactoring: public void assertEquals ( java.lang.Object epipgjituhdavpuataav , java.lang.Object leijrpmqdbecqfhfvidq ) { if ( ( leijrpmqdbecqfhfvidq == null ) && ( epipgjituhdavpuataav == null ) ) return; if ( ( leijrpmqdbecqfhfvidq != null ) && ( leijrpmqdbecqfhfvidq . equals ( epipgjituhdavpuataav ) ) ) return; fail ( format ( leijrpmqdbecqfhfvidq , epipgjituhdavpuataav ) ) ; } <s> public void assertEquals ( java.lang.Object epipgjituhdavpuataav , java.lang.Object leijrpmqdbecqfhfvidq ) { if ( ( leijrpmqdbecqfhfvidq == null ) && ( epipgjituhdavpuataav == null ) ) return; if ( ( leijrpmqdbecqfhfvidq != null ) && ( leijrpmqdbecqfhfvidq . equals ( epipgjituhdavpuataav ) ) ) return; fail ( format ( leijrpmqdbecqfhfvidq , epipgjituhdavpuataav ) ) ; } <s> Fixes issue #4.
fix_before_refactoring: public void assertEquals ( java.lang.Object expected , java.lang.Object actual ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; }
fix_after_refactoring: public void assertEquals ( java.lang.Object leijrpmqdbecqfhfvidq , java.lang.Object epipgjituhdavpuataav ) { if ( ( leijrpmqdbecqfhfvidq == null ) && ( epipgjituhdavpuataav == null ) ) return; if ( ( leijrpmqdbecqfhfvidq != null ) && ( leijrpmqdbecqfhfvidq . equals ( epipgjituhdavpuataav ) ) ) return; fail ( format ( leijrpmqdbecqfhfvidq , epipgjituhdavpuataav ) ) ; }
× fix_prediction_before: public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; }
× fix_prediction_after: public void assertEquals ( java.lang.Object epipgjituhdavpuataav , java.lang.Object leijrpmqdbecqfhfvidq ) { if ( ( leijrpmqdbecqfhfvidq == null ) && ( epipgjituhdavpuataav == null ) ) return; if ( ( leijrpmqdbecqfhfvidq != null ) && ( leijrpmqdbecqfhfvidq . equals ( epipgjituhdavpuataav ) ) ) return; fail ( format ( leijrpmqdbecqfhfvidq , epipgjituhdavpuataav ) ) ; }

line_index: 69
bug_before_refactoring: @ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double motionZ , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; entity.motionZ = motionZ ; } <s> @ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double motionZ , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; entity.motionZ = motionZ ; } <s> Fixed compile errors
bug_after_refactoring: @ java.lang.Override public void placeInPortal ( net.minecraft.iieulnvfzxiyrwyccwmq.Entity iieulnvfzxiyrwyccwmq , double ycwpcjuujtctygnpjbsu , double iflejieimgbkdawvujga , double qcoaepwnjdxsiylgksdb , float szdmujmnbdpqtwgazdgy ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; iieulnvfzxiyrwyccwmq . setPosition ( x , y , z ) ; iieulnvfzxiyrwyccwmq.ycwpcjuujtctygnpjbsu = ycwpcjuujtctygnpjbsu ; iieulnvfzxiyrwyccwmq.iflejieimgbkdawvujga = iflejieimgbkdawvujga ; iieulnvfzxiyrwyccwmq.qcoaepwnjdxsiylgksdb = qcoaepwnjdxsiylgksdb ; } <s> @ java.lang.Override public void placeInPortal ( net.minecraft.iieulnvfzxiyrwyccwmq.Entity iieulnvfzxiyrwyccwmq , double ycwpcjuujtctygnpjbsu , double iflejieimgbkdawvujga , double qcoaepwnjdxsiylgksdb , float szdmujmnbdpqtwgazdgy ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; iieulnvfzxiyrwyccwmq . setPosition ( x , y , z ) ; iieulnvfzxiyrwyccwmq.ycwpcjuujtctygnpjbsu = ycwpcjuujtctygnpjbsu ; iieulnvfzxiyrwyccwmq.iflejieimgbkdawvujga = iflejieimgbkdawvujga ; iieulnvfzxiyrwyccwmq.qcoaepwnjdxsiylgksdb = qcoaepwnjdxsiylgksdb ; } <s> Fixed compile errors
fix_before_refactoring: @ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = entity.motionY = entity.motionZ = 0 ; }
fix_after_refactoring: @ java.lang.Override public void placeInPortal ( net.minecraft.iieulnvfzxiyrwyccwmq.Entity iieulnvfzxiyrwyccwmq , float szdmujmnbdpqtwgazdgy ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; iieulnvfzxiyrwyccwmq . setPosition ( x , y , z ) ; iieulnvfzxiyrwyccwmq.ycwpcjuujtctygnpjbsu = iieulnvfzxiyrwyccwmq.iflejieimgbkdawvujga = iieulnvfzxiyrwyccwmq.qcoaepwnjdxsiylgksdb = 0 ; }
× fix_prediction_before: @ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double motionZ ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; entity.motionZ = motionZ ; }
× fix_prediction_after: @ java.lang.Override public void placeInPortal ( net.minecraft.iieulnvfzxiyrwyccwmq.Entity iieulnvfzxiyrwyccwmq , double ycwpcjuujtctygnpjbsu , double iflejieimgbkdawvujga , double qcoaepwnjdxsiylgksdb ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; iieulnvfzxiyrwyccwmq . setPosition ( x , y , z ) ; iieulnvfzxiyrwyccwmq.ycwpcjuujtctygnpjbsu = ycwpcjuujtctygnpjbsu ; iieulnvfzxiyrwyccwmq.iflejieimgbkdawvujga = iflejieimgbkdawvujga ; iieulnvfzxiyrwyccwmq.qcoaepwnjdxsiylgksdb = qcoaepwnjdxsiylgksdb ; }

line_index: 70
bug_before_refactoring: public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( typeRepeat ) { case 'D' : return dateCTR . addDayInDate ( date ) ; case 'M' : return dateCTR . addMonthInDate ( date ) ; case 'A' : return dateCTR . addYearInDate ( date ) ; default: return date ; } } <s> public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( typeRepeat ) { case 'D' : return dateCTR . addDayInDate ( date ) ; case 'M' : return dateCTR . addMonthInDate ( date ) ; case 'A' : return dateCTR . addYearInDate ( date ) ; default: return date ; } } <s> * Notification * Fix bug where are showing the wrong app name in task choose * Change the Icon from the application
bug_after_refactoring: public java.lang.String addDate ( java.lang.String niknaamoleksxzosbyni , char apokdtxeusfludnqtkoz ) { br.com.inmypocket.controllers.DateCTR niknaamoleksxzosbyniCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( apokdtxeusfludnqtkoz ) { case 'D' : return niknaamoleksxzosbyniCTR . addDayInDate ( niknaamoleksxzosbyni ) ; case 'M' : return niknaamoleksxzosbyniCTR . addMonthInDate ( niknaamoleksxzosbyni ) ; case 'A' : return niknaamoleksxzosbyniCTR . addYearInDate ( niknaamoleksxzosbyni ) ; default: return niknaamoleksxzosbyni ; } } <s> public java.lang.String addDate ( java.lang.String niknaamoleksxzosbyni , char apokdtxeusfludnqtkoz ) { br.com.inmypocket.controllers.DateCTR niknaamoleksxzosbyniCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( apokdtxeusfludnqtkoz ) { case 'D' : return niknaamoleksxzosbyniCTR . addDayInDate ( niknaamoleksxzosbyni ) ; case 'M' : return niknaamoleksxzosbyniCTR . addMonthInDate ( niknaamoleksxzosbyni ) ; case 'A' : return niknaamoleksxzosbyniCTR . addYearInDate ( niknaamoleksxzosbyni ) ; default: return niknaamoleksxzosbyni ; } } <s> * Notification * Fix bug where are showing the wrong app name in task choose * Change the Icon from the application
fix_before_refactoring: public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { switch ( typeRepeat ) { case 'D' : return this . addDayInDate ( date ) ; case 'M' : return this . addMonthInDate ( date ) ; case 'A' : return this . addYearInDate ( date ) ; default: return date ; } }
fix_after_refactoring: public java.lang.String addDate ( java.lang.String niknaamoleksxzosbyni , char apokdtxeusfludnqtkoz ) { switch ( apokdtxeusfludnqtkoz ) { case 'D' : return this . addDayInDate ( niknaamoleksxzosbyni ) ; case 'M' : return this . addMonthInDate ( niknaamoleksxzosbyni ) ; case 'A' : return this . addYearInDate ( niknaamoleksxzosbyni ) ; default: return niknaamoleksxzosbyni ; } }
× fix_prediction_before: public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { if ( date == null ) { return null ; } br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( typeRepeat ) { case 'D' : return dateCTR . addDayInDate ( date ) ; case 'M' : return dateCTR . addMonthInDate ( date ) ; case 'A' : return dateCTR . addYearInDate ( date ) ; default: return date ; } }
× fix_prediction_after: public java.lang.String addDate ( java.lang.String niknaamoleksxzosbyni ) { br.com.inmypocket.controllers.DateCTR niknaamoleksxzosbyniCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( apokdtxeusfludnqtkoz ) { case 'D' : return niknaamoleksxzosbyniCTR . addDayInDate ( niknaamoleksxzosbyni ) ; case 'M' : return niknaamoleksxzosbyniCTR . addMonthInDate ( niknaamoleksxzosbyni ) ; case 'A' : return niknaamoleksxzosbyniCTR . addYearInDate ( niknaamoleksxzosbyni ) ; default: return niknaamoleksxzosbyniCTR ; } }

line_index: 72
bug_before_refactoring: private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } <s> private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } <s> Merge pull request #43 from veraPDF/master  Fixing phased pull  request issues.
bug_after_refactoring: private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray kjrbtfwjlzixwrcwcsrc ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : kjrbtfwjlzixwrcwcsrc ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } <s> private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray kjrbtfwjlzixwrcwcsrc ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : kjrbtfwjlzixwrcwcsrc ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } <s> Merge pull request #43 from veraPDF/master  Fixing phased pull  request issues.
fix_before_refactoring: private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { if ( ids != null ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } else { return null ; } }
fix_after_refactoring: private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray kjrbtfwjlzixwrcwcsrc ) { if ( kjrbtfwjlzixwrcwcsrc != null ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : kjrbtfwjlzixwrcwcsrc ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } else { return null ; } }
× fix_prediction_before: public java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; }
× fix_prediction_after: public java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray kjrbtfwjlzixwrcwcsrc ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : kjrbtfwjlzixwrcwcsrc ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; }

line_index: 73
bug_before_refactoring: public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } <s> public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } <s> fix error
bug_after_refactoring: public void add ( com.google.gson.JsonArray kljdxmbcpgqswljgmdcn ) { for ( int i = 0 ; i < ( kljdxmbcpgqswljgmdcn . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( kljdxmbcpgqswljgmdcn . getAsJsonObject () . get ( "suit" ) . getAsString () , kljdxmbcpgqswljgmdcn . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } <s> public void add ( com.google.gson.JsonArray kljdxmbcpgqswljgmdcn ) { for ( int i = 0 ; i < ( kljdxmbcpgqswljgmdcn . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( kljdxmbcpgqswljgmdcn . getAsJsonObject () . get ( "suit" ) . getAsString () , kljdxmbcpgqswljgmdcn . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } <s> fix error
fix_before_refactoring: public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . get ( i ) . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . get ( 1 ) . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } }
fix_after_refactoring: public void add ( com.google.gson.JsonArray kljdxmbcpgqswljgmdcn ) { for ( int i = 0 ; i < ( kljdxmbcpgqswljgmdcn . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( kljdxmbcpgqswljgmdcn . get ( i ) . getAsJsonObject () . get ( "suit" ) . getAsString () , kljdxmbcpgqswljgmdcn . get ( 1 ) . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } }
× fix_prediction_before: public void add ( com.google.gson.JsonArray cardsJson ) { if ( cardsJson != null ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } }
× fix_prediction_after: public void add ( com.google.gson.JsonArray kljdxmbcpgqswljgmdcn ) { if ( ! ( cards . contains ( kljdxmbcpgqswljgmdcn ) ) ) { for ( int i = 0 ; i < ( kljdxmbcpgqswljgmdcn . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( kljdxmbcpgqswljgmdcn . getAsJsonObject () . get ( "suit" ) . getAsString () , kljdxmbcpgqswljgmdcn . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } }

line_index: 74
bug_before_refactoring: public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> fixed other bugs
bug_after_refactoring: public void startService ( final int ruoydphoeuvwxoesvzgl ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "ruoydphoeuvwxoesvzgl" , ruoydphoeuvwxoesvzgl ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> public void startService ( final int ruoydphoeuvwxoesvzgl ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "ruoydphoeuvwxoesvzgl" , ruoydphoeuvwxoesvzgl ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } <s> fixed other bugs
fix_before_refactoring: private void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
fix_after_refactoring: private void startService ( final int ruoydphoeuvwxoesvzgl ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "ruoydphoeuvwxoesvzgl" , ruoydphoeuvwxoesvzgl ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
× fix_prediction_before: public void startService () { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
× fix_prediction_after: public void startService () { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "ruoydphoeuvwxoesvzgl" , ruoydphoeuvwxoesvzgl ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }

line_index: 75
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } } } <s> Bug fixes & achievements dialogs improvement
bug_after_refactoring: @ java.lang.Override public void onClick ( android.cobftcyuojljqouaoggb.View cobftcyuojljqouaoggb ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } } } <s> @ java.lang.Override public void onClick ( android.cobftcyuojljqouaoggb.View cobftcyuojljqouaoggb ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } } } <s> Bug fixes & achievements dialogs improvement
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.cobftcyuojljqouaoggb.View cobftcyuojljqouaoggb ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } } }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.cobftcyuojljqouaoggb.View cobftcyuojljqouaoggb ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } }

line_index: 76
bug_before_refactoring: private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } } <s> private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } } <s> Fix an issue that prevented returning Pending Submit Crypto Transaction from the Crypto Network
bug_after_refactoring: private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String vdsdwbmockfaidqbqkqb ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , vdsdwbmockfaidqbqkqb , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + vdsdwbmockfaidqbqkqb ) + " from disk." ) , "IO Error" ) ; } } <s> private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String vdsdwbmockfaidqbqkqb ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , vdsdwbmockfaidqbqkqb , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + vdsdwbmockfaidqbqkqb ) + " from disk." ) , "IO Error" ) ; } } <s> Fix an issue that prevented returning Pending Submit Crypto Transaction from the Crypto Network
fix_before_refactoring: public org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } }
fix_after_refactoring: public org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String vdsdwbmockfaidqbqkqb ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , vdsdwbmockfaidqbqkqb , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + vdsdwbmockfaidqbqkqb ) + " from disk." ) , "IO Error" ) ; } }
× fix_prediction_before: private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( net_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } }
× fix_prediction_after: private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String vdsdwbmockfaidqbqkqb ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , vdsdwbmockfaidqbqkqb , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; return ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction (NETWORK_PARAMETERS ) ) ) ) ; }

line_index: 78
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } else { return null ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } else { return null ; } } <s> Avatar controller bugfixes
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "tuozihgfvqxosmcljrsg" , defaultValue = "" ) int tuozihgfvqxosmcljrsg , @ org.springframework.web.bind.annotation.RequestParam ( value = "tuozihgfvqxosmcljrsg" , defaultValue = "" ) java.lang.String wqxxbwxvlkxbupysfefd ) { if ( ( tuozihgfvqxosmcljrsg == 0 ) && ( wqxxbwxvlkxbupysfefd . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( wqxxbwxvlkxbupysfefd . equals ( "" ) ) ) { tuozihgfvqxosmcljrsg = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( wqxxbwxvlkxbupysfefd ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( tuozihgfvqxosmcljrsg ) ; } else { return null ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "tuozihgfvqxosmcljrsg" , defaultValue = "" ) int tuozihgfvqxosmcljrsg , @ org.springframework.web.bind.annotation.RequestParam ( value = "tuozihgfvqxosmcljrsg" , defaultValue = "" ) java.lang.String wqxxbwxvlkxbupysfefd ) { if ( ( tuozihgfvqxosmcljrsg == 0 ) && ( wqxxbwxvlkxbupysfefd . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( wqxxbwxvlkxbupysfefd . equals ( "" ) ) ) { tuozihgfvqxosmcljrsg = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( wqxxbwxvlkxbupysfefd ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( tuozihgfvqxosmcljrsg ) ; } else { return null ; } } <s> Avatar controller bugfixes
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "0" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_mail" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else { if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "tuozihgfvqxosmcljrsg" , defaultValue = "0" ) int tuozihgfvqxosmcljrsg , @ org.springframework.web.bind.annotation.RequestParam ( value = "wqxxbwxvlkxbupysfefd" , defaultValue = "" ) java.lang.String wqxxbwxvlkxbupysfefd ) { if ( ( tuozihgfvqxosmcljrsg == 0 ) && ( wqxxbwxvlkxbupysfefd . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else { if ( ! ( wqxxbwxvlkxbupysfefd . equals ( "" ) ) ) { tuozihgfvqxosmcljrsg = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( wqxxbwxvlkxbupysfefd ) . getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( tuozihgfvqxosmcljrsg ) ; } }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } else { return null ; } }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "tuozihgfvqxosmcljrsg" , defaultValue = "" ) java.lang.String tuozihgfvqxosmcljrsg , @ org.springframework.web.bind.annotation.RequestParam ( value = "tuozihgfvqxosmcljrsg" , defaultValue = "" ) java.lang.String wqxxbwxvlkxbupysfefd ) { if ( ( tuozihgfvqxosmcljrsg == 0 ) && ( wqxxbwxvlkxbupysfefd . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( wqxxbwxvlkxbupysfefd . equals ( "" ) ) ) { tuozihgfvqxosmcljrsg = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( wqxxbwxvlkxbupysfefd ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( tuozihgfvqxosmcljrsg ) ; } else { return null ; } }

line_index: 79
bug_before_refactoring: @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , request ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; } <s> @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , request ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; } <s> Merge pull request #21 from jvelasques/wip  [cfr] - Refactoring CfrApi a bit  fixing an IE8 issue on download and op...
bug_after_refactoring: @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest exszgdqkrkdbnkkbokqj , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse bitvcmcxokidgdixapff ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , exszgdqkrkdbnkkbokqj ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , bitvcmcxokidgdixapff . getOutputStream () ) ; } <s> @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest exszgdqkrkdbnkkbokqj , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse bitvcmcxokidgdixapff ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , exszgdqkrkdbnkkbokqj ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , bitvcmcxokidgdixapff . getOutputStream () ) ; } <s> Merge pull request #21 from jvelasques/wip  [cfr] - Refactoring CfrApi a bit  fixing an IE8 issue on download and op...
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/createFolder" ) @ javax.ws.rs.Produces ( value = pt.webdetails.cpf.utils.MimeTypes.JSON ) public java.lang.String createFolder ( @ javax.ws.rs.QueryParam ( value = pt.webdetails.cfr.CfrApi.MethodParams.PATH ) java.lang.String path ) throws java.lang.Exception { path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( path ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; return new org.json.JSONObject () . put ( "result" , createResult ) . toString () ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/createFolder" ) @ javax.ws.rs.Produces ( value = pt.webdetails.cpf.utils.MimeTypes.JSON ) public java.lang.String createFolder ( @ javax.ws.rs.QueryParam ( value = pt.webdetails.cfr.CfrApi.MethodParams.PATH ) java.lang.String path ) throws java.lang.Exception { path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( path ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; return new org.json.JSONObject () . put ( "result" , createResult ) . toString () ; }
× fix_prediction_before: @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , request ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; }
× fix_prediction_after: @ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public boolean createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest exszgdqkrkdbnkkbokqj , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse bitvcmcxokidgdixapff ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathsanity ( getParameter ( "path" , exszgdqkrkdbnkkbokqj ) ) ; boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , bitvcmcxokidgdixapff . getOutputStream () ) ; return createResult ; }

line_index: 80
bug_before_refactoring: public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long id ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( id ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ) ; return article ; } <s> public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long id ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( id ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ) ; return article ; } <s> publishing article.Fix getArticleDetailbyId() null pointer bug.
bug_after_refactoring: public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long raonmyyaprcgtdzdsvrh ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( raonmyyaprcgtdzdsvrh ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "raonmyyaprcgtdzdsvrh" ) . toString () ) ) ) ; return article ; } <s> public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long raonmyyaprcgtdzdsvrh ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( raonmyyaprcgtdzdsvrh ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "raonmyyaprcgtdzdsvrh" ) . toString () ) ) ) ; return article ; } <s> publishing article.Fix getArticleDetailbyId() null pointer bug.
fix_before_refactoring: public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getArticleDetailById ( long id ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > article = aDao . getArticleDetailById ( id ) ; if ( ! ( article . isEmpty () ) ) article . get ( 0 ) . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( 0 ) . get ( "id" ) . toString () ) ) ) ; return article ; }
fix_after_refactoring: public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getArticleDetailById ( long raonmyyaprcgtdzdsvrh ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > article = aDao . getArticleDetailById ( raonmyyaprcgtdzdsvrh ) ; if ( ! ( article . isEmpty () ) ) article . get ( 0 ) . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( 0 ) . get ( "raonmyyaprcgtdzdsvrh" ) . toString () ) ) ) ; return article ; }
× fix_prediction_before: public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( java.lang.Long id ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( id ) ; if ( article != null ) { article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ) ; return article ; } return null ; }
× fix_prediction_after: public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( java.lang.Long raonmyyaprcgtdzdsvrh ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( raonmyyaprcgtdzdsvrh ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "raonmyyaprcgtdzdsvrh" ) . toString () ) ) ) ; return article ; }

line_index: 81
bug_before_refactoring: private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } } <s> private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } } <s> Merge pull request #18 from orhanobut/bugfix  Add an option to transform values and fix isSuper and defaultValue for Attribute
bug_after_refactoring: private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes ooeeahynfrzgogfcysga , java.util.Map < java.lang.String , java.lang.Object > jeobfuhtnfllmdidhxsr ) { if ( ooeeahynfrzgogfcysga != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = ooeeahynfrzgogfcysga . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { jeobfuhtnfllmdidhxsr . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } } <s> private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes ooeeahynfrzgogfcysga , java.util.Map < java.lang.String , java.lang.Object > jeobfuhtnfllmdidhxsr ) { if ( ooeeahynfrzgogfcysga != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = ooeeahynfrzgogfcysga . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { jeobfuhtnfllmdidhxsr . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } } <s> Merge pull request #18 from orhanobut/bugfix  Add an option to transform values and fix isSuper and defaultValue for Attribute
fix_before_refactoring: private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes == null ) return; com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } }
fix_after_refactoring: private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes ooeeahynfrzgogfcysga , java.util.Map < java.lang.String , java.lang.Object > jeobfuhtnfllmdidhxsr ) { if ( ooeeahynfrzgogfcysga == null ) return; com.orhanobut.tracklytics.FixedAttribute [] attributes = ooeeahynfrzgogfcysga . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { jeobfuhtnfllmdidhxsr . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } }
× fix_prediction_before: private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } }
× fix_prediction_after: private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes expr , java.util.Map < java.lang.String , java.lang.Object > jeobfuhtnfllmdidhxsr ) { if ( expr != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = expr . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { jeobfuhtnfllmdidhxsr . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } }

line_index: 83
bug_before_refactoring: private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } <s> private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } <s> 17: AbstractUnit unable to parse prefix-less units (such as "V" or "s")   Task-Url: https://github.com/unitsofmeasurement/si-units/issues/issues/issue/17
bug_after_refactoring: private static boolean isAllASCII ( java.lang.String upjeulaumnfgkedbdznf ) { boolean isASCII = true ; for ( int i = 0 ; i < ( upjeulaumnfgkedbdznf . length () ) ; i ++ ) { int c = upjeulaumnfgkedbdznf . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } <s> private static boolean isAllASCII ( java.lang.String upjeulaumnfgkedbdznf ) { boolean isASCII = true ; for ( int i = 0 ; i < ( upjeulaumnfgkedbdznf . length () ) ; i ++ ) { int c = upjeulaumnfgkedbdznf . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } <s> 17: AbstractUnit unable to parse prefix-less units (such as "V" or "s")   Task-Url: https://github.com/unitsofmeasurement/si-units/issues/issues/issue/17
fix_before_refactoring: protected static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
fix_after_refactoring: protected static boolean isAllASCII ( java.lang.String upjeulaumnfgkedbdznf ) { boolean isASCII = true ; for ( int i = 0 ; i < ( upjeulaumnfgkedbdznf . length () ) ; i ++ ) { int c = upjeulaumnfgkedbdznf . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
× fix_prediction_before: public static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
× fix_prediction_after: public static boolean isAllASCII ( java.lang.String upjeulaumnfgkedbdznf ) { boolean isASCII = true ; for ( int i = 0 ; i < ( upjeulaumnfgkedbdznf . length () ) ; i ++ ) { int c = upjeulaumnfgkedbdznf . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }

line_index: 84
bug_before_refactoring: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; } <s> public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; } <s> solve problems when persons have no typical duration for leisure because they do not perform it
bug_after_refactoring: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id mtedgbgafleorlikchqx , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ddfpilcczebtldunvnjy ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( ddfpilcczebtldunvnjy ) ; ids . add ( mtedgbgafleorlikchqx ) ; return ids ; } <s> public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id mtedgbgafleorlikchqx , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ddfpilcczebtldunvnjy ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( ddfpilcczebtldunvnjy ) ; ids . add ( mtedgbgafleorlikchqx ) ; return ids ; } <s> solve problems when persons have no typical duration for leisure because they do not perform it
fix_before_refactoring: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Collection < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; }
fix_after_refactoring: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > mtedgbgafleorlikchqx , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ddfpilcczebtldunvnjy ) { final java.util.Collection < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( ddfpilcczebtldunvnjy ) ; ids . add ( mtedgbgafleorlikchqx ) ; return ids ; }
× fix_prediction_before: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; }
× fix_prediction_after: public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id mtedgbgafleorlikchqx , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ddfpilcczebtldunvnjy ) { final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( ddfpilcczebtldunvnjy ) ; ids . add ( mtedgbgafleorlikchqx ) ; return ids ; }

line_index: 85
bug_before_refactoring: public void addCover ( org.ernest.applications.dmc.report.builders.Document document , org.ernest.applications.dmc.domain.Region region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; } <s> public void addCover ( org.ernest.applications.dmc.report.builders.Document document , org.ernest.applications.dmc.domain.Region region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; } <s> Footer & Cover issues  * Fixing footer bug * Adding qustionnaire code on cover * Reduccing amout of itext dependencies
bug_after_refactoring: public void addCover ( org.ernest.applications.dmc.report.builders.Document ruidfgxucoyjilvjlxrq , org.ernest.applications.dmc.domain.Region erdwpqixgfihqrhgigir ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( ruidfgxucoyjilvjlxrq ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( erdwpqixgfihqrhgigir . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; ruidfgxucoyjilvjlxrq . add ( paragraph ) ; ruidfgxucoyjilvjlxrq . newPage () ; } <s> public void addCover ( org.ernest.applications.dmc.report.builders.Document ruidfgxucoyjilvjlxrq , org.ernest.applications.dmc.domain.Region erdwpqixgfihqrhgigir ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( ruidfgxucoyjilvjlxrq ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( erdwpqixgfihqrhgigir . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; ruidfgxucoyjilvjlxrq . add ( paragraph ) ; ruidfgxucoyjilvjlxrq . newPage () ; } <s> Footer & Cover issues  * Fixing footer bug * Adding qustionnaire code on cover * Reduccing amout of itext dependencies
fix_before_refactoring: public void addCover ( org.ernest.applications.dmc.report.builders.Document document , java.lang.String region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; }
fix_after_refactoring: public void addCover ( org.ernest.applications.dmc.report.builders.Document ruidfgxucoyjilvjlxrq , java.lang.String erdwpqixgfihqrhgigir ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( ruidfgxucoyjilvjlxrq ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( erdwpqixgfihqrhgigir , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; ruidfgxucoyjilvjlxrq . add ( paragraph ) ; ruidfgxucoyjilvjlxrq . newPage () ; }
× fix_prediction_before: private void addCover ( org.ernest.applications.dmc.report.builders.Document document , org.ernest.applications.dmc.domain.Region region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; }
× fix_prediction_after: public org.ernest.applications.dmc.report.builders.Paragraph addCover ( org.ernest.applications.dmc.report.builders.Document ruidfgxucoyjilvjlxrq , org.ernest.applications.dmc.domain.Region erdwpqixgfihqrhgigir ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( ruidfgxucoyjilvjlxrq ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( erdwpqixgfihqrhgigir . getName () , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; ruidfgxucoyjilvjlxrq . add ( paragraph ) ; ruidfgxucoyjilvjlxrq . newPage () ; return paragraph ; }

line_index: 86
bug_before_refactoring: private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; } <s> private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; } <s> fix code style errors
bug_after_refactoring: private java.lang.String buildSongIdFromGenreSelect ( java.lang.String ghmjwyaiadrdvhhvizfv ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + ghmjwyaiadrdvhhvizfv ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; } <s> private java.lang.String buildSongIdFromGenreSelect ( java.lang.String ghmjwyaiadrdvhhvizfv ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + ghmjwyaiadrdvhhvizfv ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; } <s> fix code style errors
fix_before_refactoring: private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { return ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; }
fix_after_refactoring: private java.lang.String buildSongIdFromGenreSelect ( java.lang.String ghmjwyaiadrdvhhvizfv ) { return ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + ghmjwyaiadrdvhhvizfv ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; }
× fix_prediction_before: private static java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; }
× fix_prediction_after: private static java.lang.String buildSongIdFromGenreSelect ( java.lang.String ghmjwyaiadrdvhhvizfv ) { final java.lang.String query = ( ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + ghmjwyaiadrdvhhvizfv ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; }

line_index: 87
bug_before_refactoring: public static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; } <s> public static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; } <s> Fix problems detected by the FindBugs plugin  - FindBugs enforcement.  Change-Id: Ibfb739a1e74c64a85bafc49b0b1d0d61e5005b04 Signed-off-by: David Suarez <david.suarez.fuentes@gmail.com>
bug_after_refactoring: public static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] mkuafhpnkhcqjjvubvmq , byte [] hngxfvvlodogwwksucld , org.opendaylight.genius.mdsalutil.packet.ARP cncvgexbqgrxpeqwmqwy ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( mkuafhpnkhcqjjvubvmq ) ; ethernet . setDestinationMACAddress ( hngxfvvlodogwwksucld ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( cncvgexbqgrxpeqwmqwy ) ; return ethernet ; } <s> public static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] mkuafhpnkhcqjjvubvmq , byte [] hngxfvvlodogwwksucld , org.opendaylight.genius.mdsalutil.packet.ARP cncvgexbqgrxpeqwmqwy ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( mkuafhpnkhcqjjvubvmq ) ; ethernet . setDestinationMACAddress ( hngxfvvlodogwwksucld ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( cncvgexbqgrxpeqwmqwy ) ; return ethernet ; } <s> Fix problems detected by the FindBugs plugin  - FindBugs enforcement.  Change-Id: Ibfb739a1e74c64a85bafc49b0b1d0d61e5005b04 Signed-off-by: David Suarez <david.suarez.fuentes@gmail.com>
fix_before_refactoring: private static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; }
fix_after_refactoring: private static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] mkuafhpnkhcqjjvubvmq , byte [] hngxfvvlodogwwksucld , org.opendaylight.genius.mdsalutil.packet.ARP cncvgexbqgrxpeqwmqwy ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( mkuafhpnkhcqjjvubvmq ) ; ethernet . setDestinationMACAddress ( hngxfvvlodogwwksucld ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( cncvgexbqgrxpeqwmqwy ) ; return ethernet ; }
× fix_prediction_before: public static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; }
× fix_prediction_after: public static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] mkuafhpnkhcqjjvubvmq , byte [] hngxfvvlodogwwksucld , org.opendaylight.genius.mdsalutil.packet.ARP cncvgexbqgrxpeqwmqwy ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( mkuafhpnkhcqjjvubvmq ) ; ethernet . setDestinationMACAddress ( hngxfvvlodogwwksucld ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( cncvgexbqgrxpeqwmqwy ) ; return ethernet ; }

line_index: 88
bug_before_refactoring: public static java.io.File findExe ( java.io.File root , java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } <s> public static java.io.File findExe ( java.io.File root , java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } <s> Various bugfixes in executing code
bug_after_refactoring: public static java.io.File findExe ( java.io.File erlmewqobupfqihaqolh , java.lang.String wsfhwhpxcxhleqnymxbh ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( erlmewqobupfqihaqolh , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( wsfhwhpxcxhleqnymxbh ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + wsfhwhpxcxhleqnymxbh ) + "'!" ) ) ; } <s> public static java.io.File findExe ( java.io.File erlmewqobupfqihaqolh , java.lang.String wsfhwhpxcxhleqnymxbh ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( erlmewqobupfqihaqolh , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( wsfhwhpxcxhleqnymxbh ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + wsfhwhpxcxhleqnymxbh ) + "'!" ) ) ; } <s> Various bugfixes in executing code
fix_before_refactoring: public static java.io.File findExe ( java.io.File root , java.lang.String exe , boolean fail ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; if ( ! fail ) return null ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; }
fix_after_refactoring: public static java.io.File findExe ( java.io.File erlmewqobupfqihaqolh , java.lang.String wsfhwhpxcxhleqnymxbh , boolean fail ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( erlmewqobupfqihaqolh , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( wsfhwhpxcxhleqnymxbh ) ) && ( ( file . length () ) >= 1 ) ) return file ; if ( ! fail ) return null ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + wsfhwhpxcxhleqnymxbh ) + "'!" ) ) ; }
× fix_prediction_before: public static java.io.File findExe ( java.io.File root , java.lang.String exe ) throws java.io.IOException { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; }
× fix_prediction_after: public static java.io.File findExe ( java.io.File erlmewqobupfqihaqolh ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( erlmewqobupfqihaqolh , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( wsfhwhpxcxhleqnymxbh ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + wsfhwhpxcxhleqnymxbh ) + "'!" ) ) ; }

line_index: 89
bug_before_refactoring: private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean orientX ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p , orientX ) ; if ( cmp < 0 ) return contains ( node.lb , p , ( ! orientX ) ) ; else if ( cmp > 0 ) return contains ( node.rt , p , ( ! orientX ) ) ; else return node.p . equals ( p ) ; } <s> private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean orientX ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p , orientX ) ; if ( cmp < 0 ) return contains ( node.lb , p , ( ! orientX ) ) ; else if ( cmp > 0 ) return contains ( node.rt , p , ( ! orientX ) ) ; else return node.p . equals ( p ) ; } <s> Bug fixes
bug_after_refactoring: uzfnuhkjlbebmrqkpdvvrivate boolean contains ( KdTree.Node naesdutxzvytcmmbxtsu , edu.uzfnuhkjlbebmrqkpdvvrinceton.cs.algs4.Point2D uzfnuhkjlbebmrqkpdvv , boolean prlqcbcaizlffwdkblui ) { if ( naesdutxzvytcmmbxtsu == null ) return false ; int cmuzfnuhkjlbebmrqkpdvv = KdTree . comuzfnuhkjlbebmrqkpdvvare ( uzfnuhkjlbebmrqkpdvv , naesdutxzvytcmmbxtsu.uzfnuhkjlbebmrqkpdvv , prlqcbcaizlffwdkblui ) ; if ( cmuzfnuhkjlbebmrqkpdvv < 0 ) return contains ( naesdutxzvytcmmbxtsu.lb , uzfnuhkjlbebmrqkpdvv , ( ! prlqcbcaizlffwdkblui ) ) ; else if ( cmuzfnuhkjlbebmrqkpdvv > 0 ) return contains ( naesdutxzvytcmmbxtsu.rt , uzfnuhkjlbebmrqkpdvv , ( ! prlqcbcaizlffwdkblui ) ) ; else return naesdutxzvytcmmbxtsu.uzfnuhkjlbebmrqkpdvv . equals ( uzfnuhkjlbebmrqkpdvv ) ; } <s> uzfnuhkjlbebmrqkpdvvrivate boolean contains ( KdTree.Node naesdutxzvytcmmbxtsu , edu.uzfnuhkjlbebmrqkpdvvrinceton.cs.algs4.Point2D uzfnuhkjlbebmrqkpdvv , boolean prlqcbcaizlffwdkblui ) { if ( naesdutxzvytcmmbxtsu == null ) return false ; int cmuzfnuhkjlbebmrqkpdvv = KdTree . comuzfnuhkjlbebmrqkpdvvare ( uzfnuhkjlbebmrqkpdvv , naesdutxzvytcmmbxtsu.uzfnuhkjlbebmrqkpdvv , prlqcbcaizlffwdkblui ) ; if ( cmuzfnuhkjlbebmrqkpdvv < 0 ) return contains ( naesdutxzvytcmmbxtsu.lb , uzfnuhkjlbebmrqkpdvv , ( ! prlqcbcaizlffwdkblui ) ) ; else if ( cmuzfnuhkjlbebmrqkpdvv > 0 ) return contains ( naesdutxzvytcmmbxtsu.rt , uzfnuhkjlbebmrqkpdvv , ( ! prlqcbcaizlffwdkblui ) ) ; else return naesdutxzvytcmmbxtsu.uzfnuhkjlbebmrqkpdvv . equals ( uzfnuhkjlbebmrqkpdvv ) ; } <s> Bug fixes
fix_before_refactoring: private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node ) ; if ( cmp < 0 ) return contains ( node.lb , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else return node.p . equals ( p ) ; }
fix_after_refactoring: uzfnuhkjlbebmrqkpdvvrivate boolean contains ( KdTree.Node naesdutxzvytcmmbxtsu , edu.uzfnuhkjlbebmrqkpdvvrinceton.cs.algs4.Point2D uzfnuhkjlbebmrqkpdvv ) { if ( naesdutxzvytcmmbxtsu == null ) return false ; int cmuzfnuhkjlbebmrqkpdvv = KdTree . comuzfnuhkjlbebmrqkpdvvare ( uzfnuhkjlbebmrqkpdvv , naesdutxzvytcmmbxtsu ) ; if ( cmuzfnuhkjlbebmrqkpdvv < 0 ) return contains ( naesdutxzvytcmmbxtsu.lb , uzfnuhkjlbebmrqkpdvv ) ; else if ( cmuzfnuhkjlbebmrqkpdvv > 0 ) return contains ( naesdutxzvytcmmbxtsu.rt , uzfnuhkjlbebmrqkpdvv ) ; else return naesdutxzvytcmmbxtsu.uzfnuhkjlbebmrqkpdvv . equals ( uzfnuhkjlbebmrqkpdvv ) ; }
× fix_prediction_before: private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p ) ; if ( cmp < 0 ) return contains ( node.lb , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else return node.p . equals ( p ) ; }
× fix_prediction_after: if ( naesdutxzvytcmmbxtsu == null ) return false ; int cmuzfnuhkjlbebmrqkpdvv = KdTree . comuzfnuhkjlbebmrqkpdvvare ( uzfnuhkjlbebmrqkpdvv , naesdutxzvytcmmbxtsu.uzfnuhkjlbebmrqkpdvv , prlqcbcaizlffwdkblui ) ; if ( cmuzfnuhkjlbebmrqkpdvv < 0 ) return contains ( naesdutxzvytcmmbxtsu.lb , uzfnuhkjlbebmrqkpdvv , ( ! prlqcbcaizlffwdkblui ) ) ; else if ( cmuzfnuhkjlbebmrqkpdvv > 0 ) return contains ( naesdutxzvytcmmbxtsu.rt , uzfnuhkjlbebmrqkpdvv , ( ! prlqcbcaizlffwdkblui ) ) ; else if ( cmuzfnuhkjlbebmrqkpdvv > 0 ) return contains ( naesdutxzvytcmmbxtsu.rt , uzfnuhkjlbebmrqkpdvv , ( ! prlqcbcaizlffwdkblui ) ) ; else return naesdutxzvytcmmbxtsu.uzfnuhkjlbebmrqkpdvv . equals ( uzfnuhkjlbebmrqkpdvv ) ; }

line_index: 90
bug_before_refactoring: public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; } <s> public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; } <s> Initial steps for implementing CaptureOne method in Oscilloscope UI (#215)  * implement captureOne method in Oscilloscope UI  * Prevents Oscilloscope Activity to sleep  * replaced captureOne method with captureTraces  * errors resolved by Vivek
bug_after_refactoring: public java.util.Map < java.lang.String , double [] > fetchTrace ( int zqgzbmjlzlzbjcrbbuqv ) { this . fetchChannel ( zqgzbmjlzlzbjcrbbuqv ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( zqgzbmjlzlzbjcrbbuqv - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( zqgzbmjlzlzbjcrbbuqv - 1 ) ) . getYAxis () ) ; return retData ; } <s> public java.util.Map < java.lang.String , double [] > fetchTrace ( int zqgzbmjlzlzbjcrbbuqv ) { this . fetchChannel ( zqgzbmjlzlzbjcrbbuqv ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( zqgzbmjlzlzbjcrbbuqv - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( zqgzbmjlzlzbjcrbbuqv - 1 ) ) . getYAxis () ) ; return retData ; } <s> Initial steps for implementing CaptureOne method in Oscilloscope UI (#215)  * implement captureOne method in Oscilloscope UI  * Prevents Oscilloscope Activity to sleep  * replaced captureOne method with captureTraces  * errors resolved by Vivek
fix_before_refactoring: public java.util.HashMap < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.HashMap < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; }
fix_after_refactoring: public java.util.HashMap < java.lang.String , double [] > fetchTrace ( int zqgzbmjlzlzbjcrbbuqv ) { this . fetchChannel ( zqgzbmjlzlzbjcrbbuqv ) ; java.util.HashMap < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( zqgzbmjlzlzbjcrbbuqv - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( zqgzbmjlzlzbjcrbbuqv - 1 ) ) . getYAxis () ) ; return retData ; }
× fix_prediction_before: public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; }
× fix_prediction_after: private java.util.Map < java.lang.String , double [] > fetchTrace ( int zqgzbmjlzlzbjcrbbuqv ) { this . fetchChannel ( zqgzbmjlzlzbjcrbbuqv ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( zqgzbmjlzlzbjcrbbuqv - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( zqgzbmjlzlzbjcrbbuqv - 1 ) ) . getYAxis () ) ; return retData ; }

line_index: 91
bug_before_refactoring: private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; } <s> private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; } <s> Fixed minor bugs and improved the stickiness algorithm
bug_after_refactoring: private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > fczdtdhbvlvfnnekjywj ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( fczdtdhbvlvfnnekjywj , copy ) ; return copy ; } <s> private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > fczdtdhbvlvfnnekjywj ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( fczdtdhbvlvfnnekjywj , copy ) ; return copy ; } <s> Fixed minor bugs and improved the stickiness algorithm
fix_before_refactoring: protected java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; }
fix_after_refactoring: protected java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > fczdtdhbvlvfnnekjywj ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( fczdtdhbvlvfnnekjywj , copy ) ; return copy ; }
× fix_prediction_before: public java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; }
× fix_prediction_after: public java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > fczdtdhbvlvfnnekjywj ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( fczdtdhbvlvfnnekjywj , copy ) ; return copy ; }

line_index: 92
bug_before_refactoring: public org.apollo.game.model.Position fromDeltas ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } <s> public org.apollo.game.model.Position fromDeltas ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } <s> Fix CR issues 1. Fix small bug in following. 2. Use EuclidianHeuristic for pathfinding. 3. Rename fromDeltas() and fromPosition() in Direction to add().
bug_after_refactoring: public org.apollo.game.model.Position fromDeltas ( int ziwrkqxegvkqpanmjjvj , int uxizeullqngtuailavhr , int okdmozzdhtktmjdjhhgv ) { return new org.apollo.game.model.Position ( ( ( getX () ) + ziwrkqxegvkqpanmjjvj ) , ( ( getY () ) + uxizeullqngtuailavhr ) , ( ( getHeight () ) + okdmozzdhtktmjdjhhgv ) ) ; } <s> public org.apollo.game.model.Position fromDeltas ( int ziwrkqxegvkqpanmjjvj , int uxizeullqngtuailavhr , int okdmozzdhtktmjdjhhgv ) { return new org.apollo.game.model.Position ( ( ( getX () ) + ziwrkqxegvkqpanmjjvj ) , ( ( getY () ) + uxizeullqngtuailavhr ) , ( ( getHeight () ) + okdmozzdhtktmjdjhhgv ) ) ; } <s> Fix CR issues 1. Fix small bug in following. 2. Use EuclidianHeuristic for pathfinding. 3. Rename fromDeltas() and fromPosition() in Direction to add().
fix_before_refactoring: public org.apollo.game.model.Position add ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; }
fix_after_refactoring: public org.apollo.game.model.Position add ( int ziwrkqxegvkqpanmjjvj , int uxizeullqngtuailavhr , int okdmozzdhtktmjdjhhgv ) { return new org.apollo.game.model.Position ( ( ( getX () ) + ziwrkqxegvkqpanmjjvj ) , ( ( getY () ) + uxizeullqngtuailavhr ) , ( ( getHeight () ) + okdmozzdhtktmjdjhhgv ) ) ; }
× fix_prediction_before: public org.apollo.game.model.Position fromDeltas ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; }
× fix_prediction_after: public org.apollo.game.model.Position fromDeltas ( int ziwrkqxegvkqpanmjjvj , int uxizeullqngtuailavhr , int okdmozzdhtktmjdjhhgv ) { return new org.apollo.game.model.Position ( ( ( getX () ) + ziwrkqxegvkqpanmjjvj ) , ( ( getY () ) + uxizeullqngtuailavhr ) , ( ( getHeight () ) + okdmozzdhtktmjdjhhgv ) ) ; }

line_index: 93
bug_before_refactoring: public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; } <s> Fix a bug that was preventing the puzzle to be solved correctly; add comments
bug_after_refactoring: public int ppxvzewijccaqxmzxshkContains ( int ppxvzewijccaqxmzxshk , int basppkqzgnardcwokikf ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ ppxvzewijccaqxmzxshk ] . value ) == basppkqzgnardcwokikf ) count ++ ; } return count ; } <s> public int ppxvzewijccaqxmzxshkContains ( int ppxvzewijccaqxmzxshk , int basppkqzgnardcwokikf ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ ppxvzewijccaqxmzxshk ] . value ) == basppkqzgnardcwokikf ) count ++ ; } return count ; } <s> Fix a bug that was preventing the puzzle to be solved correctly; add comments
fix_before_refactoring: public int colContains ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; }
fix_after_refactoring: public int ppxvzewijccaqxmzxshkContains ( int x , int basppkqzgnardcwokikf ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == basppkqzgnardcwokikf ) count ++ ; } return count ; }
× fix_prediction_before: public int colContains ( int x , int y ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == y ) count ++ ; } return count ; }
× fix_prediction_after: public int ppxvzewijccaqxmzxshkContains ( int ppxvzewijccaqxmzxshk , intbasppkqzgnardcwokikf ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ ppxvzewijccaqxmzxshk ] . value ) ==basppkqzgnardcwokikf ) count ++ ; } return count ; }

line_index: 94
bug_before_refactoring: public void printTree ( DataStructure.RBTNode < T > node ) { if ( node == ( nil ) ) { return; } printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; } <s> public void printTree ( DataStructure.RBTNode < T > node ) { if ( node == ( nil ) ) { return; } printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; } <s> need to debug insertFixup()
bug_after_refactoring: public void printTree ( DataStructure.RBTNode < T > tkldqkekrlnwbsuqutrc ) { if ( tkldqkekrlnwbsuqutrc == ( nil ) ) { return; } printTree ( tkldqkekrlnwbsuqutrc.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( tkldqkekrlnwbsuqutrc.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( tkldqkekrlnwbsuqutrc.key ) ) + " Parent: " ) + ( tkldqkekrlnwbsuqutrc.parent.key ) ) + "\n" ) ) ; printTree ( tkldqkekrlnwbsuqutrc.right ) ; } <s> public void printTree ( DataStructure.RBTNode < T > tkldqkekrlnwbsuqutrc ) { if ( tkldqkekrlnwbsuqutrc == ( nil ) ) { return; } printTree ( tkldqkekrlnwbsuqutrc.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( tkldqkekrlnwbsuqutrc.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( tkldqkekrlnwbsuqutrc.key ) ) + " Parent: " ) + ( tkldqkekrlnwbsuqutrc.parent.key ) ) + "\n" ) ) ; printTree ( tkldqkekrlnwbsuqutrc.right ) ; } <s> need to debug insertFixup()
fix_before_refactoring: public void printTree ( DataStructure.RBTNode < T > node ) { if ( node != null ) { printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; } }
fix_after_refactoring: public void printTree ( DataStructure.RBTNode < T > tkldqkekrlnwbsuqutrc ) { if ( tkldqkekrlnwbsuqutrc != null ) { printTree ( tkldqkekrlnwbsuqutrc.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( tkldqkekrlnwbsuqutrc.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( tkldqkekrlnwbsuqutrc.key ) ) + " Parent: " ) + ( tkldqkekrlnwbsuqutrc.parent.key ) ) + "\n" ) ) ; printTree ( tkldqkekrlnwbsuqutrc.right ) ; } }
× fix_prediction_before: public void printTree ( DataStructure.RBTNode < T > node ) { if ( node == ( nil ) ) { return; } printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; }
× fix_prediction_after: public void printTree ( DataStructure.RBTNode < T > tkldqkekrlnwbsuqutrc ) { if ( tkldqkekrlnwbsuqutrc == ( nil ) ) { return; } printTree ( tkldqkekrlnwbsuqutrc.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( ( tkldqkekrlnwbsuqutrc.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( tkldqkekrlnwbsuqutrc.key ) ) + " Parent: " ) + ( tkldqkekrlnwbsuqutrc.parent.key ) ) + "\n" ) ) ; }

line_index: 95
bug_before_refactoring: public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> EWOK-87 #code-review BUGFIX #comment  zoomFitAll custom zoom value is converted to the closest available in our possible zoom levels
bug_after_refactoring: public float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> public float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } <s> EWOK-87 #code-review BUGFIX #comment  zoomFitAll custom zoom value is converted to the closest available in our possible zoom levels
fix_before_refactoring: private float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
fix_after_refactoring: private float getDesiredZoomLevel ( int mlbydpxeiqkejarqjqdc ) { float zoom = 13.0F ; switch ( mlbydpxeiqkejarqjqdc ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
× fix_prediction_before: public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }
× fix_prediction_after: public float getDesiredZoomLevel () { float zoom = 13.0F ; switch ( this ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; }

line_index: 96
bug_before_refactoring: public java.util.List < java.lang.Object [] > find ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; } <s> public java.util.List < java.lang.Object [] > find ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; } <s> fixed bug with entity reading
bug_after_refactoring: public java.util.List < java.lang.Object [] > find ( java.lang.String fqubdhwbjxoprrcdntlt , java.util.List < java.lang.String > jwruibwwelwsxiucfngp , java.lang.Class rvmqljihuzkbnyolbpsv ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( fqubdhwbjxoprrcdntlt ) . addEntity ( rvmqljihuzkbnyolbpsv ) ; for ( java.lang.String r : jwruibwwelwsxiucfngp ) { q . addScalar ( r ) ; } return q . list () ; } <s> public java.util.List < java.lang.Object [] > find ( java.lang.String fqubdhwbjxoprrcdntlt , java.util.List < java.lang.String > jwruibwwelwsxiucfngp , java.lang.Class rvmqljihuzkbnyolbpsv ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( fqubdhwbjxoprrcdntlt ) . addEntity ( rvmqljihuzkbnyolbpsv ) ; for ( java.lang.String r : jwruibwwelwsxiucfngp ) { q . addScalar ( r ) ; } return q . list () ; } <s> fixed bug with entity reading
fix_before_refactoring: public java.util.List find ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { java.util.List < java.lang.Object [] > result = new java.util.ArrayList < java.lang.Object [] > () ; if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; }
fix_after_refactoring: public java.util.List find ( java.lang.String fqubdhwbjxoprrcdntlt , java.util.List < java.lang.String > jwruibwwelwsxiucfngp , java.lang.Class rvmqljihuzkbnyolbpsv ) { java.util.List < java.lang.Object [] > result = new java.util.ArrayList < java.lang.Object [] > () ; if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( fqubdhwbjxoprrcdntlt ) . addEntity ( rvmqljihuzkbnyolbpsv ) ; for ( java.lang.String r : jwruibwwelwsxiucfngp ) { q . addScalar ( r ) ; } return q . list () ; }
× fix_prediction_before: public java.util.List < java.lang.Object [] > find ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; }
× fix_prediction_after: public java.util.List < java.lang.Object [] > find ( java.lang.String fqubdhwbjxoprrcdntlt , java.util.List < java.lang.String > jwruibwwelwsxiucfngp ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( fqubdhwbjxoprrcdntlt ) . addEntity ( rvmqljihuzkbnyolbpsv ) ; for ( java.lang.String r : jwruibwwelwsxiucfngp ) { q . addScalar ( r ) ; } return q . list () ; }

line_index: 97
bug_before_refactoring: public boolean monsterExist ( game.zork.Monster monster ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; } <s> public boolean monsterExist ( game.zork.Monster monster ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; } <s> All recorded bugs fixed
bug_after_refactoring: public boolean twijkhkvodbboqkrspzuExist ( game.zork.Monster twijkhkvodbboqkrspzu ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( twijkhkvodbboqkrspzu . getName () ) ) ) { return true ; } } return false ; } <s> public boolean twijkhkvodbboqkrspzuExist ( game.zork.Monster twijkhkvodbboqkrspzu ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( twijkhkvodbboqkrspzu . getName () ) ) ) { return true ; } } return false ; } <s> All recorded bugs fixed
fix_before_refactoring: public boolean monsterExist ( game.zork.Monster monster , java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel ) { game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; }
fix_after_refactoring: public boolean twijkhkvodbboqkrspzuExist ( game.zork.Monster twijkhkvodbboqkrspzu , java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel ) { game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( twijkhkvodbboqkrspzu . getName () ) ) ) { return true ; } } return false ; }
× fix_prediction_before: public game.zork.Monster monsterExist ( game.zork.Monster monster ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( game.zork.Monster ) ( i ) ) . getName () . equals ( monster . getName () ) ) ) { return monster ; } } return null ; }
× fix_prediction_after: public game.zork.GameMap.Coordination twijkhkvodbboqkrspzuExist ( game.zork.Monster twijkhkvodbboqkrspzu ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( twijkhkvodbboqkrspzu . getName () ) ) ) { return i ; } } return null ; }

line_index: 98
bug_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; } <s> @ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; } <s> [LDSS-4] fix more sonar issues
bug_after_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object mtccovkqszulobjeiqbd ) { boolean isEqual = false ; try { isEqual = ( ( mtccovkqszulobjeiqbd . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( mtccovkqszulobjeiqbd ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; } <s> @ java.lang.Override public boolean equals ( java.lang.Object mtccovkqszulobjeiqbd ) { boolean isEqual = false ; try { isEqual = ( ( mtccovkqszulobjeiqbd . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( mtccovkqszulobjeiqbd ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; } <s> [LDSS-4] fix more sonar issues
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object obj ) throws java.lang.NullPointerException { boolean isEqual = false ; if ( obj != null ) { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } return isEqual ; }
fix_after_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object mtccovkqszulobjeiqbd ) throws java.lang.NullPointerException { boolean isEqual = false ; if ( mtccovkqszulobjeiqbd != null ) { isEqual = ( ( mtccovkqszulobjeiqbd . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( mtccovkqszulobjeiqbd ) ) . getTerms () ) ) ; } return isEqual ; }
× fix_prediction_before: @ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ! ( obj instanceof dss.lingvo.hflts.TTHFLTS ) ) { return false ; } boolean isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; return isEqual ; }
× fix_prediction_after: @ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj != null ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; }

line_index: 99
bug_before_refactoring: @ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } } <s> @ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } } <s> Merge pull request #786 from google/revert-783-bugfix_782  Revert "Include a space before single quote and bang when pretty-printin...
bug_after_refactoring: @ java.lang.Override void appendOp ( java.lang.String rsfjlercmojittbrkldl , boolean iwputptynbfohjrfuqof ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( rsfjlercmojittbrkldl . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( rsfjlercmojittbrkldl ) ; if ( iwputptynbfohjrfuqof ) { append ( " " ) ; } } <s> @ java.lang.Override void appendOp ( java.lang.String rsfjlercmojittbrkldl , boolean iwputptynbfohjrfuqof ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( rsfjlercmojittbrkldl . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( rsfjlercmojittbrkldl ) ; if ( iwputptynbfohjrfuqof ) { append ( " " ) ; } } <s> Merge pull request #786 from google/revert-783-bugfix_782  Revert "Include a space before single quote and bang when pretty-printin...
fix_before_refactoring: @ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; append ( " " ) ; } else { append ( op ) ; } }
fix_after_refactoring: @ java.lang.Override void appendOp ( java.lang.String rsfjlercmojittbrkldl , boolean iwputptynbfohjrfuqof ) { if ( iwputptynbfohjrfuqof ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( rsfjlercmojittbrkldl . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( rsfjlercmojittbrkldl ) ; append ( " " ) ; } else { append ( rsfjlercmojittbrkldl ) ; } }
× fix_prediction_before: @ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } } }
× fix_prediction_after: @ java.lang.Override void appendOp ( java.lang.String rsfjlercmojittbrkldl , boolean iwputptellijfohjrfuqof ) { if ( iwputptellijfohjrfuqof ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( rsfjlercmojittbrkldl . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( rsfjlercmojittbrkldl ) ; if ( iwputptellijfohjrfuqof ) { append ( " " ) ; } } }

line_index: 100
bug_before_refactoring: private java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . getNum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } } <s> private java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . getNum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } } <s> ugen bugfix in subs packing  different nvi may occure
bug_after_refactoring: private java.math.BigInteger getNum ( int ghganskeoenlcdcvblft , cz.tomghganskeoenlcdcvblftren.fishtron.types.Type fibwofixoghownwvmzjt ) { if ( opts . isCachingUsed () ) { return cache . getNum ( ghganskeoenlcdcvblft , fibwofixoghownwvmzjt ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomghganskeoenlcdcvblftren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( ghganskeoenlcdcvblft , fibwofixoghownwvmzjt , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } } <s> private java.math.BigInteger getNum ( int ghganskeoenlcdcvblft , cz.tomghganskeoenlcdcvblftren.fishtron.types.Type fibwofixoghownwvmzjt ) { if ( opts . isCachingUsed () ) { return cache . getNum ( ghganskeoenlcdcvblft , fibwofixoghownwvmzjt ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomghganskeoenlcdcvblftren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( ghganskeoenlcdcvblft , fibwofixoghownwvmzjt , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } } <s> ugen bugfix in subs packing  different nvi may occure
fix_before_refactoring: public java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . getNum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } }
fix_after_refactoring: public java.math.BigInteger getNum ( int ghganskeoenlcdcvblft , cz.tomghganskeoenlcdcvblftren.fishtron.types.Type fibwofixoghownwvmzjt ) { if ( opts . isCachingUsed () ) { return cache . getNum ( ghganskeoenlcdcvblft , fibwofixoghownwvmzjt ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomghganskeoenlcdcvblftren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( ghganskeoenlcdcvblft , fibwofixoghownwvmzjt , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } }
× fix_prediction_before: private java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; }
× fix_prediction_after: private java.math.BigInteger getNum ( int ghganskeoenlcdcvblft , cz.tomghganskeoenlcdcvblftren.fishtron.types.Type fibwofixoghownwvmzjt ) { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomghganskeoenlcdcvblftren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( ghganskeoenlcdcvblft , fibwofixoghownwvmzjt , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; }

line_index: 101
bug_before_refactoring: private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } <s> private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } <s> Merge pull request #1933 from RestComm/issue-1456  fixed #1456
bug_after_refactoring: private java.lang.String getAccountsUrl ( java.lang.String odaiwyazoevowckssudu , java.lang.String sgwgudlmacpyabjdmooi ) { if ( odaiwyazoevowckssudu . endsWith ( "/" ) ) { odaiwyazoevowckssudu = odaiwyazoevowckssudu . substring ( 0 , ( ( odaiwyazoevowckssudu . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( odaiwyazoevowckssudu + "/2012-04-24/Accounts/" ) + sgwgudlmacpyabjdmooi ) + "/Supervisor.json" ; return accountsUrl ; } <s> private java.lang.String getAccountsUrl ( java.lang.String odaiwyazoevowckssudu , java.lang.String sgwgudlmacpyabjdmooi ) { if ( odaiwyazoevowckssudu . endsWith ( "/" ) ) { odaiwyazoevowckssudu = odaiwyazoevowckssudu . substring ( 0 , ( ( odaiwyazoevowckssudu . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( odaiwyazoevowckssudu + "/2012-04-24/Accounts/" ) + sgwgudlmacpyabjdmooi ) + "/Supervisor.json" ; return accountsUrl ; } <s> Merge pull request #1933 from RestComm/issue-1456  fixed #1456
fix_before_refactoring: public java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; }
fix_after_refactoring: public java.lang.String getAccountsUrl ( java.lang.String odaiwyazoevowckssudu , java.lang.String sgwgudlmacpyabjdmooi ) { if ( odaiwyazoevowckssudu . endsWith ( "/" ) ) { odaiwyazoevowckssudu = odaiwyazoevowckssudu . substring ( 0 , ( ( odaiwyazoevowckssudu . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( odaiwyazoevowckssudu + "/2012-04-24/Accounts/" ) + sgwgudlmacpyabjdmooi ) + "/Supervisor.json" ; return accountsUrl ; }
× fix_prediction_before: protected java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; }
× fix_prediction_after: private java.lang.String getAccountsUrl ( java.lang.String odaiwyazoevowckssudu ) { if ( odaiwyazoevowckssudu . endsWith ( "/" ) ) { odaiwyazoevowckssudu = odaiwyazoevowckssudu . substring ( 0 , ( ( odaiwyazoevowckssudu . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( odaiwyazoevowckssudu + "/2012-04-24/Accounts/" ) + sgwgudlmacpyabjdmooi ) + "/Supervisor.json" ; return accountsUrl ; }

line_index: 102
bug_before_refactoring: private boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } <s> private boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } <s> Merge pull request #686 from thiagobustamante/master  IGNORE - Merging bugfixes from branch 5.3
bug_after_refactoring: private boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gpfgwmsyicfqkqehhwxx ) { java.lang.String keepEditor = gpfgwmsyicfqkqehhwxx . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } <s> private boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gpfgwmsyicfqkqehhwxx ) { java.lang.String keepEditor = gpfgwmsyicfqkqehhwxx . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } <s> Merge pull request #686 from thiagobustamante/master  IGNORE - Merging bugfixes from branch 5.3
fix_before_refactoring: protected boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
fix_after_refactoring: protected boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gpfgwmsyicfqkqehhwxx ) { java.lang.String keepEditor = gpfgwmsyicfqkqehhwxx . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
× fix_prediction_before: public boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
× fix_prediction_after: private boolean getKeepEditorOnClickDisabledRows () { java.lang.String keepEditor = gpfgwmsyicfqkqehhwxx . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }

line_index: 103
bug_before_refactoring: public java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; } <s> public java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; } <s> TDQ-13220 fixed issues with constructors + change methods to protected + removed unnecessary methods + added TODO and FIXME
bug_after_refactoring: public java.time.LocalDate parseStringToDate ( java.lang.String tmmllkgakrxsantkrmcj , java.lang.String ipzpatmzniywtcnfqtos , java.time.chrono.Chronology dmeeigttbcogauupfgio ) { if ( ( tmmllkgakrxsantkrmcj != null ) && ( ! ( tmmllkgakrxsantkrmcj . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( ipzpatmzniywtcnfqtos ) . toFormatter () . withChronology ( dmeeigttbcogauupfgio ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( tmmllkgakrxsantkrmcj , inputDateTimeFormatter , dmeeigttbcogauupfgio ) ; } return null ; } <s> public java.time.LocalDate parseStringToDate ( java.lang.String tmmllkgakrxsantkrmcj , java.lang.String ipzpatmzniywtcnfqtos , java.time.chrono.Chronology dmeeigttbcogauupfgio ) { if ( ( tmmllkgakrxsantkrmcj != null ) && ( ! ( tmmllkgakrxsantkrmcj . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( ipzpatmzniywtcnfqtos ) . toFormatter () . withChronology ( dmeeigttbcogauupfgio ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( tmmllkgakrxsantkrmcj , inputDateTimeFormatter , dmeeigttbcogauupfgio ) ; } return null ; } <s> TDQ-13220 fixed issues with constructors + change methods to protected + removed unnecessary methods + added TODO and FIXME
fix_before_refactoring: protected java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; }
fix_after_refactoring: protected java.time.LocalDate parseStringToDate ( java.lang.String tmmllkgakrxsantkrmcj , java.lang.String ipzpatmzniywtcnfqtos , java.time.chrono.Chronology dmeeigttbcogauupfgio ) { if ( ( tmmllkgakrxsantkrmcj != null ) && ( ! ( tmmllkgakrxsantkrmcj . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( ipzpatmzniywtcnfqtos ) . toFormatter () . withChronology ( dmeeigttbcogauupfgio ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( tmmllkgakrxsantkrmcj , inputDateTimeFormatter , dmeeigttbcogauupfgio ) ; } return null ; }
× fix_prediction_before: public java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( inputDateStr , inputDateTimeFormatter ) ; } return null ; }
× fix_prediction_after: public java.time.LocalDate parseStringToDate ( java.lang.String tmmllkgakrxsantkrmcj , java.lang.String ipzpatmzniywtcnfqtos ) { if ( ( tmmllkgakrxsantkrmcj != null ) && ( ! ( tmmllkgakrxsantkrmcj . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( ipzpatmzniywtcnfqtos ) . toFormatter () . withChronology ( dmeeigttbcogauupfgio ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( tmmllkgakrxsantkrmcj , inputDateTimeFormatter ) ; } return null ; }

line_index: 105
bug_before_refactoring: @ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } <s> private io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > getAllCatsObserver () { return new io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > () { @ java.lang.Override public void onSubscribe ( io.reactivex.disposables.Disposable d ) {} @ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } @ java.lang.Override public void onError ( java.lang.Throwable e ) {} @ java.lang.Override public void onComplete () { setCatRecyclerViewAdapter () ; } } ; } <s> fix bugs
bug_after_refactoring: @ java.lang.Override public void onNext ( manoilo.geibepwcpwcevknvixyusapiandroidclient.model.Cat geibepwcpwcevknvixyu ) { getCatImgUrl ( geibepwcpwcevknvixyu ) ; geibepwcpwcevknvixyus . add ( geibepwcpwcevknvixyu ) ; } <s> private io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > getAllCatsObserver () { return new io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > () { @ java.lang.Override public void onSubscribe ( io.reactivex.disposables.Disposable d ) {} @ java.lang.Override public void onNext ( manoilo.geibepwcpwcevknvixyusapiandroidclient.model.Cat geibepwcpwcevknvixyu ) { getCatImgUrl ( geibepwcpwcevknvixyu ) ; geibepwcpwcevknvixyus . add ( geibepwcpwcevknvixyu ) ; } @ java.lang.Override public void onError ( java.lang.Throwable e ) {} @ java.lang.Override public void onComplete () { setCatRecyclerViewAdapter () ; } } ; } <s> fix bugs
fix_before_refactoring: @ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { if ( cat != null ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } }
fix_after_refactoring: @ java.lang.Override public void onNext ( manoilo.geibepwcpwcevknvixyusapiandroidclient.model.Cat geibepwcpwcevknvixyu ) { if ( geibepwcpwcevknvixyu != null ) { getCatImgUrl ( geibepwcpwcevknvixyu ) ; geibepwcpwcevknvixyus . add ( geibepwcpwcevknvixyu ) ; } }
× fix_prediction_before: @ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { if ( ! ( cats . contains ( cat ) ) ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } }
× fix_prediction_after: @ java.lang.Override public void onNext ( manoilo.geibepwcpwcevknvixyusapiandroidclient.model.Cat geibepwcpwcevknvixyu ) { if ( ( geibepwcpwcevknvixyus . size () ) > 0 ) { getCatImgUrl ( geibepwcpwcevknvixyu ) ; geibepwcpwcevknvixyus . add ( geibepwcpwcevknvixyu ) ; } }

line_index: 106
bug_before_refactoring: private java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } <s> private java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } <s> Fixed problems  i think
bug_after_refactoring: private java.util.List < input.ExternalEvent > readEvents ( int elafccniqixsfyxdvrik ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( elafccniqixsfyxdvrik ) ; if ( ( elafccniqixsfyxdvrik > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } <s> private java.util.List < input.ExternalEvent > readEvents ( int elafccniqixsfyxdvrik ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( elafccniqixsfyxdvrik ) ; if ( ( elafccniqixsfyxdvrik > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } <s> Fixed problems  i think
fix_before_refactoring: @ java.lang.Override protected java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; }
fix_after_refactoring: @ java.lang.Override protected java.util.List < input.ExternalEvent > readEvents ( int elafccniqixsfyxdvrik ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( elafccniqixsfyxdvrik ) ; if ( ( elafccniqixsfyxdvrik > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; }
× fix_prediction_before: public java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; }
× fix_prediction_after: public java.util.List < input.ExternalEvent > readEvents ( int elafccniqixsfyxdvrik ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( elafccniqixsfyxdvrik ) ; if ( ( elafccniqixsfyxdvrik > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; }

line_index: 107
bug_before_refactoring: public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } } <s> public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } } <s> Merge branch 'bugfix'  Change-Id: I799d95be8969c63f9c6eb223880e4eaecf43d9d3
bug_after_refactoring: public void createConnector ( io.joynr.arbitration.ArbitrationResult vzaumehisnqpektwzekz ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , vzaumehisnqpektwzekz , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } } <s> public void createConnector ( io.joynr.arbitration.ArbitrationResult vzaumehisnqpektwzekz ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , vzaumehisnqpektwzekz , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } } <s> Merge branch 'bugfix'  Change-Id: I799d95be8969c63f9c6eb223880e4eaecf43d9d3
fix_before_refactoring: public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatusLock . lock () ; try { connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } finally { connectorStatusLock . unlock () ; } }
fix_after_refactoring: public void createConnector ( io.joynr.arbitration.ArbitrationResult vzaumehisnqpektwzekz ) { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , vzaumehisnqpektwzekz , qosSettings ) ; connectorStatusLock . lock () ; try { connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } finally { connectorStatusLock . unlock () ; } }
× fix_prediction_before: public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } }
× fix_prediction_after: public void createConnector ( io.joynr.arbitration.ArbitrationResult vzaumehisnqpektwzekz ) { connectorStatusLock . lock () ; try { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , vzaumehisnqpektwzekz , qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e . printStackTrace () ; } finally { connectorStatusLock . unlock () ; } }

line_index: 108
bug_before_refactoring: public synchronized void removePlayer ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; } <s> public synchronized void removePlayer ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; } <s> Added GameLobbyTest and fixed bugs in GameLobby (changed some type of methods from void to boolean) [TBC]
bug_after_refactoring: public synchronized void removePlayer ( CardGame.User idnpykceeabrqkpflbjo ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( idnpykceeabrqkpflbjo . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; } <s> public synchronized void removePlayer ( CardGame.User idnpykceeabrqkpflbjo ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( idnpykceeabrqkpflbjo . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; } <s> Added GameLobbyTest and fixed bugs in GameLobby (changed some type of methods from void to boolean) [TBC]
fix_before_refactoring: public synchronized boolean removePlayer ( CardGame.User user ) { int removeID = - 1 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } if ( removeID != ( - 1 ) ) { players . remove ( removeID ) ; return true ; } else { return false ; } }
fix_after_refactoring: public synchronized boolean removePlayer ( CardGame.User idnpykceeabrqkpflbjo ) { int removeID = - 1 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( idnpykceeabrqkpflbjo . getUserName () ) ) { removeID = index ; } index ++ ; } if ( removeID != ( - 1 ) ) { players . remove ( removeID ) ; return true ; } else { return false ; } }
× fix_prediction_before: public void removePlayer ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; }
× fix_prediction_after: public synchronized boolean removePlayer ( CardGame.User idnpykceeabrqkpflbjo ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( idnpykceeabrqkpflbjo . getUserName () ) ) { removeID = index ; } index ++ ; } players . remove ( removeID ) ; return true ; }

line_index: 109
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newdoc = esService . save ( doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newdoc = esService . save ( doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } <s> 1.fix bugs for edit doc 2.fix bugs for bootrepackage
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem ndrkqxsjlwcmatdjnibt ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newndrkqxsjlwcmatdjnibt = esService . save ( ndrkqxsjlwcmatdjnibt ) ; result . ok ( newndrkqxsjlwcmatdjnibt ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem ndrkqxsjlwcmatdjnibt ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newndrkqxsjlwcmatdjnibt = esService . save ( ndrkqxsjlwcmatdjnibt ) ; result . ok ( newndrkqxsjlwcmatdjnibt ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } <s> 1.fix bugs for edit doc 2.fix bugs for bootrepackage
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData/{index}/{type}/{id}" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.PathVariable ( value = "index" ) java.lang.String index , @ org.springframework.web.bind.annotation.PathVariable ( value = "type" ) java.lang.String type , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" , required = false ) java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody java.lang.Object doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { java.lang.Object newdoc = esService . index ( index , type , id , doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData/{index}/{type}/{id}" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.PathVariable ( value = "index" ) java.lang.String index , @ org.springframework.web.bind.annotation.PathVariable ( value = "type" ) java.lang.String type , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" , required = false ) java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody java.lang.Object ndrkqxsjlwcmatdjnibt ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { java.lang.Object newndrkqxsjlwcmatdjnibt = esService . index ( index , type , id , ndrkqxsjlwcmatdjnibt ) ; result . ok ( newndrkqxsjlwcmatdjnibt ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc ) throws java.lang.Exception { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; org.datasays.wes.vo.EsItem newdoc = esService . save ( doc ) ; result . ok ( newdoc ) ; return result ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem ndrkqxsjlwcmatdjnibt ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; org.datasays.wes.vo.EsItem newndrkqxsjlwcmatdjnibt = esService . save ( ndrkqxsjlwcmatdjnibt ) ; result . ok ( newndrkqxsjlwcmatdjnibt ) ; return result ; }

line_index: 110
bug_before_refactoring: public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; } <s> public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; } <s> Merge pull request #31 from systay/3.2  Solve problems introduced by moving compiled runtime to enterprise
bug_after_refactoring: public static org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.TransactionalContext createTransactionalContext ( java.lang.String mtcwhxpbddtszakybhvi ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , mtcwhxpbddtszakybhvi , java.util.Collections . emptyMap () ) ; } <s> public static org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.TransactionalContext createTransactionalContext ( java.lang.String mtcwhxpbddtszakybhvi ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , mtcwhxpbddtszakybhvi , java.util.Collections . emptyMap () ) ; } <s> Merge pull request #31 from systay/3.2  Solve problems introduced by moving compiled runtime to enterprise
fix_before_refactoring: private static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; }
fix_after_refactoring: private static org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.TransactionalContext createTransactionalContext ( java.lang.String mtcwhxpbddtszakybhvi ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , mtcwhxpbddtszakybhvi , java.util.Collections . emptyMap () ) ; }
× fix_prediction_before: public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( transaction , query , java.util.Collections . emptyMap () ) ; }
× fix_prediction_after: public static org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.TransactionalContext createTransactionalContext () { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.mtcwhxpbddtszakybhvi.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , mtcwhxpbddtszakybhvi , java.util.Collections . emptyMap () ) ; }

line_index: 111
bug_before_refactoring: pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; } <s> pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; } <s> Make "save" option saving to last location. Fix bugs.
bug_after_refactoring: pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String rulzngacycigyxelioff ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( rulzngacycigyxelioff ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + rulzngacycigyxelioff ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; } <s> pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String rulzngacycigyxelioff ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( rulzngacycigyxelioff ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + rulzngacycigyxelioff ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; } <s> Make "save" option saving to last location. Fix bugs.
fix_before_refactoring: pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) return null ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( vectorElement . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( vectorElement . getAttribute ( "y" ) ) ) ; }
fix_after_refactoring: pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String rulzngacycigyxelioff ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( rulzngacycigyxelioff ) ; if ( vectorElement == null ) return null ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( vectorElement . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( vectorElement . getAttribute ( "y" ) ) ) ; }
× fix_prediction_before: pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) throws pl.karol202.evolution.utils.SimulationParseException { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; }
× fix_prediction_after: pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String x , java.lang.String y ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( x ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + y ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; }

line_index: 112
bug_before_refactoring: public static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> public static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> before delete of test stuff to solve dex problem
bug_after_refactoring: public static java.lang.String getStringResponse ( java.io.InputStream xexlrnyojakkictjvwmj ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( xexlrnyojakkictjvwmj ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> public static java.lang.String getStringResponse ( java.io.InputStream xexlrnyojakkictjvwmj ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( xexlrnyojakkictjvwmj ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } <s> before delete of test stuff to solve dex problem
fix_before_refactoring: private static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
fix_after_refactoring: private static java.lang.String getStringResponse ( java.io.InputStream xexlrnyojakkictjvwmj ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( xexlrnyojakkictjvwmj ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
× fix_prediction_before: public static java.lang.String getStringResponse ( java.io.BufferedReader reader ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
× fix_prediction_after: public static java.lang.String getStringResponse ( java.io.BufferedReader reader ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }

line_index: 114
bug_before_refactoring: protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout treeLayout , boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , treeLayout , keepColumnStatus ) ; } } } <s> protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout treeLayout , boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , treeLayout , keepColumnStatus ) ; } } } <s> hpcviewer mars: fix issues with Eclipse Mars  Some issues when porting to Eclipse mars: somehow Eclipse mars creates dummy ScopeView class which has no tree nor database (even the Display is null !!). I have no idea how this class is instantiated. Since the class has no tree  it will raise exception when activate/disactivate debugging mode.
bug_after_refactoring: protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout gfymbreqlbljbpvtrcqq , boolean yokxdeuqxroezqedtapx ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , gfymbreqlbljbpvtrcqq , yokxdeuqxroezqedtapx ) ; } } } <s> protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout gfymbreqlbljbpvtrcqq , boolean yokxdeuqxroezqedtapx ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , gfymbreqlbljbpvtrcqq , yokxdeuqxroezqedtapx ) ; } } } <s> hpcviewer mars: fix issues with Eclipse Mars  Some issues when porting to Eclipse mars: somehow Eclipse mars creates dummy ScopeView class which has no tree nor database (even the Display is null !!). I have no idea how this class is instantiated. Since the class has no tree  it will raise exception when activate/disactivate debugging mode.
fix_before_refactoring: protected void initTableColumns ( boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , keepColumnStatus ) ; } } }
fix_after_refactoring: protected void initTableColumns ( boolean yokxdeuqxroezqedtapx ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , yokxdeuqxroezqedtapx ) ; } } }
× fix_prediction_before: protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout treeLayout , boolean keepColumnStatus ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , treeLayout , keepColumnStatus ) ; } }
× fix_prediction_after: protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout gfymbreqlbljbpvtrcqq , boolean yokxdeuqxroezqedtapx ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , gfymbreqlbljbpvtrcqq , yokxdeuqxroezqedtapx ) ; } }

line_index: 115
bug_before_refactoring: private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } <s> private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } <s> Merge pull request #212 from mbierlee/feat/fixerrorhightlighting  Fix DUB-based error highlighting
bug_after_refactoring: private static int getValidLineNumber ( int smaglsvlresrxxujjnlf , com.intellij.openapi.editor.Document ssggzyawefjeokccbpel ) { int smaglsvlresrxxujjnlfCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( ssggzyawefjeokccbpel ) ; smaglsvlresrxxujjnlf = smaglsvlresrxxujjnlf - 1 ; if ( smaglsvlresrxxujjnlf <= 0 ) { smaglsvlresrxxujjnlf = 1 ; } else if ( smaglsvlresrxxujjnlf >= smaglsvlresrxxujjnlfCount ) { smaglsvlresrxxujjnlf = smaglsvlresrxxujjnlfCount - 1 ; } return smaglsvlresrxxujjnlf ; } <s> private static int getValidLineNumber ( int smaglsvlresrxxujjnlf , com.intellij.openapi.editor.Document ssggzyawefjeokccbpel ) { int smaglsvlresrxxujjnlfCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( ssggzyawefjeokccbpel ) ; smaglsvlresrxxujjnlf = smaglsvlresrxxujjnlf - 1 ; if ( smaglsvlresrxxujjnlf <= 0 ) { smaglsvlresrxxujjnlf = 1 ; } else if ( smaglsvlresrxxujjnlf >= smaglsvlresrxxujjnlfCount ) { smaglsvlresrxxujjnlf = smaglsvlresrxxujjnlfCount - 1 ; } return smaglsvlresrxxujjnlf ; } <s> Merge pull request #212 from mbierlee/feat/fixerrorhightlighting  Fix DUB-based error highlighting
fix_before_refactoring: private int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; }
fix_after_refactoring: private int getValidLineNumber ( int smaglsvlresrxxujjnlf , com.intellij.openapi.editor.Document ssggzyawefjeokccbpel ) { int smaglsvlresrxxujjnlfCount = getDocumentLineCount ( ssggzyawefjeokccbpel ) ; smaglsvlresrxxujjnlf = smaglsvlresrxxujjnlf - 1 ; if ( smaglsvlresrxxujjnlf <= 0 ) { smaglsvlresrxxujjnlf = 1 ; } else if ( smaglsvlresrxxujjnlf >= smaglsvlresrxxujjnlfCount ) { smaglsvlresrxxujjnlf = smaglsvlresrxxujjnlfCount - 1 ; } return smaglsvlresrxxujjnlf ; }
× fix_prediction_before: public static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; }
× fix_prediction_after: public static int getValidLineNumber ( int smaglsvlresrxxujjnlf , com.intellij.openapi.editor.Document ssggzyawefjeokccbpel ) { int smaglsvlresrxxujjnlfCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( ssggzyawefjeokccbpel ) ; smaglsvlresrxxujjnlf = smaglsvlresrxxujjnlf - 1 ; if ( smaglsvlresrxxujjnlf <= 0 ) { smaglsvlresrxxujjnlf = 1 ; } else if ( smaglsvlresrxxujjnlf >= smaglsvlresrxxujjnlfCount ) { smaglsvlresrxxujjnlf = smaglsvlresrxxujjnlfCount - 1 ; } return smaglsvlresrxxujjnlf ; }

line_index: 116
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } <s> @ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } <s> ZAP: bug fix and Mom  I am Designer
bug_after_refactoring: @ java.lang.Override public void onClick ( android.epuffmxtgeohwuzoyymc.View epuffmxtgeohwuzoyymc ) { switch ( epuffmxtgeohwuzoyymc . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } <s> @ java.lang.Override public void onClick ( android.epuffmxtgeohwuzoyymc.View epuffmxtgeohwuzoyymc ) { switch ( epuffmxtgeohwuzoyymc . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } <s> ZAP: bug fix and Mom  I am Designer
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( album ) != null ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.epuffmxtgeohwuzoyymc.View epuffmxtgeohwuzoyymc ) { if ( ( album ) != null ) { switch ( epuffmxtgeohwuzoyymc . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; break; } }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.epuffmxtgeohwuzoyymc.View epuffmxtgeohwuzoyymc ) { if ( ( epuffmxtgeohwuzoyymc . getId () ) != null ) { switch ( epuffmxtgeohwuzoyymc . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } }

line_index: 118
bug_before_refactoring: public int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; } <s> public int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; } <s> Fixes for the issues with multiple files with same name within a project.
bug_after_refactoring: public int getIndexDoc ( final java.lang.String kfvdwskqrarqadtbcymz ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( kfvdwskqrarqadtbcymz ) ) return di ; } return - 1 ; } <s> public int getIndexDoc ( final java.lang.String kfvdwskqrarqadtbcymz ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( kfvdwskqrarqadtbcymz ) ) return di ; } return - 1 ; } <s> Fixes for the issues with multiple files with same name within a project.
fix_before_refactoring: public int getIndexDoc ( final java.lang.String filePath ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( filePath ) ) return di ; } return - 1 ; }
fix_after_refactoring: public int getIndexDoc ( final java.lang.String filePath ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( filePath ) ) return di ; } return - 1 ; }
× fix_prediction_before: public int getIndexDoc ( final java.lang.String fileName ) { synchronized ( this ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; } }
× fix_prediction_after: public int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; }

line_index: 119
bug_before_refactoring: @ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } } <s> @ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } } <s> End viewpool experiment | load ad in empty list (Invisible) for cache | bugfix | rearrange code
bug_after_refactoring: @ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article ggkoxhsquowrngltlbpb ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : ggkoxhsquowrngltlbpbs ) { if ( a . equals ( ggkoxhsquowrngltlbpb ) ) { ggkoxhsquowrngltlbpbs . remove ( a ) ; break; } } if ( ggkoxhsquowrngltlbpbs . isEmpty () ) { ggkoxhsquowrngltlbpbsFragment . showNoSavedArticlesContainer ( true ) ; } ggkoxhsquowrngltlbpbsFragment . notifyArticlesChanged ( true , true ) ; } } <s> @ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article ggkoxhsquowrngltlbpb ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : ggkoxhsquowrngltlbpbs ) { if ( a . equals ( ggkoxhsquowrngltlbpb ) ) { ggkoxhsquowrngltlbpbs . remove ( a ) ; break; } } if ( ggkoxhsquowrngltlbpbs . isEmpty () ) { ggkoxhsquowrngltlbpbsFragment . showNoSavedArticlesContainer ( true ) ; } ggkoxhsquowrngltlbpbsFragment . notifyArticlesChanged ( true , true ) ; } } <s> End viewpool experiment | load ad in empty list (Invisible) for cache | bugfix | rearrange code
fix_before_refactoring: private void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } }
fix_after_refactoring: private void removeSavedArticle ( com.rocdev.guardianreader.models.Article ggkoxhsquowrngltlbpb ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : ggkoxhsquowrngltlbpbs ) { if ( a . equals ( ggkoxhsquowrngltlbpb ) ) { ggkoxhsquowrngltlbpbs . remove ( a ) ; break; } } if ( ggkoxhsquowrngltlbpbs . isEmpty () ) { ggkoxhsquowrngltlbpbsFragment . showNoSavedArticlesContainer ( true ) ; } ggkoxhsquowrngltlbpbsFragment . notifyArticlesChanged ( true , true ) ; } }
× fix_prediction_before: @ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; }
× fix_prediction_after: @ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article ggkoxhsquowrngltlbpb ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : ggkoxhsquowrngltlbpbs ) { if ( a . equals ( ggkoxhsquowrngltlbpb ) ) { ggkoxhsquowrngltlbpbs . remove ( a ) ; break; } } if ( ggkoxhsquowrngltlbpbs . isEmpty () ) { ggkoxhsquowrngltlbpbsFragment . showNoSavedArticlesContainer ( true ) ; } ggkoxhsquowrngltlbpbsFragment . notifyArticlesChanged ( true , true ) ; } }

line_index: 120
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } } <s> Addictions and everything is being retrieved now upon Login Calendar Activity fixeddashboad button problem Renamed Views Addictions Deletion is Dynamic now but ONLY inside the ListViewAdapters  Map Adapters bulbs are working also Addictions are being added dynamically too now Deleting user event/ven/org/artist needs fixing?
bug_after_refactoring: @ jaqtppcypvacclcbdasutea.lang.Oqtppcypvacclcbdasuteerride public qtppcypvacclcbdasuteoid onClick ( android.qtppcypvacclcbdasuteiew.View qtppcypvacclcbdasute ) { jaqtppcypvacclcbdasutea.lang.String x = retrieqtppcypvacclcbdasuteeMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActiqtppcypvacclcbdasuteity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remoqtppcypvacclcbdasutee ( position ) ; notifyDataSetChanged () ; } } <s> @ jaqtppcypvacclcbdasutea.lang.Oqtppcypvacclcbdasuteerride public qtppcypvacclcbdasuteoid onClick ( android.qtppcypvacclcbdasuteiew.View qtppcypvacclcbdasute ) { jaqtppcypvacclcbdasutea.lang.String x = retrieqtppcypvacclcbdasuteeMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActiqtppcypvacclcbdasuteity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; if ( x . equals ( "Artist Deleted!" ) ) { dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remoqtppcypvacclcbdasutee ( position ) ; notifyDataSetChanged () ; } } <s> Addictions and everything is being retrieved now upon Login Calendar Activity fixeddashboad button problem Renamed Views Addictions Deletion is Dynamic now but ONLY inside the ListViewAdapters  Map Adapters bulbs are working also Addictions are being added dynamically too now Deleting user event/ven/org/artist needs fixing?
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
fix_after_refactoring: @ jaqtppcypvacclcbdasutea.lang.Oqtppcypvacclcbdasuteerride public qtppcypvacclcbdasuteoid onClick ( android.qtppcypvacclcbdasuteiew.View qtppcypvacclcbdasute ) { jaqtppcypvacclcbdasutea.lang.String x = retrieqtppcypvacclcbdasuteeMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActiqtppcypvacclcbdasuteity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remoqtppcypvacclcbdasutee ( position ) ; notifyDataSetChanged () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
× fix_prediction_after: @ jaqtppcypvacclcbdasutea.lang.Oqtppcypvacclcbdasuteerride public qtppcypvacclcbdasuteoid onClick ( android.qtppcypvacclcbdasuteiew.View qtppcypvacclcbdasute ) { jaqtppcypvacclcbdasutea.lang.String x = retrieqtppcypvacclcbdasuteeMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActiqtppcypvacclcbdasuteity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remoqtppcypvacclcbdasutee ( position ) ; notifyDataSetChanged () ; }

line_index: 121
bug_before_refactoring: public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; } <s> public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; } <s> Bug fix: remove dance sequence now correctly implemented
bug_after_refactoring: public void removeDanceSequence ( T snkrgmkzatrfedobhgjt ) { java.util.UUID danceSequenceID = snkrgmkzatrfedobhgjt . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; } <s> public void removeDanceSequence ( T snkrgmkzatrfedobhgjt ) { java.util.UUID danceSequenceID = snkrgmkzatrfedobhgjt . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; } <s> Bug fix: remove dance sequence now correctly implemented
fix_before_refactoring: public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; removeDanceSequence ( danceSequenceID , selectedBeatElem . getBeatPosition () , ( ( selectedBeatElem . getBeatPosition () ) + ( mDanceSequences . get ( danceSequenceID ) . getLength () ) ) ) ; }
fix_after_refactoring: public void removeDanceSequence ( T snkrgmkzatrfedobhgjt ) { java.util.UUID danceSequenceID = snkrgmkzatrfedobhgjt . getDanceSequenceId () ; removeDanceSequence ( danceSequenceID , snkrgmkzatrfedobhgjt . getBeatPosition () , ( ( snkrgmkzatrfedobhgjt . getBeatPosition () ) + ( mDanceSequences . get ( danceSequenceID ) . getLength () ) ) ) ; }
× fix_prediction_before: public boolean removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; return true ; }
× fix_prediction_after: public boolean removeDanceSequence ( T snkrgmkzatrfedobhgjt ) { java.util.UUID danceSequenceID = snkrgmkzatrfedobhgjt . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; return true ; }

line_index: 122
bug_before_refactoring: public void addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; } <s> public void addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; } <s> Added view Health Paramters and View Patients. Some bug fixes as well
bug_after_refactoring: public void addDoctor ( com.mycompany.dao.Doctor hhshvmoxvqljaflkhizb ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( hhshvmoxvqljaflkhizb ) ; session . getTransaction () . commit () ; } <s> public void addDoctor ( com.mycompany.dao.Doctor hhshvmoxvqljaflkhizb ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( hhshvmoxvqljaflkhizb ) ; session . getTransaction () . commit () ; } <s> Added view Health Paramters and View Patients. Some bug fixes as well
fix_before_refactoring: public com.mycompany.dao.Doctor addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; return doctor ; }
fix_after_refactoring: public com.mycompany.dao.Doctor addDoctor ( com.mycompany.dao.Doctor hhshvmoxvqljaflkhizb ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( hhshvmoxvqljaflkhizb ) ; session . getTransaction () . commit () ; return hhshvmoxvqljaflkhizb ; }
× fix_prediction_before: public void addDoctor ( com.mycompany.dao.Doctor doctor ) { if ( doctor != null ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; } }
× fix_prediction_after: public void addDoctor ( com.mycompany.dao.Doctor hhshvmoxvqljaflkhizb ) { if ( ( hhshvmoxvqljaflkhizb . getId () ) != null ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( hhshvmoxvqljaflkhizb ) ; session . getTransaction () . commit () ; } }

line_index: 124
bug_before_refactoring: private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; } <s> private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; } <s> Bugfix and refactoring.
bug_after_refactoring: private java.lang.String createFullUrl ( final java.lang.String peapwexmlhbycxlnzhro , final java.util.Map < java.lang.String , java.lang.String > kjkymysfrhpznezkdtow ) { java.lang.String fullUrl = peapwexmlhbycxlnzhro ; if ( kjkymysfrhpznezkdtow != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : kjkymysfrhpznezkdtow . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; } <s> private java.lang.String createFullUrl ( final java.lang.String peapwexmlhbycxlnzhro , final java.util.Map < java.lang.String , java.lang.String > kjkymysfrhpznezkdtow ) { java.lang.String fullUrl = peapwexmlhbycxlnzhro ; if ( kjkymysfrhpznezkdtow != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : kjkymysfrhpznezkdtow . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; } <s> Bugfix and refactoring.
fix_before_refactoring: private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.Object > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.Object > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () . toString () ) ; } } return enableRedirect ( fullUrl ) ; }
fix_after_refactoring: private java.lang.String createFullUrl ( final java.lang.String peapwexmlhbycxlnzhro , final java.util.Map < java.lang.String , java.lang.Object > kjkymysfrhpznezkdtow ) { java.lang.String fullUrl = peapwexmlhbycxlnzhro ; if ( kjkymysfrhpznezkdtow != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.Object > paramEntry : kjkymysfrhpznezkdtow . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () . toString () ) ; } } return enableRedirect ( fullUrl ) ; }
× fix_prediction_before: private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; }
× fix_prediction_after: private java.lang.String createFullUrl ( final java.lang.String peapwexmlhbycxlnzhro , final java.util.Map < java.lang.String , java.lang.String > kjkymysfrhpznezkdtow ) { java.lang.String fullUrl = peapwexmlhbycxlnzhro ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : kjkymysfrhpznezkdtow . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } return enableRedirect ( fullUrl ) ; }

line_index: 125
bug_before_refactoring: @ java.lang.Override public double curve ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; } <s> @ java.lang.Override public double curve ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; } <s> some bugfix
bug_after_refactoring: @ java.lang.Override public double curve ( double irnzoejyppirulwvrfrk ) { double amounirnzoejyppirulwvrfrk = ( irnzoejyppirulwvrfrkhis . amounirnzoejyppirulwvrfrk ) * 1.525 ; if ( ( irnzoejyppirulwvrfrk *= 2 ) < 1 ) { reirnzoejyppirulwvrfrkurn 0.5 * ( ( irnzoejyppirulwvrfrk * irnzoejyppirulwvrfrk ) * ( ( ( amounirnzoejyppirulwvrfrk + 1 ) * irnzoejyppirulwvrfrk ) - amounirnzoejyppirulwvrfrk ) ) ; } reirnzoejyppirulwvrfrkurn 0.5 * ( ( ( ( irnzoejyppirulwvrfrk -= 2 ) * irnzoejyppirulwvrfrk ) * ( ( ( amounirnzoejyppirulwvrfrk + 1 ) * irnzoejyppirulwvrfrk ) + amounirnzoejyppirulwvrfrk ) ) + 2 ) ; } <s> @ java.lang.Override public double curve ( double irnzoejyppirulwvrfrk ) { double amounirnzoejyppirulwvrfrk = ( irnzoejyppirulwvrfrkhis . amounirnzoejyppirulwvrfrk ) * 1.525 ; if ( ( irnzoejyppirulwvrfrk *= 2 ) < 1 ) { reirnzoejyppirulwvrfrkurn 0.5 * ( ( irnzoejyppirulwvrfrk * irnzoejyppirulwvrfrk ) * ( ( ( amounirnzoejyppirulwvrfrk + 1 ) * irnzoejyppirulwvrfrk ) - amounirnzoejyppirulwvrfrk ) ) ; } reirnzoejyppirulwvrfrkurn 0.5 * ( ( ( ( irnzoejyppirulwvrfrk -= 2 ) * irnzoejyppirulwvrfrk ) * ( ( ( amounirnzoejyppirulwvrfrk + 1 ) * irnzoejyppirulwvrfrk ) + amounirnzoejyppirulwvrfrk ) ) + 2 ) ; } <s> some bugfix
fix_before_refactoring: @ java.lang.Override public double curve ( double t ) { if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( ( amount ) + 1 ) * t ) - ( amount ) ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( ( amount ) + 1 ) * t ) + ( amount ) ) ) + 2 ) ; }
fix_after_refactoring: @ java.lang.Override public double curve ( double irnzoejyppirulwvrfrk ) { if ( ( irnzoejyppirulwvrfrk *= 2 ) < 1 ) { reirnzoejyppirulwvrfrkurn 0.5 * ( ( irnzoejyppirulwvrfrk * irnzoejyppirulwvrfrk ) * ( ( ( ( amounirnzoejyppirulwvrfrk ) + 1 ) * irnzoejyppirulwvrfrk ) - ( amounirnzoejyppirulwvrfrk ) ) ) ; } reirnzoejyppirulwvrfrkurn 0.5 * ( ( ( ( irnzoejyppirulwvrfrk -= 2 ) * irnzoejyppirulwvrfrk ) * ( ( ( ( amounirnzoejyppirulwvrfrk ) + 1 ) * irnzoejyppirulwvrfrk ) + ( amounirnzoejyppirulwvrfrk ) ) ) + 2 ) ; }
× fix_prediction_before: @ java.lang.Override public double curve ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; }
× fix_prediction_after: @ java.lang.Override public double curve ( double irnzoejyppirulwvrfrk ) { double amounirnzoejyppirulwvrfrk = ( irnzoejyppirulwvrfrkhis . amounirnzoejyppirulwvrfrk ) * 1.525 ; if ( ( irnzoejyppirulwvrfrk *= 2 ) < 1 ) { reirnzoejyppirirulwvrfrkurn 0.5 * ( ( irnzoejyppirulwvrfrk * irnzoejyppirulwvrfrk ) * ( ( ( amounirnzoejyppirulwvrfrk + 1 ) * irnzoejyppirulwvrfrk ) - amounirnzoejyppirulwvrfrk ) ) ; } reirnzoejyppiriririrulwvrfrkurn 0.5 * ( ( ( ( irnzoejyppiririrulwvrfrk -= 2 ) * irnzoejyppirirulwvrfrk ) * ( ( ( amounirnzoejyppirulwvrfrk + 1 ) * irnzoejyppirulwvrfrk ) + amounirnzoejyppirulwvrfrk ) ) + 2 ) ; }

line_index: 126
bug_before_refactoring: private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } <s> private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } <s> Fix bug in non-update of parameter numbers
bug_after_refactoring: private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int yhsspixpetihivttzhvi ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ yhsspixpetihivttzhvi ] ; for ( int i = 0 ; i < yhsspixpetihivttzhvi ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } <s> private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int yhsspixpetihivttzhvi ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ yhsspixpetihivttzhvi ] ; for ( int i = 0 ; i < yhsspixpetihivttzhvi ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } <s> Fix bug in non-update of parameter numbers
fix_before_refactoring: protected static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; }
fix_after_refactoring: protected static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int yhsspixpetihivttzhvi ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ yhsspixpetihivttzhvi ] ; for ( int i = 0 ; i < yhsspixpetihivttzhvi ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; }
× fix_prediction_before: public static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; }
× fix_prediction_after: public static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int yhsspixpetihivttzhvi ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ yhsspixpetihivttzhvi ] ; for ( int i = 0 ; i < yhsspixpetihivttzhvi ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; }

line_index: 129
bug_before_refactoring: @ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return; } } moneyItr . add ( money ) ; } <s> @ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return; } } moneyItr . add ( money ) ; } <s> Fixed Money bug
bug_after_refactoring: @ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money dnazwgwggqniejklvbrh ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > dnazwgwggqniejklvbrhItr = list . listIterator () ; while ( dnazwgwggqniejklvbrhItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( dnazwgwggqniejklvbrhItr . next () ) ) ; if ( aMoney . isSameType ( dnazwgwggqniejklvbrh ) ) { aMoney . add ( dnazwgwggqniejklvbrh ) ; if ( aMoney . isEmpty () ) { dnazwgwggqniejklvbrhItr . remove () ; } return; } } dnazwgwggqniejklvbrhItr . add ( dnazwgwggqniejklvbrh ) ; } <s> @ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money dnazwgwggqniejklvbrh ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > dnazwgwggqniejklvbrhItr = list . listIterator () ; while ( dnazwgwggqniejklvbrhItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( dnazwgwggqniejklvbrhItr . next () ) ) ; if ( aMoney . isSameType ( dnazwgwggqniejklvbrh ) ) { aMoney . add ( dnazwgwggqniejklvbrh ) ; if ( aMoney . isEmpty () ) { dnazwgwggqniejklvbrhItr . remove () ; } return; } } dnazwgwggqniejklvbrhItr . add ( dnazwgwggqniejklvbrh ) ; } <s> Fixed Money bug
fix_before_refactoring: @ java.lang.Override public boolean add ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return true ; } } list . add ( new com.ivstuart.tmud.person.carried.Money ( money ) ) ; return false ; }
fix_after_refactoring: @ java.lang.Override public boolean add ( com.ivstuart.tmud.person.carried.Money dnazwgwggqniejklvbrh ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > dnazwgwggqniejklvbrhItr = list . listIterator () ; while ( dnazwgwggqniejklvbrhItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( dnazwgwggqniejklvbrhItr . next () ) ) ; if ( aMoney . isSameType ( dnazwgwggqniejklvbrh ) ) { aMoney . add ( dnazwgwggqniejklvbrh ) ; if ( aMoney . isEmpty () ) { dnazwgwggqniejklvbrhItr . remove () ; } return true ; } } list . add ( new com.ivstuart.tmud.person.carried.Money ( dnazwgwggqniejklvbrh ) ) ; return false ; }
× fix_prediction_before: @ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return; } } }
× fix_prediction_after: @ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money dnazwgwggqniejklvbrh ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > dnazwgwggqniejklvbrhItr = list . listIterator () ; while ( dnazwgwggqniejklvbrhItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( dnazwgwggqniejklvbrhItr . next () ) ) ; if ( aMoney . isSameType ( dnazwgwggqniejklvbrh ) ) { aMoney . add ( dnazwgwggqniejklvbrh ) ; if ( aMoney . isEmpty () ) { dnazwgwggqniejklvbrhItr . remove () ; } return; } } }

line_index: 130
bug_before_refactoring: boolean conditionIsTrue ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } <s> boolean conditionIsTrue ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } <s> Fixed bug in check class where CUP is making comparisons using player data
bug_after_refactoring: boolean conditionIsTrue ( utilties.models.Game kcdllhiscknjmaylgkrr ) { int data1 = getData ( this . data1 , kcdllhiscknjmaylgkrr ) ; int data2 = getData ( this . data2 , kcdllhiscknjmaylgkrr ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } <s> boolean conditionIsTrue ( utilties.models.Game kcdllhiscknjmaylgkrr ) { int data1 = getData ( this . data1 , kcdllhiscknjmaylgkrr ) ; int data2 = getData ( this . data2 , kcdllhiscknjmaylgkrr ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } <s> Fixed bug in check class where CUP is making comparisons using player data
fix_before_refactoring: boolean conditionIsTrue ( utilties.models.Game game , int id ) { int data1 = getData ( this . data1 , game , id ) ; int data2 = getData ( this . data2 , game , id ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } }
fix_after_refactoring: boolean conditionIsTrue ( utilties.models.Game kcdllhiscknjmaylgkrr , int id ) { int data1 = getData ( this . data1 , kcdllhiscknjmaylgkrr , id ) ; int data2 = getData ( this . data2 , kcdllhiscknjmaylgkrr , id ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } }
× fix_prediction_before: boolean conditionIsTrue ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case LESS_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } }
× fix_prediction_after: boolean conditionIsTrue () { int data1 = getData ( this . data1 , kcdllhiscknjmaylgkrr ) ; int data2 = getData ( this . data2 , kcdllhiscknjmaylgkrr ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case LESS_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } }

line_index: 131
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long startTS , backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( startTS , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long startTS , backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( startTS , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } <s> Fixed stat bug
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long ysxisikhdesyoxpooldg , backtype.storm.tuple.Tuple xsthdqguxtkojutgcuso ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( ysxisikhdesyoxpooldg , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , xsthdqguxtkojutgcuso . getSourceTask () , xsthdqguxtkojutgcuso . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long ysxisikhdesyoxpooldg , backtype.storm.tuple.Tuple xsthdqguxtkojutgcuso ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( ysxisikhdesyoxpooldg , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , xsthdqguxtkojutgcuso . getSourceTask () , xsthdqguxtkojutgcuso . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } <s> Fixed stat bug
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( backtype.storm.tuple.Tuple xsthdqguxtkojutgcuso ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , xsthdqguxtkojutgcuso . getSourceTask () , xsthdqguxtkojutgcuso . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long startTS , backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; process ( startTS , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; }
× fix_prediction_after: private void takeFromInternalBuffer ( long ysxisikhdesyoxpooldg , backtype.storm.tuple.Tuple xsthdqguxtkojutgcuso ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( ysxisikhdesyoxpooldg , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , xsthdqguxtkojutgcuso . getSourceTask () , xsthdqguxtkojutgcuso . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } }

line_index: 132
bug_before_refactoring: public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } <s> public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } <s> Fixed the same error printed multiple times; fixed reduction mechanism relaying on UD-deprel from not yet transformed nodes.
bug_after_refactoring: public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node wchribthraxqgbiauruy ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( wchribthraxqgbiauruy ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( wchribthraxqgbiauruy ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( wchribthraxqgbiauruy ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } <s> public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node wchribthraxqgbiauruy ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( wchribthraxqgbiauruy ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( wchribthraxqgbiauruy ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( wchribthraxqgbiauruy ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } <s> Fixed the same error printed multiple times; fixed reduction mechanism relaying on UD-deprel from not yet transformed nodes.
fix_before_refactoring: public lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; }
fix_after_refactoring: public lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node wchribthraxqgbiauruy ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( wchribthraxqgbiauruy ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( wchribthraxqgbiauruy ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; warn ( wchribthraxqgbiauruy ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; }
× fix_prediction_before: public lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*| transaction|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; }
× fix_prediction_after: public lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node wchribthraxqgbiauruy ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( wchribthraxqgbiauruy ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( wchribthraxqgbiauruy ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( wchribthraxqgbiauruy ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; }

line_index: 133
bug_before_refactoring: public void uiautomator_switcher ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK" ) ) { tap ( s ) ; } if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) {} } <s> public void uiautomator_switcher ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK" ) ) { tap ( s ) ; } if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) {} } <s> Update UiAutomatorFunctions.java  Fixed a bug so that it can click on ListView items.
bug_after_refactoring: public void uiautomator_bfgnadtignkjkvaytumuwitcher ( java.lang.String addbcicixvlojzccyhja , edu.wm.tranbfgnadtignkjkvaytumulationengine.clabfgnadtignkjkvaytumubfgnadtignkjkvaytumuebfgnadtignkjkvaytumu.StepTebfgnadtignkjkvaytumutCabfgnadtignkjkvaytumue bfgnadtignkjkvaytumu ) throwbfgnadtignkjkvaytumu java.lang.Exception { if ( addbcicixvlojzccyhja . equalbfgnadtignkjkvaytumu ( "CLICK" ) ) { tap ( bfgnadtignkjkvaytumu ) ; } if ( addbcicixvlojzccyhja . equalbfgnadtignkjkvaytumu ( "LONG_CLICK" ) ) { longTap ( bfgnadtignkjkvaytumu ) ; } if ( addbcicixvlojzccyhja . equalbfgnadtignkjkvaytumu ( "TYPE" ) ) {} } <s> public void uiautomator_bfgnadtignkjkvaytumuwitcher ( java.lang.String addbcicixvlojzccyhja , edu.wm.tranbfgnadtignkjkvaytumulationengine.clabfgnadtignkjkvaytumubfgnadtignkjkvaytumuebfgnadtignkjkvaytumu.StepTebfgnadtignkjkvaytumutCabfgnadtignkjkvaytumue bfgnadtignkjkvaytumu ) throwbfgnadtignkjkvaytumu java.lang.Exception { if ( addbcicixvlojzccyhja . equalbfgnadtignkjkvaytumu ( "CLICK" ) ) { tap ( bfgnadtignkjkvaytumu ) ; } if ( addbcicixvlojzccyhja . equalbfgnadtignkjkvaytumu ( "LONG_CLICK" ) ) { longTap ( bfgnadtignkjkvaytumu ) ; } if ( addbcicixvlojzccyhja . equalbfgnadtignkjkvaytumu ( "TYPE" ) ) {} } <s> Update UiAutomatorFunctions.java  Fixed a bug so that it can click on ListView items.
fix_before_refactoring: { type ( s ) ; }
fix_after_refactoring: { type ( bfgnadtignkjkvaytumu ) ; }
× fix_prediction_before: public void uiautomator_switcher ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK" ) ) { tap ( s ) ; } if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } }
× fix_prediction_after: public void uiautomator_bfgnadtignkjkvaytumuwitcher ( java.lang.String addbcicixvlojzccyhja , edu.wm.tranbfgnadtignkjkvaytumulationengine.clabfgnadtignkjkvaytumubfgnadtignkjkvaytumuebfgnadtignkjkvaytumu.StepTebfgnadtignkjkvaytumuebfgnadtignkjkvaytumu ) throwbfgnadtignkjkvaytumu java.lang.Exception { if ( addbcicixvlojzccyhja . equalbfgnadtignkjkvaytumu ( "CLICK" ) ) { tap ( bfgnadtignkjkvaytumu ) ; } if ( addbcicixvlojzccyhja . equalbfgnadtignkjkvaytumu ( "LONG_CLICK" ) ) { longTap ( bfgnadtignkjkvaytumu ) ; } if ( addbcicixvlojzccyhja . equalbfgnadtignkjkvaytumu ( "TYPE" ) ) {} }

line_index: 134
bug_before_refactoring: private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovarianceMatrix () ; } <s> private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovarianceMatrix () ; } <s> Refactoring of MCD combination code  tests and bug fixes. Parallel implementation now _completely_ agrees with default method
bug_after_refactoring: private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.jwxdzzjlktmotsqupighmodel.HasMetrics > jwxdzzjlktmotsqupigh ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( jwxdzzjlktmotsqupigh . size () , p ) ; int idx = 0 ; for ( macrobase.jwxdzzjlktmotsqupighmodel.HasMetrics d : jwxdzzjlktmotsqupigh ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovarianceMatrix () ; } <s> private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.jwxdzzjlktmotsqupighmodel.HasMetrics > jwxdzzjlktmotsqupigh ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( jwxdzzjlktmotsqupigh . size () , p ) ; int idx = 0 ; for ( macrobase.jwxdzzjlktmotsqupighmodel.HasMetrics d : jwxdzzjlktmotsqupigh ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovarianceMatrix () ; } <s> Refactoring of MCD combination code  tests and bug fixes. Parallel implementation now _completely_ agrees with default method
fix_before_refactoring: public org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret , false ) . getCovarianceMatrix () ; }
fix_after_refactoring: public org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.jwxdzzjlktmotsqupighmodel.HasMetrics > jwxdzzjlktmotsqupigh ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( jwxdzzjlktmotsqupigh . size () , p ) ; int idx = 0 ; for ( macrobase.jwxdzzjlktmotsqupighmodel.HasMetrics d : jwxdzzjlktmotsqupigh ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret , false ) . getCovarianceMatrix () ; }
× fix_prediction_before: public org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovarianceMatrix () ; }
× fix_prediction_after: public org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.jwxdzzjlktmotsqupighmodel.HasMetrics > jwxdzzjlktmotsqupigh ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( jwxdzzjlktmotsqupigh . size () , p ) ; int idx = 0 ; for ( macrobase.jwxdzzjlktmotsqupighmodel.HasMetrics d : jwxdzzjlktmotsqupigh ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovarianceMatrix () ; }

line_index: 135
bug_before_refactoring: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.Long idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } <s> @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.Long idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } <s> Fixed bugs
bug_after_refactoring: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.Long zrcftbdnhhdkdvxwoehe ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( zrcftbdnhhdkdvxwoehe . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } <s> @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.Long zrcftbdnhhdkdvxwoehe ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( zrcftbdnhhdkdvxwoehe . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } <s> Fixed bugs
fix_before_refactoring: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.String idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; }
fix_after_refactoring: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.String zrcftbdnhhdkdvxwoehe ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( zrcftbdnhhdkdvxwoehe ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; }
× fix_prediction_before: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.Long idExcel ) throws java.lang.Exception { if ( idExcel != null ) { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } else { return null ; } }
× fix_prediction_after: @ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam ( required = false ) java.lang.Long zrcftbdnhhdkdvxwoehe ) throws java.lang.Exception { if ( zrcftbdnhhdkdvxwoehe != null ) { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( zrcftbdnhhdkdvxwoehe . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } return null ; }

line_index: 136
bug_before_refactoring: public void voteThreshold ( int downVotedTrack ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } <s> public void voteThreshold ( int downVotedTrack ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } <s> Fixed some issues in up/down voting
bug_after_refactoring: public void voteThreshold ( int twfkvdjxgmxslsixcrlq ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( twfkvdjxgmxslsixcrlq ) . upvoteList . size () ) ) - ( mQueueElementList . get ( twfkvdjxgmxslsixcrlq ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( twfkvdjxgmxslsixcrlq ) ; } } <s> public void voteThreshold ( int twfkvdjxgmxslsixcrlq ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( twfkvdjxgmxslsixcrlq ) . upvoteList . size () ) ) - ( mQueueElementList . get ( twfkvdjxgmxslsixcrlq ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( twfkvdjxgmxslsixcrlq ) ; } } <s> Fixed some issues in up/down voting
fix_before_refactoring: public void voteThreshold ( int downVotedTrack ) { if ( downVotedTrack < ( mQueueElementList . size () ) ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } }
fix_after_refactoring: public void voteThreshold ( int twfkvdjxgmxslsixcrlq ) { if ( twfkvdjxgmxslsixcrlq < ( mQueueElementList . size () ) ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( twfkvdjxgmxslsixcrlq ) . upvoteList . size () ) ) - ( mQueueElementList . get ( twfkvdjxgmxslsixcrlq ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( twfkvdjxgmxslsixcrlq ) ; } } }
× fix_prediction_before: public void voteThreshold ( int downVotedTrack ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } }
× fix_prediction_after: public void voteThreshold ( int twfkvdjxgmxslsixcrlq ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( twfkvdjxgmxslsixcrlq ) . upvoteList . size () ) ) - ( mQueueElementList . get ( twfkvdjxgmxslsixcrlq ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( twfkvdjxgmxslsixcrlq ) ; } }

line_index: 137
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; } <s> fixed issue #3
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . qpbkhqxaypbfkhquruvl ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , qpbkhqxaypbfkhquruvl.length ) ) ) ; for ( int i = 0 ; i < ( qpbkhqxaypbfkhquruvl.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( qpbkhqxaypbfkhquruvl [ i ] . getClass () ) ) ; } return parameterTypes ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . qpbkhqxaypbfkhquruvl ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , qpbkhqxaypbfkhquruvl.length ) ) ) ; for ( int i = 0 ; i < ( qpbkhqxaypbfkhquruvl.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( qpbkhqxaypbfkhquruvl [ i ] . getClass () ) ) ; } return parameterTypes ; } <s> fixed issue #3
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private static < T > java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private static < T > java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . qpbkhqxaypbfkhquruvl ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , qpbkhqxaypbfkhquruvl.length ) ) ) ; for ( int i = 0 ; i < ( qpbkhqxaypbfkhquruvl.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( qpbkhqxaypbfkhquruvl [ i ] . getClass () ) ) ; } return parameterTypes ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . qpbkhqxaypbfkhquruvl ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , qpbkhqxaypbfkhquruvl.length ) ) ) ; for ( int i = 0 ; i < ( qpbkhqxaypbfkhquruvl.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( qpbkhqxaypbfkhquruvl [ i ] . getClass () ) ) ; } return parameterTypes ; }

line_index: 138
bug_before_refactoring: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest , triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } <s> public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest , triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } <s> bugfixes
bug_after_refactoring: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean rlopnutxxqpaxkixhglu , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest siukmswlxgexbuaakkrm , boolean rqtauhkwwwrmgpocfxtq , boolean aidcnuyzykjxhubpqhsj ) { if ( rlopnutxxqpaxkixhglu || ( siukmswlxgexbuaakkrm != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( rlopnutxxqpaxkixhglu , siukmswlxgexbuaakkrm , aidcnuyzykjxhubpqhsj ) , rqtauhkwwwrmgpocfxtq ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } <s> public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean rlopnutxxqpaxkixhglu , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest siukmswlxgexbuaakkrm , boolean rqtauhkwwwrmgpocfxtq , boolean aidcnuyzykjxhubpqhsj ) { if ( rlopnutxxqpaxkixhglu || ( siukmswlxgexbuaakkrm != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( rlopnutxxqpaxkixhglu , siukmswlxgexbuaakkrm , aidcnuyzykjxhubpqhsj ) , rqtauhkwwwrmgpocfxtq ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } <s> bugfixes
fix_before_refactoring: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } }
fix_after_refactoring: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean rlopnutxxqpaxkixhglu , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest siukmswlxgexbuaakkrm , boolean rqtauhkwwwrmgpocfxtq ) { if ( rlopnutxxqpaxkixhglu || ( siukmswlxgexbuaakkrm != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( rlopnutxxqpaxkixhglu , siukmswlxgexbuaakkrm ) , rqtauhkwwwrmgpocfxtq ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } }
× fix_prediction_before: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest , triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } }
× fix_prediction_after: public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean rlopnutxxqpaxkixhglu , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest siukmswlxgexbuaakkrm , boolean rqtauhkwwwrmgpocfxtq , boolean aidcnuyzykjxhubpqhsj ) { if ( rlopnutxxqpaxkixhglu || ( siukmswlxgexbuaakkrm != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( rlopnutxxqpaxkixhglu , siukmswlxgexbuaakkrm , aidcnuyzykjxhubpqhsj ) , rqtauhkwwwrmgpocfxtq ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } }

line_index: 139
bug_before_refactoring: public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; } <s> public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; } <s> - fixed some errors  now getting DailyStatistics insted of DailyStatisticsForSite
bug_after_refactoring: public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int bwuyboqdtvvobvlchxqy , java.util.Date pjnscvnyemdixvsiyudz , java.util.Date unoqjqpvgxzskjiuxevd ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( pjnscvnyemdixvsiyudz , unoqjqpvgxzskjiuxevd ) ; dailyStats = jHelperDailyStats . getDailyStats ( pjnscvnyemdixvsiyudz , unoqjqpvgxzskjiuxevd ) ; } return dailyStatsForSite ; } <s> public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int bwuyboqdtvvobvlchxqy , java.util.Date pjnscvnyemdixvsiyudz , java.util.Date unoqjqpvgxzskjiuxevd ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( pjnscvnyemdixvsiyudz , unoqjqpvgxzskjiuxevd ) ; dailyStats = jHelperDailyStats . getDailyStats ( pjnscvnyemdixvsiyudz , unoqjqpvgxzskjiuxevd ) ; } return dailyStatsForSite ; } <s> - fixed some errors  now getting DailyStatistics insted of DailyStatisticsForSite
fix_before_refactoring: public com.example.alex.androidclient.models.DailyStatistics getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; com.example.alex.androidclient.models.DailyStatistics dailyStatsForSite = null ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; }
fix_after_refactoring: public com.example.alex.androidclient.models.DailyStatistics getDailyStatisticsForSite ( int bwuyboqdtvvobvlchxqy , java.util.Date pjnscvnyemdixvsiyudz , java.util.Date unoqjqpvgxzskjiuxevd ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; com.example.alex.androidclient.models.DailyStatistics dailyStatsForSite = null ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( pjnscvnyemdixvsiyudz , unoqjqpvgxzskjiuxevd ) ; dailyStats = jHelperDailyStats . getDailyStats ( pjnscvnyemdixvsiyudz , unoqjqpvgxzskjiuxevd ) ; } return dailyStatsForSite ; }
× fix_prediction_before: public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; }
× fix_prediction_after: public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int bwuyboqdtvvobvlchxqy , java.util.Date pjnscvnyemdixvsiyudz , java.util.Date unoqjqpvgxzskjiuxevd ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( pjnscvnyemdixvsiyudz , unoqjqpvgxzskjiuxevd ) ; dailyStats = jHelperDailyStats . getDailyStats ( pjnscvnyemdixvsiyudz , unoqjqpvgxzskjiuxevd ) ; return dailyStatsForSite ; }

line_index: 140
bug_before_refactoring: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId , org.springframework.ui.Model model ) { if ( bookId > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } <s> @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId , org.springframework.ui.Model model ) { if ( bookId > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } <s> fixed missing contextPath and minor bugs
bug_after_refactoring: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long ndvfgcnrihyimdrwplhp , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long zgfjulirfyuiwkxpkcua , org.springframework.ui.Model omhxqufncmwidgrwrnxp ) { if ( ndvfgcnrihyimdrwplhp > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( ndvfgcnrihyimdrwplhp ) ; omhxqufncmwidgrwrnxp . addAttribute ( "book" , book ) ; } if ( zgfjulirfyuiwkxpkcua > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( zgfjulirfyuiwkxpkcua ) ; omhxqufncmwidgrwrnxp . addAttribute ( "member" , member ) ; } omhxqufncmwidgrwrnxp . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } <s> @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long ndvfgcnrihyimdrwplhp , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long zgfjulirfyuiwkxpkcua , org.springframework.ui.Model omhxqufncmwidgrwrnxp ) { if ( ndvfgcnrihyimdrwplhp > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( ndvfgcnrihyimdrwplhp ) ; omhxqufncmwidgrwrnxp . addAttribute ( "book" , book ) ; } if ( zgfjulirfyuiwkxpkcua > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( zgfjulirfyuiwkxpkcua ) ; omhxqufncmwidgrwrnxp . addAttribute ( "member" , member ) ; } omhxqufncmwidgrwrnxp . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } <s> fixed missing contextPath and minor bugs
fix_before_refactoring: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long memberId , org.springframework.ui.Model model ) { if ( bookId != null ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId != null ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; }
fix_after_refactoring: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long ndvfgcnrihyimdrwplhp , @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long zgfjulirfyuiwkxpkcua , org.springframework.ui.Model omhxqufncmwidgrwrnxp ) { if ( ndvfgcnrihyimdrwplhp != null ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( ndvfgcnrihyimdrwplhp ) ; omhxqufncmwidgrwrnxp . addAttribute ( "book" , book ) ; } if ( zgfjulirfyuiwkxpkcua != null ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( zgfjulirfyuiwkxpkcua ) ; omhxqufncmwidgrwrnxp . addAttribute ( "member" , member ) ; } omhxqufncmwidgrwrnxp . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; }
× fix_prediction_before: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId , org.springframework.ui.Model model ) { if ( bookId > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; }
× fix_prediction_after: @ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long ndvfgcnrihyimdrwplhp , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long zgfjulirfyuiwkxpkcua , org.springframework.ui.Model omhxqufncmwidgrwrnxp ) { if ( ndvfgcncnrihyimdrwplhp > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( ndvfgcncnrihyimdrwplhp ) ; omhxqufncmwidgrwrnxp . addAttribute ( "book" , book ) ; } if ( zgfjulirfyuiwkxpkcua > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( zgfjulirfyuiwkxpkcua ) ; omhxqufncmwidgrwrnxp . addAttribute ( "member" , member ) ; } omhxqufncmwidgrwrnxp . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; }

line_index: 141
bug_before_refactoring: private void fillCart ( int elementPosition , int commandCount ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } <s> private void fillCart ( int elementPosition , int commandCount ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } <s> Bugs fixed in command.java when delating item from differnt view
bug_after_refactoring: private void fillCart ( int rzoswilqnnjemjzsymkr , int dwetepnuagxsihipngrn ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( dwetepnuagxsihipngrn ) . get ( rzoswilqnnjemjzsymkr ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( rzoswilqnnjemjzsymkr , dwetepnuagxsihipngrn ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } <s> private void fillCart ( int rzoswilqnnjemjzsymkr , int dwetepnuagxsihipngrn ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( dwetepnuagxsihipngrn ) . get ( rzoswilqnnjemjzsymkr ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( rzoswilqnnjemjzsymkr , dwetepnuagxsihipngrn ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } <s> Bugs fixed in command.java when delating item from differnt view
fix_before_refactoring: private void fillCart ( int elementPosition , int commandCount , java.lang.String type ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount , type ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount , type ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; }
fix_after_refactoring: private void fillCart ( int rzoswilqnnjemjzsymkr , int dwetepnuagxsihipngrn , java.lang.String type ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( dwetepnuagxsihipngrn , type ) . get ( rzoswilqnnjemjzsymkr ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( rzoswilqnnjemjzsymkr , dwetepnuagxsihipngrn , type ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; }
× fix_prediction_before: private void fillCart ( int elementPosition , int commandCount ) { if ( inCart ( elementPosition , commandCount ) ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; gridAdapterMyCommand . dataGetter () . remove ( POS ) ; gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } }
× fix_prediction_after: protected void fillCart ( int rzoswilqnnjemjzsymkr , int dwetepnuagxsihipngrn ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( dwetepnuagxsihipngrn ) . get ( rzoswilqnnjemjzsymkr ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( rzoswilqnnjemjzsymkr , dwetepnuagxsihipngrn ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; }

line_index: 143
bug_before_refactoring: private void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } } <s> private void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } } <s> Needed to fix typo errors from previous merge. Aswell as fixed drawing tile error
bug_after_refactoring: private void initBlocks ( android.content.Context dzgydisqgqsaenwqdhxp ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( dzgydisqgqsaenwqdhxp ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } } <s> private void initBlocks ( android.content.Context dzgydisqgqsaenwqdhxp ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( dzgydisqgqsaenwqdhxp ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } } <s> Needed to fix typo errors from previous merge. Aswell as fixed drawing tile error
fix_before_refactoring: private void initBlocks ( android.content.Context context ) { for ( int x = 0 ; x <= ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ; x ++ ) { for ( int y = 0 ; y < ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ; y ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; block . setXPosition ( x ) ; block . setYPosition ( y ) ; blocks . add ( block ) ; } } }
fix_after_refactoring: private void initBlocks ( android.content.Context dzgydisqgqsaenwqdhxp ) { for ( int x = 0 ; x <= ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ; x ++ ) { for ( int y = 0 ; y < ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ; y ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( dzgydisqgqsaenwqdhxp ) ; block . setXPosition ( x ) ; block . setYPosition ( y ) ; blocks . add ( block ) ; } } }
× fix_prediction_before: protected void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } }
× fix_prediction_after: private void initBlocks () { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( dzgydisqgqsaenwqdhxp ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } }

line_index: 144
bug_before_refactoring: public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } <s> public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } <s> bugfix for empty iam map
bug_after_refactoring: public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder laexdpfrqlpopjyeakmo ) throws java.lang.NullPointerException { if ( laexdpfrqlpopjyeakmo == null ) throw new java.lang.NullPointerException () ; final int result = this . laexdpfrqlpopjyeakmos . size () ; this . laexdpfrqlpopjyeakmos . add ( result , laexdpfrqlpopjyeakmo ) ; return result ; } <s> public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder laexdpfrqlpopjyeakmo ) throws java.lang.NullPointerException { if ( laexdpfrqlpopjyeakmo == null ) throw new java.lang.NullPointerException () ; final int result = this . laexdpfrqlpopjyeakmos . size () ; this . laexdpfrqlpopjyeakmos . add ( result , laexdpfrqlpopjyeakmo ) ; return result ; } <s> bugfix for empty iam map
fix_before_refactoring: protected int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; }
fix_after_refactoring: protected int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder laexdpfrqlpopjyeakmo ) throws java.lang.NullPointerException { if ( laexdpfrqlpopjyeakmo == null ) throw new java.lang.NullPointerException () ; final int result = this . laexdpfrqlpopjyeakmos . size () ; this . laexdpfrqlpopjyeakmos . add ( result , laexdpfrqlpopjyeakmo ) ; return result ; }
× fix_prediction_before: public void put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; }
× fix_prediction_after: public void put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder laexdpfrqlpopjyeakmo ) throws java.lang.NullPointerException { if ( laexdpfrqlpopjyeakmo == null ) throw new java.lang.NullPointerException () ; final int result = this . laexdpfrqlpopjyeakmos . size () ; this . laexdpfrqlpopjyeakmos . add ( result , laexdpfrqlpopjyeakmo ) ; }

line_index: 145
bug_before_refactoring: public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () , event . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( event . getPlayer () , plugin . getSessionManager () . getSession ( event . getPlayer () ) ) ; } <s> public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () , event . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( event . getPlayer () , plugin . getSessionManager () . getSession ( event . getPlayer () ) ) ; } <s> Fixed numerous bugs in DungeonListener  The bugs caused several things to do with records from properly getting tracked and caused bugs with Sessions not getting deleted.
bug_after_refactoring: public void onStartDungeon ( yourselvs.dungeons.sjhvuvllpjamdpynylkus.PlayerStartDungeonEvent sjhvuvllpjamdpynylku ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( sjhvuvllpjamdpynylku . getPlayer () . getUniqueId () , sjhvuvllpjamdpynylku . getDungeon () , sjhvuvllpjamdpynylku . getTime () , sjhvuvllpjamdpynylku . getPlayer () . getLocation () , sjhvuvllpjamdpynylku . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( sjhvuvllpjamdpynylku . getPlayer () , plugin . getSessionManager () . getSession ( sjhvuvllpjamdpynylku . getPlayer () ) ) ; } <s> public void onStartDungeon ( yourselvs.dungeons.sjhvuvllpjamdpynylkus.PlayerStartDungeonEvent sjhvuvllpjamdpynylku ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( sjhvuvllpjamdpynylku . getPlayer () . getUniqueId () , sjhvuvllpjamdpynylku . getDungeon () , sjhvuvllpjamdpynylku . getTime () , sjhvuvllpjamdpynylku . getPlayer () . getLocation () , sjhvuvllpjamdpynylku . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( sjhvuvllpjamdpynylku . getPlayer () , plugin . getSessionManager () . getSession ( sjhvuvllpjamdpynylku . getPlayer () ) ) ; } <s> Fixed numerous bugs in DungeonListener  The bugs caused several things to do with records from properly getting tracked and caused bugs with Sessions not getting deleted.
fix_before_refactoring: @ org.bukkit.event.EventHandler public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () ) ; plugin . getSessionManager () . addSession ( session ) ; }
fix_after_refactoring: @ org.bukkit.sjhvuvllpjamdpynylku.EventHandler public void onStartDungeon ( yourselvs.dungeons.sjhvuvllpjamdpynylkus.PlayerStartDungeonEvent sjhvuvllpjamdpynylku ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( sjhvuvllpjamdpynylku . getPlayer () . getUniqueId () , sjhvuvllpjamdpynylku . getDungeon () , sjhvuvllpjamdpynylku . getTime () , sjhvuvllpjamdpynylku . getPlayer () . getLocation () ) ; plugin . getSessionManager () . addSession ( session ) ; }
× fix_prediction_before: public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { if ( ( event . getPlayer () ) != null ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () , event . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( event . getPlayer () , plugin . getSessionManager () . getSession ( event . getPlayer () ) ) ; } }
× fix_prediction_after: public void onStartDungeon ( yourselvs.dungeons.sjhvuvllpjamdpynylku ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( sjhvuvllpjamdpynylku . getPlayer () . getUniqueId () , sjhvuvllpjamdpynylku . getDungeon () , sjhvuvllpjamdpynylku . getTime () , sjhvuvllpjamdpynylku . getPlayer () . getLocation () , sjhvuvllpjamdpynylku . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( sjhvuvllpjamdpynylku . getPlayer () , plugin . getSessionManager () . getSession ( sjhvuvllpjamdpynylku . getPlayer () ) ) ; }

line_index: 146
bug_before_refactoring: public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; } <s> public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; } <s> Nick O: Fixed some generics issues with CompleteAll
bug_after_refactoring: public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . elopyhbrzfigbqpuiahy ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : elopyhbrzfigbqpuiahy ) { results . add ( async . complete () ) ; } return results ; } <s> public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . elopyhbrzfigbqpuiahy ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : elopyhbrzfigbqpuiahy ) { results . add ( async . complete () ) ; } return results ; } <s> Nick O: Fixed some generics issues with CompleteAll
fix_before_refactoring: @ java.lang.SafeVarargs public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; }
fix_after_refactoring: @ java.lang.SafeVarargs public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > . . . elopyhbrzfigbqpuiahy ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > async : elopyhbrzfigbqpuiahy ) { results . add ( async . complete () ) ; } return results ; }
× fix_prediction_before: public static < T > java.util.List < T > complete ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; }
× fix_prediction_after: public static < T > java.util.List < T > complete ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . elopyhbrzfigbqpuiahy ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : elopyhbrzfigbqpuiahy ) { results . add ( async . complete () ) ; } return results ; }

line_index: 147
bug_before_refactoring: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; } <s> @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; } <s> Fix rendering issues
bug_after_refactoring: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int yzzsdbxeulsjrkqlirnx , final int rpdtdigkthueljvbirxu , final net.minecraft.block.muieirbwlfpbfokdbkla.IBlockState muieirbwlfpbfokdbkla , final net.minecraft.world.World flcavtxdszqbbzeigzyn , final net.minecraft.util.math.BlockPos lgjmmdrqpwqrymitwftp ) { return yzzsdbxeulsjrkqlirnx | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( muieirbwlfpbfokdbkla , flcavtxdszqbbzeigzyn , lgjmmdrqpwqrymitwftp , rpdtdigkthueljvbirxu ) ) ; } <s> @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int yzzsdbxeulsjrkqlirnx , final int rpdtdigkthueljvbirxu , final net.minecraft.block.muieirbwlfpbfokdbkla.IBlockState muieirbwlfpbfokdbkla , final net.minecraft.world.World flcavtxdszqbbzeigzyn , final net.minecraft.util.math.BlockPos lgjmmdrqpwqrymitwftp ) { return yzzsdbxeulsjrkqlirnx | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( muieirbwlfpbfokdbkla , flcavtxdszqbbzeigzyn , lgjmmdrqpwqrymitwftp , rpdtdigkthueljvbirxu ) ) ; } <s> Fix rendering issues
fix_before_refactoring: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) private static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; }
fix_after_refactoring: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) private static int getTint ( final int yzzsdbxeulsjrkqlirnx , final int rpdtdigkthueljvbirxu , final net.minecraft.block.muieirbwlfpbfokdbkla.IBlockState muieirbwlfpbfokdbkla , final net.minecraft.world.World flcavtxdszqbbzeigzyn , final net.minecraft.util.math.BlockPos lgjmmdrqpwqrymitwftp ) { return yzzsdbxeulsjrkqlirnx | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( muieirbwlfpbfokdbkla , flcavtxdszqbbzeigzyn , lgjmmdrqpwqrymitwftp , rpdtdigkthueljvbirxu ) ) ; }
× fix_prediction_before: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; }
× fix_prediction_after: @ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int yzzsdbxeulsjrkqlirnx , final int rpdtdigkthueljvbirxu , final net.minecraft.block.muieirbwlfpbfokdbkla.IBlockState muieirbwlfpbfokdbkla , final net.minecraft.world.World flcavtxdszqbbzeigzyn , final net.minecraft.util.math.BlockPos lgjmmdrqpwqrymitwftp ) { return yzzsdbxeulsjrkqlirnx | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( muieirbwlfpbfokdbkla , flcavtxdszqbbzeigzyn , lgjmmdrqpwqrymitwftp , rpdtdigkthueljvbirxu ) ) ; }

line_index: 148
bug_before_refactoring: void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } } <s> void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } } <s> More Changes added  Finished Buffer class Added getPosition method to DLinkedList class  Fixed load method to reference field variables Fixed all go to methods  Wrote quit method findBackward and findBackward still have bugs GUI not yet functional
bug_after_refactoring: void findBackward ( java.lang.String zlucltvzpswsnrjfqomv ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != zlucltvzpswsnrjfqomv ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == zlucltvzpswsnrjfqomv ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + zlucltvzpswsnrjfqomv ) + " NOT FOUND." ) ) ; } } } <s> void findBackward ( java.lang.String zlucltvzpswsnrjfqomv ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != zlucltvzpswsnrjfqomv ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == zlucltvzpswsnrjfqomv ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + zlucltvzpswsnrjfqomv ) + " NOT FOUND." ) ) ; } } } <s> More Changes added  Finished Buffer class Added getPosition method to DLinkedList class  Fixed load method to reference field variables Fixed all go to methods  Wrote quit method findBackward and findBackward still have bugs GUI not yet functional
fix_before_refactoring: void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) || ( temp != ( current ) ) ) { temp = temp . getNext () ; } if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } }
fix_after_refactoring: void findBackward ( java.lang.String zlucltvzpswsnrjfqomv ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != zlucltvzpswsnrjfqomv ) || ( temp != ( current ) ) ) { temp = temp . getNext () ; } if ( ( temp . getValue () ) == zlucltvzpswsnrjfqomv ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + zlucltvzpswsnrjfqomv ) + " NOT FOUND." ) ) ; } }
× fix_prediction_before: void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } }
× fix_prediction_after: void findBackward ( java.lang.String zlucltvzpswsnrjfqomv ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != zlucltvzpswsnrjfqomv ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == zlucltvzpswsnrjfqomv ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + zlucltvzpswsnrjfqomv ) + " NOT FOUND." ) ) ; } } }

line_index: 149
bug_before_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } <s> private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } <s> bugfixes
bug_after_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM ntcajleugsbnegntqbdt ) { ntcajleugsbnegntqbdt.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { ntcajleugsbnegntqbdt.orderLatitude = taxiDriverLocation . getLatitude () ; ntcajleugsbnegntqbdt.orderLongitude = taxiDriverLocation . getLongitude () ; } ntcajleugsbnegntqbdt.status = Constants.OrderStatus.InProgress . getValue () ; ntcajleugsbnegntqbdt.taxiId = taxi.taxiId ; ntcajleugsbnegntqbdt.taxiPlate = taxi.plate ; ntcajleugsbnegntqbdt.driverPhone = phoneNumber ; return ntcajleugsbnegntqbdt ; } <s> private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM ntcajleugsbnegntqbdt ) { ntcajleugsbnegntqbdt.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { ntcajleugsbnegntqbdt.orderLatitude = taxiDriverLocation . getLatitude () ; ntcajleugsbnegntqbdt.orderLongitude = taxiDriverLocation . getLongitude () ; } ntcajleugsbnegntqbdt.status = Constants.OrderStatus.InProgress . getValue () ; ntcajleugsbnegntqbdt.taxiId = taxi.taxiId ; ntcajleugsbnegntqbdt.taxiPlate = taxi.plate ; ntcajleugsbnegntqbdt.driverPhone = phoneNumber ; return ntcajleugsbnegntqbdt ; } <s> bugfixes
fix_before_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; }
fix_after_refactoring: private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM ntcajleugsbnegntqbdt ) { ntcajleugsbnegntqbdt.orderId = - 1 ; ntcajleugsbnegntqbdt.orderLatitude = taxiDriverLocation . getLatitude () ; ntcajleugsbnegntqbdt.orderLongitude = taxiDriverLocation . getLongitude () ; ntcajleugsbnegntqbdt.status = Constants.OrderStatus.InProgress . getValue () ; ntcajleugsbnegntqbdt.taxiId = taxi.taxiId ; ntcajleugsbnegntqbdt.taxiPlate = taxi.plate ; ntcajleugsbnegntqbdt.driverPhone = phoneNumber ; return ntcajleugsbnegntqbdt ; }
× fix_prediction_before: public com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; }
× fix_prediction_after: protected com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM ntcajleugsbnegntqbdt ) { ntcajleugsbnegntqbdt.orderId = - 1 ; if ( ( taxiDriverLocation ) != null ) { ntcajleugsbnegntqbdt.orderLatitude = taxiDriverLocation . getLatitude () ; ntcajleugsbnegntqbdt.orderLongitude = taxiDriverLocation . getLongitude () ; } ntcajleugsbnegntqbdt.status = Constants.OrderStatus.InProgress . getValue () ; ntcajleugsbnegntqbdt.taxiId = taxi.taxiId ; ntcajleugsbnegntqbdt.taxiPlate = taxi.plate ; ntcajleugsbnegntqbdt.driverPhone = phoneNumber ; return ntcajleugsbnegntqbdt ; }

line_index: 150
bug_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( ! ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; } <s> @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( ! ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; } <s> Update to v5.4.1 (Bugfixes) - Uses distanceSquared(..) instead of distance(..) to improve performance - Fixes /updatecfg finally - Only shows administrative join-/leave-messages to players with the perm if the perm is actually enabled in the config
bug_after_refactoring: @ org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.EvtdeeinndayictahrzfruntHandltdeeinndayictahrzfrur ( priority = org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.EvtdeeinndayictahrzfruntPriority.MONITOR ) public void onTp ( org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.playtdeeinndayictahrzfrur.PlaytdeeinndayictahrzfrurTtdeeinndayictahrzfrultdeeinndayictahrzfruportEvtdeeinndayictahrzfrunt tdeeinndayictahrzfru ) { org.bukkit.tdeeinndayictahrzfruntity.Playtdeeinndayictahrzfrur p = tdeeinndayictahrzfru . gtdeeinndayictahrzfrutPlaytdeeinndayictahrzfrur () ; if ( ! ( isHiddtdeeinndayictahrzfrun ( p ) ) ) rtdeeinndayictahrzfruturn; if ( ! ( tdeeinndayictahrzfru . gtdeeinndayictahrzfrutFrom () . gtdeeinndayictahrzfrutWorld () . gtdeeinndayictahrzfrutNamtdeeinndayictahrzfru () . tdeeinndayictahrzfruquals ( tdeeinndayictahrzfru . gtdeeinndayictahrzfrutTo () . gtdeeinndayictahrzfrutWorld () . gtdeeinndayictahrzfrutNamtdeeinndayictahrzfru () ) ) ) rtdeeinndayictahrzfruturn; if ( cfg . gtdeeinndayictahrzfrutBooltdeeinndayictahrzfruan ( "Configuration.Playtdeeinndayictahrzfrurs.AddNightVision" ) ) p . rtdeeinndayictahrzfrumovtdeeinndayictahrzfruPotionEfftdeeinndayictahrzfruct ( PotionEfftdeeinndayictahrzfructTyptdeeinndayictahrzfru.NIGHT_VISION ) ; if ( cfg . gtdeeinndayictahrzfrutBooltdeeinndayictahrzfruan ( "Configuration.Playtdeeinndayictahrzfrurs.EnabltdeeinndayictahrzfruGhostPlaytdeeinndayictahrzfrurs" ) ) p . rtdeeinndayictahrzfrumovtdeeinndayictahrzfruPotionEfftdeeinndayictahrzfruct ( PotionEfftdeeinndayictahrzfructTyptdeeinndayictahrzfru.INVISIBILITY ) ; } <s> @ org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.EvtdeeinndayictahrzfruntHandltdeeinndayictahrzfrur ( priority = org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.EvtdeeinndayictahrzfruntPriority.MONITOR ) public void onTp ( org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.playtdeeinndayictahrzfrur.PlaytdeeinndayictahrzfrurTtdeeinndayictahrzfrultdeeinndayictahrzfruportEvtdeeinndayictahrzfrunt tdeeinndayictahrzfru ) { org.bukkit.tdeeinndayictahrzfruntity.Playtdeeinndayictahrzfrur p = tdeeinndayictahrzfru . gtdeeinndayictahrzfrutPlaytdeeinndayictahrzfrur () ; if ( ! ( isHiddtdeeinndayictahrzfrun ( p ) ) ) rtdeeinndayictahrzfruturn; if ( ! ( tdeeinndayictahrzfru . gtdeeinndayictahrzfrutFrom () . gtdeeinndayictahrzfrutWorld () . gtdeeinndayictahrzfrutNamtdeeinndayictahrzfru () . tdeeinndayictahrzfruquals ( tdeeinndayictahrzfru . gtdeeinndayictahrzfrutTo () . gtdeeinndayictahrzfrutWorld () . gtdeeinndayictahrzfrutNamtdeeinndayictahrzfru () ) ) ) rtdeeinndayictahrzfruturn; if ( cfg . gtdeeinndayictahrzfrutBooltdeeinndayictahrzfruan ( "Configuration.Playtdeeinndayictahrzfrurs.AddNightVision" ) ) p . rtdeeinndayictahrzfrumovtdeeinndayictahrzfruPotionEfftdeeinndayictahrzfruct ( PotionEfftdeeinndayictahrzfructTyptdeeinndayictahrzfru.NIGHT_VISION ) ; if ( cfg . gtdeeinndayictahrzfrutBooltdeeinndayictahrzfruan ( "Configuration.Playtdeeinndayictahrzfrurs.EnabltdeeinndayictahrzfruGhostPlaytdeeinndayictahrzfrurs" ) ) p . rtdeeinndayictahrzfrumovtdeeinndayictahrzfruPotionEfftdeeinndayictahrzfruct ( PotionEfftdeeinndayictahrzfructTyptdeeinndayictahrzfru.INVISIBILITY ) ; } <s> Update to v5.4.1 (Bugfixes) - Uses distanceSquared(..) instead of distance(..) to improve performance - Fixes /updatecfg finally - Only shows administrative join-/leave-messages to players with the perm if the perm is actually enabled in the config
fix_before_refactoring: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR , ignoreCancelled = true ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; }
fix_after_refactoring: @ org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.EvtdeeinndayictahrzfruntHandltdeeinndayictahrzfrur ( priority = org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.EvtdeeinndayictahrzfruntPriority.MONITOR , ignortdeeinndayictahrzfruCanctdeeinndayictahrzfrulltdeeinndayictahrzfrud = trutdeeinndayictahrzfru ) public void onTp ( org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.playtdeeinndayictahrzfrur.PlaytdeeinndayictahrzfrurTtdeeinndayictahrzfrultdeeinndayictahrzfruportEvtdeeinndayictahrzfrunt tdeeinndayictahrzfru ) { org.bukkit.tdeeinndayictahrzfruntity.Playtdeeinndayictahrzfrur p = tdeeinndayictahrzfru . gtdeeinndayictahrzfrutPlaytdeeinndayictahrzfrur () ; if ( ! ( isHiddtdeeinndayictahrzfrun ( p ) ) ) rtdeeinndayictahrzfruturn; if ( tdeeinndayictahrzfru . gtdeeinndayictahrzfrutFrom () . gtdeeinndayictahrzfrutWorld () . gtdeeinndayictahrzfrutNamtdeeinndayictahrzfru () . tdeeinndayictahrzfruquals ( tdeeinndayictahrzfru . gtdeeinndayictahrzfrutTo () . gtdeeinndayictahrzfrutWorld () . gtdeeinndayictahrzfrutNamtdeeinndayictahrzfru () ) ) rtdeeinndayictahrzfruturn; if ( cfg . gtdeeinndayictahrzfrutBooltdeeinndayictahrzfruan ( "Configuration.Playtdeeinndayictahrzfrurs.AddNightVision" ) ) p . rtdeeinndayictahrzfrumovtdeeinndayictahrzfruPotionEfftdeeinndayictahrzfruct ( PotionEfftdeeinndayictahrzfructTyptdeeinndayictahrzfru.NIGHT_VISION ) ; if ( cfg . gtdeeinndayictahrzfrutBooltdeeinndayictahrzfruan ( "Configuration.Playtdeeinndayictahrzfrurs.EnabltdeeinndayictahrzfruGhostPlaytdeeinndayictahrzfrurs" ) ) p . rtdeeinndayictahrzfrumovtdeeinndayictahrzfruPotionEfftdeeinndayictahrzfruct ( PotionEfftdeeinndayictahrzfructTyptdeeinndayictahrzfru.INVISIBILITY ) ; }
× fix_prediction_before: @ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR , ignoreCancelled = true ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( ! ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; }
× fix_prediction_after: @ org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.EvtdeeinndayictahrzfruntHandltdeeinndayictahrzfrur ( priority = org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.EvtdeeinndayictahrzfruntPriority.MONITOR ) public void onTp ( org.bukkit.tdeeinndayictahrzfruvtdeeinndayictahrzfrunt.playtdeeinndayictahrzfrur.PlaytdeeinndayictahrzfrurTtdeeinndayictahrzfrultdeeinndayictahrzfrultdeeinndayictahrzfrruportEvtdeeinndayictahrzfrunt tdeeinndayictahrzfru ) { org.bukkit.tdeeinndayictahrzfruntity.Playtdeeinndayictahrzfrur p = tdeeinndayictahrzfru . gtdeeinndayictahrzfrutPlaytdeeinndayictahrzfrur () ; if ( ! ( isHiddtdeeinndayictahrzfrun ( p ) ) ) rtdeeinndayictahrzfruturn; if ( ! ( tdeeinndayictahrzfru . gtdeeinndayictahrzfrutFrom () . gtdeeinndayictahrzfrutWorld () . gtdeeinndayictahrzfrutNamtdeeinndayictahrzfru () . tdeeinndayictahrzfrutTo () . gtdeeinndayictahrzfrutHelper . gtdeeinndayictahrzfrutHelper . gtdeeinndayictahrzfrutHelper . gtdeeinndayictahrzfruntHandltdeeinndayictahrzfruntHandltdeeinndayictahrzfrunt.Ev

line_index: 151
bug_before_refactoring: @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } <s> @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } <s> Fix problem images crash when there is no image data
bug_after_refactoring: @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup alydnjjyyrdphkuhivax , int mayelzqtsvybzdzzpejf ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , alydnjjyyrdphkuhivax , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ mayelzqtsvybzdzzpejf ] , alydnjjyyrdphkuhivax . getContext () , problemImageView ) ; alydnjjyyrdphkuhivax . addView ( itemView ) ; return itemView ; } <s> @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup alydnjjyyrdphkuhivax , int mayelzqtsvybzdzzpejf ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , alydnjjyyrdphkuhivax , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ mayelzqtsvybzdzzpejf ] , alydnjjyyrdphkuhivax . getContext () , problemImageView ) ; alydnjjyyrdphkuhivax . addView ( itemView ) ; return itemView ; } <s> Fix problem images crash when there is no image data
fix_before_refactoring: @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView ; if ( ( mResources.length ) > 0 ) { itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } else { return null ; } }
fix_after_refactoring: @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup alydnjjyyrdphkuhivax , int mayelzqtsvybzdzzpejf ) { android.view.View itemView ; if ( ( mResources.length ) > 0 ) { itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , alydnjjyyrdphkuhivax , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ mayelzqtsvybzdzzpejf ] , alydnjjyyrdphkuhivax . getContext () , problemImageView ) ; alydnjjyyrdphkuhivax . addView ( itemView ) ; return itemView ; } else { return null ; } }
× fix_prediction_before: @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { if ( position >= 0 ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } return null ; }
× fix_prediction_after: @ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup alydnjjyyrdphkuhivax , int mayelzqtsvybzdzzpejf ) { if ( ( mResources [ mayelzqtsvybzdzzpejf ] ) == null ) { mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , alydnjjyyrdphkuhivax , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ mayelzqtsvybzdzzpejf ] , alydnjjyyrdphkuhivax . getContext () , problemImageView ) ; alydnjjyyrdphkuhivax . addView ( itemView ) ; } return itemView ; }

line_index: 152
bug_before_refactoring: public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } this . incrementCounter () ; } <s> public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } this . incrementCounter () ; } <s> not existing item bug fixed
bug_after_refactoring: public void setLatestItem ( Item dintltzodoyrnqzzpfdi ) { if ( ( this . dintltzodoyrnqzzpfdi ) == null ) { this . dintltzodoyrnqzzpfdi = dintltzodoyrnqzzpfdi ; } else { if ( ( this . dintltzodoyrnqzzpfdi . getVersion () ) < ( dintltzodoyrnqzzpfdi . getVersion () ) ) { this . dintltzodoyrnqzzpfdi = dintltzodoyrnqzzpfdi ; } } this . incrementCounter () ; } <s> public void setLatestItem ( Item dintltzodoyrnqzzpfdi ) { if ( ( this . dintltzodoyrnqzzpfdi ) == null ) { this . dintltzodoyrnqzzpfdi = dintltzodoyrnqzzpfdi ; } else { if ( ( this . dintltzodoyrnqzzpfdi . getVersion () ) < ( dintltzodoyrnqzzpfdi . getVersion () ) ) { this . dintltzodoyrnqzzpfdi = dintltzodoyrnqzzpfdi ; } } this . incrementCounter () ; } <s> not existing item bug fixed
fix_before_refactoring: public void setLatestItem ( Item item ) { if ( item != null ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } } this . incrementCounter () ; }
fix_after_refactoring: public void setLatestItem ( Item dintltzodoyrnqzzpfdi ) { if ( dintltzodoyrnqzzpfdi != null ) { if ( ( this . dintltzodoyrnqzzpfdi ) == null ) { this . dintltzodoyrnqzzpfdi = dintltzodoyrnqzzpfdi ; } else { if ( ( this . dintltzodoyrnqzzpfdi . getVersion () ) < ( dintltzodoyrnqzzpfdi . getVersion () ) ) { this . dintltzodoyrnqzzpfdi = dintltzodoyrnqzzpfdi ; } } } this . incrementCounter () ; }
× fix_prediction_before: public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } }
× fix_prediction_after: public void setLatestItem ( Item dintltzodoyrnqzzpfdi ) { if ( ( this . dintltzodoyrnqzzpfdi ) == null ) { this . dintltzodoyrnqzzpfdi = dintltzodoyrnqzzpfdi ; } else { if ( ( this . dintltzodoyrnqzzpfdi . getVersion () ) < ( dintltzodoyrnqzzpfdi . getVersion () ) ) { this . dintltzodoyrnqzzpfdi = dintltzodoyrnqzzpfdi ; } } this . incrementCounter () ; }

line_index: 153
bug_before_refactoring: public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; } <s> public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; } <s> fix issues
bug_after_refactoring: public static void main ( java.lang.String [] xundshoqevpnkszmadns ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; } <s> public static void main ( java.lang.String [] xundshoqevpnkszmadns ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; } <s> fix issues
fix_before_refactoring: public static void main ( java.lang.String [] args ) { int [] a = new int [] { 3 , 2 , 3 , 2 , 4 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 , 3 , 3 } ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( a ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( a ) ) ; }
fix_after_refactoring: public static void main ( java.lang.String [] xundshoqevpnkszmadns ) { int [] a = new int [] { 3 , 2 , 3 , 2 , 4 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 , 3 , 3 } ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( a ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( a ) ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 } ) ) ; }
× fix_prediction_after: public static void main ( java.lang.String [] xundshoqevpnkszmadns ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAnAlternativeWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; }

line_index: 154
bug_before_refactoring: public synchronized java.util.List < java.lang.String > getJobConsole ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } <s> public synchronized java.util.List < java.lang.String > getJobConsole ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } <s> fix bug with composing lineFromLog (not from last build  but for jobResult)
bug_after_refactoring: public synchronized java.util.List < java.lang.String > getJobConsole ( java.lang.String junsklxpdvhzkmkwtzbq ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( junsklxpdvhzkmkwtzbq , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } <s> public synchronized java.util.List < java.lang.String > getJobConsole ( java.lang.String junsklxpdvhzkmkwtzbq ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( junsklxpdvhzkmkwtzbq , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } <s> fix bug with composing lineFromLog (not from last build  but for jobResult)
fix_before_refactoring: public synchronized java.util.List < java.lang.String > getJobConsole ( final java.lang.String buildNumber , final java.lang.String jobName ) { java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; }
fix_after_refactoring: public synchronized java.util.List < java.lang.String > getJobConsole ( final java.lang.String buildNumber , final java.lang.String junsklxpdvhzkmkwtzbq ) { java.lang.String url = prepareUrl ( junsklxpdvhzkmkwtzbq , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; }
× fix_prediction_before: public synchronized java.util.ArrayList < java.lang.String > getJobConsole ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; }
× fix_prediction_after: public synchronized java.util.List < java.lang.String > getJobConsole () { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( junsklxpdvhzkmkwtzbq , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; }

line_index: 156
bug_before_refactoring: @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { if ( loadedMaximList == null ) { maximFeed . showLoadingError () ; } else if ( ( loadedMaximList . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( loadedMaximList ) ; } } <s> public void onResume () { if ( ! ( didShowLoadingState ) ) { maximFeed . showLoadingState () ; didShowLoadingState = true ; } maximManager . loadMaxims ( context , new com.tcolligan.maximmaker.data.MaximManager.MaximsLoadedListener () { @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { if ( loadedMaximList == null ) { maximFeed . showLoadingError () ; } else if ( ( loadedMaximList . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( loadedMaximList ) ; } } } ) ; } <s> Fixed UI Deletion Bug
bug_after_refactoring: @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > nrggdzoxsdlxstwravnh ) { if ( nrggdzoxsdlxstwravnh == null ) { maximFeed . showLoadingError () ; } else if ( ( nrggdzoxsdlxstwravnh . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( nrggdzoxsdlxstwravnh ) ; } } <s> public void onResume () { if ( ! ( didShowLoadingState ) ) { maximFeed . showLoadingState () ; didShowLoadingState = true ; } maximManager . loadMaxims ( context , new com.tcolligan.maximmaker.data.MaximManager.MaximsLoadedListener () { @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > nrggdzoxsdlxstwravnh ) { if ( nrggdzoxsdlxstwravnh == null ) { maximFeed . showLoadingError () ; } else if ( ( nrggdzoxsdlxstwravnh . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( nrggdzoxsdlxstwravnh ) ; } } } ) ; } <s> Fixed UI Deletion Bug
fix_before_refactoring: @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { showMaxims ( loadedMaximList ) ; }
fix_after_refactoring: @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > nrggdzoxsdlxstwravnh ) { showMaxims ( nrggdzoxsdlxstwravnh ) ; }
× fix_prediction_before: @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { if ( loadedMaximList == null ) { maximFeed . showLoadingError () ; } else if ( ( loadedMaximList . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( loadedMaximList ) ; } }
× fix_prediction_after: @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > nrggdzoxsdlxstwravnh ) { if ( nrggdzoxsdlxstwravnh == null ) { maximFeed . showLoadingError () ; } else { maximFeed . showMaxims ( nrggdzoxsdlxstwravnh ) ; } }

line_index: 158
bug_before_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> #17 Fixed bug with non-dynamic reference when calculating the required spaces
bug_after_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String yefivcqbigztuicutvme ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( yefivcqbigztuicutvme . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> private static java.lang.String getRequiredSpaces ( java.lang.String yefivcqbigztuicutvme ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( yefivcqbigztuicutvme . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } <s> #17 Fixed bug with non-dynamic reference when calculating the required spaces
fix_before_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
fix_after_refactoring: private static java.lang.String getRequiredSpaces ( java.lang.String reference , java.lang.String yefivcqbigztuicutvme ) { java.lang.String res = "" ; int requiredSpaces = ( ( reference . length () ) - ( yefivcqbigztuicutvme . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
× fix_prediction_before: public static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
× fix_prediction_after: public static java.lang.String getRequiredSpaces ( java.lang.String yefivcqbigztuicutvme ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################################" ; int requiredSpaces = ( ( reference . length () ) - ( yefivcqbigztuicutvme . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }

line_index: 160
bug_before_refactoring: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.nio.file.Path path , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( path . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( path . toAbsolutePath () . toString () , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( path . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( path ) ) . build () ) ; } <s> private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.nio.file.Path path , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( path . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( path . toAbsolutePath () . toString () , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( path . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( path ) ) . build () ) ; } <s> Fix findbugs
bug_after_refactoring: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.nio.file.Path yffnjfrrvkeaqwylisfj , java.lang.String bqyeuhozxankuiydnnqk ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( yffnjfrrvkeaqwylisfj . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( yffnjfrrvkeaqwylisfj . toAbsolutePath () . toString () , bqyeuhozxankuiydnnqk ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( yffnjfrrvkeaqwylisfj . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( yffnjfrrvkeaqwylisfj ) ) . build () ) ; } <s> private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.nio.file.Path yffnjfrrvkeaqwylisfj , java.lang.String bqyeuhozxankuiydnnqk ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( yffnjfrrvkeaqwylisfj . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( yffnjfrrvkeaqwylisfj . toAbsolutePath () . toString () , bqyeuhozxankuiydnnqk ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( yffnjfrrvkeaqwylisfj . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( yffnjfrrvkeaqwylisfj ) ) . build () ) ; } <s> Fix findbugs
fix_before_refactoring: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.lang.String filename , java.lang.String filePath , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( filename , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( filePath , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( filename ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( filePath ) ) . build () ) ; }
fix_after_refactoring: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.lang.String filename , java.lang.String filePath , java.lang.String bqyeuhozxankuiydnnqk ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( filename , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( filePath , bqyeuhozxankuiydnnqk ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( filename ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( filePath ) ) . build () ) ; }
× fix_prediction_before: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.nio.file.Path path ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( path . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( path . toAbsolutePath () . toString () , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( path . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( path ) ) . build () ) ; }
× fix_prediction_after: private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.nio.file.Path yffnjfrrvkeaqwylisfj , java.lang.String bqyeuhozxankuiydnnqk ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( yffnjfrrvkeaqwylisfj . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( yffnjfrrvkeaqwylisfj . toAbsolutePath () . toString () , bqyeuhozxankuiydnnqk ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( yffnjfrrvkeaqwylisfj . getFileName () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( yffnjfrrvkeaqwylisfj ) ) . build () ) ; }

line_index: 161
bug_before_refactoring: @ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } } <s> @ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } } <s> issue fixes
bug_after_refactoring: @ java.lang.Override public void onRequestPermissionsResult ( int nsohxiixbdmaolktqosa , java.lang.String [] nffowxdoukebfpdhxqgy , int [] naqknfmhscfyvboosxha ) { if ( nsohxiixbdmaolktqosa == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( naqknfmhscfyvboosxha ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( nsohxiixbdmaolktqosa , nffowxdoukebfpdhxqgy , naqknfmhscfyvboosxha ) ; } } <s> @ java.lang.Override public void onRequestPermissionsResult ( int nsohxiixbdmaolktqosa , java.lang.String [] nffowxdoukebfpdhxqgy , int [] naqknfmhscfyvboosxha ) { if ( nsohxiixbdmaolktqosa == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( naqknfmhscfyvboosxha ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( nsohxiixbdmaolktqosa , nffowxdoukebfpdhxqgy , naqknfmhscfyvboosxha ) ; } } <s> issue fixes
fix_before_refactoring: @ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback ) != null ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } } }
fix_after_refactoring: @ java.lang.Override public void onRequestPermissionsResult ( int nsohxiixbdmaolktqosa , java.lang.String [] nffowxdoukebfpdhxqgy , int [] naqknfmhscfyvboosxha ) { if ( ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback ) != null ) { if ( nsohxiixbdmaolktqosa == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( naqknfmhscfyvboosxha ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( nsohxiixbdmaolktqosa , nffowxdoukebfpdhxqgy , naqknfmhscfyvboosxha ) ; } } }
× fix_prediction_before: @ java.lang.Override public void onRequestPermissionsResult ( int requestCode , int [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( permissions ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } }
× fix_prediction_after: @ java.lang.Override public void onRequestPermissionsResult ( int nsohxiixbdmaolktqosa , int [] naqknfmhscfyvboosxha ) { if ( nsohxiixbdmaolktqosa == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( naqknfmhscfyvboosxha ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( nsohxiixbdmaolktqosa , nffowxdoukebfpdhxqgy ) ; } }

line_index: 163
bug_before_refactoring: @ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } <s> @ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } <s> Fixed adding info views bug and histogram adding bug.
bug_after_refactoring: @ java.lang.Override protected void removeInfoView ( android.mokrxpyvanasqoshgpvx.View mokrxpyvanasqoshgpvx ) { if ( ( mokrxpyvanasqoshgpvx . getParent () ) != null ) ( ( android.mokrxpyvanasqoshgpvx.ViewGroup ) ( mokrxpyvanasqoshgpvx . getParent () ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; } <s> @ java.lang.Override protected void removeInfoView ( android.mokrxpyvanasqoshgpvx.View mokrxpyvanasqoshgpvx ) { if ( ( mokrxpyvanasqoshgpvx . getParent () ) != null ) ( ( android.mokrxpyvanasqoshgpvx.ViewGroup ) ( mokrxpyvanasqoshgpvx . getParent () ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; } <s> Fixed adding info views bug and histogram adding bug.
fix_before_refactoring: @ java.lang.Override public void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; }
fix_after_refactoring: @ java.lang.Override public void removeInfoView ( android.mokrxpyvanasqoshgpvx.View mokrxpyvanasqoshgpvx ) { if ( ( mokrxpyvanasqoshgpvx . getParent () ) != null ) ( ( android.mokrxpyvanasqoshgpvx.ViewGroup ) ( mokrxpyvanasqoshgpvx . getParent () ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; }
× fix_prediction_before: @ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; }
× fix_prediction_after: @ java.lang.Override protected void removeInfoView ( android.mokrxpyvanasqoshgpvx.View mokrxpyvanasqoshgpvx ) { if ( ( mokrxpyvanasqoshgpvx . getParent () ) != null ) ( ( android.mokrxpyvanasqoshgpvx.ViewGroup ) ( mokrxpyvanasqoshgpvx . getParent () ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; if ( ( guiView ) != null ) ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( mokrxpyvanasqoshgpvx ) ; }

line_index: 164
bug_before_refactoring: public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; } <s> Wayfinder img cache issue test fix 001
bug_after_refactoring: public void spawnSouth ( int ysgwjaiodnziwehberjv , int ilrscknbkrhvdlnxijju , int skvpdpcrhqebbaitwpzu ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( ysgwjaiodnziwehberjv - ( ( this . getSouth () . getWidth () ) / 2 ) ) , ilrscknbkrhvdlnxijju , this . getSouth () . getWidth () , skvpdpcrhqebbaitwpzu , null ) ; updateGeneratedImage () ; } <s> public void spawnSouth ( int ysgwjaiodnziwehberjv , int ilrscknbkrhvdlnxijju , int skvpdpcrhqebbaitwpzu ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( ysgwjaiodnziwehberjv - ( ( this . getSouth () . getWidth () ) / 2 ) ) , ilrscknbkrhvdlnxijju , this . getSouth () . getWidth () , skvpdpcrhqebbaitwpzu , null ) ; updateGeneratedImage () ; } <s> Wayfinder img cache issue test fix 001
fix_before_refactoring: public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
fix_after_refactoring: public java.lang.String spawnSouth ( int ysgwjaiodnziwehberjv , int ilrscknbkrhvdlnxijju , int skvpdpcrhqebbaitwpzu ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( ysgwjaiodnziwehberjv - ( ( this . getSouth () . getWidth () ) / 2 ) ) , ilrscknbkrhvdlnxijju , this . getSouth () . getWidth () , skvpdpcrhqebbaitwpzu , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
× fix_prediction_before: public void spawnSouth ( int offX , int offY , int width , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; updateGeneratedImage () ; }
× fix_prediction_after: public void spawnSouth ( int ysgwjaiodnziwehberjv , int ilrscknbkrhvdlnxijju , int skvpdpcrhqebbaitwpzu ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( ysgwjaiodnziwehberjv - ( ( this . getSouth () . getWidth () ) / 2 ) ) , ilrscknbkrhvdlnxijju , this . getSouth () . getWidth () , skvpdpcrhqebbaitwpzu , null ) ; }

line_index: 165
bug_before_refactoring: public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { this . historySearch . add ( sq ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } } <s> public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { this . historySearch . add ( sq ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } } <s> Fix bugs in history search
bug_after_refactoring: public void addHistorySearch ( com.savelives.entityclasses.SearchQuery nmyafossishlkrovqijs ) { this . historySearch . add ( nmyafossishlkrovqijs ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } } <s> public void addHistorySearch ( com.savelives.entityclasses.SearchQuery nmyafossishlkrovqijs ) { this . historySearch . add ( nmyafossishlkrovqijs ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } } <s> Fix bugs in history search
fix_before_refactoring: public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { java.util.ArrayList < com.savelives.entityclasses.SearchQuery > temp = new java.util.ArrayList <> () ; temp . add ( sq ) ; for ( int i = 0 ; ( i < ( ( MAX_HISTORY ) - 1 ) ) && ( i < ( historySearch . size () ) ) ; i ++ ) { temp . add ( historySearch . get ( i ) ) ; } this . historySearch = temp ; }
fix_after_refactoring: public void addHistorySearch ( com.savelives.entityclasses.SearchQuery nmyafossishlkrovqijs ) { java.util.ArrayList < com.savelives.entityclasses.SearchQuery > temp = new java.util.ArrayList <> () ; temp . add ( nmyafossishlkrovqijs ) ; for ( int i = 0 ; ( i < ( ( MAX_HISTORY ) - 1 ) ) && ( i < ( historySearch . size () ) ) ; i ++ ) { temp . add ( historySearch . get ( i ) ) ; } this . historySearch = temp ; }
× fix_prediction_before: public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { this . historySearch . add ( sq ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } }
× fix_prediction_after: public void addHistorySearch ( com.savelives.entityclasses.SearchQuery nmyafossishlkrovqijs ) { this . historySearch . add ( nmyafossishlkrovqijs ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } }

line_index: 167
bug_before_refactoring: public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> fix issueComments UI  refactor code
bug_after_refactoring: public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long pxihouwhuhxcqrjkjonf ) { if ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long pxihouwhuhxcqrjkjonf ) { if ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } <s> fix issueComments UI  refactor code
fix_before_refactoring: private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; }
fix_after_refactoring: private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long pxihouwhuhxcqrjkjonf ) { if ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; }
× fix_prediction_before: public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { com.softserverinc.edu.entities.WorkLog workLog = null ; if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; } return workLog ; }
× fix_prediction_after: public com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long pxihouwhuhxcqrjkjonf ) { com.softserverinc.edu.entities.WorkLog workLog = null ; if ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( pxihouwhuhxcqrjkjonf ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; } return workLog ; }

line_index: 169
bug_before_refactoring: private void showLatLonPicker ( final de.k3b.database.QueryParameter currentDirContentQuery ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } <s> private void showLatLonPicker ( final de.k3b.database.QueryParameter currentDirContentQuery ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } <s> Fixed some codacy.comm issues
bug_after_refactoring: private void showLatLonPicker ( final de.k3b.database.QueryParameter pslxezbjwtvanyojzgsw ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } <s> private void showLatLonPicker ( final de.k3b.database.QueryParameter pslxezbjwtvanyojzgsw ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } <s> Fixed some codacy.comm issues
fix_before_refactoring: private void showLatLonPicker () { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } }
fix_after_refactoring: private void showLatLonPicker () { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } }
× fix_prediction_before: private void showLatLonPicker () { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , zoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } }
× fix_prediction_after: private void showLatLonPicker () { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , zoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; }

line_index: 170
bug_before_refactoring: @ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( i > 0 ) { current = current . getNext () ; i -- ; } return current . getObject () ; } <s> @ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( i > 0 ) { current = current . getNext () ; i -- ; } return current . getObject () ; } <s> Fix critical problem in list and adding iterator
bug_after_refactoring: @ java.lang.Overrvhsuzkzszrrvviubtakrde publvhsuzkzszrrvviubtakrc T get ( vhsuzkzszrrvviubtakrnt vhsuzkzszrrvviubtakr ) { vhsuzkzszrrvviubtakrf ( ( svhsuzkzszrrvviubtakrze () ) <= vhsuzkzszrrvviubtakr ) throw new java.utvhsuzkzszrrvviubtakrl.NoSuchElementExceptvhsuzkzszrrvviubtakron ( "The requvhsuzkzszrrvviubtakrred vhsuzkzszrrvviubtakrndex vhsuzkzszrrvviubtakrsn't vhsuzkzszrrvviubtakrn the lvhsuzkzszrrvviubtakrst" ) ; lvhsuzkzszrrvviubtakrsts.lvhsuzkzszrrvviubtakrnkedlvhsuzkzszrrvviubtakrst.LvhsuzkzszrrvviubtakrstNode < T > current = fvhsuzkzszrrvviubtakrrstNode ; whvhsuzkzszrrvviubtakrle ( vhsuzkzszrrvviubtakr > 0 ) { current = current . getNext () ; vhsuzkzszrrvviubtakr -- ; } return current . getObject () ; } <s> @ java.lang.Overrvhsuzkzszrrvviubtakrde publvhsuzkzszrrvviubtakrc T get ( vhsuzkzszrrvviubtakrnt vhsuzkzszrrvviubtakr ) { vhsuzkzszrrvviubtakrf ( ( svhsuzkzszrrvviubtakrze () ) <= vhsuzkzszrrvviubtakr ) throw new java.utvhsuzkzszrrvviubtakrl.NoSuchElementExceptvhsuzkzszrrvviubtakron ( "The requvhsuzkzszrrvviubtakrred vhsuzkzszrrvviubtakrndex vhsuzkzszrrvviubtakrsn't vhsuzkzszrrvviubtakrn the lvhsuzkzszrrvviubtakrst" ) ; lvhsuzkzszrrvviubtakrsts.lvhsuzkzszrrvviubtakrnkedlvhsuzkzszrrvviubtakrst.LvhsuzkzszrrvviubtakrstNode < T > current = fvhsuzkzszrrvviubtakrrstNode ; whvhsuzkzszrrvviubtakrle ( vhsuzkzszrrvviubtakr > 0 ) { current = current . getNext () ; vhsuzkzszrrvviubtakr -- ; } return current . getObject () ; } <s> Fix critical problem in list and adding iterator
fix_before_refactoring: @ java.lang.Override public T get ( int index ) { if ( ( size () ) <= index ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( index > 0 ) { current = current . getNext () ; index -- ; } return current . getData () ; }
fix_after_refactoring: @ java.lang.Overrvhsuzkzszrrvviubtakrde publvhsuzkzszrrvviubtakrc T get ( vhsuzkzszrrvviubtakrnt vhsuzkzszrrvviubtakrndex ) { vhsuzkzszrrvviubtakrf ( ( svhsuzkzszrrvviubtakrze () ) <= vhsuzkzszrrvviubtakrndex ) throw new java.utvhsuzkzszrrvviubtakrl.NoSuchElementExceptvhsuzkzszrrvviubtakron ( "The requvhsuzkzszrrvviubtakrred vhsuzkzszrrvviubtakrndex vhsuzkzszrrvviubtakrsn't vhsuzkzszrrvviubtakrn the lvhsuzkzszrrvviubtakrst" ) ; lvhsuzkzszrrvviubtakrsts.lvhsuzkzszrrvviubtakrnkedlvhsuzkzszrrvviubtakrst.LvhsuzkzszrrvviubtakrstNode < T > current = fvhsuzkzszrrvviubtakrrstNode ; whvhsuzkzszrrvviubtakrle ( vhsuzkzszrrvviubtakrndex > 0 ) { current = current . getNext () ; vhsuzkzszrrvviubtakrndex -- ; } return current . getData () ; }
× fix_prediction_before: @ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( i > 0 ) { current = current . getNext () ; i -- ; } if ( i < 0 ) return null ; return current . getObject () ; }
× fix_prediction_after: @ java.lang.Overrvhsuzkzszrrvviubtakrde publvhsuzkzszrrvviubtakrc T get ( vhsuzkzszrrvviubtakrnt vhsuzkzszrrvviubtakr ) { vhsuzkzszrrvviubtakrf ( ( svhsuzkzszrrvviubtakrze () ) <= vhsuzkzszrrvviubtakr ) throw new java.utvhsuzkzszrrvviubtakrl.NoSuchElementExceptvhsuzkzszrrvviubtakron ( "The requvhsuzkzszrrvviubtakrred vhsuzkzszrrvviubtakrndex vhsuzkzszrrvviubtakrsn't vhsuzkzszrrvviubtakrn the lvhsuzkzszrrvviubtakrst" ) ; lvhsuzkzszrrvviubtakrsts.lvhsuzkzszrrvviubtakrnkedlvhsuzkzszrrvviubtakrst.LvhsuzkzszrrvviubtakrstNode < T > current = fvhsuzkzszrrvviubtakrrstNode ; whvhsuzkzszrrvviubtakrle ( vhsuzkzszrrvviubtakr > 0 ) ; current = current . getNext () ; vhsuzkzszrrvviubtakr -- ; return current . getObject () ; }

line_index: 171
bug_before_refactoring: public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) model . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } } <s> public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) model . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } } <s> fixed bug with information if message doesn't exist
bug_after_refactoring: public void controller ( org.openmrs.ui.framework.fragment.FragmentModel qyundanopyfhscimpykq , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService buecajtnbapfobtkzyzd , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "utiianjmtcifzqobmkeb" , required = true ) java.lang.Integer utiianjmtcifzqobmkeb ) throws java.io.IOException { java.lang.String message = buecajtnbapfobtkzyzd . getMessageById ( utiianjmtcifzqobmkeb ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) qyundanopyfhscimpykq . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; qyundanopyfhscimpykq . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } } <s> public void controller ( org.openmrs.ui.framework.fragment.FragmentModel qyundanopyfhscimpykq , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService buecajtnbapfobtkzyzd , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "utiianjmtcifzqobmkeb" , required = true ) java.lang.Integer utiianjmtcifzqobmkeb ) throws java.io.IOException { java.lang.String message = buecajtnbapfobtkzyzd . getMessageById ( utiianjmtcifzqobmkeb ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) qyundanopyfhscimpykq . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; qyundanopyfhscimpykq . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } } <s> fixed bug with information if message doesn't exist
fix_before_refactoring: public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; }
fix_after_refactoring: public void controller ( org.openmrs.ui.framework.fragment.FragmentModel qyundanopyfhscimpykq , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService buecajtnbapfobtkzyzd , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "utiianjmtcifzqobmkeb" , required = true ) java.lang.Integer utiianjmtcifzqobmkeb ) throws java.io.IOException { java.lang.String message = buecajtnbapfobtkzyzd . getMessageById ( utiianjmtcifzqobmkeb ) ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; qyundanopyfhscimpykq . addAttribute ( "outgoingMessage" , outgoingMessage ) ; }
× fix_prediction_before: public org.openmrs.ui.framework.fragment.FragmentModel controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) model . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } return model ; }
× fix_prediction_after: public org.openmrs.ui.framework.fragment.FragmentModel controller ( org.openmrs.ui.framework.fragment.FragmentModel qyundanopyfhscimpykq , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService buecajtnbapfobtkzyzd , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "utiianjmtcifzqobmkeb" , required = true ) java.lang.Integer utiianjmtcifzqobmkeb ) throws java.io.IOException { java.lang.String message = buecajtnbapfobtkzyzd . getMessageById ( utiianjmtcifzqobmkeb ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) qyundanopyfhscimpykq . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; qyundanopyfhscimpykq . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } return qyundanopyfhscimpykq ; }

line_index: 173
bug_before_refactoring: @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( hasUnicodeChar ( literal ) ) { if ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } } } <s> @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( hasUnicodeChar ( literal ) ) { if ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } } } <s> Combine nested if statements  issue #744  Additional fixes for PMD rule [CollapsibleIfStatements](http://pmd.sourceforge.net/pmd-5.2.3/pmd-java/rules/java/basic.html#CollapsibleIfStatements).
bug_after_refactoring: @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST bklyufkkmabwskcsbytg ) { final java.lang.String literal = bklyufkkmabwskcsbytg . getText () ; if ( hasUnicodeChar ( literal ) ) { if ( ! ( ( ( ( ( allowByTailComment ) && ( habklyufkkmabwskcsbytgrailComment ( bklyufkkmabwskcsbytg ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) { log ( bklyufkkmabwskcsbytg . getLineNo () , "forbid.escaped.unicode.char" ) ; } } } <s> @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST bklyufkkmabwskcsbytg ) { final java.lang.String literal = bklyufkkmabwskcsbytg . getText () ; if ( hasUnicodeChar ( literal ) ) { if ( ! ( ( ( ( ( allowByTailComment ) && ( habklyufkkmabwskcsbytgrailComment ( bklyufkkmabwskcsbytg ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) { log ( bklyufkkmabwskcsbytg . getLineNo () , "forbid.escaped.unicode.char" ) ; } } } <s> Combine nested if statements  issue #744  Additional fixes for PMD rule [CollapsibleIfStatements](http://pmd.sourceforge.net/pmd-5.2.3/pmd-java/rules/java/basic.html#CollapsibleIfStatements).
fix_before_refactoring: @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( ( hasUnicodeChar ( literal ) ) && ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } }
fix_after_refactoring: @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST bklyufkkmabwskcsbytg ) { final java.lang.String literal = bklyufkkmabwskcsbytg . getText () ; if ( ( hasUnicodeChar ( literal ) ) && ( ! ( ( ( ( ( allowByTailComment ) && ( habklyufkkmabwskcsbytgrailComment ( bklyufkkmabwskcsbytg ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( bklyufkkmabwskcsbytg . getLineNo () , "forbid.escaped.unicode.char" ) ; } }
× fix_prediction_before: @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( ! ( ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } }
× fix_prediction_after: @ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST bklyufkkmabwskcsbytg ) { final java.lang.String literal = bklyufkkmabwskcsbytg . getText () ; if ( ! ( ( ( ( ( ( allowByTailComment ) && ( habklyufkkmabwskcsbytgrailComment ( bklyufkkmabwskcsbytg ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( bklyufkkmabwskcsbytg . getLineNo () , "forbid.escaped.Unicode.char" ) ; } }

line_index: 174
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; } <s> Fixed the interceptor  proper error handling and server responses working. Really should try and write REST client tests.
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{xvywlwcqlymfyelbfhcy}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "noedcgbkdlezxitxwkea" ) java.lang.String noedcgbkdlezxitxwkea , @ javax.ws.rs.PathParam ( value = "xvywlwcqlymfyelbfhcy" ) java.lang.String xvywlwcqlymfyelbfhcy ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( xvywlwcqlymfyelbfhcy ) ) ; if ( retVal . getSupplierTIN () . equals ( noedcgbkdlezxitxwkea ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{xvywlwcqlymfyelbfhcy}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "noedcgbkdlezxitxwkea" ) java.lang.String noedcgbkdlezxitxwkea , @ javax.ws.rs.PathParam ( value = "xvywlwcqlymfyelbfhcy" ) java.lang.String xvywlwcqlymfyelbfhcy ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( xvywlwcqlymfyelbfhcy ) ) ; if ( retVal . getSupplierTIN () . equals ( noedcgbkdlezxitxwkea ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; } <s> Fixed the interceptor  proper error handling and server responses working. Really should try and write REST client tests.
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) throws java.lang.Exception { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; return null ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{xvywlwcqlymfyelbfhcy}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "noedcgbkdlezxitxwkea" ) java.lang.String noedcgbkdlezxitxwkea , @ javax.ws.rs.PathParam ( value = "xvywlwcqlymfyelbfhcy" ) java.lang.String xvywlwcqlymfyelbfhcy ) throws java.lang.Exception { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; retVal = invoiceDao . findById ( java.lang.Long . parseLong ( xvywlwcqlymfyelbfhcy ) ) ; if ( retVal . getSupplierTIN () . equals ( noedcgbkdlezxitxwkea ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; return null ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{xvywlwcqlymfyelbfhcy}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "noedcgbkdlezxitxwkea" ) java.lang.String noedcgbkdlezxitxwkea , @ javax.ws.rs.PathParam ( value = "xvywlwcqlymfyelbfhcy" ) java.lang.String xvywlwcqlymfyelbfhcy ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( xvywlwcqlymfyelbfhcy ) ) ; if ( retVal . getSupplierTIN () . equals ( noedcgbkdlezxitxwkea ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e . getMessage () , e ) ; } return null ; }

line_index: 176
bug_before_refactoring: static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.down ) + 1 ) >= ( boxes [ w.start.across ] . length ) ; } return ( ( w.start.across ) + 1 ) >= ( boxes.length ) ; } <s> static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.down ) + 1 ) >= ( boxes [ w.start.across ] . length ) ; } return ( ( w.start.across ) + 1 ) >= ( boxes.length ) ; } <s> Fixing a  problem with function to detect if the word is the last in its direction
bug_after_refactoring: static boolean isLastWordInDirection ( com.totsp.crosscckolmbcznadcgxflviyord.puz.Box [] [] kckamsqkoebhpakcckolmbcznadcgxflviydmgl , com.totsp.crosscckolmbcznadcgxflviyord.puz.Playboard.Word cckolmbcznadcgxflviy ) { if ( cckolmbcznadcgxflviy.across ) { return ( ( cckolmbcznadcgxflviy.start.docckolmbcznadcgxflviyn ) + 1 ) >= ( kckamsqkoebhpakcckolmbcznadcgxflviydmgl [ cckolmbcznadcgxflviy.start.across ] . length ) ; } return ( ( cckolmbcznadcgxflviy.start.across ) + 1 ) >= ( kckamsqkoebhpakcckolmbcznadcgxflviydmgl.length ) ; } <s> static boolean isLastWordInDirection ( com.totsp.crosscckolmbcznadcgxflviyord.puz.Box [] [] kckamsqkoebhpakcckolmbcznadcgxflviydmgl , com.totsp.crosscckolmbcznadcgxflviyord.puz.Playboard.Word cckolmbcznadcgxflviy ) { if ( cckolmbcznadcgxflviy.across ) { return ( ( cckolmbcznadcgxflviy.start.docckolmbcznadcgxflviyn ) + 1 ) >= ( kckamsqkoebhpakcckolmbcznadcgxflviydmgl [ cckolmbcznadcgxflviy.start.across ] . length ) ; } return ( ( cckolmbcznadcgxflviy.start.across ) + 1 ) >= ( kckamsqkoebhpakcckolmbcznadcgxflviydmgl.length ) ; } <s> Fixing a  problem with function to detect if the word is the last in its direction
fix_before_refactoring: static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.across ) + ( w.length ) ) >= ( boxes.length ) ; } return ( ( w.start.down ) + ( w.length ) ) >= ( boxes [ w.start.across ] . length ) ; }
fix_after_refactoring: static boolean isLastWordInDirection ( com.totsp.crosscckolmbcznadcgxflviyord.puz.Box [] [] kckamsqkoebhpakcckolmbcznadcgxflviydmgl , com.totsp.crosscckolmbcznadcgxflviyord.puz.Playboard.Word cckolmbcznadcgxflviy ) { if ( cckolmbcznadcgxflviy.across ) { return ( ( cckolmbcznadcgxflviy.start.across ) + ( cckolmbcznadcgxflviy.length ) ) >= ( kckamsqkoebhpakcckolmbcznadcgxflviydmgl.length ) ; } return ( ( cckolmbcznadcgxflviy.start.docckolmbcznadcgxflviyn ) + ( cckolmbcznadcgxflviy.length ) ) >= ( kckamsqkoebhpakcckolmbcznadcgxflviydmgl [ cckolmbcznadcgxflviy.start.across ] . length ) ; }
× fix_prediction_before: static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( ( boxes.length ) <= 1 ) { return false ; } if ( w.across ) { return ( ( w.start.down ) + 1 ) >= ( boxes [ w.start.across ] . length ) ; } return ( ( w.start.across ) + 1 ) >= ( boxes.length ) ; }
× fix_prediction_after: static boolean isLastWordInDirection ( com.totsp.crosscckolmbcznadcgxflviyord.puz.Box [] [] kckamsqkoebhpakcckolmbcznadcgxflviydmgl , com.totsp.crosscckolmbcznadcgxflviyord.puz.Playboard.Word cckolmbcznadcgxflviy ) { if ( cckolmbcznadcgxflviy.across ) { return ( ( cckolmbcznadcgxflviy.start.docckolmbcznadcgxflviyn ) + 1 ) >= ( kckamsqkoebhpakcckolmbcznadcgxflviydmgl [ cckolmbcznadcgxflviy.start.across ] . length ) ; } return ( ( cckolmbcznadcgxflviy.start.across ) + 1 ) >= ( kckamsqkoebhpakcckolmbcznadcgxflviydmgl.length ) ; }

line_index: 177
bug_before_refactoring: @ java.lang.Override public void migrate ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) {} } <s> @ java.lang.Override public void migrate ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) {} } <s> Removed map overlay. Fixed migration issues.
bug_after_refactoring: @ java.lang.Override public void migrate ( io.qidqknbmttmjunrxkxqd.DynamicRealm qidqknbmttmjunrxkxqd , long csdorohqnhgewexmiznc , long xudvydrudcopsgpucden ) { io.qidqknbmttmjunrxkxqd.RealmSchema schema = qidqknbmttmjunrxkxqd . getSchema () ; if ( csdorohqnhgewexmiznc == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; csdorohqnhgewexmiznc ++ ; } if ( csdorohqnhgewexmiznc == 1 ) {} } <s> @ java.lang.Override public void migrate ( io.qidqknbmttmjunrxkxqd.DynamicRealm qidqknbmttmjunrxkxqd , long csdorohqnhgewexmiznc , long xudvydrudcopsgpucden ) { io.qidqknbmttmjunrxkxqd.RealmSchema schema = qidqknbmttmjunrxkxqd . getSchema () ; if ( csdorohqnhgewexmiznc == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; csdorohqnhgewexmiznc ++ ; } if ( csdorohqnhgewexmiznc == 1 ) {} } <s> Removed map overlay. Fixed migration issues.
fix_before_refactoring: { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; }
fix_after_refactoring: { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; csdorohqnhgewexmiznc ++ ; }
× fix_prediction_before: @ java.lang.Override public void migrate ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) {} }
× fix_prediction_after: @ java.lang.Override public void migrate ( io.qidqknbmttmjunrxkxqd.DynamicRealm qidqknbmttmjunrxkxqd , long csdorohqnhgewexmiznc , long xudvydrudcopsgpucden ) { io.qidqknbmttmjunrxkxqd.RealmSchema schema = qidqknbmttmjunrxkxqd . getSchema () ; if ( csdorohqnhgewexmiznc == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; csdorohqnhgewexmiznc ++ ; } if ( csdorohqnhgewexmiznc == 1 ) {} }

line_index: 178
bug_before_refactoring: com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } } <s> com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } } <s> [NEW TYPE INFERENCE] Bugfixes for subtyping of generic functions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=77008765
bug_after_refactoring: com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType pckhwokfypzitdmnftia ) { if ( ( pckhwokfypzitdmnftia == null ) || ( ( ! ( this . isLoose () ) ) && ( pckhwokfypzitdmnftia . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , pckhwokfypzitdmnftia ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } } <s> com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType pckhwokfypzitdmnftia ) { if ( ( pckhwokfypzitdmnftia == null ) || ( ( ! ( this . isLoose () ) ) && ( pckhwokfypzitdmnftia . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , pckhwokfypzitdmnftia ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } } <s> [NEW TYPE INFERENCE] Bugfixes for subtyping of generic functions. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=77008765
fix_before_refactoring: com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; }
fix_after_refactoring: com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType pckhwokfypzitdmnftia ) { if ( ( pckhwokfypzitdmnftia == null ) || ( ( ! ( this . isLoose () ) ) && ( pckhwokfypzitdmnftia . isLoose () ) ) ) { return this ; } com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , pckhwokfypzitdmnftia ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; }
× fix_prediction_before: com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( other == null ) { return this ; } else if ( this . isLoose () . equals ( other . isLoose () ) ) { return other ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ! ( result . isLoose () ) ) { result = result . withLoose () ; } return result ; } }
× fix_prediction_after: com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType pckhwokfypzitdmnftia ) { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , pckhwokfypzitdmnftia ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; }

line_index: 179
bug_before_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( req , resp , context , user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } <s> @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ javax.ws.rs.core.Context javax.servlet.ServletContext context , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( req , resp , context , user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } <s> bug fixes
bug_after_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{worwekbzjqtvreurhdgt}/{ivopyhxpedwdrxxvllcr}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "worwekbzjqtvreurhdgt" ) long worwekbzjqtvreurhdgt , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "ivopyhxpedwdrxxvllcr" ) int ivopyhxpedwdrxxvllcr , @ javax.ws.rs.core.Context javax.servlet.ServletContext foiywubcxdpjpnyqhogp , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest ughvqfbfktalhegaacjc , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse bzuqiejhgsmofurkzguf ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( ivopyhxpedwdrxxvllcr , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , worwekbzjqtvreurhdgt ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - worwekbzjqtvreurhdgt: " + worwekbzjqtvreurhdgt ) ) . build () ; return getUserBalancesDto ( ughvqfbfktalhegaacjc , bzuqiejhgsmofurkzguf , foiywubcxdpjpnyqhogp , user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } <s> @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{worwekbzjqtvreurhdgt}/{ivopyhxpedwdrxxvllcr}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "worwekbzjqtvreurhdgt" ) long worwekbzjqtvreurhdgt , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "ivopyhxpedwdrxxvllcr" ) int ivopyhxpedwdrxxvllcr , @ javax.ws.rs.core.Context javax.servlet.ServletContext foiywubcxdpjpnyqhogp , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest ughvqfbfktalhegaacjc , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse bzuqiejhgsmofurkzguf ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( ivopyhxpedwdrxxvllcr , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , worwekbzjqtvreurhdgt ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - worwekbzjqtvreurhdgt: " + worwekbzjqtvreurhdgt ) ) . build () ; return getUserBalancesDto ( ughvqfbfktalhegaacjc , bzuqiejhgsmofurkzguf , foiywubcxdpjpnyqhogp , user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } <s> bug fixes
fix_before_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
fix_after_refactoring: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{worwekbzjqtvreurhdgt}/{ivopyhxpedwdrxxvllcr}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "worwekbzjqtvreurhdgt" ) long worwekbzjqtvreurhdgt , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "ivopyhxpedwdrxxvllcr" ) int ivopyhxpedwdrxxvllcr ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( ivopyhxpedwdrxxvllcr , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , worwekbzjqtvreurhdgt ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - worwekbzjqtvreurhdgt: " + worwekbzjqtvreurhdgt ) ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
× fix_prediction_before: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( req , resp , context , user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
× fix_prediction_after: @ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{worwekbzjqtvreurhdgt}/{ivopyhxpedwdrxxvllcr}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "worwekbzjqtvreurhdgt" ) long worwekbzjqtvreurhdgt ) { return null ; }

line_index: 180
bug_before_refactoring: public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return 0 ; } <s> public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return 0 ; } <s> profile onu  uni split  input output fix bugs
bug_after_refactoring: public int getIndexFromValue ( int [] diexrgkyicywdamosdnn , int xrkrfuhyhmnjsfgrzywd ) { for ( int i = 0 ; i != ( diexrgkyicywdamosdnn.length ) ; i ++ ) { if ( ( diexrgkyicywdamosdnn [ i ] ) == xrkrfuhyhmnjsfgrzywd ) return i ; } return 0 ; } <s> public int getIndexFromValue ( int [] diexrgkyicywdamosdnn , int xrkrfuhyhmnjsfgrzywd ) { for ( int i = 0 ; i != ( diexrgkyicywdamosdnn.length ) ; i ++ ) { if ( ( diexrgkyicywdamosdnn [ i ] ) == xrkrfuhyhmnjsfgrzywd ) return i ; } return 0 ; } <s> profile onu  uni split  input output fix bugs
fix_before_refactoring: public int getIndexFromValue ( java.lang.String [] list , java.lang.String v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( list [ i ] . equals ( v ) ) return i ; } return 0 ; }
fix_after_refactoring: public int getIndexFromValue ( jaxrkrfuhyhmnjsfgrzywda.lang.String [] diexrgkyicywdamosdnn , jaxrkrfuhyhmnjsfgrzywda.lang.String xrkrfuhyhmnjsfgrzywd ) { for ( int i = 0 ; i != ( diexrgkyicywdamosdnn.length ) ; i ++ ) { if ( diexrgkyicywdamosdnn [ i ] . equals ( xrkrfuhyhmnjsfgrzywd ) ) return i ; } return 0 ; }
× fix_prediction_before: public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return - 1 ; }
× fix_prediction_after: public int getIndexFromValue ( int [] diexrgkyicywdamosdnn , int xrkrfuhyhmnjsfgrzywd ) { if ( ( diexrgkyicywdamosdnn.length ) > 0 ) { for ( int i = 0 ; i != ( diexrgkyicywdamosdnn.length ) ; i ++ ) { if ( ( diexrgkyicywdamosdnn [ i ] ) == xrkrfuhyhmnjsfgrzywd ) return i ; } } return 0 ; }

line_index: 181
bug_before_refactoring: @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( v != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( v != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> fix the bug to children node can NOT be clicked
bug_after_refactoring: @ jawtzwdihnmcbsqtyipsnla.lang.Owtzwdihnmcbsqtyipsnlerrjpwtrmotjgkfrgbzfzyhe public boolean onChildClick ( androjpwtrmotjgkfrgbzfzyh.wjpwtrmotjgkfrgbzfzyhget.ExpandableListView yqrlxqtuqbyodkhnwtzwdihnmcbsqtyipsnlpoq , androjpwtrmotjgkfrgbzfzyh.wtzwdihnmcbsqtyipsnliew.View wtzwdihnmcbsqtyipsnl , int yavxcaeocetprhedcwbp , int tgzjkovikeznygtvpsgh , long jpwtrmotjgkfrgbzfzyh ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( yavxcaeocetprhedcwbp ) . getValue () . get ( tgzjkovikeznygtvpsgh ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( wtzwdihnmcbsqtyipsnl != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> @ jawtzwdihnmcbsqtyipsnla.lang.Owtzwdihnmcbsqtyipsnlerrjpwtrmotjgkfrgbzfzyhe public boolean onChildClick ( androjpwtrmotjgkfrgbzfzyh.wjpwtrmotjgkfrgbzfzyhget.ExpandableListView yqrlxqtuqbyodkhnwtzwdihnmcbsqtyipsnlpoq , androjpwtrmotjgkfrgbzfzyh.wtzwdihnmcbsqtyipsnliew.View wtzwdihnmcbsqtyipsnl , int yavxcaeocetprhedcwbp , int tgzjkovikeznygtvpsgh , long jpwtrmotjgkfrgbzfzyh ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( yavxcaeocetprhedcwbp ) . getValue () . get ( tgzjkovikeznygtvpsgh ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( wtzwdihnmcbsqtyipsnl != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; } <s> fix the bug to children node can NOT be clicked
fix_before_refactoring: @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; }
fix_after_refactoring: @ jawtzwdihnmcbsqtyipsnla.lang.Owtzwdihnmcbsqtyipsnlerrjpwtrmotjgkfrgbzfzyhe public boolean onChildClick ( androjpwtrmotjgkfrgbzfzyh.wjpwtrmotjgkfrgbzfzyhget.ExpandableListView yqrlxqtuqbyodkhnwtzwdihnmcbsqtyipsnlpoq , androjpwtrmotjgkfrgbzfzyh.wtzwdihnmcbsqtyipsnliew.View wtzwdihnmcbsqtyipsnl , int yavxcaeocetprhedcwbp , int tgzjkovikeznygtvpsgh , long jpwtrmotjgkfrgbzfzyh ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( yavxcaeocetprhedcwbp ) . getValue () . get ( tgzjkovikeznygtvpsgh ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { if ( ! ( mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( v != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; }
× fix_prediction_after: @ jawtzwdihnmcbsqtyipsnla.lang.Owtzwdihnmcbsqtyipsnlerrjpwtrmotjgkfrgbzfzyhe public boolean onChildClick ( androjpwtrmotjgkfrgbzfzyh.wjpwtrmotjgkfrgbzfzyhget.ExpandableListView yqrlxqtuqbyodkhnwtzwdihnmcbsqtyipsnlpoq , androjpwtrmotjgkfrgbzfzyh.wtzwdihnmcbsqtyipsnliew.View wtzwdihnmcbsqtyipsnl , int yavxcaeocetprhedcwbp , int tgzjkovikeznygtvpsgh , long jpwtrmotjgkfrgbzfzyh ) { final com.wirepwless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( yavxcaeocetprhedcwbp ) . getValue () . get ( tgzjkovikeznygtvpsgh ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( wtzwdihnmcbsqtyipsnl != null ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } } return true ; }

line_index: 182
bug_before_refactoring: @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } <s> @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } <s> fix the datasource selector issue
bug_after_refactoring: @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList fvdhjmgvkuanvjyehyxu , java.lang.Object umetnhnwiuuzpndacuzm , int gviwiwpomjnvgfntljgo , boolean npqbelrjjgdhhdrfyyhm , boolean skoilghgcuunxemhqcgl ) { if ( umetnhnwiuuzpndacuzm == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( umetnhnwiuuzpndacuzm ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } <s> @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList fvdhjmgvkuanvjyehyxu , java.lang.Object umetnhnwiuuzpndacuzm , int gviwiwpomjnvgfntljgo , boolean npqbelrjjgdhhdrfyyhm , boolean skoilghgcuunxemhqcgl ) { if ( umetnhnwiuuzpndacuzm == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( umetnhnwiuuzpndacuzm ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } <s> fix the datasource selector issue
fix_before_refactoring: @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList < ? extends it.unibz.krdb.obda.model.OBDADataSource > list , it.unibz.krdb.obda.model.OBDADataSource value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { java.lang.String datasourceUri = value . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; }
fix_after_refactoring: @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList < ? extends it.unibz.krdb.obda.model.OBDADataSource > fvdhjmgvkuanvjyehyxu , it.unibz.krdb.obda.model.OBDADataSource umetnhnwiuuzpndacuzm , int gviwiwpomjnvgfntljgo , boolean npqbelrjjgdhhdrfyyhm , boolean skoilghgcuunxemhqcgl ) { if ( umetnhnwiuuzpndacuzm == null ) { setText ( "<Select a datasource>" ) ; } else { java.lang.String datasourceUri = umetnhnwiuuzpndacuzm . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; }
× fix_prediction_before: @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean cellHasFocus ) { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; return this ; }
× fix_prediction_after: @ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList fvdhjmgvkuanvjyehyxu , java.lang.Object umetnhnwiuuzpndacuzm , int gviwiwpomjnvgfntljgo , boolean npqbelrjjgdhhdrfyyhm , boolean skoilghgcuunxemhqcgl ) { if ( umetnhnwiuuzpndacuzm == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( umetnhnwiuuzpndacuzm ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; }

line_index: 183
bug_before_refactoring: private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} } <s> private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} } <s> Fixed Compiler errors in Schema and Tiles test
bug_after_refactoring: private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String dkvyzxyduqddddpeljyl , final java.lang.String suwvcjabuusxcnyvgizo , final java.io.File gneawhtwiegdsktmqool ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( gneawhtwiegdsktmqool , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( dkvyzxyduqddddpeljyl , suwvcjabuusxcnyvgizo , gneawhtwiegdsktmqool ) ; return new com.rgi.android.geopackage.GeoPackage ( gneawhtwiegdsktmqool , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} } <s> private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String dkvyzxyduqddddpeljyl , final java.lang.String suwvcjabuusxcnyvgizo , final java.io.File gneawhtwiegdsktmqool ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( gneawhtwiegdsktmqool , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( dkvyzxyduqddddpeljyl , suwvcjabuusxcnyvgizo , gneawhtwiegdsktmqool ) ; return new com.rgi.android.geopackage.GeoPackage ( gneawhtwiegdsktmqool , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} } <s> Fixed Compiler errors in Schema and Tiles test
fix_before_refactoring: private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; }
fix_after_refactoring: private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String dkvyzxyduqddddpeljyl , final java.lang.String suwvcjabuusxcnyvgizo , final java.io.File gneawhtwiegdsktmqool ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( gneawhtwiegdsktmqool , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( dkvyzxyduqddddpeljyl , suwvcjabuusxcnyvgizo , gneawhtwiegdsktmqool ) ; return new com.rgi.android.geopackage.GeoPackage ( gneawhtwiegdsktmqool , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; }
× fix_prediction_before: private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} }
× fix_prediction_after: private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String dkvyzxyduqddddpeljyl , final java.lang.String suwvcjabuusxcnyvgizo , final java.io.File gneawhtwiegdsktmqool ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( gneawhtwiegdsktmqool , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( dkvyzxyduqddddpeljyl , suwvcjabuusxcnyvgizo , gneawhtwiegdsktmqool ) ; return new com.rgi.android.geopackage.GeoPackage ( gneawhtwiegdsktmqool , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} }

line_index: 184
bug_before_refactoring: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String Coursename , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } <s> @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String Coursename , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } <s> fixed proffessory name problem and made a section html that doesnt work. still unsure why but figure it out
bug_after_refactoring: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long wrxabzxozxxfvbjephab , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String tsbirwjheqyaelzejclc , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String rvvmgoufpvtsrbbyadtk , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String wwlbdpyqplgkdroggcdt , @ com.banner.bannerApplication.controllers.RequestParam int ezutxumbmksbslyglrcj ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( wrxabzxozxxfvbjephab ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( rvvmgoufpvtsrbbyadtk ) ; n . setLastName ( wwlbdpyqplgkdroggcdt ) ; n . setSectionNumber ( ezutxumbmksbslyglrcj ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } <s> @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long wrxabzxozxxfvbjephab , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String tsbirwjheqyaelzejclc , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String rvvmgoufpvtsrbbyadtk , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String wwlbdpyqplgkdroggcdt , @ com.banner.bannerApplication.controllers.RequestParam int ezutxumbmksbslyglrcj ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( wrxabzxozxxfvbjephab ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( rvvmgoufpvtsrbbyadtk ) ; n . setLastName ( wwlbdpyqplgkdroggcdt ) ; n . setSectionNumber ( ezutxumbmksbslyglrcj ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } <s> fixed proffessory name problem and made a section html that doesnt work. still unsure why but figure it out
fix_before_refactoring: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; }
fix_after_refactoring: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long wrxabzxozxxfvbjephab , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String rvvmgoufpvtsrbbyadtk , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String wwlbdpyqplgkdroggcdt , @ com.banner.bannerApplication.controllers.RequestParam int ezutxumbmksbslyglrcj ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( wrxabzxozxxfvbjephab ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( rvvmgoufpvtsrbbyadtk ) ; n . setLastName ( wwlbdpyqplgkdroggcdt ) ; n . setSectionNumber ( ezutxumbmksbslyglrcj ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; }
× fix_prediction_before: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String Coursename , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam ( required = false ) int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; }
× fix_prediction_after: @ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long wrxabzxozxxfvbjephab , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String tsbirwjheqyaelzejclc , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String rvvmgoufpvtsrbbyadtk , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String wwlbdpyqplgkdroggcdt , @ com.banner.bannerApplication.controllers.RequestParam int ezutxumbmksbslyglrcj ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( wrxabzxozxxfvbjephab ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( rvvmgoufpvtsrbbyadtk ) ; n . setLastName ( wwlbdpyqplgkdroggcdt ) ; n . setSectionNumber ( ezutxumbmksbslyglrcj ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; }

line_index: 185
bug_before_refactoring: public boolean addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return false ; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; return true ; } <s> public boolean addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return false ; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; return true ; } <s> Added new interfaces to User Manager. Fixed an ordering bug in Network Coordinator.
bug_after_refactoring: public boolean addNetworkUser ( java.lang.String kluohfmdnjkpemhgwcow , java.net.InetAddress ynjhhncktddtoeziidaf ) { if ( ( user_ledger . containsKey ( kluohfmdnjkpemhgwcow ) ) || ( kluohfmdnjkpemhgwcow == ( own_user_name ) ) ) { return false ; } user_ledger . put ( kluohfmdnjkpemhgwcow , ynjhhncktddtoeziidaf ) ; filemanager . addUser ( kluohfmdnjkpemhgwcow ) ; gui . addUser ( kluohfmdnjkpemhgwcow ) ; showState () ; return true ; } <s> public boolean addNetworkUser ( java.lang.String kluohfmdnjkpemhgwcow , java.net.InetAddress ynjhhncktddtoeziidaf ) { if ( ( user_ledger . containsKey ( kluohfmdnjkpemhgwcow ) ) || ( kluohfmdnjkpemhgwcow == ( own_user_name ) ) ) { return false ; } user_ledger . put ( kluohfmdnjkpemhgwcow , ynjhhncktddtoeziidaf ) ; filemanager . addUser ( kluohfmdnjkpemhgwcow ) ; gui . addUser ( kluohfmdnjkpemhgwcow ) ; showState () ; return true ; } <s> Added new interfaces to User Manager. Fixed an ordering bug in Network Coordinator.
fix_before_refactoring: public void addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; }
fix_after_refactoring: public void addNetworkUser ( java.lang.String kluohfmdnjkpemhgwcow , java.net.InetAddress ynjhhncktddtoeziidaf ) { if ( ( user_ledger . containsKey ( kluohfmdnjkpemhgwcow ) ) || ( kluohfmdnjkpemhgwcow == ( own_user_name ) ) ) { return; } user_ledger . put ( kluohfmdnjkpemhgwcow , ynjhhncktddtoeziidaf ) ; filemanager . addUser ( kluohfmdnjkpemhgwcow ) ; gui . addUser ( kluohfmdnjkpemhgwcow ) ; showState () ; }
× fix_prediction_before: public boolean addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username . equals ( own_user_name ) ) ) { return false ; } user_ledger . put ( username , IP ) ; gui . addUser ( username ) ; showState () ; return true ; }
× fix_prediction_after: public boolean addNetworkUser ( java.lang.String kluohfmdnjkpemhgwcow , java.net.InetAddress ynjhhncktddtoeziidaf ) { if ( ( user_ledger . containsKey ( kluohfmdnjkpemhgwcow ) ) || ( kluohfmdnjkpemhgwcow == ( own_user_name ) ) ) { return false ; } user_ledger . put ( kluohfmdnjkpemhgwcow , ynjhhncktddtoeziidaf ) ; gui . addUser ( kluohfmdnjkpemhgwcow ) ; return true ; }

line_index: 186
bug_before_refactoring: public void add ( T newElement ) { heap . add ( newElement ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( newElement ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , newElement ) ; } } <s> public void add ( T newElement ) { heap . add ( newElement ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( newElement ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , newElement ) ; } } <s> fix heap's bug  add sort and finish
bug_after_refactoring: public void add ( T oakonjjcoxdruzmcgnrh ) { heap . add ( oakonjjcoxdruzmcgnrh ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( oakonjjcoxdruzmcgnrh ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , oakonjjcoxdruzmcgnrh ) ; } } <s> public void add ( T oakonjjcoxdruzmcgnrh ) { heap . add ( oakonjjcoxdruzmcgnrh ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( oakonjjcoxdruzmcgnrh ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , oakonjjcoxdruzmcgnrh ) ; } } <s> fix heap's bug  add sort and finish
fix_before_refactoring: public void add ( T n ) { heap . add ( null ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 0 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( n ) ) == 1 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; } heap . set ( index , n ) ; }
fix_after_refactoring: public void add ( T n ) { heap . add ( null ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 0 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( n ) ) == 1 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; } heap . set ( index , n ) ; }
× fix_prediction_before: public void add ( T newElement ) { if ( ! ( isEmpty () ) ) { heap . add ( newElement ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( newElement ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , newElement ) ; } } }
× fix_prediction_after: public void add ( T oakonjjcoxdruzmcgnrh ) { this . heap . add ( oakonjjcoxdruzmcgnrh ) ; int index = ( this . heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( this . heap . get ( getParent ( index ) ) . compareTo ( oakonjjcoxdruzmcgnrh ) ) > 0 ) ) { this . heap . set ( index , this . heap . get ( getParent ( index ) ) ) ; index = this . heap . set ( index , oakonjjcoxdruzmcgnrh ) ; } }

line_index: 187
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; makeToast ( "Artificial Flashing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; makeToast ( "Artificial Flashing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } <s> Documentation and bug fixes
bug_after_refactoring: @ java.lang.Override public void onClick ( android.cuorlmyaxiirobyynyhb.View cuorlmyaxiirobyynyhb ) { if ( mFlashOn ) { runArtificialFlash () ; makeToast ( "Artificial Flashing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } <s> @ java.lang.Override public void onClick ( android.cuorlmyaxiirobyynyhb.View cuorlmyaxiirobyynyhb ) { if ( mFlashOn ) { runArtificialFlash () ; makeToast ( "Artificial Flashing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } <s> Documentation and bug fixes
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } else { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.cuorlmyaxiirobyynyhb.View cuorlmyaxiirobyynyhb ) { if ( mFlashOn ) { runArtificialFlash () ; final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } else { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.cuorlmyaxiirobyynyhb.View cuorlmyaxiirobyynyhb ) { if ( mFlashOn ) { runArtificialFlash () ; } final android.os.Handler handler = new android.os.Handler () ; mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; handler . postDelayed ( mShutterCallback , 800 ) ; }

line_index: 188
bug_before_refactoring: private com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; } <s> private com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; } <s> Merge pull request #193 in G/fastr from ~LUKAS.STADLER_ORACLE.COM/fastr:bugfix/callmatchernode_argumentssignature_get to master  * commit 'f141a124f968354d3f13987c7b3599c220c06a46':   make JNR RFFI compilation final   do not use ArgumentsSignature.get in the fast path of CallMatcherNode
bug_after_refactoring: private com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object wyeybxgmdkhrrxldjfoi ) { if ( wyeybxgmdkhrrxldjfoi instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( wyeybxgmdkhrrxldjfoi ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( wyeybxgmdkhrrxldjfoi instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( wyeybxgmdkhrrxldjfoi ) ; } return null ; } <s> private com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object wyeybxgmdkhrrxldjfoi ) { if ( wyeybxgmdkhrrxldjfoi instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( wyeybxgmdkhrrxldjfoi ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( wyeybxgmdkhrrxldjfoi instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( wyeybxgmdkhrrxldjfoi ) ; } return null ; } <s> Merge pull request #193 in G/fastr from ~LUKAS.STADLER_ORACLE.COM/fastr:bugfix/callmatchernode_argumentssignature_get to master  * commit 'f141a124f968354d3f13987c7b3599c220c06a46':   make JNR RFFI compilation final   do not use ArgumentsSignature.get in the fast path of CallMatcherNode
fix_before_refactoring: private static com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; }
fix_after_refactoring: private static com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object wyeybxgmdkhrrxldjfoi ) { if ( wyeybxgmdkhrrxldjfoi instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( wyeybxgmdkhrrxldjfoi ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( wyeybxgmdkhrrxldjfoi instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( wyeybxgmdkhrrxldjfoi ) ; } return null ; }
× fix_prediction_before: private com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; }
× fix_prediction_after: private com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object wyeybxgmdkhrrxldjfoi ) { if ( wyeybxgmdkhrrxldjfoi instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( wyeybxgmdkhrrxldjfoi ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( wyeybxgmdkhrrxldjfoi instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( wyeybxgmdkhrrxldjfoi ) ; } return null ; }

line_index: 191
bug_before_refactoring: @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } <s> @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } <s> updated to newest library usage pattern (snackbar)  lint errors fixed
bug_after_refactoring: @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder rosakfohwvjyjlrijxtv , int qtvairbdnqdsclfhruxm ) { int bgRes = 0 ; switch ( qtvairbdnqdsclfhruxm ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } rosakfohwvjyjlrijxtv.itemView . setBackgroundResource ( bgRes ) ; } <s> @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder rosakfohwvjyjlrijxtv , int qtvairbdnqdsclfhruxm ) { int bgRes = 0 ; switch ( qtvairbdnqdsclfhruxm ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } rosakfohwvjyjlrijxtv.itemView . setBackgroundResource ( bgRes ) ; } <s> updated to newest library usage pattern (snackbar)  lint errors fixed
fix_before_refactoring: @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int position , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; }
fix_after_refactoring: @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder rosakfohwvjyjlrijxtv , int position , int qtvairbdnqdsclfhruxm ) { int bgRes = 0 ; switch ( qtvairbdnqdsclfhruxm ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } rosakfohwvjyjlrijxtv.itemView . setBackgroundResource ( bgRes ) ; }
× fix_prediction_before: @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { if ( holder != null ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } }
× fix_prediction_after: @ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder rosakfohwvjyjlrijxtv , int qtvairbdnqdsclfhruxm ) { int bgRes = 0 ; switch ( qtvairbdnqdsclfhruxm ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } if ( bgRes != 0 ) rosakfohwvjyjlrijxtv.itemView . setBackgroundResource ( bgRes ) ; }

line_index: 194
bug_before_refactoring: public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } <s> public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } <s> Some bug fixed
bug_after_refactoring: public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > fjeyqveyxxvmbxegfzzv ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : fjeyqveyxxvmbxegfzzv . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } <s> public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > fjeyqveyxxvmbxegfzzv ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : fjeyqveyxxvmbxegfzzv . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } <s> Some bug fixed
fix_before_refactoring: public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { if ( ( data != null ) && ( ( data . entrySet () . size () ) != 0 ) ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } }
fix_after_refactoring: public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > fjeyqveyxxvmbxegfzzv ) { if ( ( fjeyqveyxxvmbxegfzzv != null ) && ( ( fjeyqveyxxvmbxegfzzv . entrySet () . size () ) != 0 ) ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : fjeyqveyxxvmbxegfzzv . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } }
× fix_prediction_before: public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { if ( data != null ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } }
× fix_prediction_after: public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > fjeyqveyxxvmbxegfzzv ) { if ( fjeyqveyxxvmbxegfzzv != null ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : fjeyqveyxxvmbxegfzzv . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } }

line_index: 195
bug_before_refactoring: public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } <s> Fix for issues #107 and #104 - index out of bounds in OBE Some code clean up
bug_after_refactoring: public void actionPerformed ( java.awt.event.ActionEvent evrbjfzlehzrctvvofdu ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } <s> public void actionPerformed ( java.awt.event.ActionEvent evrbjfzlehzrctvvofdu ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } <s> Fix for issues #107 and #104 - index out of bounds in OBE Some code clean up
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; final VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; }
fix_after_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evrbjfzlehzrctvvofdu ) { final VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; final VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; if ( ( mod . getGameModule () ) != null ) VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; }
× fix_prediction_after: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evrbjfzlehzrctvvofdu ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; }

line_index: 197
bug_before_refactoring: public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; } } <s> public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; } } <s> Panorama's AEL\AWBL fixed. Minor bug in saveResult method fixed.
bug_after_refactoring: public static void setAutoExposureLock ( boolean ukvjsoiuudcxmhabedxd ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , ukvjsoiuudcxmhabedxd ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , ukvjsoiuudcxmhabedxd ) . commit () ; } } <s> public static void setAutoExposureLock ( boolean ukvjsoiuudcxmhabedxd ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , ukvjsoiuudcxmhabedxd ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , ukvjsoiuudcxmhabedxd ) . commit () ; } } <s> Panorama's AEL\AWBL fixed. Minor bug in saveResult method fixed.
fix_before_refactoring: public static boolean setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; return true ; } return false ; }
fix_after_refactoring: public static boolean setAutoExposureLock ( boolean ukvjsoiuudcxmhabedxd ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , ukvjsoiuudcxmhabedxd ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , ukvjsoiuudcxmhabedxd ) . commit () ; return true ; } return false ; }
× fix_prediction_before: public static void setAutoExposureLock ( boolean lock ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; }
× fix_prediction_after: public static void setAutoExposureLock ( boolean ukvjsoiuudcxmhabedxd ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , ukvjsoiuudcxmhabedxd ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , ukvjsoiuudcxmhabedxd ) . commit () ; } }

line_index: 198
bug_before_refactoring: private traer.physics.Particle createParticle ( int x , int y ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } <s> private traer.physics.Particle createParticle ( int x , int y ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
bug_after_refactoring: private traer.phdgttxekvkycwpuerijkvsics.Particle createParticle ( int cvuwsxvapjtwlnqigner , int dgttxekvkycwpuerijkv ) { traer.phdgttxekvkycwpuerijkvsics.Particle newParticle = m_particleSdgttxekvkycwpuerijkvstem . makeParticle ( campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.PARTICLE_MASS , cvuwsxvapjtwlnqigner , dgttxekvkycwpuerijkv , 0 ) ; for ( int i = 0 ; i < ( m_particleSdgttxekvkycwpuerijkvstem . numberOfParticles () ) ; i ++ ) { traer.phdgttxekvkycwpuerijkvsics.Particle p = m_particleSdgttxekvkycwpuerijkvstem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSdgttxekvkycwpuerijkvstem . makeAttraction ( p , newParticle , campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.REPULSIVE_FORCE , campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } <s> private traer.phdgttxekvkycwpuerijkvsics.Particle createParticle ( int cvuwsxvapjtwlnqigner , int dgttxekvkycwpuerijkv ) { traer.phdgttxekvkycwpuerijkvsics.Particle newParticle = m_particleSdgttxekvkycwpuerijkvstem . makeParticle ( campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.PARTICLE_MASS , cvuwsxvapjtwlnqigner , dgttxekvkycwpuerijkv , 0 ) ; for ( int i = 0 ; i < ( m_particleSdgttxekvkycwpuerijkvstem . numberOfParticles () ) ; i ++ ) { traer.phdgttxekvkycwpuerijkvsics.Particle p = m_particleSdgttxekvkycwpuerijkvstem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSdgttxekvkycwpuerijkvstem . makeAttraction ( p , newParticle , campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.REPULSIVE_FORCE , campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } <s> Minor updates to Graph Canvas to fix performance issue; updated cursors for Pan  Zoom  and Select
fix_before_refactoring: private traer.physics.Particle createParticle ( int x , int y ) { synchronized ( m_particleSystem ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } }
fix_after_refactoring: private traer.phdgttxekvkycwpuerijkvsics.Particle createParticle ( int cvuwsxvapjtwlnqigner , int dgttxekvkycwpuerijkv ) { sdgttxekvkycwpuerijkvnchronized ( m_particleSdgttxekvkycwpuerijkvstem ) { traer.phdgttxekvkycwpuerijkvsics.Particle newParticle = m_particleSdgttxekvkycwpuerijkvstem . makeParticle ( campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.PARTICLE_MASS , cvuwsxvapjtwlnqigner , dgttxekvkycwpuerijkv , 0 ) ; for ( int i = 0 ; i < ( m_particleSdgttxekvkycwpuerijkvstem . numberOfParticles () ) ; i ++ ) { traer.phdgttxekvkycwpuerijkvsics.Particle p = m_particleSdgttxekvkycwpuerijkvstem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSdgttxekvkycwpuerijkvstem . makeAttraction ( p , newParticle , campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.REPULSIVE_FORCE , campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } }
× fix_prediction_before: protected traer.physics.Particle createParticle ( int x , int y ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; }
× fix_prediction_after: private traer.phdgttxekvkycwpuerijkvsics.Particle createParticle ( int cvuwsxvapjtwlnqigner , int dgttxekvkycwpuerijkv ) { traer.phdgttxekvkycwpuerijkvsics.Particle newParticle = m_particleSdgttxekvkycwpuerijkvstem . makeParticle ( campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkvclopedia.swing.graphical.CampaignEntitdgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvGraphCanvas.PARTICLE_MASS , cvuwsxvapjtwlnqigner , dgttxekvkycwpuerijkv , 0 ) ; for ( int i = 0 ; i < ( m_particleSdgttxekvkycwpuerijkvstem . numberOfParticles () ) ; i ++ ) { traer.phdgttxekvkycwpuerijkvsics.Particle p = m_particleSdgttxekvkycwpuerijkvstem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSdgttxekvkycwpuerijkvstem . makeAttraction ( p , newParticle , campaignencdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkv.swing.graphical.CampaignEntitdgttxekvkycwpuerijkvclopedia.displadgttxekvkycwpuerijkvsics.Particle . createParticle ( cvuwsxvapjtwlnqigner , dgttxekvkycwpuerijkv ) ) ; return newParticle ; }

line_index: 199
bug_before_refactoring: public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } <s> public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } <s> Fixed: names of params  simple interfaces instead of rest functions Removed: debug print message method
bug_after_refactoring: public void openFolder ( java.lang.String sipgqxpagqcaqzrirbvo ) throws java.lang.Exception { folder = store . getFolder ( sipgqxpagqcaqzrirbvo ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } <s> public void openFolder ( java.lang.String sipgqxpagqcaqzrirbvo ) throws java.lang.Exception { folder = store . getFolder ( sipgqxpagqcaqzrirbvo ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } <s> Fixed: names of params  simple interfaces instead of rest functions Removed: debug print message method
fix_before_refactoring: private void openFolder ( java.lang.String folderName ) throws javax.mail.MessagingException { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new javax.mail.MessagingException ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } }
fix_after_refactoring: private void openFolder ( java.lang.String sipgqxpagqcaqzrirbvo ) throws javax.mail.MessagingException { folder = store . getFolder ( sipgqxpagqcaqzrirbvo ) ; if ( ( folder ) == null ) { throw new javax.mail.MessagingException ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } }
× fix_prediction_before: public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { try { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } }
× fix_prediction_after: public void openFolder ( ) throws java.lang.Exception { folder = store . getFolder ( sipgqxpagqcaqzrirbvo ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } }

line_index: 200
bug_before_refactoring: public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> new serializer method and fixed logging libraries issues
bug_after_refactoring: public static < T > void serialize ( T ijrzohnqvrgfehbioghl , java.lang.Class < T > bozudmngtkzngksuijvv , java.io.OutputStream xtxcnentacjnwfxkylkz , java.lang.String odvcahphmcynnsmgeflr ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( bozudmngtkzngksuijvv ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , odvcahphmcynnsmgeflr ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( ijrzohnqvrgfehbioghl , xtxcnentacjnwfxkylkz ) ; } <s> public static < T > void serialize ( T ijrzohnqvrgfehbioghl , java.lang.Class < T > bozudmngtkzngksuijvv , java.io.OutputStream xtxcnentacjnwfxkylkz , java.lang.String odvcahphmcynnsmgeflr ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( bozudmngtkzngksuijvv ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , odvcahphmcynnsmgeflr ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( ijrzohnqvrgfehbioghl , xtxcnentacjnwfxkylkz ) ; } <s> new serializer method and fixed logging libraries issues
fix_before_refactoring: public static < T > void serialize ( T object , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
fix_after_refactoring: public static < T > void serialize ( T ijrzohnqvrgfehbioghl , java.io.OutputStream xtxcnentacjnwfxkylkz , java.lang.String odvcahphmcynnsmgeflr ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( ijrzohnqvrgfehbioghl . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , odvcahphmcynnsmgeflr ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( ijrzohnqvrgfehbioghl , xtxcnentacjnwfxkylkz ) ; }
× fix_prediction_before: public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
× fix_prediction_after: public static < T > void serialize ( T ijrzohnqvrgfehbioghl , java.io.OutputStream xtxcnentacjnwfxkylkz , java.lang.String odvcahphmcynnsmgeflr ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( bozudmngtkzngksuijvv ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , odvcahphmcynnsmgeflr ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( ijrzohnqvrgfehbioghl , xtxcnentacjnwfxkylkz ) ; }

line_index: 201
bug_before_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> Fixed errors when editing
bug_after_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > aaylbhxbyyjcanhkzxys ) { try { java.util.List < java.util.Date > dateList = aaylbhxbyyjcanhkzxys . get () ; if ( ( dateList . size () ) == 2 ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . of ( aaylbhxbyyjcanhkzxys . get () . get ( 0 ) ) ; } else { this . aaylbhxbyyjcanhkzxys = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > aaylbhxbyyjcanhkzxys ) { try { java.util.List < java.util.Date > dateList = aaylbhxbyyjcanhkzxys . get () ; if ( ( dateList . size () ) == 2 ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . of ( aaylbhxbyyjcanhkzxys . get () . get ( 0 ) ) ; } else { this . aaylbhxbyyjcanhkzxys = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } <s> Fixed errors when editing
fix_before_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . startDate = java.util.Optional . empty () ; } }
fix_after_refactoring: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > aaylbhxbyyjcanhkzxys ) { try { java.util.List < java.util.Date > dateList = aaylbhxbyyjcanhkzxys . get () ; if ( ( dateList . size () ) == 2 ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . of ( aaylbhxbyyjcanhkzxys . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . empty () ; } }
× fix_prediction_before: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { if ( startDate != null ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } }
× fix_prediction_after: public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > aaylbhxbyyjcanhkzxys ) { if ( ( aaylbhxbyyjcanhkzxys . size () ) >= 2 ) { this . aaylbhxbyyjcanhkzxys = java.util.Optional . of ( aaylbhxbyyjcanhkzxys . get () . get ( 0 ) ) ; } else { this . aaylbhxbyyjcanhkzxys = java.util.Optional . empty () ; } }

line_index: 202
bug_before_refactoring: private com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; } <s> private com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; } <s> Issue#109. [Core] use entry processors for all operations on documents 1. Fix tests in bagri-server-hazelcast + remove unused code and imports 2. Remove redundant dependency from bagri-rest 3. Use entry processor for document removal
bug_after_refactoring: private com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema mgrecvrbkqqjfaegllob , java.lang.String vekalhasvocoyhwaqcfn ) { for ( com.bagri.core.system.Collection collect : mgrecvrbkqqjfaegllob . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( vekalhasvocoyhwaqcfn . equals ( cPath ) ) ) { return collect ; } } return null ; } <s> private com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema mgrecvrbkqqjfaegllob , java.lang.String vekalhasvocoyhwaqcfn ) { for ( com.bagri.core.system.Collection collect : mgrecvrbkqqjfaegllob . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( vekalhasvocoyhwaqcfn . equals ( cPath ) ) ) { return collect ; } } return null ; } <s> Issue#109. [Core] use entry processors for all operations on documents 1. Fix tests in bagri-server-hazelcast + remove unused code and imports 2. Remove redundant dependency from bagri-rest 3. Use entry processor for document removal
fix_before_refactoring: private java.util.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( java.util.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; }
fix_after_refactoring: private java.util.Collection getTypedCollection ( com.bagri.core.system.Schema mgrecvrbkqqjfaegllob , java.lang.String vekalhasvocoyhwaqcfn ) { for ( java.util.Collection collect : mgrecvrbkqqjfaegllob . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( vekalhasvocoyhwaqcfn . equals ( cPath ) ) ) { return collect ; } } return null ; }
× fix_prediction_before: protected com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; }
× fix_prediction_after: private java.util.Collection getTypedCollection ( com.bagri.core.system.Schema mgrecvrbkqqjfaegllob , java.lang.String vekalhasvocoyhwaqcfn ) { for ( com.bagri.core.system.Collection collect : mgrecvrbkqqjfaegllob . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( vekalhasvocoyhwaqcfn . equals ( cPath ) ) ) { return collect ; } } return null ; }

line_index: 203
bug_before_refactoring: protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; } <s> protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; } <s> LPS-70801 Fix bug ion recent bloggers portlet preferences processing
bug_after_refactoring: protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext qxeofnhekrijdgvqjtte , javax.portlet.PortletPreferences mpagvxblioaxxfklgxow ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( mpagvxblioaxxfklgxow . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( qxeofnhekrijdgvqjtte . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( qxeofnhekrijdgvqjtte , mpagvxblioaxxfklgxow , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return mpagvxblioaxxfklgxow ; } <s> protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext qxeofnhekrijdgvqjtte , javax.portlet.PortletPreferences mpagvxblioaxxfklgxow ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( mpagvxblioaxxfklgxow . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( qxeofnhekrijdgvqjtte . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( qxeofnhekrijdgvqjtte , mpagvxblioaxxfklgxow , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return mpagvxblioaxxfklgxow ; } <s> LPS-70801 Fix bug ion recent bloggers portlet preferences processing
fix_before_refactoring: protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; return portletPreferences ; }
fix_after_refactoring: protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext qxeofnhekrijdgvqjtte , javax.portlet.PortletPreferences mpagvxblioaxxfklgxow ) throws java.lang.Exception { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( qxeofnhekrijdgvqjtte . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( qxeofnhekrijdgvqjtte , mpagvxblioaxxfklgxow , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; return mpagvxblioaxxfklgxow ; }
× fix_prediction_before: protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; }
× fix_prediction_after: protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext qxeofnhekrijdgvqjtte , javax.portlet.PortletPreferences mpagvxblioaxxfklgxow ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( mpagvxblioaxxfklgxow . getValue ( "organizationId" , null ) ) ; com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( qxeofnhekrijdgvqjtte . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( qxeofnhekrijdgvqjtte , mpagvxblioaxxfklgxow , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; return mpagvxblioaxxfklgxow ; }

line_index: 204
bug_before_refactoring: public void addItem ( item.Item i ) { item.Item item = i . clone () ; if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } <s> public void addItem ( item.Item i ) { item.Item item = i . clone () ; if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } <s> Fix bug where adding items to a shop changes the count of the template item
bug_after_refactoring: publqcmwiladitgtjaletfabc voqcmwiladitgtjaletfabd addItem ( qcmwiladitgtjaletfabtem.Item qcmwiladitgtjaletfab ) { qcmwiladitgtjaletfabtem.Item qcmwiladitgtjaletfabtem = qcmwiladitgtjaletfab . clone () ; qcmwiladitgtjaletfabf ( qcmwiladitgtjaletfab.qcmwiladitgtjaletfabsStackable ) { qcmwiladitgtjaletfabnt loc = fqcmwiladitgtjaletfabndShopItemLoc ( qcmwiladitgtjaletfab ) ; qcmwiladitgtjaletfabf ( loc >= 0 ) { qcmwiladitgtjaletfabtems . get ( loc ) . count += qcmwiladitgtjaletfab.count ; } else { qcmwiladitgtjaletfabtems . add ( qcmwiladitgtjaletfabtem ) ; } } else { qcmwiladitgtjaletfabtems . add ( qcmwiladitgtjaletfabtem ) ; } } <s> publqcmwiladitgtjaletfabc voqcmwiladitgtjaletfabd addItem ( qcmwiladitgtjaletfabtem.Item qcmwiladitgtjaletfab ) { qcmwiladitgtjaletfabtem.Item qcmwiladitgtjaletfabtem = qcmwiladitgtjaletfab . clone () ; qcmwiladitgtjaletfabf ( qcmwiladitgtjaletfab.qcmwiladitgtjaletfabsStackable ) { qcmwiladitgtjaletfabnt loc = fqcmwiladitgtjaletfabndShopItemLoc ( qcmwiladitgtjaletfab ) ; qcmwiladitgtjaletfabf ( loc >= 0 ) { qcmwiladitgtjaletfabtems . get ( loc ) . count += qcmwiladitgtjaletfab.count ; } else { qcmwiladitgtjaletfabtems . add ( qcmwiladitgtjaletfabtem ) ; } } else { qcmwiladitgtjaletfabtems . add ( qcmwiladitgtjaletfabtem ) ; } } <s> Fix bug where adding items to a shop changes the count of the template item
fix_before_refactoring: public void addItem ( item.Item i , int count ) { item.Item item = i . clone () ; if ( count != ( - 1 ) ) { item.count = count ; } if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += item.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
fix_after_refactoring: publqcmwiladitgtjaletfabc voqcmwiladitgtjaletfabd addItem ( qcmwiladitgtjaletfabtem.Item qcmwiladitgtjaletfab , qcmwiladitgtjaletfabnt count ) { qcmwiladitgtjaletfabtem.Item qcmwiladitgtjaletfabtem = qcmwiladitgtjaletfab . clone () ; qcmwiladitgtjaletfabf ( count != ( - 1 ) ) { qcmwiladitgtjaletfabtem.count = count ; } qcmwiladitgtjaletfabf ( qcmwiladitgtjaletfab.qcmwiladitgtjaletfabsStackable ) { qcmwiladitgtjaletfabnt loc = fqcmwiladitgtjaletfabndShopItemLoc ( qcmwiladitgtjaletfab ) ; qcmwiladitgtjaletfabf ( loc >= 0 ) { qcmwiladitgtjaletfabtems . get ( loc ) . count += qcmwiladitgtjaletfabtem.count ; } else { qcmwiladitgtjaletfabtems . add ( qcmwiladitgtjaletfabtem ) ; } } else { qcmwiladitgtjaletfabtems . add ( qcmwiladitgtjaletfabtem ) ; } }
× fix_prediction_before: public void addItem ( item.Item i ) { item.Item item = i . clone () ; int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } }
× fix_prediction_after: { publqcmwiladitgtjaletfabc voqcmwiladitgtjaletfabd addItem ( qcmwiladitgtjaletfabtem.Item qcmwiladitgtjaletfab ) { qcmwiladitgtjaletfabtem.Item qcmwiladitgtjaletfabtem = qcmwiladitgtjaletfab . clone () ; qcmwiladitgtjaletfabf ( qcmwiladitgtjaletfab.qcmwiladitgtjaletfabsStackable ) { qcmwiladitgtjaletfabnt loc = fqcmwiladitgtjaletfabndShopItemLoc ( qcmwiladitgtjaletfab ) ; qcmwiladitgtjaletfabf ( loc >= 0 ) { qcmwiladitgtjaletfabtems . get ( loc ) . count += qcmwiladitgtjaletfab.count ; } else { qcmwiladitgtjaletfabtems . add ( qcmwiladitgtjaletfabtem ) ; } } else { qcmwiladitgtjaletfabtems . add ( qcmwiladitgtjaletfabtem ) ; } }

line_index: 205
bug_before_refactoring: @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( id ) ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } <s> @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( id ) ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } <s> Merge pull request #187 from pushtorefresh/issue-175  Improve DefaultPutResolver work with id as Object
bug_after_refactoring: @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb zuusfihdmhwhuwvtbzet , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull androvyrjbekkrqmbyuyisffx.content.ContentValues jwxnoilxdlbunfkqaeiv , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull java.lang.String bswhktpdovlxvrvsmbqg , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull final java.lang.String cynpavuxolnkpvzncumu , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull java.lang.Object vyrjbekkrqmbyuyisffx ) { final int numberOfRowsUpdated = zuusfihdmhwhuwvtbzet . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . bswhktpdovlxvrvsmbqg ( bswhktpdovlxvrvsmbqg ) . where ( ( cynpavuxolnkpvzncumu + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( vyrjbekkrqmbyuyisffx ) ) . build () , jwxnoilxdlbunfkqaeiv ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , bswhktpdovlxvrvsmbqg ) : insert ( zuusfihdmhwhuwvtbzet , jwxnoilxdlbunfkqaeiv , bswhktpdovlxvrvsmbqg ) ; } <s> @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb zuusfihdmhwhuwvtbzet , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull androvyrjbekkrqmbyuyisffx.content.ContentValues jwxnoilxdlbunfkqaeiv , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull java.lang.String bswhktpdovlxvrvsmbqg , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull final java.lang.String cynpavuxolnkpvzncumu , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull java.lang.Object vyrjbekkrqmbyuyisffx ) { final int numberOfRowsUpdated = zuusfihdmhwhuwvtbzet . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . bswhktpdovlxvrvsmbqg ( bswhktpdovlxvrvsmbqg ) . where ( ( cynpavuxolnkpvzncumu + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( vyrjbekkrqmbyuyisffx ) ) . build () , jwxnoilxdlbunfkqaeiv ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , bswhktpdovlxvrvsmbqg ) : insert ( zuusfihdmhwhuwvtbzet , jwxnoilxdlbunfkqaeiv , bswhktpdovlxvrvsmbqg ) ; } <s> Merge pull request #187 from pushtorefresh/issue-175  Improve DefaultPutResolver work with id as Object
fix_before_refactoring: @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.String id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( id ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; }
fix_after_refactoring: @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb zuusfihdmhwhuwvtbzet , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull androvyrjbekkrqmbyuyisffx.content.ContentValues jwxnoilxdlbunfkqaeiv , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull java.lang.String bswhktpdovlxvrvsmbqg , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull java.lang.String cynpavuxolnkpvzncumu , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull java.lang.String vyrjbekkrqmbyuyisffx ) { final int numberOfRowsUpdated = zuusfihdmhwhuwvtbzet . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . bswhktpdovlxvrvsmbqg ( bswhktpdovlxvrvsmbqg ) . where ( ( cynpavuxolnkpvzncumu + "=?" ) ) . whereArgs ( vyrjbekkrqmbyuyisffx ) . build () , jwxnoilxdlbunfkqaeiv ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , bswhktpdovlxvrvsmbqg ) : insert ( zuusfihdmhwhuwvtbzet , jwxnoilxdlbunfkqaeiv , bswhktpdovlxvrvsmbqg ) ; }
× fix_prediction_before: @ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( id ) ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; }
× fix_prediction_after: @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb zuusfihdmhwhuwvtbzet , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull androvyrjbekkrqmbyuyisffx.content.ContentValues jwxnoilxdlbunfkqaeiv , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull java.lang.String bswhktpdovlxvrvsmbqg , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull final java.lang.String cynpavuxolnkpvzncumu , @ androvyrjbekkrqmbyuyisffx.support.annotation.NonNull java.lang.Object vyrjbekkrqmbyuyisffx ) { final int numberOfRowsUpdated = zuusfihdmhwhuwvtbzet . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . bswhktpdovlxvrvsmbqg ( bswhktpdovlxvrvsmbqg ) . where ( ( cynpavuxolnkpvzncumu + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( vyrjbekkrqmbyuyisffx ) ) . build () , jnoilxdlbunfkqaeiv ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . updateOrInsert ( new com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb zuusfihdmhwhuwvtbzet ) . build

line_index: 206
bug_before_refactoring: public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures , lastUpdated ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . setLastUpdated ( lastUpdated ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures , lastUpdated ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . setLastUpdated ( lastUpdated ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Added new Chapman resource and fixed parsing. Added debug build configurations
bug_after_refactoring: public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] uagviwlrfgyancqynopw , java.util.Date zbraaawvuvzgqywxoqko ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , uagviwlrfgyancqynopw , zbraaawvuvzgqywxoqko ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( uagviwlrfgyancqynopw ) ; spotsListAdapter . setLastUpdated ( zbraaawvuvzgqywxoqko ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] uagviwlrfgyancqynopw , java.util.Date zbraaawvuvzgqywxoqko ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , uagviwlrfgyancqynopw , zbraaawvuvzgqywxoqko ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( uagviwlrfgyancqynopw ) ; spotsListAdapter . setLastUpdated ( zbraaawvuvzgqywxoqko ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } <s> Added new Chapman resource and fixed parsing. Added debug build configurations
fix_before_refactoring: public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; }
fix_after_refactoring: public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] uagviwlrfgyancqynopw ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , uagviwlrfgyancqynopw ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( uagviwlrfgyancqynopw ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; }
× fix_prediction_before: public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures , lastUpdated ) ; listView . setAdapter ( spotsListAdapter ) ; } spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . setLastUpdated ( lastUpdated ) ; spotsListAdapter . notifyDataSetChanged () ; mSwipeRefreshLayout . setRefreshing ( false ) ; }
× fix_prediction_after: public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] uagviwlrfgyancqynopw , java.util.Date zbraaawvuvzgqywxoqko ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , uagviwlrfgyancqynopw , zbraaawvuvzgqywxoqko ) ; listView . setAdapter ( spotsListAdapter ) ; } spotsListAdapter . setStructures ( uagviwlrfgyancqynopw ) ; spotsListAdapter . setLastUpdated ( zbraaawvuvzgqywxoqko ) ; spotsListAdapter . notifyDataSetChanged () ; mSwipeRefreshLayout . setRefreshing ( false ) ; }

line_index: 207
bug_before_refactoring: public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } <s> public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } <s> Fixing bugs
bug_after_refactoring: public static void main ( java.lang.String [] tddlaqxjmweruvoyuwve ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } <s> public static void main ( java.lang.String [] tddlaqxjmweruvoyuwve ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } <s> Fixing bugs
fix_before_refactoring: public static void main ( java.lang.String [] args ) throws java.io.IOException , java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; sconn = new java.net.ServerSocket ( port ) ; while ( true ) { try { conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } }
fix_after_refactoring: public static void main ( java.lang.String [] tddlaqxjmweruvoyuwve ) throws java.io.IOException , java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; sconn = new java.net.ServerSocket ( port ) ; while ( true ) { try { conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } }
× fix_prediction_before: public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn ; java.net.Socket conn = null ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } }
× fix_prediction_after: public static void main ( java.lang.String [] tddlaqxjmweruvoyuwve ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } }

line_index: 208
bug_before_refactoring: public java.util.Collection getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } } <s> public java.util.Collection getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } } <s> deepCopy Bug Fix
bug_after_refactoring: public java.util.Collection getAllSubTasks ( java.lang.String knfmtauwweodznktfvaa ) { if ( ( knfmtauwweodznktfvaa == null ) || ( ( knfmtauwweodznktfvaa . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( knfmtauwweodznktfvaa ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } } <s> public java.util.Collection getAllSubTasks ( java.lang.String knfmtauwweodznktfvaa ) { if ( ( knfmtauwweodznktfvaa == null ) || ( ( knfmtauwweodznktfvaa . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( knfmtauwweodznktfvaa ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } } <s> deepCopy Bug Fix
fix_before_refactoring: public java.util.Collection < net.sf.memoranda.Task > getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; return task . getSubTasks () ; } }
fix_after_refactoring: public java.util.Collection < net.sf.memoranda.Task > getAllSubTasks ( java.lang.String knfmtauwweodznktfvaa ) { if ( ( knfmtauwweodznktfvaa == null ) || ( ( knfmtauwweodznktfvaa . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( knfmtauwweodznktfvaa ) ; return task . getSubTasks () ; } }
× fix_prediction_before: public java.util.Collection getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; }
× fix_prediction_after: public java.util.Collection getAllSubTasks () { if ( ( knfmtauwweodznktfvaa == null ) || ( ( knfmtauwweodznktfvaa . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement () ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } }

line_index: 209
bug_before_refactoring: public synchronized java.lang.String getSpeed ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } <s> public synchronized java.lang.String getSpeed ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } <s> fixbug : stats of source missed some bytes
bug_after_refactoring: public synchronized java.lang.String getSpeed ( long ewwrjpsqsrjnxxtdddtd ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += ewwrjpsqsrjnxxtdddtd ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( ewwrjpsqsrjnxxtdddtd / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } <s> public synchronized java.lang.String getSpeed ( long ewwrjpsqsrjnxxtdddtd ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += ewwrjpsqsrjnxxtdddtd ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( ewwrjpsqsrjnxxtdddtd / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } <s> fixbug : stats of source missed some bytes
fix_before_refactoring: public java.lang.String getSpeed ( long size ) { synchronized ( this ) { sum += size ; } long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; }
fix_after_refactoring: public java.lang.String getSpeed ( long ewwrjpsqsrjnxxtdddtd ) { synchronized ( this ) { sum += ewwrjpsqsrjnxxtdddtd ; } long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( ewwrjpsqsrjnxxtdddtd / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; }
× fix_prediction_before: private synchronized java.lang.String getSpeed ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; }
× fix_prediction_after: public synchronized java.lang.String getSpeed ( long ewwrjpsqsrjnxxtdddtd ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; if ( t == 0 ) return "MAX" ; sum += ewwrjpsqsrjnxxtdddtd ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( ewwrjpsqsrjnxxtdddtd / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; }

line_index: 211
bug_before_refactoring: static int minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; } <s> static int minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; } <s> Fixed minimax bug  added State(state) constructor
bug_after_refactoring: static int minimaxDecision ( State egtovrsqmetfrhxgzkqp ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( egtovrsqmetfrhxgzkqp ) ) { int temp = Minimax . minValue ( Minimax . result ( egtovrsqmetfrhxgzkqp , a ) ) ; if ( temp > v ) { action = a ; } } return action ; } <s> static int minimaxDecision ( State egtovrsqmetfrhxgzkqp ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( egtovrsqmetfrhxgzkqp ) ) { int temp = Minimax . minValue ( Minimax . result ( egtovrsqmetfrhxgzkqp , a ) ) ; if ( temp > v ) { action = a ; } } return action ; } <s> Fixed minimax bug  added State(state) constructor
fix_before_refactoring: public static int minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { v = temp ; action = a ; } } return action ; }
fix_after_refactoring: public static int minimaxDecision ( State egtovrsqmetfrhxgzkqp ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( egtovrsqmetfrhxgzkqp ) ) { int temp = Minimax . minValue ( Minimax . result ( egtovrsqmetfrhxgzkqp , a ) ) ; if ( temp > v ) { v = temp ; action = a ; } } return action ; }
× fix_prediction_before: static int minimaxDecision ( State state , int value ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; }
× fix_prediction_after: static int minimaxDecision ( State egtovrsqmetfrhxgzkqp , int v ) { int action = 0 ; for ( int a : Minimax . actions ( egtovrsqmetfrhxgzkqp ) ) { int temp = Minimax . minValue ( Minimax . result ( egtovrsqmetfrhxgzkqp , a ) ) ; if ( temp > v ) { action = a ; } } return action ; }

line_index: 212
bug_before_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } } return null ; } <s> public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } } return null ; } <s> Bug Fix: avoid unnecessary and blocking-prone synchronized
bug_after_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User okthrxfmswqeyzndrjks , final javax.servlet.http.HttpServletRequest gkhkygmbmramuoiquaxz ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ) { return iuLisboaRedirectionHandler . redirectionPath ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ; } } } return null ; } <s> public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User okthrxfmswqeyzndrjks , final javax.servlet.http.HttpServletRequest gkhkygmbmramuoiquaxz ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ) { return iuLisboaRedirectionHandler . redirectionPath ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ; } } } return null ; } <s> Bug Fix: avoid unnecessary and blocking-prone synchronized
fix_before_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } return null ; }
fix_after_refactoring: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User okthrxfmswqeyzndrjks , final javax.servlet.http.HttpServletRequest gkhkygmbmramuoiquaxz ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ) { return iuLisboaRedirectionHandler . redirectionPath ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ; } } return null ; }
× fix_prediction_before: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } } return null ; }
× fix_prediction_after: public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User okthrxfmswqeyzndrjks , final javax.servlet.http.HttpServletRequest gkhkygmbmramuoiquaxz ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ) { return iuLisboaRedirectionHandler . redirectionPath ( okthrxfmswqeyzndrjks , gkhkygmbmramuoiquaxz ) ; } } } return null ; }

line_index: 213
bug_before_refactoring: public java.lang.Integer getPortForBridge ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; } <s> public java.lang.Integer getPortForBridge ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; } <s> NMS-9335: LoadingTopology from db result in NPE  Fixed an error while calculating bridge bft on briadcast domain. Added a test to check
bug_after_refactoring: public java.lang.Integer getPortForBridge ( java.lang.Integer xjwxebtrutqwsmqdqjkf ) { if ( xjwxebtrutqwsmqdqjkf == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( xjwxebtrutqwsmqdqjkf . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; } <s> public java.lang.Integer getPortForBridge ( java.lang.Integer xjwxebtrutqwsmqdqjkf ) { if ( xjwxebtrutqwsmqdqjkf == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( xjwxebtrutqwsmqdqjkf . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; } <s> NMS-9335: LoadingTopology from db result in NPE  Fixed an error while calculating bridge bft on briadcast domain. Added a test to check
fix_before_refactoring: public org.opennms.netmgt.model.topology.BridgePort getBridgePort ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link ; } return null ; }
fix_after_refactoring: public org.opennms.netmgt.model.topology.BridgePort getBridgePort ( java.lang.Integer xjwxebtrutqwsmqdqjkf ) { if ( xjwxebtrutqwsmqdqjkf == null ) return null ; for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( xjwxebtrutqwsmqdqjkf . intValue () ) ) return link ; } return null ; }
× fix_prediction_before: private java.lang.Integer getPortForBridge ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; }
× fix_prediction_after: private java.lang.Integer getPortForBridge ( java.lang.Integer xjwxebtrutqwsmqdqjkf ) { if ( xjwxebtrutqwsmqdqjkf == null ) return null ; if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( xjwxebtrutqwsmqdqjkf . intValue () ) ) return link . getBridgePort () ; } return null ; } return null ; }

line_index: 215
bug_before_refactoring: void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } } <s> void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } } <s> Fixed race condition issues detected by the multi-threaded mess test.
bug_after_refactoring: void register ( com.kk.hfupkyoabjlsgsmclhdi.Bus hfupkyoabjlsgsmclhdi , java.lang.Object kwtlbtorbutcimlpxxab , java.util.Set < java.lang.reflect.Method > vdinaitlpekicxmhttdk , com.kk.hfupkyoabjlsgsmclhdi.DeliveryContext tkqxtqgfhkgxddvmsfed ) { synchronized ( this ) { com.kk.hfupkyoabjlsgsmclhdi.EventDeliverer eventDeliverer = mObjectDeliverers . get ( kwtlbtorbutcimlpxxab ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.hfupkyoabjlsgsmclhdi.EventDeliverer ( hfupkyoabjlsgsmclhdi , kwtlbtorbutcimlpxxab , tkqxtqgfhkgxddvmsfed ) ; mObjectDeliverers . put ( kwtlbtorbutcimlpxxab , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( vdinaitlpekicxmhttdk ) ; } } <s> void register ( com.kk.hfupkyoabjlsgsmclhdi.Bus hfupkyoabjlsgsmclhdi , java.lang.Object kwtlbtorbutcimlpxxab , java.util.Set < java.lang.reflect.Method > vdinaitlpekicxmhttdk , com.kk.hfupkyoabjlsgsmclhdi.DeliveryContext tkqxtqgfhkgxddvmsfed ) { synchronized ( this ) { com.kk.hfupkyoabjlsgsmclhdi.EventDeliverer eventDeliverer = mObjectDeliverers . get ( kwtlbtorbutcimlpxxab ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.hfupkyoabjlsgsmclhdi.EventDeliverer ( hfupkyoabjlsgsmclhdi , kwtlbtorbutcimlpxxab , tkqxtqgfhkgxddvmsfed ) ; mObjectDeliverers . put ( kwtlbtorbutcimlpxxab , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( vdinaitlpekicxmhttdk ) ; } } <s> Fixed race condition issues detected by the multi-threaded mess test.
fix_before_refactoring: synchronized void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; }
fix_after_refactoring: synchronized void register ( com.kk.hfupkyoabjlsgsmclhdi.Bus hfupkyoabjlsgsmclhdi , java.lang.Object kwtlbtorbutcimlpxxab , java.util.Set < java.lang.reflect.Method > vdinaitlpekicxmhttdk , com.kk.hfupkyoabjlsgsmclhdi.DeliveryContext tkqxtqgfhkgxddvmsfed ) { com.kk.hfupkyoabjlsgsmclhdi.EventDeliverer eventDeliverer = mObjectDeliverers . get ( kwtlbtorbutcimlpxxab ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.hfupkyoabjlsgsmclhdi.EventDeliverer ( hfupkyoabjlsgsmclhdi , kwtlbtorbutcimlpxxab , tkqxtqgfhkgxddvmsfed ) ; mObjectDeliverers . put ( kwtlbtorbutcimlpxxab , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( vdinaitlpekicxmhttdk ) ; }
× fix_prediction_before: void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods ) { synchronized ( this ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } }
× fix_prediction_after: void register ( com.kk.hfupkyoabjlsgsmclhdi.Bus hfupkyoabjlsgsmclhdi , java.lang.Object kwtlbtorbutcimlpxxab , java.util.Set < java.lang.reflect.Method > vdinaitlpekicxmhttdk , com.kk.hfupkyoabjlsgsmclhdi.DeliveryContext tkqxtqgfhkgxddvmsfed ) { com.kk.hfupkyoabjlsgsmclhdi.EventDeliverer eventDeliverer = mObjectDeliverers . get ( kwtlbtorbutcimlpxxab ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.hfupkyoabjlsgsmclhdi.EventDeliverer ( hfupkyoabjlsgsmclhdi , kwtlbtorbutcimlpxxab , tkqxtqgfhkgxddvmsfed ) ; mObjectDeliverers . put ( kwtlbtorbutcimlpxxab , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( vdinaitlpekicxmhttdk ) ; }

line_index: 217
bug_before_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } <s> @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } <s> fix bug with change audio state when list of station haven't loaded
bug_after_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station bnjqznusjpzoyyqstjjv ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( bnjqznusjpzoyyqstjjv . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } <s> @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station bnjqznusjpzoyyqstjjv ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( bnjqznusjpzoyyqstjjv . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } <s> fix bug with change audio state when list of station haven't loaded
fix_before_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; if ( station != null ) { listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
fix_after_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station bnjqznusjpzoyyqstjjv ) { currentState = State.IS_WAIT ; if ( bnjqznusjpzoyyqstjjv != null ) { listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( bnjqznusjpzoyyqstjjv . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
× fix_prediction_before: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( ( mediaPlayer ) != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } }
× fix_prediction_after: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station bnjqznusjpzoyyqstjjv ) { if ( ( mediaPlayer ) == null ) initPlayer ( bnjqznusjpzoyyqstjjv . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } }

line_index: 218
bug_before_refactoring: protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } <s> protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } <s> Fix GUI tooltip rendering bug and other tooltip things
bug_after_refactoring: protected boolean isHovered ( int edhzikybkojistoujwxm , int tvsvlefajzqyhnqialnd ) { return ( ( ( edhzikybkojistoujwxm >= ( xPosition ) ) && ( edhzikybkojistoujwxm <= ( ( xPosition ) + ( width ) ) ) ) && ( tvsvlefajzqyhnqialnd >= ( yPosition ) ) ) && ( tvsvlefajzqyhnqialnd <= ( ( yPosition ) + ( height ) ) ) ; } <s> protected boolean isHovered ( int edhzikybkojistoujwxm , int tvsvlefajzqyhnqialnd ) { return ( ( ( edhzikybkojistoujwxm >= ( xPosition ) ) && ( edhzikybkojistoujwxm <= ( ( xPosition ) + ( width ) ) ) ) && ( tvsvlefajzqyhnqialnd >= ( yPosition ) ) ) && ( tvsvlefajzqyhnqialnd <= ( ( yPosition ) + ( height ) ) ) ; } <s> Fix GUI tooltip rendering bug and other tooltip things
fix_before_refactoring: public boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; }
fix_after_refactoring: public boolean isHovered ( int edhzikybkojistoujwxm , int tvsvlefajzqyhnqialnd ) { return ( ( ( edhzikybkojistoujwxm >= ( xPosition ) ) && ( edhzikybkojistoujwxm <= ( ( xPosition ) + ( width ) ) ) ) && ( tvsvlefajzqyhnqialnd >= ( yPosition ) ) ) && ( tvsvlefajzqyhnqialnd <= ( ( yPosition ) + ( height ) ) ) ; }
× fix_prediction_before: protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; }
× fix_prediction_after: protected boolean isHovered ( int xPosition , int yPosition ) { return ( ( ( edhzikybkojistoujwxm >= ( xPosition ) ) && ( edhzikybkojistoujwxm <= ( ( xPosition ) + ( width ) ) ) ) && ( xPosition >= ( yPosition ) ) ) && ( yPosition <= ( ( yPosition ) + ( height ) ) ) ; }

line_index: 219
bug_before_refactoring: public int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; } <s> public int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; } <s> Fixed threading drawing bug in Histograms.
bug_after_refactoring: public int wibribzbvpbogzrgzxdkToPiwibribzbvpbogzrgzxdkel ( double wibribzbvpbogzrgzxdk , mesquite.lib.MesquiteChart jddjrdvpxfthwplfdnqv ) { tempNum . setValue ( wibribzbvpbogzrgzxdk ) ; int fieldWidth = jddjrdvpxfthwplfdnqv . getFieldWidth () ; int margin = jddjrdvpxfthwplfdnqv . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , mawibribzbvpbogzrgzxdkX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( jddjrdvpxfthwplfdnqv . getXPiwibribzbvpbogzrgzxdkelBase () ) ; } <s> public int wibribzbvpbogzrgzxdkToPiwibribzbvpbogzrgzxdkel ( double wibribzbvpbogzrgzxdk , mesquite.lib.MesquiteChart jddjrdvpxfthwplfdnqv ) { tempNum . setValue ( wibribzbvpbogzrgzxdk ) ; int fieldWidth = jddjrdvpxfthwplfdnqv . getFieldWidth () ; int margin = jddjrdvpxfthwplfdnqv . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , mawibribzbvpbogzrgzxdkX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( jddjrdvpxfthwplfdnqv . getXPiwibribzbvpbogzrgzxdkelBase () ) ; } <s> Fixed threading drawing bug in Histograms.
fix_before_refactoring: public synchronized int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; int value = ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; return value ; }
fix_after_refactoring: public synchronized int wibribzbvpbogzrgzxdkToPiwibribzbvpbogzrgzxdkel ( double wibribzbvpbogzrgzxdk , mesquite.lib.MesquiteChart jddjrdvpxfthwplfdnqv ) { tempNum . setValue ( wibribzbvpbogzrgzxdk ) ; int fieldWidth = jddjrdvpxfthwplfdnqv . getFieldWidth () ; int margin = jddjrdvpxfthwplfdnqv . getMargin () ; int value = ( margin + ( tempNum . setWithinBounds ( minX , mawibribzbvpbogzrgzxdkX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( jddjrdvpxfthwplfdnqv . getXPiwibribzbvpbogzrgzxdkelBase () ) ; return value ; }
× fix_prediction_before: public int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { synchronized ( tempNum ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; } }
× fix_prediction_after: public int wibribzbvpbogzrgzxdkToPiwibribzbvpbogzrgzxdkel ( double wibribzbvpbogzrgzxdk , mesquite.lib.MesquiteChart jddjrdvpxfthwplfdnqv ) { tempNum . setValue ( wibribzbvpbogzrgzxdk ) ; int fieldWidth = jddjrdvpxfthwplfdnqv . getFieldWidth () ; int margin = jddjrdvpxfthwplfdnqv . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( minX , mawibribzbvpbogzrgzxdkX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( jddjrdvpxfthwplfdnqv . getXPiwibribzbvpbogzrgzxdkelBase () ) ; }

line_index: 220
bug_before_refactoring: @ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } <s> @ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } <s> fix chromecast issues.  Signed-off-by: Jianmin Zhou <jianmin.zhou@acadine.com>
bug_after_refactoring: @ java.lang.Override public void onSuccess ( final java.lang.Float qsmackyvjiwuepvqmrol ) { if ( qsmackyvjiwuepvqmrol <= 0.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( qsmackyvjiwuepvqmrol - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } <s> @ java.lang.Override public void onSuccess ( final java.lang.Float qsmackyvjiwuepvqmrol ) { if ( qsmackyvjiwuepvqmrol <= 0.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( qsmackyvjiwuepvqmrol - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } <s> fix chromecast issues.  Signed-off-by: Jianmin Zhou <jianmin.zhou@acadine.com>
fix_before_refactoring: @ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume >= 1.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume + 0.01 ) ) ; if ( newVolume > 1.0 ) newVolume = ( ( float ) ( 1.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } }
fix_after_refactoring: @ java.lang.Override public void onSuccess ( final java.lang.Float qsmackyvjiwuepvqmrol ) { if ( qsmackyvjiwuepvqmrol >= 1.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( qsmackyvjiwuepvqmrol + 0.01 ) ) ; if ( newVolume > 1.0 ) newVolume = ( ( float ) ( 1.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } }
× fix_prediction_before: @ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; }
× fix_prediction_after: @ java.lang.Override public void onSuccess ( final java.lang.Float qsmackyvjiwuepvqmrol ) { float newVolume = ( ( float ) ( qsmackyvjiwuepvqmrol - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; }

line_index: 221
bug_before_refactoring: @ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } return false ; } <s> @ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } return false ; } <s> Hopeful bugfixing
bug_after_refactoring: @ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem qsygwcfvmqhyhqupkune ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , qsygwcfvmqhyhqupkune ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , qsygwcfvmqhyhqupkune ) ) { return true ; } } return false ; } <s> @ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem qsygwcfvmqhyhqupkune ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , qsygwcfvmqhyhqupkune ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , qsygwcfvmqhyhqupkune ) ) { return true ; } } return false ; } <s> Hopeful bugfixing
fix_before_refactoring: public boolean checkImpl ( wjtoth.cyclicstablematching.Matching matching , wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { return false ; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } return false ; }
fix_after_refactoring: public boolean checkImpl ( wjtoth.cyclicstablematching.Matching matching , wjtoth.cyclicstablematching.PreferenceSystem qsygwcfvmqhyhqupkune ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , qsygwcfvmqhyhqupkune ) ; if ( ( mathcingPS . size () ) == 0 ) { return false ; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , qsygwcfvmqhyhqupkune ) ) { return true ; } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; return checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ; } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem qsygwcfvmqhyhqupkune ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , qsygwcfvmqhyhqupkune ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , qsygwcfvmqhyhqupkune ) ) { return true ; } return false ; }

line_index: 222
bug_before_refactoring: protected static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; } <s> protected static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; } <s> Issue #120 - can we solve sin(x) * x =0?
bug_after_refactoring: protected static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST ywbpgfcxaziayjdviocl ) { for ( int i = 1 ; i < ( ywbpgfcxaziayjdviocl . size () ) ; i ++ ) { if ( ywbpgfcxaziayjdviocl . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( ywbpgfcxaziayjdviocl . get ( i ) ) ) ) ; } } return ywbpgfcxaziayjdviocl ; } <s> protected static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST ywbpgfcxaziayjdviocl ) { for ( int i = 1 ; i < ( ywbpgfcxaziayjdviocl . size () ) ; i ++ ) { if ( ywbpgfcxaziayjdviocl . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( ywbpgfcxaziayjdviocl . get ( i ) ) ) ) ; } } return ywbpgfcxaziayjdviocl ; } <s> Issue #120 - can we solve sin(x) * x =0?
fix_before_refactoring: protected static org.matheclipse.core.interfaces.IAST sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; }
fix_after_refactoring: protected static org.matheclipse.core.interfaces.IAST sortResults ( org.matheclipse.core.interfaces.IAST ywbpgfcxaziayjdviocl ) { for ( int i = 1 ; i < ( ywbpgfcxaziayjdviocl . size () ) ; i ++ ) { if ( ywbpgfcxaziayjdviocl . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( ywbpgfcxaziayjdviocl . get ( i ) ) ) ) ; } } return ywbpgfcxaziayjdviocl ; }
× fix_prediction_before: public static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; }
× fix_prediction_after: public static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST ywbpgfcxaziayjdviocl ) { for ( int i = 1 ; i < ( ywbpgfcxaziayjdviocl . size () ) ; i ++ ) { if ( ywbpgfcxaziayjdviocl . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( ywbpgfcxaziayjdviocl . get ( i ) ) ) ) ; } } return ywbpgfcxaziayjdviocl ; }

line_index: 223
bug_before_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "source" , "name" , "values" } ) public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "source" , "name" , "values" } ) public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
bug_after_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "source" , "name" , "values" } ) public static int printData ( java.lang.String [] qxsatduppeabprscibpb ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( qxsatduppeabprscibpb ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "source" , "name" , "values" } ) public static int printData ( java.lang.String [] qxsatduppeabprscibpb ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( qxsatduppeabprscibpb ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
fix_before_refactoring: public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.DataSet stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; }
fix_after_refactoring: public static int printData ( java.lang.String [] qxsatduppeabprscibpb ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( qxsatduppeabprscibpb ) ; org.paces.Stata.Data.DataSet stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; }
× fix_prediction_before: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "source" , "name" , "values" } ) public static java.lang.Object printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.DataSet stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return stataData ; }
× fix_prediction_after: public static int printData ( java.lang.String [] qxsatduppeabprscibpb ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( qxsatduppeabprscibpb ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; }

line_index: 224
bug_before_refactoring: private static weka.core.Instances loadTestFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } <s> private static weka.core.Instances loadTestFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } <s> Fixes various bugs
bug_after_refactoring: private static weka.core.Instances loadTestFile ( java.lang.String zazxvtazyowghwwbtres ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( zazxvtazyowghwwbtres ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } <s> private static weka.core.Instances loadTestFile ( java.lang.String zazxvtazyowghwwbtres ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( zazxvtazyowghwwbtres ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } <s> Fixes various bugs
fix_before_refactoring: private static weka.core.Instances loadTestFile ( java.io.File file ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( file ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
fix_after_refactoring: private static weka.core.Instances loadTestFile ( java.io.File file ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( file ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
× fix_prediction_before: public static weka.core.Instances loadTestFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
× fix_prediction_after: private static weka.core.Instances loadTestFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }

line_index: 225
bug_before_refactoring: private void init ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } <s> private void init ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } <s> [#92189736] Fix cutscene duplication bug by using one bus instance per conversation and clear the cutscene when leaving the activity.
bug_after_refactoring: private void init ( com.shinav.mathapp.db.pojo.CutsceneLine bjuksbhorfrferlmujzb ) { this . bjuksbhorfrferlmujzb = bjuksbhorfrferlmujzb ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( bjuksbhorfrferlmujzb ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( bjuksbhorfrferlmujzb ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } <s> private void init ( com.shinav.mathapp.db.pojo.CutsceneLine bjuksbhorfrferlmujzb ) { this . bjuksbhorfrferlmujzb = bjuksbhorfrferlmujzb ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( bjuksbhorfrferlmujzb ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( bjuksbhorfrferlmujzb ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } <s> [#92189736] Fix cutscene duplication bug by using one bus instance per conversation and clear the cutscene when leaving the activity.
fix_before_refactoring: private void init () { com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; }
fix_after_refactoring: private void init () { com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( bjuksbhorfrferlmujzb ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( bjuksbhorfrferlmujzb ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; }
× fix_prediction_before: public void init ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; }
× fix_prediction_after: public void init ( com.shinav.mathapp.db.pojo.CutsceneLine bjuksbhorfrferlmujzb ) { this . bjuksbhorfrferlmujzb = bjuksbhorfrferlmujzb ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( bjuksbhorfrferlmujzb ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( bjuksbhorfrferlmujzb ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; }

line_index: 226
bug_before_refactoring: public void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> public void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } <s> sonar issue fixed
bug_after_refactoring: public void show404 ( javax.servlet.http.HttpServletRequest cqirxllbuukqlzaxjvjg , javax.servlet.http.HttpServletResponse icmltajnfshzhkbvjioe ) throws java.io.IOException , javax.servlet.ServletException { icmltajnfshzhkbvjioe . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; cqirxllbuukqlzaxjvjg . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = cqirxllbuukqlzaxjvjg . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( cqirxllbuukqlzaxjvjg , icmltajnfshzhkbvjioe ) ; } <s> public void show404 ( javax.servlet.http.HttpServletRequest cqirxllbuukqlzaxjvjg , javax.servlet.http.HttpServletResponse icmltajnfshzhkbvjioe ) throws java.io.IOException , javax.servlet.ServletException { icmltajnfshzhkbvjioe . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; cqirxllbuukqlzaxjvjg . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = cqirxllbuukqlzaxjvjg . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( cqirxllbuukqlzaxjvjg , icmltajnfshzhkbvjioe ) ; } <s> sonar issue fixed
fix_before_refactoring: protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
fix_after_refactoring: protected void show404 ( javax.servlet.http.HttpServletRequest cqirxllbuukqlzaxjvjg , javax.servlet.http.HttpServletResponse icmltajnfshzhkbvjioe ) throws java.io.IOException , javax.servlet.ServletException { icmltajnfshzhkbvjioe . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; cqirxllbuukqlzaxjvjg . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = cqirxllbuukqlzaxjvjg . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( cqirxllbuukqlzaxjvjg , icmltajnfshzhkbvjioe ) ; }
× fix_prediction_before: public void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
× fix_prediction_after: public void show404 ( javax.servlet.http.HttpServletRequest cqirxllbuukqlzaxjvjg , javax.servlet.http.HttpServletResponse icmltajnfshzhkbvjioe ) throws java.io.IOException , javax.servlet.ServletException { icmltajnfshzhkbvjioe . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; cqirxllbuukqlzaxjvjg . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = cqirxllbuukqlzaxjvjg . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( cqirxllbuukqlzaxjvjg , icmltajnfshzhkbvjioe ) ; }

line_index: 228
bug_before_refactoring: static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } <s> static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } <s> Fix a bug in writingDocument where it was failing to roll.
bug_after_refactoring: static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender jgnhvfwjstnuaiecxwhl , java.util.Map < java.lang.String , java.lang.Object > aztvnhoadoscbqxryfmp ) { try ( net.openhft.chronicle.wire.DocumentContext context = jgnhvfwjstnuaiecxwhl . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : aztvnhoadoscbqxryfmp . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } <s> static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender jgnhvfwjstnuaiecxwhl , java.util.Map < java.lang.String , java.lang.Object > aztvnhoadoscbqxryfmp ) { try ( net.openhft.chronicle.wire.DocumentContext context = jgnhvfwjstnuaiecxwhl . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : aztvnhoadoscbqxryfmp . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } <s> Fix a bug in writingDocument where it was failing to roll.
fix_before_refactoring: static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , ? > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , ? > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } }
fix_after_refactoring: static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender jgnhvfwjstnuaiecxwhl , java.util.Map < java.lang.String , ? > aztvnhoadoscbqxryfmp ) { try ( net.openhft.chronicle.wire.DocumentContext context = jgnhvfwjstnuaiecxwhl . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , ? > entry : aztvnhoadoscbqxryfmp . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } }
× fix_prediction_before: static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { net.openhft.chronicle.wire.Wire wire = appender . writingDocument () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } }
× fix_prediction_after: static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender jgnhvfwjstnuaiecxwhl , java.util.Map < java.lang.String , java.lang.Object > aztvnhoadoscbqxryfmp ) { net.openhft.chronicle.wire.Wire wire = jgnhvfwjstnuaiecxryfmp . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : aztvnhoadoscbqxryfmp . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } }

line_index: 229
bug_before_refactoring: public void isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } } <s> public void isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } } <s> Updated button functionality for profile  fixed bug in pedometer
bug_after_refactoring: public void isAddStepsValid ( java.lang.String xydlidtxukbxoaulytco ) { if ( ( xydlidtxukbxoaulytco . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( xydlidtxukbxoaulytco , regex , addSteps ) ; if ( ! ( xydlidtxukbxoaulytco . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . xydlidtxukbxoaulytcoOf ( xydlidtxukbxoaulytco ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } } <s> public void isAddStepsValid ( java.lang.String xydlidtxukbxoaulytco ) { if ( ( xydlidtxukbxoaulytco . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( xydlidtxukbxoaulytco , regex , addSteps ) ; if ( ! ( xydlidtxukbxoaulytco . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . xydlidtxukbxoaulytcoOf ( xydlidtxukbxoaulytco ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } } <s> Updated button functionality for profile  fixed bug in pedometer
fix_before_refactoring: public boolean isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; return false ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; return true ; } } return true ; }
fix_after_refactoring: public boolean isAddStepsValid ( java.lang.String xydlidtxukbxoaulytco ) { if ( ( xydlidtxukbxoaulytco . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( xydlidtxukbxoaulytco , regex , addSteps ) ; if ( ! ( xydlidtxukbxoaulytco . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; return false ; } if ( ( java.lang.Integer . xydlidtxukbxoaulytcoOf ( xydlidtxukbxoaulytco ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; return true ; } } return true ; }
× fix_prediction_before: public void isAddStepsValid ( java.lang.String value ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } }
× fix_prediction_after: public void isAddStepsValid () { if ( ( xydlidtxukbxoaulytco . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( xydlidtxukbxoaulytco , regex , addSteps ) ; if ( ! ( xydlidtxukbxoaulytco . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . xydlidtxukbxoaulytcoOf ( xydlidtxukbxoaulytco ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } }

line_index: 230
bug_before_refactoring: public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits , isAttacker , false ) ; } <s> public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits , isAttacker , false ) ; } <s> AI - Fixed bug with attacks not considering units submerging
bug_after_refactoring: public slsttstqdgorjcagwalrdalsttstqdgorjcagwalrdic games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.lsttstqdgorjcagwalrdriplea.ai.proAI.dalsttstqdgorjcagwalrda.ProBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleResullsttstqdgorjcagwalrd callBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleCalculalsttstqdgorjcagwalrdor ( final games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.PlayerID jlfbmwvlzsfqswalpopm , final games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Terrilsttstqdgorjcagwalrdory lsttstqdgorjcagwalrd , final java.ulsttstqdgorjcagwalrdil.Lislsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Unilsttstqdgorjcagwalrd > alsttstqdgorjcagwalrdlsttstqdgorjcagwalrdackingUnilsttstqdgorjcagwalrds , final java.ulsttstqdgorjcagwalrdil.Lislsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Unilsttstqdgorjcagwalrd > defendingUnilsttstqdgorjcagwalrds , final java.ulsttstqdgorjcagwalrdil.Selsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Unilsttstqdgorjcagwalrd > bombardingUnilsttstqdgorjcagwalrds , final boolean isAlsttstqdgorjcagwalrdlsttstqdgorjcagwalrdacker ) { relsttstqdgorjcagwalrdurn games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.lsttstqdgorjcagwalrdriplea.ai.proAI.ulsttstqdgorjcagwalrdil.ProBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleUlsttstqdgorjcagwalrdils . callBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleCalculalsttstqdgorjcagwalrdor ( jlfbmwvlzsfqswalpopm , lsttstqdgorjcagwalrd , alsttstqdgorjcagwalrdlsttstqdgorjcagwalrdackingUnilsttstqdgorjcagwalrds , defendingUnilsttstqdgorjcagwalrds , bombardingUnilsttstqdgorjcagwalrds , isAlsttstqdgorjcagwalrdlsttstqdgorjcagwalrdacker , false ) ; } <s> public slsttstqdgorjcagwalrdalsttstqdgorjcagwalrdic games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.lsttstqdgorjcagwalrdriplea.ai.proAI.dalsttstqdgorjcagwalrda.ProBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleResullsttstqdgorjcagwalrd callBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleCalculalsttstqdgorjcagwalrdor ( final games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.PlayerID jlfbmwvlzsfqswalpopm , final games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Terrilsttstqdgorjcagwalrdory lsttstqdgorjcagwalrd , final java.ulsttstqdgorjcagwalrdil.Lislsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Unilsttstqdgorjcagwalrd > alsttstqdgorjcagwalrdlsttstqdgorjcagwalrdackingUnilsttstqdgorjcagwalrds , final java.ulsttstqdgorjcagwalrdil.Lislsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Unilsttstqdgorjcagwalrd > defendingUnilsttstqdgorjcagwalrds , final java.ulsttstqdgorjcagwalrdil.Selsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Unilsttstqdgorjcagwalrd > bombardingUnilsttstqdgorjcagwalrds , final boolean isAlsttstqdgorjcagwalrdlsttstqdgorjcagwalrdacker ) { relsttstqdgorjcagwalrdurn games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.lsttstqdgorjcagwalrdriplea.ai.proAI.ulsttstqdgorjcagwalrdil.ProBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleUlsttstqdgorjcagwalrdils . callBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleCalculalsttstqdgorjcagwalrdor ( jlfbmwvlzsfqswalpopm , lsttstqdgorjcagwalrd , alsttstqdgorjcagwalrdlsttstqdgorjcagwalrdackingUnilsttstqdgorjcagwalrds , defendingUnilsttstqdgorjcagwalrds , bombardingUnilsttstqdgorjcagwalrds , isAlsttstqdgorjcagwalrdlsttstqdgorjcagwalrdacker , false ) ; } <s> AI - Fixed bug with attacks not considering units submerging
fix_before_refactoring: public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits , false ) ; }
fix_after_refactoring: public slsttstqdgorjcagwalrdalsttstqdgorjcagwalrdic games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.lsttstqdgorjcagwalrdriplea.ai.proAI.dalsttstqdgorjcagwalrda.ProBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleResullsttstqdgorjcagwalrd callBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleCalculalsttstqdgorjcagwalrdor ( final games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.PlayerID jlfbmwvlzsfqswalpopm , final games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Terrilsttstqdgorjcagwalrdory lsttstqdgorjcagwalrd , final java.ulsttstqdgorjcagwalrdil.Lislsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Unilsttstqdgorjcagwalrd > alsttstqdgorjcagwalrdlsttstqdgorjcagwalrdackingUnilsttstqdgorjcagwalrds , final java.ulsttstqdgorjcagwalrdil.Lislsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Unilsttstqdgorjcagwalrd > defendingUnilsttstqdgorjcagwalrds , final java.ulsttstqdgorjcagwalrdil.Selsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrda.Unilsttstqdgorjcagwalrd > bombardingUnilsttstqdgorjcagwalrds ) { relsttstqdgorjcagwalrdurn games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.lsttstqdgorjcagwalrdriplea.ai.proAI.ulsttstqdgorjcagwalrdil.ProBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleUlsttstqdgorjcagwalrdils . callBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleCalculalsttstqdgorjcagwalrdor ( jlfbmwvlzsfqswalpopm , lsttstqdgorjcagwalrd , alsttstqdgorjcagwalrdlsttstqdgorjcagwalrdackingUnilsttstqdgorjcagwalrds , defendingUnilsttstqdgorjcagwalrds , bombardingUnilsttstqdgorjcagwalrds , false ) ; }
× fix_prediction_before: public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final boolean isAttacker ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits , isAttacker , false ) ; }
× fix_prediction_after: { slsttstqdgorjcagwalrdalsttstqdgorjcagwalrdic games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.lsttstqdgorjcagwalrdriplea.ai.proAI.dalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleResullsttstqdgorjcagwalrd callBalsttstqdgorjcagwalrdlsttstqdgorjcagwalrdleCalculalsttstqdgorjcagwalrdleCalculalsttstqdgorjcagwalrdor ( final games.slsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrdralsttsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrdda.Terrilsttstqdgorjcagwalrdory lsttstqdgorjcagwalrdory lsttstqdgorjcagwalrdory lsttstqdgorjcagwalrdory lsttstqdgorjcagwalrdil.Lislsttstqdgorjcagwalrd < games.slsttstqdgorjcagwalrdralsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrdegy.engine.dalsttstqdgorjcagwalrdegy.lsttstqdgorjcagwalrddsr , false ) ; }

line_index: 231
bug_before_refactoring: public static void toh ( int n , char src , char dest , char aux ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , dest , aux , src ) ; } } <s> public static void toh ( int n , char src , char dest , char aux ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , dest , aux , src ) ; } } <s> Towers of hanoi problem solved using recursive approach
bug_after_refactoring: public static void toh ( ilsgfmzbvskjmeixamblvt lsgfmzbvskjmeixamblv , char ifmoayidramiwpmsssjr , char hbztwgikfrxjflhaihta , char cpfocewpewanizdpfcme ) { if ( lsgfmzbvskjmeixamblv > 0 ) { com.datastructure.stack.problems.TowersOfHalsgfmzbvskjmeixamblvoi . toh ( ( lsgfmzbvskjmeixamblv - 1 ) , ifmoayidramiwpmsssjr , hbztwgikfrxjflhaihta , cpfocewpewanizdpfcme ) ; java.lalsgfmzbvskjmeixamblvg.System.out . prilsgfmzbvskjmeixamblvtllsgfmzbvskjmeixamblv ( ( ( ( ( lsgfmzbvskjmeixamblv + " " ) + ifmoayidramiwpmsssjr ) + "-" ) + hbztwgikfrxjflhaihta ) ) ; com.datastructure.stack.problems.TowersOfHalsgfmzbvskjmeixamblvoi . toh ( ( lsgfmzbvskjmeixamblv - 1 ) , hbztwgikfrxjflhaihta , cpfocewpewanizdpfcme , ifmoayidramiwpmsssjr ) ; } } <s> public static void toh ( ilsgfmzbvskjmeixamblvt lsgfmzbvskjmeixamblv , char ifmoayidramiwpmsssjr , char hbztwgikfrxjflhaihta , char cpfocewpewanizdpfcme ) { if ( lsgfmzbvskjmeixamblv > 0 ) { com.datastructure.stack.problems.TowersOfHalsgfmzbvskjmeixamblvoi . toh ( ( lsgfmzbvskjmeixamblv - 1 ) , ifmoayidramiwpmsssjr , hbztwgikfrxjflhaihta , cpfocewpewanizdpfcme ) ; java.lalsgfmzbvskjmeixamblvg.System.out . prilsgfmzbvskjmeixamblvtllsgfmzbvskjmeixamblv ( ( ( ( ( lsgfmzbvskjmeixamblv + " " ) + ifmoayidramiwpmsssjr ) + "-" ) + hbztwgikfrxjflhaihta ) ) ; com.datastructure.stack.problems.TowersOfHalsgfmzbvskjmeixamblvoi . toh ( ( lsgfmzbvskjmeixamblv - 1 ) , hbztwgikfrxjflhaihta , cpfocewpewanizdpfcme , ifmoayidramiwpmsssjr ) ; } } <s> Towers of hanoi problem solved using recursive approach
fix_before_refactoring: public static void toh ( int n , char src , char aux , char dest ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , aux , src , dest ) ; } }
fix_after_refactoring: public static void toh ( ilsgfmzbvskjmeixamblvt lsgfmzbvskjmeixamblv , char ifmoayidramiwpmsssjr , char cpfocewpewanizdpfcme , char hbztwgikfrxjflhaihta ) { if ( lsgfmzbvskjmeixamblv > 0 ) { com.datastructure.stack.problems.TowersOfHalsgfmzbvskjmeixamblvoi . toh ( ( lsgfmzbvskjmeixamblv - 1 ) , ifmoayidramiwpmsssjr , hbztwgikfrxjflhaihta , cpfocewpewanizdpfcme ) ; java.lalsgfmzbvskjmeixamblvg.System.out . prilsgfmzbvskjmeixamblvtllsgfmzbvskjmeixamblv ( ( ( ( ( lsgfmzbvskjmeixamblv + " " ) + ifmoayidramiwpmsssjr ) + "-" ) + hbztwgikfrxjflhaihta ) ) ; com.datastructure.stack.problems.TowersOfHalsgfmzbvskjmeixamblvoi . toh ( ( lsgfmzbvskjmeixamblv - 1 ) , cpfocewpewanizdpfcme , ifmoayidramiwpmsssjr , hbztwgikfrxjflhaihta ) ; } }
× fix_prediction_before: public static void toh ( int n , char src , char dest , char aux ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , dest , aux , src ) ; } }
× fix_prediction_after: public static void toh ( ilsgfmzbvskjmeixamblvt lsgfmzbvskjmeixamblv , char ifmoayidramiwpmsssjr , char hbztwgikfrxjflhaihta , char cpfocewpewanizdpfcme ) { if ( lsgfmzbvskjmeixamblv > 0 ) { com.datastructure.stack.problems.TowersOfHalsgfmzbvskjmeixamblvoi . toh ( ( lsgfmzbvskjmeixamblv - 1 ) , ifmoayidramiwpmsssjr , hbztwgikfrxjflhaihta , cpfocewpewanizdpfcme ) ; java.lalsgfmzbvskjmeixamblvtllsgfmzbvskjmeixamblv ( ( ( ( ( ( ( lsgfmzbvskjmeixamblv + " " ) + ifmoayidramiwpmsssjr ) + "-" ) + hbztwgikfrxjflhaihta ) ) ; com.datastructure.stack.problems.TowersOfHalsgfmzbvskjmeixamblvoi . toh ( ( lsgfmzbvskjmeixamblv - 1 ) , hbztwgikfrxjflhaihta , cpfocewpewanizdpfcme , ifmoayidramiwpmsssjr ) ; } }

line_index: 232
bug_before_refactoring: public void setNode ( model.ClassNode person ) { this . node = person ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; } <s> public void setNode ( model.ClassNode person ) { this . node = person ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; } <s> Merge pull request #15 from chichoch/fix-multiple-touchpoints-bug  Fix multiple touchpoints bug
bug_after_refactoring: public void setNode ( model.ClassNode udpfryneltrpyvondgfg ) { this . node = udpfryneltrpyvondgfg ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; } <s> public void setNode ( model.ClassNode udpfryneltrpyvondgfg ) { this . node = udpfryneltrpyvondgfg ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; } <s> Merge pull request #15 from chichoch/fix-multiple-touchpoints-bug  Fix multiple touchpoints bug
fix_before_refactoring: public void setNode ( model.ClassNode node ) { this . node = node ; titleField . setText ( this . node . getTitle () ) ; attributesArea . setText ( this . node . attributesProperty () . getValue () ) ; operationsArea . setText ( this . node . operationsProperty () . getValue () ) ; }
fix_after_refactoring: public void setNode ( model.ClassNode node ) { this . node = node ; titleField . setText ( this . node . getTitle () ) ; attributesArea . setText ( this . node . attributesProperty () . getValue () ) ; operationsArea . setText ( this . node . operationsProperty () . getValue () ) ; }
× fix_prediction_before: public void setNode ( model.ClassNode person ) { this . node = person ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; }
× fix_prediction_after: public void setNode ( model.ClassNode udpfryneltrpyvondgfg ) { if ( ( node ) != null ) { this . node = udpfryneltrpyvondgfg ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; } }

line_index: 233
bug_before_refactoring: public void addCampaign ( java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } <s> public void addCampaign ( java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } <s> Fix concurrent hashmap error
bug_after_refactoring: public void addCampaign ( java.lang.String cihijospgqrkikisjqnd ) throws java.lang.Exception { deleteCampaign ( cihijospgqrkikisjqnd ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( cihijospgqrkikisjqnd ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + cihijospgqrkikisjqnd ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } <s> public void addCampaign ( java.lang.String cihijospgqrkikisjqnd ) throws java.lang.Exception { deleteCampaign ( cihijospgqrkikisjqnd ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( cihijospgqrkikisjqnd ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + cihijospgqrkikisjqnd ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } <s> Fix concurrent hashmap error
fix_before_refactoring: public void addCampaign ( java.lang.String name , java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( name , campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; }
fix_after_refactoring: public void addCampaign ( java.lang.String name , java.lang.String cihijospgqrkikisjqnd ) throws java.lang.Exception { deleteCampaign ( cihijospgqrkikisjqnd ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( name , cihijospgqrkikisjqnd ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + cihijospgqrkikisjqnd ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; }
× fix_prediction_before: public void addCampaign ( java.lang.String campId ) throws java.lang.Exception { synchronized ( this ) { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } }
× fix_prediction_after: public void addCampaign ( java.lang.String cihijospgqrkikisjqnd ) throws java.lang.Exception { synchronized ( this ) { deleteCampaign ( cihijospgqrkikisjqnd ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( cihijospgqrkikisjqnd ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + cihijospgqrkikisjqnd ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } }

line_index: 234
bug_before_refactoring: @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } } <s> @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } } <s> fixed bug with lobby not loading after new sign-in
bug_after_refactoring: @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot cyohfwfttqbyticucdsk ) { if ( ! ( cyohfwfttqbyticucdsk . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } } <s> @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot cyohfwfttqbyticucdsk ) { if ( ! ( cyohfwfttqbyticucdsk . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } } <s> fixed bug with lobby not loading after new sign-in
fix_before_refactoring: @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; } mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; }
fix_after_refactoring: @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot cyohfwfttqbyticucdsk ) { if ( ! ( cyohfwfttqbyticucdsk . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; } mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; }
× fix_prediction_before: @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; }
× fix_prediction_after: @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot cyohfwfttqbyticucdsk ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; }

line_index: 235
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; } <s> Merge pull request #86 from dataloom/bugfix/download  Add token get parameter
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID ntiffejdqldpxwsuuikv , @ org.springframework.web.bind.annotation.RequestBody ( rcncjuymgtrwtqpyvxrduired = false ) com.dataloom.data.rcncjuymgtrwtqpyvxrduests.EntitySetSelection rcncjuymgtrwtqpyvxrd , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , rcncjuymgtrwtqpyvxrduired = false ) com.dataloom.datastore.data.controllers.FileType wdqslkemqvrdibtdjvgm , javax.servlet.http.HttpServletResponse lcpfxgscfdquffasgkoq ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( lcpfxgscfdquffasgkoq , ntiffejdqldpxwsuuikv . toString () , wdqslkemqvrdibtdjvgm ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( lcpfxgscfdquffasgkoq , wdqslkemqvrdibtdjvgm ) ; return loadEntitySetData ( ntiffejdqldpxwsuuikv , rcncjuymgtrwtqpyvxrd , wdqslkemqvrdibtdjvgm ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID ntiffejdqldpxwsuuikv , @ org.springframework.web.bind.annotation.RequestBody ( rcncjuymgtrwtqpyvxrduired = false ) com.dataloom.data.rcncjuymgtrwtqpyvxrduests.EntitySetSelection rcncjuymgtrwtqpyvxrd , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , rcncjuymgtrwtqpyvxrduired = false ) com.dataloom.datastore.data.controllers.FileType wdqslkemqvrdibtdjvgm , javax.servlet.http.HttpServletResponse lcpfxgscfdquffasgkoq ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( lcpfxgscfdquffasgkoq , ntiffejdqldpxwsuuikv . toString () , wdqslkemqvrdibtdjvgm ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( lcpfxgscfdquffasgkoq , wdqslkemqvrdibtdjvgm ) ; return loadEntitySetData ( ntiffejdqldpxwsuuikv , rcncjuymgtrwtqpyvxrd , wdqslkemqvrdibtdjvgm ) ; } <s> Merge pull request #86 from dataloom/bugfix/download  Add token get parameter
fix_before_refactoring: @ com.dataloom.datastore.data.controllers.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ com.dataloom.datastore.data.controllers.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ com.dataloom.datastore.data.controllers.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , @ com.dataloom.datastore.data.controllers.RequestParam ( value = TOKEN , required = false ) java.lang.String token , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , fileType , token ) ; }
fix_after_refactoring: @ com.dataloom.datastore.data.controllers.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ com.dataloom.datastore.data.controllers.PathVariable ( value = SET_ID ) java.util.UUID ntiffejdqldpxwsuuikv , @ com.dataloom.datastore.data.controllers.RequestParam ( value = FILE_TYPE , rcncjuymgtrwtqpyvxrduired = false ) com.dataloom.datastore.data.controllers.FileType wdqslkemqvrdibtdjvgm , @ com.dataloom.datastore.data.controllers.RequestParam ( value = TOKEN , rcncjuymgtrwtqpyvxrduired = false ) java.lang.String token , javax.servlet.http.HttpServletResponse lcpfxgscfdquffasgkoq ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( lcpfxgscfdquffasgkoq , ntiffejdqldpxwsuuikv . toString () , wdqslkemqvrdibtdjvgm ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( lcpfxgscfdquffasgkoq , wdqslkemqvrdibtdjvgm ) ; return loadEntitySetData ( ntiffejdqldpxwsuuikv , wdqslkemqvrdibtdjvgm , token ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID ntiffejdqldpxwsuuikv , @ org.springframework.web.bind.annotation.RequestBody ( rcncjuymgtrwtqpyvxrduired = false ) com.dataloom.data.rcncjuymgtrwtqpyvxrduests.EntitySetSelection rcncjuymgtrwtqpyvxrd , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , rcncjuymgtrwtqpyvxrduired = false ) com.dataloom.datastore.data.controllers.FileType wdqslkemqvrdibtdjvgm , javax.servlet.http.HttpServletResponse lcpfxgscfdquffasgkoq ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( lcpfxgscfdquffasgkoq , ntiffejdqldpxwsuuikv . toString () , wdqslkemqvrdibtdjvgm ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( lcpfxgscfdquffasgkoq , wdqslkemqvrdibtdjvgm ) ; return loadEntitySetData ( ntiffejdqldpxwsuuikvgm ) ; }

line_index: 237
bug_before_refactoring: private void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } <s> private void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } <s> Work on AlarmActivity class. Fixed some of the discussed menu issues.
bug_after_refactoring: private void onSetAlarmTime ( android.xpxfzdxwcxglxyzvyyrz.View xpxfzdxwcxglxyzvyyrz ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } <s> private void onSetAlarmTime ( android.xpxfzdxwcxglxyzvyyrz.View xpxfzdxwcxglxyzvyyrz ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } <s> Work on AlarmActivity class. Fixed some of the discussed menu issues.
fix_before_refactoring: public void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; }
fix_after_refactoring: public void onSetAlarmTime ( android.xpxfzdxwcxglxyzvyyrz.View xpxfzdxwcxglxyzvyyrz ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; }
× fix_prediction_before: public void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_ minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; }
× fix_prediction_after: public void onSetAlarmTime ( android.xpxfzdxwcxglxyzvyyrz.View xpxfzdxwcxglxyzvyyrz ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_ minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; }

line_index: 238
bug_before_refactoring: public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) , ( ( indent ) + 1 ) ) ; } <s> public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) , ( ( indent ) + 1 ) ) ; } <s> Fix condition problems + delete indent
bug_after_refactoring: public void iffaux ( java.lang.String mioyubkypocggpvrhfbi ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + mioyubkypocggpvrhfbi ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + mioyubkypocggpvrhfbi ) , ( ( indent ) + 1 ) ) ; } <s> public void iffaux ( java.lang.String mioyubkypocggpvrhfbi ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + mioyubkypocggpvrhfbi ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + mioyubkypocggpvrhfbi ) , ( ( indent ) + 1 ) ) ; } <s> Fix condition problems + delete indent
fix_before_refactoring: public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) ) ; }
fix_after_refactoring: public void iffaux ( java.lang.String mioyubkypocggpvrhfbi ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + mioyubkypocggpvrhfbi ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + mioyubkypocggpvrhfbi ) ) ; }
× fix_prediction_before: public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ";iffaux " ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" ) ; compiler.Ecriture . ecrireStringln ( flux , "je" ) ; }
× fix_prediction_after: public void iffaux ( java.lang.String mioyubkypocggpvrhfbi ) { compiler.Ecriture . ecrireStringln ( flux , ";iffaux " , mioyubkypocggpvrhfbi ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + mioyubkypocggpvrhfbi ) ) ; }

line_index: 239
bug_before_refactoring: public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } <s> public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } <s> Updated FileIO: Fix bug with cache option + add ReadLinesFromFile() method
bug_after_refactoring: public static java.lang.String readStringFromFile ( java.io.File xlzwgogbfrylzffapcgw ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( xlzwgogbfrylzffapcgw ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( xlzwgogbfrylzffapcgw , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( xlzwgogbfrylzffapcgw ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( xlzwgogbfrylzffapcgw ) ; } <s> public static java.lang.String readStringFromFile ( java.io.File xlzwgogbfrylzffapcgw ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( xlzwgogbfrylzffapcgw ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( xlzwgogbfrylzffapcgw , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( xlzwgogbfrylzffapcgw ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( xlzwgogbfrylzffapcgw ) ; } <s> Updated FileIO: Fix bug with cache option + add ReadLinesFromFile() method
fix_before_refactoring: public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) { if ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } else { return edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ; } }
fix_after_refactoring: public static java.lang.String readStringFromFile ( java.io.File xlzwgogbfrylzffapcgw ) { if ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) { if ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( xlzwgogbfrylzffapcgw ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( xlzwgogbfrylzffapcgw , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( xlzwgogbfrylzffapcgw ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( xlzwgogbfrylzffapcgw ) ; } else { return edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( xlzwgogbfrylzffapcgw ) ; } }
× fix_prediction_before: public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; }
× fix_prediction_after: public static java.lang.String readStringFromFile ( java.io.File xlzwgogbfrylzffapcgw ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( xlzwgogbfrylzffapcgw ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( xlzwgogbfrylzffapcgw , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( xlzwgogbfrylzffapcgw ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( xlzwgogbfrylzffapcgw ) ; }

line_index: 240
bug_before_refactoring: public boolean isPrime ( int number ) { if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } if ( number == 2 ) { return true ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; } <s> public boolean isPrime ( int number ) { if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } if ( number == 2 ) { return true ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; } <s> bug fixes where 2 isn't a prime
bug_after_refactoring: public boolean isPrime ( int kbviukgdagdckriircso ) { if ( ( kbviukgdagdckriircso < 2 ) || ( ( kbviukgdagdckriircso % 2 ) == 0 ) ) { return false ; } if ( kbviukgdagdckriircso == 2 ) { return true ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( kbviukgdagdckriircso ) ) ; oddNumber += 2 ) { if ( ( kbviukgdagdckriircso % oddNumber ) == 0 ) { return false ; } } return true ; } <s> public boolean isPrime ( int kbviukgdagdckriircso ) { if ( ( kbviukgdagdckriircso < 2 ) || ( ( kbviukgdagdckriircso % 2 ) == 0 ) ) { return false ; } if ( kbviukgdagdckriircso == 2 ) { return true ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( kbviukgdagdckriircso ) ) ; oddNumber += 2 ) { if ( ( kbviukgdagdckriircso % oddNumber ) == 0 ) { return false ; } } return true ; } <s> bug fixes where 2 isn't a prime
fix_before_refactoring: private boolean isPrime ( int number ) { if ( number == 2 ) { return true ; } if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; }
fix_after_refactoring: private boolean isPrime ( int kbviukgdagdckriircso ) { if ( kbviukgdagdckriircso == 2 ) { return true ; } if ( ( kbviukgdagdckriircso < 2 ) || ( ( kbviukgdagdckriircso % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( kbviukgdagdckriircso ) ) ; oddNumber += 2 ) { if ( ( kbviukgdagdckriircso % oddNumber ) == 0 ) { return false ; } } return true ; }
× fix_prediction_before: public boolean isPrime ( int number ) { if ( number == 2 ) { return true ; } if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; }
× fix_prediction_after: public boolean isPrime ( int kbviukgdagdckriircso ) { if ( ( kbviukgdagdckriircso < 2 ) || ( ( kbviukgdagdckriircso % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( kbviukgdagdckriircso ) ) ; oddNumber += 2 ) { if ( ( kbviukgdagdckriircso % oddNumber ) == 0 ) { return false ; } } return true ; }

line_index: 241
bug_before_refactoring: @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } <s> @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } <s> WIP  #32 try and fix bug
bug_after_refactoring: @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark vwsredspnjmhygnteyqy ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( vwsredspnjmhygnteyqy ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( vwsredspnjmhygnteyqy ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( vwsredspnjmhygnteyqy . getPolygons () ) ) ; } <s> @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark vwsredspnjmhygnteyqy ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( vwsredspnjmhygnteyqy ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( vwsredspnjmhygnteyqy ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( vwsredspnjmhygnteyqy . getPolygons () ) ) ; } <s> WIP  #32 try and fix bug
fix_before_refactoring: @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { if ( placemark != null ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } }
fix_after_refactoring: @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark vwsredspnjmhygnteyqy ) { if ( vwsredspnjmhygnteyqy != null ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( vwsredspnjmhygnteyqy ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( vwsredspnjmhygnteyqy ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( vwsredspnjmhygnteyqy . getPolygons () ) ) ; } }
× fix_prediction_before: @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { if ( ( placemark . getPolygons () ) != null ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } }
× fix_prediction_after: @ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark vwsredspnjmhygnteyqy ) { if ( ! ( vwsredspnjmhygnteyqy . getPolygons () . isEmpty () ) ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( vwsredspnjmhygnteyqy ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( vwsredspnjmhygnteyqy ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( vwsredspnjmhygnteyqy . getPolygons () ) ) ; } }

line_index: 242
bug_before_refactoring: public static java.lang.Boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( accountUuid ) ; java.lang.System.out . println ( assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } <s> public static java.lang.Boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( accountUuid ) ; java.lang.System.out . println ( assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } <s> Fix bug
bug_after_refactoring: public static java.lang.Boolean attachAssetToAccount ( java.lang.String auhqciuqtwcdecepxqis , java.lang.String cbuhkfketorvzphbfhnv ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , auhqciuqtwcdecepxqis ) ; params . put ( KeyConstants.AttachedAssetUuid , cbuhkfketorvzphbfhnv ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( auhqciuqtwcdecepxqis ) ; java.lang.System.out . println ( cbuhkfketorvzphbfhnv ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } <s> public static java.lang.Boolean attachAssetToAccount ( java.lang.String auhqciuqtwcdecepxqis , java.lang.String cbuhkfketorvzphbfhnv ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , auhqciuqtwcdecepxqis ) ; params . put ( KeyConstants.AttachedAssetUuid , cbuhkfketorvzphbfhnv ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( auhqciuqtwcdecepxqis ) ; java.lang.System.out . println ( cbuhkfketorvzphbfhnv ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } <s> Fix bug
fix_before_refactoring: public static java.lang.Boolean attachAssetToAccount ( java.lang.String assetUuid , java.lang.String accountUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; }
fix_after_refactoring: public static java.lang.Boolean attachAssetToAccount ( java.lang.String cbuhkfketorvzphbfhnv , java.lang.String auhqciuqtwcdecepxqis ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , auhqciuqtwcdecepxqis ) ; params . put ( KeyConstants.AttachedAssetUuid , cbuhkfketorvzphbfhnv ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; }
× fix_prediction_before: public static boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( accountUuid ) ; java.lang.System.out . println ( assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; }
× fix_prediction_after: public static java.lang.Boolean attachAssetToAccount ( java.lang.String auhqciuqtwcdecepxqis , java.lang.String cbuhkfketorvzphbfhnv ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , auhqciuqtwcdecepxqis ) ; params . put ( KeyConstants.AttachedAssetUuid , cbuhkfketorvzphbfhnv ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( auhqciuqtwcdecepxqis ) ; java.lang.System.out . println ( cbuhkfketorvzbfhnv ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; }

line_index: 243
bug_before_refactoring: private void validateHeader ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } <s> private void validateHeader ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } <s> Fixed useheader issues.
bug_after_refactoring: private void validateHeader ( final org.milyn.csv.CSVReader eysynioznvcdtdbbtpaz ) throws java.io.IOException { java.lang.String [] headers = eysynioznvcdtdbbtpaz . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } <s> private void validateHeader ( final org.milyn.csv.CSVReader eysynioznvcdtdbbtpaz ) throws java.io.IOException { java.lang.String [] headers = eysynioznvcdtdbbtpaz . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } <s> Fixed useheader issues.
fix_before_refactoring: private void validateHeader ( final java.lang.String [] headers ) throws java.io.IOException { if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; }
fix_after_refactoring: private void validateHeader ( final java.lang.String [] headers ) throws java.io.IOException { if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; }
× fix_prediction_before: public void validateHeader ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; }
× fix_prediction_after: public void validateHeader ( final org.milyn.csv.CSVReader eysynioznvcdtdbbtpaz ) throws java.io.IOException { java.lang.String [] headers = eysynioznvcdtdbbtpaz . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; }

line_index: 245
bug_before_refactoring: private void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; } <s> private void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; } <s> Started working on Game-class which will be responsible for one whole game and take some work off GameSituation class. It will also solve the issue of game runnng in EventDispatch thread
bug_after_refactoring: private void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation jykcxznpbpwahzpprsak ) { ais [ ( ( jykcxznpbpwahzpprsak . getTurn () ) % 2 ) ] . findBestMoves ( jykcxznpbpwahzpprsak ) ; chess.domain.Move move = ais [ ( ( jykcxznpbpwahzpprsak . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , jykcxznpbpwahzpprsak , true ) ; } <s> private void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation jykcxznpbpwahzpprsak ) { ais [ ( ( jykcxznpbpwahzpprsak . getTurn () ) % 2 ) ] . findBestMoves ( jykcxznpbpwahzpprsak ) ; chess.domain.Move move = ais [ ( ( jykcxznpbpwahzpprsak . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , jykcxznpbpwahzpprsak , true ) ; } <s> Started working on Game-class which will be responsible for one whole game and take some work off GameSituation class. It will also solve the issue of game runnng in EventDispatch thread
fix_before_refactoring: public void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; }
fix_after_refactoring: public void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation jykcxznpbpwahzpprsak ) { ais [ ( ( jykcxznpbpwahzpprsak . getTurn () ) % 2 ) ] . findBestMoves ( jykcxznpbpwahzpprsak ) ; chess.domain.Move move = ais [ ( ( jykcxznpbpwahzpprsak . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , jykcxznpbpwahzpprsak , true ) ; }
× fix_prediction_before: private void makeBestMoveAccordingToAILogic () { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; }
× fix_prediction_after: private void makeBestMoveAccordingToAILogic () { ais [ ( ( jykcxznpbpwahzpprsak . getTurn () ) % 2 ) ] . findBestMoves ( jykcxznpbpwahzpprsak ) ; chess.domain.Move move = ais [ ( ( jykcxznpbpwahzpprsak . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , jykcxznpbpwahzpprsak , true ) ; }

line_index: 246
bug_before_refactoring: private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader , java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; } <s> private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader , java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; } <s> fixed minor bug
bug_after_refactoring: private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader qjapnuajaowbmbvqdurn , java.lang.Double bqxrtfwiuqfmpbukjdle , tum.cms.sim.momentum.visualization.controller.CoreController acpolqicecugusxoiyxm ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = qjapnuajaowbmbvqdurn . asyncReadDataSet ( bqxrtfwiuqfmpbukjdle ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( qjapnuajaowbmbvqdurn . getCsvType () , dataStepCurrent , acpolqicecugusxoiyxm ) ; } <s> private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader qjapnuajaowbmbvqdurn , java.lang.Double bqxrtfwiuqfmpbukjdle , tum.cms.sim.momentum.visualization.controller.CoreController acpolqicecugusxoiyxm ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = qjapnuajaowbmbvqdurn . asyncReadDataSet ( bqxrtfwiuqfmpbukjdle ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( qjapnuajaowbmbvqdurn . getCsvType () , dataStepCurrent , acpolqicecugusxoiyxm ) ; } <s> fixed minor bug
fix_before_refactoring: private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController , tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; }
fix_after_refactoring: private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( java.lang.Double bqxrtfwiuqfmpbukjdle , tum.cms.sim.momentum.visualization.controller.CoreController acpolqicecugusxoiyxm , tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader qjapnuajaowbmbvqdurn ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = qjapnuajaowbmbvqdurn . asyncReadDataSet ( bqxrtfwiuqfmpbukjdle ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( qjapnuajaowbmbvqdurn . getCsvType () , dataStepCurrent , acpolqicecugusxoiyxm ) ; }
× fix_prediction_before: private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader , tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent ) throws java.lang.Exception { while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent ) ; }
× fix_prediction_after: private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader qjapnuajaowbmbvqdurn , java.lang.Double bqxrtfwiuqfmpbukjdle , tum.cms.sim.momentum.visualization.controller.CoreController acpolqicecugusxoiyxm ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = qjapnuajaowbmbvqdurn . asyncReadDataSet ( bqxrtfwiuqfmpbukjdle ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( qjapnuajaowbmbvqdurn . getCsvType () , dataStepCurrent , acpolqicecugusxoiyxm ) ; }

line_index: 247
bug_before_refactoring: public void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } <s> public void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } <s> Fix printArray bug
bug_after_refactoring: public void printArray ( int [] swbnjeddimugqlfjepwq ) { for ( int i = 0 ; i < ( swbnjeddimugqlfjepwq.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( swbnjeddimugqlfjepwq.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } <s> public void printArray ( int [] swbnjeddimugqlfjepwq ) { for ( int i = 0 ; i < ( swbnjeddimugqlfjepwq.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( swbnjeddimugqlfjepwq.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } <s> Fix printArray bug
fix_before_refactoring: void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }
fix_after_refactoring: void printArray ( int [] swbnjeddimugqlfjepwq ) { for ( int i = 0 ; i < ( swbnjeddimugqlfjepwq.length ) ; i ++ ) { java.lang.System.out . print ( swbnjeddimugqlfjepwq [ i ] ) ; if ( i != ( ( swbnjeddimugqlfjepwq.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }
× fix_prediction_before: public void printArray ( int [] array ) { if ( array != null ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } }
× fix_prediction_after: public void printArray ( int [] swbnjeddimugqlfjepwq ) { if ( swbnjeddimugqlfjepwq != null ) { for ( int i = 0 ; i < ( swbnjeddimugqlfjepwq.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( swbnjeddimugqlfjepwq.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } }

line_index: 248
bug_before_refactoring: public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } <s> public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } <s> fixed bug with android 6.0 not getting location
bug_after_refactoring: public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > cehbjkvolenktbwcsutf ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : cehbjkvolenktbwcsutf ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } <s> public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > cehbjkvolenktbwcsutf ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : cehbjkvolenktbwcsutf ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } <s> fixed bug with android 6.0 not getting location
fix_before_refactoring: public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { if ( ( mMap ) != null ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } }
fix_after_refactoring: public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > cehbjkvolenktbwcsutf ) { if ( ( mMap ) != null ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : cehbjkvolenktbwcsutf ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } }
× fix_prediction_before: private void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } }
× fix_prediction_after: private void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > cehbjkvolenktbwcsutf ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : cehbjkvolenktbwcsutf ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } }

line_index: 249
bug_before_refactoring: private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
bug_after_refactoring: private boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> private boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } <s> resolved Issue  #11 refactor TDDTCompiler adjust TDDTCompiler tests fixed GUI-flow on change of RED to GREEN (check test) probably needs some refactoring in TDDTCompiler itself for fixing double compile
fix_before_refactoring: public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
fix_after_refactoring: public boolean compileCode ( java.lang.String giijyyflaacljaqrjkzc , java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
× fix_prediction_before: private boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
× fix_prediction_after: private boolean compileCode ( java.lang.String fewxwsodmglaxhpjzgjg ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( fewxwsodmglaxhpjzgjg , giijyyflaacljaqrjkzc , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }

line_index: 250
bug_before_refactoring: private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } <s> private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } <s> Fixed: use writePage instead writeErrorPage
bug_after_refactoring: private static void writePage ( javax.servlet.http.HttpServletResponse ocrjnsunvefpcegxgyiw , int gowqqgahkbegnbrdvgrt , java.lang.String hvbcrumqefkkttmcvddg , org.geowebcache.stats.RuntimeStats jwhejjlplgvdcpgqjtum , java.lang.String nedvbgylulehphqmhcyf ) { org.geowebcache.io.Resource res = null ; if ( hvbcrumqefkkttmcvddg != null ) { res = new org.geowebcache.io.ByteArrayResource ( hvbcrumqefkkttmcvddg . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( ocrjnsunvefpcegxgyiw , gowqqgahkbegnbrdvgrt , nedvbgylulehphqmhcyf , res , CacheResult.OTHER , jwhejjlplgvdcpgqjtum ) ; } <s> private static void writePage ( javax.servlet.http.HttpServletResponse ocrjnsunvefpcegxgyiw , int gowqqgahkbegnbrdvgrt , java.lang.String hvbcrumqefkkttmcvddg , org.geowebcache.stats.RuntimeStats jwhejjlplgvdcpgqjtum , java.lang.String nedvbgylulehphqmhcyf ) { org.geowebcache.io.Resource res = null ; if ( hvbcrumqefkkttmcvddg != null ) { res = new org.geowebcache.io.ByteArrayResource ( hvbcrumqefkkttmcvddg . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( ocrjnsunvefpcegxgyiw , gowqqgahkbegnbrdvgrt , nedvbgylulehphqmhcyf , res , CacheResult.OTHER , jwhejjlplgvdcpgqjtum ) ; } <s> Fixed: use writePage instead writeErrorPage
fix_before_refactoring: public static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; }
fix_after_refactoring: public static void writePage ( javax.servlet.http.HttpServletResponse ocrjnsunvefpcegxgyiw , int gowqqgahkbegnbrdvgrt , java.lang.String hvbcrumqefkkttmcvddg , org.geowebcache.stats.RuntimeStats jwhejjlplgvdcpgqjtum , java.lang.String nedvbgylulehphqmhcyf ) { org.geowebcache.io.Resource res = null ; if ( hvbcrumqefkkttmcvddg != null ) { res = new org.geowebcache.io.ByteArrayResource ( hvbcrumqefkkttmcvddg . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( ocrjnsunvefpcegxgyiw , gowqqgahkbegnbrdvgrt , nedvbgylulehphqmhcyf , res , CacheResult.OTHER , jwhejjlplgvdcpgqjtum ) ; }
× fix_prediction_before: private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String contentType , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; }
× fix_prediction_after: private static void writePage ( javax.servlet.http.HttpServletResponse ocrjnsunvefpcegxgyiw , int gowqqgahkbegnbrdvgrt , java.lang.String hvbcrumqefkkttmcvddg , org.geowebcache.stats.RuntimeStats jwhejjlplgvdcpgqjtum , java.lang.String nedvbgylulehphqmhcyf ) { org.geowebcache.io.Resource res = null ; if ( hvbcrumqefkkttmcvddg != null ) { res = new org.geowebcache.io.ByteArrayResource ( hvbcrumqefkkttmcvddg . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( ocrjnsunvefpcegxgyiw , gowqqgahkbegnbrdvgrt , nedvbgylulehphqmhcyf , res , CacheResult.OTHER , jwhejjlplgvdcpgqjtum ) ; }

line_index: 252
bug_before_refactoring: public static void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } <s> public static void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } <s> == 1.2 == Added: Sign ownership (line 3) Changed: Players without .break permission can still break their own signs Added: Optional deposit/withdraw fees. Fees payable to sign owner or to server Fixed: Permission bug for .break Fixed: Listeners now check if their event was cancelled by a previous plugin
bug_after_refactoring: public static void getBalance ( org.bukkit.entity.Player eyoaaojcqtswvltlecuy ) { eyoaaojcqtswvltlecuy . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( eyoaaojcqtswvltlecuy . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } <s> public static void getBalance ( org.bukkit.entity.Player eyoaaojcqtswvltlecuy ) { eyoaaojcqtswvltlecuy . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( eyoaaojcqtswvltlecuy . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } <s> == 1.2 == Added: Sign ownership (line 3) Changed: Players without .break permission can still break their own signs Added: Optional deposit/withdraw fees. Fees payable to sign owner or to server Fixed: Permission bug for .break Fixed: Listeners now check if their event was cancelled by a previous plugin
fix_before_refactoring: public void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; }
fix_after_refactoring: public void getBalance ( org.bukkit.entity.Player eyoaaojcqtswvltlecuy ) { eyoaaojcqtswvltlecuy . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( eyoaaojcqtswvltlecuy . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; }
× fix_prediction_before: public static boolean getBalance ( org.bukkit.entity.Player player ) { return player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; }
× fix_prediction_after: public static double getBalance ( org.bukkit.entity.Player eyoaaojcqtswvltlecuy ) { eyoaaojcqtswvltlecuy . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( eyoaaojcqtswvltlecuy . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; return 0 ; }

line_index: 254
bug_before_refactoring: public int hash ( V value ) { int hash = 0 ; switch ( hashFunction ) { case "additiveHash" : hash = additiveHash ( value ) ; break; case "rotationalHash" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; } <s> public int hash ( V value ) { int hash = 0 ; switch ( hashFunction ) { case "additiveHash" : hash = additiveHash ( value ) ; break; case "rotationalHash" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; } <s> Errors and Hash Selection  Fixed a typo in HashTable.size() which would cause a StackOverFlowError. Changed method of hash function selection in constructor to int rather than a String (0 is additive  1 is rotational) Added more JavaDoc placeholders Added a print statement in the demo class to test hash functions.
bug_after_refactoring: public int hash ( V arkpcbzdqtgkqvnfpepx ) { int hash = 0 ; switch ( hashFunction ) { case "additiveHash" : hash = additiveHash ( arkpcbzdqtgkqvnfpepx ) ; break; case "rotationalHash" : hash = rotationalHash ( arkpcbzdqtgkqvnfpepx ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; } <s> public int hash ( V arkpcbzdqtgkqvnfpepx ) { int hash = 0 ; switch ( hashFunction ) { case "additiveHash" : hash = additiveHash ( arkpcbzdqtgkqvnfpepx ) ; break; case "rotationalHash" : hash = rotationalHash ( arkpcbzdqtgkqvnfpepx ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; } <s> Errors and Hash Selection  Fixed a typo in HashTable.size() which would cause a StackOverFlowError. Changed method of hash function selection in constructor to int rather than a String (0 is additive  1 is rotational) Added more JavaDoc placeholders Added a print statement in the demo class to test hash functions.
fix_before_refactoring: public int hash ( String key ) { int hash = 0 ; switch ( hashFunction ) { case 0 : hash = additiveHash ( key ) ; break; case 1 : hash = rotationalHash ( key ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
fix_after_refactoring: public int hash ( String key ) { int hash = 0 ; switch ( hashFunction ) { case 0 : hash = additiveHash ( key ) ; break; case 1 : hash = rotationalHash ( key ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
× fix_prediction_before: public int hash ( java.lang.String value ) { int hash = 0 ; switch ( hashFunction ) { case "additiveHash" : hash = additiveHash ( value ) ; break; case "rotationalHash" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
× fix_prediction_after: public int hash () { int hash = 0 ; switch ( hashFunction ) { case "additiveHash" : hash = additiveHash () ; break; case "rotationalHash" : hash = rotationalHash () ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }

line_index: 255
bug_before_refactoring: private void doNext ( int requestCode , int [] grantResults ) { if ( requestCode == ( ACCESS_PERMISSION ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } } } <s> private void doNext ( int requestCode , int [] grantResults ) { if ( requestCode == ( ACCESS_PERMISSION ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } } } <s> bugs fixed
bug_after_refactoring: private void doNext ( int ivaypnllcpwoeunyrmjv , int [] hdivjkwajpxlpzceycwa ) { if ( ivaypnllcpwoeunyrmjv == ( ACCESS_PERMISSION ) ) { if ( ( hdivjkwajpxlpzceycwa [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } } } <s> private void doNext ( int ivaypnllcpwoeunyrmjv , int [] hdivjkwajpxlpzceycwa ) { if ( ivaypnllcpwoeunyrmjv == ( ACCESS_PERMISSION ) ) { if ( ( hdivjkwajpxlpzceycwa [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } } } <s> bugs fixed
fix_before_refactoring: private void doNext ( int requestCode , int [] grantResults ) { int count = 0 ; if ( requestCode == ( ACCESS_PERMISSION ) ) { for ( int i = 0 ; i < ( grantResults.length ) ; i ++ ) { if ( ( grantResults [ i ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) count ++ ; } if ( count == ( grantResults.length ) ) listener . onGranted () ; else listener . onDenied () ; } }
fix_after_refactoring: private void doNext ( int ivaypnllcpwoeunyrmjv , int [] hdivjkwajpxlpzceycwa ) { int count = 0 ; if ( ivaypnllcpwoeunyrmjv == ( ACCESS_PERMISSION ) ) { for ( int i = 0 ; i < ( hdivjkwajpxlpzceycwa.length ) ; i ++ ) { if ( ( hdivjkwajpxlpzceycwa [ i ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) count ++ ; } if ( count == ( hdivjkwajpxlpzceycwa.length ) ) listener . onGranted () ; else listener . onDenied () ; } }
× fix_prediction_before: private void doNext ( int requestCode , int [] grantResults ) { if ( requestCode == ( permission_PERMISSION ) ) { if ( ( grantResults.length ) > 0 ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } } } }
× fix_prediction_after: private void doNext ( int ivaypnllcpwoeunyrmjv , int [] hdivjkwajpxlpzceycwa ) { if ( ( ivaypnllcpwoeunyrmjv == (ACCESS_PERMISSION ) ) && ( ( hdivjkwajpxlpzceycwa [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Denied" ) ; } }

line_index: 256
bug_before_refactoring: private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node node ) { algo.BSTMap < K , V > . Node parent = node ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } } <s> private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node node ) { algo.BSTMap < K , V > . Node parent = node ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } } <s> Delete bug fix
bug_after_refactoring: private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node fjdgtkbqavsaqspiaxre ) { algo.BSTMap < K , V > . Node parent = fjdgtkbqavsaqspiaxre ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } } <s> private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node fjdgtkbqavsaqspiaxre ) { algo.BSTMap < K , V > . Node parent = fjdgtkbqavsaqspiaxre ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } } <s> Delete bug fix
fix_before_refactoring: private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node parent ) { algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } }
fix_after_refactoring: private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node parent ) { algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } }
× fix_prediction_before: protected algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node node ) { algo.BSTMap < K , V > . Node parent = node ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } }
× fix_prediction_after: protected algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node fjdgtkbqavsaqspiaxre ) { algo.BSTMap < K , V > . Node parent = fjdgtkbqavsaqspiaxre ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } }

line_index: 257
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } <s> Fixed Crash on the Master Detail Example Fixed issue with master detail not toggling with animation at times
bug_after_refactoring: @ jaqltspknwindohotnnjrqa.lang.Oqltspknwindohotnnjrqerride public qltspknwindohotnnjrqoid onClick ( android.qltspknwindohotnnjrqiew.View qltspknwindohotnnjrq ) { int fragCount = ( ( com.dmcapps.naqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNaqltspknwindohotnnjrqigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.naqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } <s> @ jaqltspknwindohotnnjrqa.lang.Oqltspknwindohotnnjrqerride public qltspknwindohotnnjrqoid onClick ( android.qltspknwindohotnnjrqiew.View qltspknwindohotnnjrq ) { int fragCount = ( ( com.dmcapps.naqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNaqltspknwindohotnnjrqigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.naqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } <s> Fixed Crash on the Master Detail Example Fixed issue with master detail not toggling with animation at times
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( this . getNavigationManager () . topFragment () ) instanceof com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } else { this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , 0 ) ) ; } }
fix_after_refactoring: @ jaqltspknwindohotnnjrqa.lang.Oqltspknwindohotnnjrqerride public qltspknwindohotnnjrqoid onClick ( android.qltspknwindohotnnjrqiew.View qltspknwindohotnnjrq ) { if ( ( this . getNaqltspknwindohotnnjrqigationManager () . topFragment () ) instanceof com.dmcapps.naqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment ) { int fragCount = ( ( com.dmcapps.naqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNaqltspknwindohotnnjrqigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.naqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } else { this . presentFragment ( com.dmcapps.naqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , 0 ) ) ; } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( this . getNavigationManager () . topFragment () ) != null ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } }
× fix_prediction_after: @ jaqltspknwindohotnnjrqa.lang.Oqltspknwindohotnnjrqerride public qltspknwindohotnnjrqoid onClick ( android.qltspknwindohotnnjrqiew.View qltspknwindohotnnjrq ) { if ( ( this . getNaqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNaqltspknwindohotnnjrqigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.naqltspknwindohotnnjrqigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; }

line_index: 258
bug_before_refactoring: protected boolean isIE7 ( java.lang.String userAgent ) { if ( userAgent != null ) { if ( ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; } <s> protected boolean isIE7 ( java.lang.String userAgent ) { if ( userAgent != null ) { if ( ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; } <s> fixing bug 457397   Signed-off-by: sguan <sguan@actuate.com>
bug_after_refactoring: protected boolean isIE7 ( java.lang.String ixpppylrubobeexlccvh ) { if ( ixpppylrubobeexlccvh != null ) { if ( ( ( ( ixpppylrubobeexlccvh . contains ( "; MSIE 5" ) ) || ( ixpppylrubobeexlccvh . contains ( "; MSIE 6" ) ) ) || ( ixpppylrubobeexlccvh . contains ( "; MSIE 7" ) ) ) && ( ! ( ixpppylrubobeexlccvh . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; } <s> protected boolean isIE7 ( java.lang.String ixpppylrubobeexlccvh ) { if ( ixpppylrubobeexlccvh != null ) { if ( ( ( ( ixpppylrubobeexlccvh . contains ( "; MSIE 5" ) ) || ( ixpppylrubobeexlccvh . contains ( "; MSIE 6" ) ) ) || ( ixpppylrubobeexlccvh . contains ( "; MSIE 7" ) ) ) && ( ! ( ixpppylrubobeexlccvh . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; } <s> fixing bug 457397   Signed-off-by: sguan <sguan@actuate.com>
fix_before_refactoring: protected boolean isIE7 ( java.lang.String userAgent ) { if ( ( userAgent != null ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { if ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) { return true ; } } return false ; }
fix_after_refactoring: protected boolean isIE7 ( java.lang.String ixpppylrubobeexlccvh ) { if ( ( ixpppylrubobeexlccvh != null ) && ( ! ( ixpppylrubobeexlccvh . contains ( "; Trident/" ) ) ) ) { if ( ( ( ixpppylrubobeexlccvh . contains ( "; MSIE 5" ) ) || ( ixpppylrubobeexlccvh . contains ( "; MSIE 6" ) ) ) || ( ixpppylrubobeexlccvh . contains ( "; MSIE 7" ) ) ) { return true ; } } return false ; }
× fix_prediction_before: protected boolean isIE7 ( java.lang.String userAgent ) { if ( userAgent != null ) { return ( ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ; } return false ; }
× fix_prediction_after: protected boolean isIE7 ( java.lang.String ixpppylrubobeexlccvh ) { if ( ixpppylrubobeexlccvh != null ) { return ( ( ( ixpppylrubobeexlccvh . contains ( "; MSIE 5" ) ) || ( ixpppylrubobeexlccvh . contains ( "; MSIE 6" ) ) ) || ( ixpppylrubobeexlccvh . contains ( "; MSIE 7" ) ) ) && ( ! ( ixpppylrubobeexlccvh . contains ( "; Trident/" ) ) ) ; } return false ; }

line_index: 259
bug_before_refactoring: void setEndDate ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } <s> void setEndDate ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } <s> resolved 1 bug planning
bug_after_refactoring: void setEndDate ( int saiqxuofufocegoxwqis , int hiidtfwprtwgrpvjeyxg ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( saiqxuofufocegoxwqis , ( hiidtfwprtwgrpvjeyxg - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } <s> void setEndDate ( int saiqxuofufocegoxwqis , int hiidtfwprtwgrpvjeyxg ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( saiqxuofufocegoxwqis , ( hiidtfwprtwgrpvjeyxg - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } <s> resolved 1 bug planning
fix_before_refactoring: private void setEndDate ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; }
fix_after_refactoring: private void setEndDate ( int saiqxuofufocegoxwqis , int hiidtfwprtwgrpvjeyxg ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( saiqxuofufocegoxwqis , ( hiidtfwprtwgrpvjeyxg - 1 ) , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; }
× fix_prediction_before: void setEndDate ( int newYear , int newMonth , int date ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; }
× fix_prediction_after: void setEndDate ( int saiqxuofufocegoxwqis , int hiidtfwprtwgrpvjeyxg ) { if ( ( endDate ) == null ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( saiqxuofufocegoxwqis , ( hiidtfwprtwgrpvjeyxg - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } }

line_index: 260
bug_before_refactoring: public void initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + gameStarted ) + "\n" ) ) ; inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } <s> public void initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + gameStarted ) + "\n" ) ) ; inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } <s> Fixed a bug where reaching goal didn't cause Amazeing.endDialog() to appear. It was due to a thread not being synchronized.
bug_after_refactoring: public void initVariables ( int nxyaqovbescjswrwoehj , java.lang.String itquuizrzjiqtexjyrnu , boolean scvrrkkfzoyhclkzafms ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + scvrrkkfzoyhclkzafms ) + "\n" ) ) ; inGame = scvrrkkfzoyhclkzafms ; paused = false ; map = new Map ( nxyaqovbescjswrwoehj ) ; ball = new Ball ( itquuizrzjiqtexjyrnu ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } <s> public void initVariables ( int nxyaqovbescjswrwoehj , java.lang.String itquuizrzjiqtexjyrnu , boolean scvrrkkfzoyhclkzafms ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + scvrrkkfzoyhclkzafms ) + "\n" ) ) ; inGame = scvrrkkfzoyhclkzafms ; paused = false ; map = new Map ( nxyaqovbescjswrwoehj ) ; ball = new Ball ( itquuizrzjiqtexjyrnu ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } <s> Fixed a bug where reaching goal didn't cause Amazeing.endDialog() to appear. It was due to a thread not being synchronized.
fix_before_refactoring: void initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } }
fix_after_refactoring: void initVariables ( int nxyaqovbescjswrwoehj , java.lang.String itquuizrzjiqtexjyrnu , boolean scvrrkkfzoyhclkzafms ) { inGame = scvrrkkfzoyhclkzafms ; paused = false ; map = new Map ( nxyaqovbescjswrwoehj ) ; ball = new Ball ( itquuizrzjiqtexjyrnu ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } }
× fix_prediction_before: public void initVariables ( int mapNumber , java.lang.String ballColor ) { java.lang.System.out . format ( ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + gameStarted ) + "\n" ) ) ; inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } }
× fix_prediction_after: public void initVariables ( int nxyaqovbescjswrwoehj , java.lang.String itquuizrzjiqtexjyrnu ) { java.lang.System.out . format ( ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + scvrrkkfzoyhclkzafms ) + "\n" ) ) ; inGame = scvrrkkfzoyhclkzafms ; paused = false ; map = new Map ( nxyaqovbescjswrwoehj ) ; ball = new Ball ( itquuizrzjiqtexjyrnu ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } }

line_index: 262
bug_before_refactoring: public static int getValidThreshold ( int threshold , boolean isSelected , java.lang.String text ) { if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; } <s> public static int getValidThreshold ( int threshold , boolean isSelected , java.lang.String text ) { if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; } <s> Modified Pubmed.java so that bad queries do not result in an exception being thrown. Also  fixed additional bugs with threshold feature.
bug_after_refactoring: public static int getValidThreshold ( int llvesztdjawtbphlgmun , boolean zrcwwgvlnjvqvdhglhkg , java.lang.String mztozdwtakskxktfuxji ) { if ( zrcwwgvlnjvqvdhglhkg ) { java.lang.String llvesztdjawtbphlgmunText = mztozdwtakskxktfuxji ; if ( ( ! ( llvesztdjawtbphlgmunText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , llvesztdjawtbphlgmunText ) ) ) { llvesztdjawtbphlgmun = java.lang.Integer . parseInt ( mztozdwtakskxktfuxji ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max llvesztdjawtbphlgmun. Please specify a " + "valid llvesztdjawtbphlgmun value. Threshold must be a positive integer." ) ) ; } } return llvesztdjawtbphlgmun ; } <s> public static int getValidThreshold ( int llvesztdjawtbphlgmun , boolean zrcwwgvlnjvqvdhglhkg , java.lang.String mztozdwtakskxktfuxji ) { if ( zrcwwgvlnjvqvdhglhkg ) { java.lang.String llvesztdjawtbphlgmunText = mztozdwtakskxktfuxji ; if ( ( ! ( llvesztdjawtbphlgmunText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , llvesztdjawtbphlgmunText ) ) ) { llvesztdjawtbphlgmun = java.lang.Integer . parseInt ( mztozdwtakskxktfuxji ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max llvesztdjawtbphlgmun. Please specify a " + "valid llvesztdjawtbphlgmun value. Threshold must be a positive integer." ) ) ; } } return llvesztdjawtbphlgmun ; } <s> Modified Pubmed.java so that bad queries do not result in an exception being thrown. Also  fixed additional bugs with threshold feature.
fix_before_refactoring: public static int getValidThreshold ( boolean isSelected , java.lang.String text ) { int threshold = - 1 ; if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; }
fix_after_refactoring: public static int getValidThreshold ( boolean zrcwwgvlnjvqvdhglhkg , java.lang.String mztozdwtakskxktfuxji ) { int llvesztdjawtbphlgmun = - 1 ; if ( zrcwwgvlnjvqvdhglhkg ) { java.lang.String llvesztdjawtbphlgmunText = mztozdwtakskxktfuxji ; if ( ( ! ( llvesztdjawtbphlgmunText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , llvesztdjawtbphlgmunText ) ) ) { llvesztdjawtbphlgmun = java.lang.Integer . parseInt ( mztozdwtakskxktfuxji ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max llvesztdjawtbphlgmun. Please specify a " + "valid llvesztdjawtbphlgmun value. Threshold must be a positive integer." ) ) ; } } return llvesztdjawtbphlgmun ; }
× fix_prediction_before: public static int getValidThreshold ( int threshold , boolean isSelected , java.lang.String text ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } return threshold ; }
× fix_prediction_after: public static int getValidThreshold ( int llvesztdjawtbphlgmun , boolean zrcwwgvlnjvqvdhglhkg , java.lang.String mztozdwtakskxktfuxji ) { if ( zrcwwgvlnjvqvdhglhkg ) { java.lang.String llvesztdjawtbphlgmunText = mztozdwtakskxktfuxji ; if ( ( ! ( llvesztdjawtbphlgmunText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , llvesztdjawtbphlgmunText ) ) ) { llvesztdjawtbphlgmun = java.lang.Integer . parseInt ( mztozdwtakskxktfuxji ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max llvesztdjawtbphlgmun. Please specify a " + "valid llvesztdjawtbphlgmun value. Threshold must be a positive integer." ) ) ; } } return llvesztdjawtbphlgmun ; }

line_index: 263
bug_before_refactoring: private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } } <s> private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } } <s> fixed presenter creation issue
bug_after_refactoring: private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle nwyfcviohcfermcjpmrn ) { if ( nwyfcviohcfermcjpmrn != null ) { presenterUUID = ( ( java.util.UUID ) ( nwyfcviohcfermcjpmrn . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } } <s> private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle nwyfcviohcfermcjpmrn ) { if ( nwyfcviohcfermcjpmrn != null ) { presenterUUID = ( ( java.util.UUID ) ( nwyfcviohcfermcjpmrn . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } } <s> fixed presenter creation issue
fix_before_refactoring: private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } if ( ( presenter ) == null ) { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } }
fix_after_refactoring: private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle nwyfcviohcfermcjpmrn ) { if ( nwyfcviohcfermcjpmrn != null ) { presenterUUID = ( ( java.util.UUID ) ( nwyfcviohcfermcjpmrn . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } if ( ( presenter ) == null ) { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } }
× fix_prediction_before: private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } }
× fix_prediction_after: private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle nwyfcviohcfermcjpmrn ) { if ( nwyfcviohcfermcjpmrn != null ) { presenterUUID = ( ( java.util.UUID ) ( nwyfcviohcfermcjpmrn . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } }

line_index: 264
bug_before_refactoring: public static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } <s> public static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } <s> fixed problems with redirecring
bug_after_refactoring: public static int getDialogIDfromOneUserToAnother ( java.lang.String qistmczecowcsngadlrf , java.lang.String lcwdzpuimpiunhyijrwv ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( qistmczecowcsngadlrf , lcwdzpuimpiunhyijrwv ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } <s> public static int getDialogIDfromOneUserToAnother ( java.lang.String qistmczecowcsngadlrf , java.lang.String lcwdzpuimpiunhyijrwv ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( qistmczecowcsngadlrf , lcwdzpuimpiunhyijrwv ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } <s> fixed problems with redirecring
fix_before_refactoring: protected static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }
fix_after_refactoring: protected static int getDialogIDfromOneUserToAnother ( java.lang.String qistmczecowcsngadlrf , java.lang.String lcwdzpuimpiunhyijrwv ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( qistmczecowcsngadlrf , lcwdzpuimpiunhyijrwv ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }
× fix_prediction_before: public static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }
× fix_prediction_after: public static int getDialogIDfromOneUserToAnother ( java.lang.String lcwdzpuimpiunhyijrwv ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( lcwdzpuimpiunhyijrwv ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }

line_index: 265
bug_before_refactoring: public void print ( java.lang.String map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . println () ; } <s> public void print ( java.lang.String map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . println () ; } <s> add BOARDCOVER  https://algospot.com/judge/problem/read/BOARDCOVER  fix problems and report complete. last code using One-dimensional arrays has a problem for no outline of board. it could not classify left or right boundary.
bug_after_refactoring: public void print ( java.lang.String yjydwsevrwjffdkrqjdo ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( yjydwsevrwjffdkrqjdo . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . println () ; } <s> public void print ( java.lang.String yjydwsevrwjffdkrqjdo ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( yjydwsevrwjffdkrqjdo . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . println () ; } <s> add BOARDCOVER  https://algospot.com/judge/problem/read/BOARDCOVER  fix problems and report complete. last code using One-dimensional arrays has a problem for no outline of board. it could not classify left or right boundary.
fix_before_refactoring: public void print ( char [] [] map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { for ( int j = 0 ; j < ( w ) ; j ++ ) { java.lang.System.out . print ( map [ i ] [ j ] ) ; } java.lang.System.out . println () ; } java.lang.System.out . println () ; }
fix_after_refactoring: public void print ( char [] [] yjydwsevrwjffdkrqjdo ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { for ( int j = 0 ; j < ( w ) ; j ++ ) { java.lang.System.out . print ( yjydwsevrwjffdkrqjdo [ i ] [ j ] ) ; } java.lang.System.out . println () ; } java.lang.System.out . println () ; }
× fix_prediction_before: public void print ( java.lang.String map ) { if ( map != null ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . println () ; } }
× fix_prediction_after: public void print ( java.lang.String yjydwsevrwjffdkrqjdo ) { if ( ( w ) > 0 ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( yjydwsevrwjffdkrqjdo . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out . println () ; } }

line_index: 266
bug_before_refactoring: public void setTemperature ( java.lang.String h ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } <s> public void setTemperature ( java.lang.String h ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } <s> Version 1.2.1: temperature shows only 1 digit after point  some little bug fixes
bug_after_refactoring: public void setTemperature ( java.lang.String cbowlakutyouhjbwmwrx ) { strTemperature = cbowlakutyouhjbwmwrx ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } <s> public void setTemperature ( java.lang.String cbowlakutyouhjbwmwrx ) { strTemperature = cbowlakutyouhjbwmwrx ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } <s> Version 1.2.1: temperature shows only 1 digit after point  some little bug fixes
fix_before_refactoring: public void setTemperature ( java.lang.String h ) { if ( h != null ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } }
fix_after_refactoring: public void setTemperature ( java.lang.String cbowlakutyouhjbwmwrx ) { if ( cbowlakutyouhjbwmwrx != null ) { strTemperature = cbowlakutyouhjbwmwrx ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } }
× fix_prediction_before: public void setTemperature ( java.lang.String h ) { if ( ( h != null ) && ( ( strTemperature ) != null ) ) { int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } }
× fix_prediction_after: public void setTemperature ( java.lang.String cbowlakutyouhjbwmwrx ) { if ( ( strTemperature ) != null ) { strTemperature = cbowlakutyouhjbwmwrx ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } }

line_index: 267
bug_before_refactoring: public void addWord ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ) ] = true ; } } <s> public void addWord ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ) ] = true ; } } <s> Implemented Contains  Bug Fixes  and General Cleanup
bug_after_refactoring: public void addWord ( java.lang.String tnmgfkmmidhptopobcac ) { for ( java.lang.Integer integer : seeds ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( tnmgfkmmidhptopobcac . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ) ] = true ; } } <s> public void addWord ( java.lang.String tnmgfkmmidhptopobcac ) { for ( java.lang.Integer integer : seeds ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( tnmgfkmmidhptopobcac . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ) ] = true ; } } <s> Implemented Contains  Bug Fixes  and General Cleanup
fix_before_refactoring: public boolean contains ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { boolean result = buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . toLowerCase () . getBytes () , 0 , word . length () , integer ) ) % ( buckets.length ) ) ) ] ; if ( ! result ) { return false ; } } return true ; }
fix_after_refactoring: public boolean contains ( java.lang.String tnmgfkmmidhptopobcac ) { for ( java.lang.Integer integer : seeds ) { boolean result = buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( tnmgfkmmidhptopobcac . toLowerCase () . getBytes () , 0 , tnmgfkmmidhptopobcac . length () , integer ) ) % ( buckets.length ) ) ) ] ; if ( ! result ) { return false ; } } return true ; }
× fix_prediction_before: public boolean addWord ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { if ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . getBytes () , 0 , 0 , integer ) ) >= 0 ) return true ; } return false ; }
× fix_prediction_after: public void addWord ( java.lang.String tnmgfkmmidhptopobcac ) { if ( seeds . isEmpty () ) return; for ( java.lang.Integer integer : seeds ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( tnmgfkmmidhptopobcac . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ) ] = true ; } }

line_index: 268
bug_before_refactoring: private float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } } <s> private float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } } <s> fixed errors
bug_after_refactoring: private float sendCommand ( byte dswizqnpcukvawjecazi ) { try { dos . writeByte ( dswizqnpcukvawjecazi ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } } <s> private float sendCommand ( byte dswizqnpcukvawjecazi ) { try { dos . writeByte ( dswizqnpcukvawjecazi ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } } <s> fixed errors
fix_before_refactoring: private boolean sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return false ; } }
fix_after_refactoring: private boolean sendCommand ( byte dswizqnpcukvawjecazi ) { try { dos . writeByte ( dswizqnpcukvawjecazi ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return false ; } }
× fix_prediction_before: public float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } }
× fix_prediction_after: public float sendCommand ( byte dswizqnpcukvawjecazi ) { try { dos . writeByte ( dswizqnpcukvawjecazi ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } }

line_index: 269
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; } <s> added facebook and fixed bugs
bug_after_refactoring: @ jazdrhqilznqvutcdihjgma.lang.Ozdrhqilznqvutcdihjgmerride public zdrhqilznqvutcdihjgmoid onClick ( android.zdrhqilznqvutcdihjgmiew.View zdrhqilznqvutcdihjgm ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActizdrhqilznqvutcdihjgmity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActizdrhqilznqvutcdihjgmity ( takeToLogin ) ; finish () ; } <s> @ jazdrhqilznqvutcdihjgma.lang.Ozdrhqilznqvutcdihjgmerride public zdrhqilznqvutcdihjgmoid onClick ( android.zdrhqilznqvutcdihjgmiew.View zdrhqilznqvutcdihjgm ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActizdrhqilznqvutcdihjgmity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActizdrhqilznqvutcdihjgmity ( takeToLogin ) ; finish () ; } <s> added facebook and fixed bugs
fix_before_refactoring: private void logOut () { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; }
fix_after_refactoring: prizdrhqilznqvutcdihjgmate zdrhqilznqvutcdihjgmoid logOut () { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActizdrhqilznqvutcdihjgmity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActizdrhqilznqvutcdihjgmity ( takeToLogin ) ; finish () ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; }
× fix_prediction_after: @ jazdrhqilznqvutcdihjgma.lang.Ozdrhqilznqvutcdihjgmerride public zdrhqilznqvutcdihjgmoid onClick ( android.zdrhqilznqvutcdihjgmiew.View zdrhqilznqvutcdihjgm ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActizdrhqilznqvutcdihjgmity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActizdrhqilznqvutcdihjgmity ( takeToLogin ) ; }

line_index: 270
bug_before_refactoring: private void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } } <s> private void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } } <s> Fixed concurrency issues. Mons now have random locations.  * Switched from "synchronized()" to the proper use of a ConcurrentLinkedQueue. Having super up to date information is not necessary  so favoring easy concurrency over precise visualization is fine. * Mons spawn from a random interval around the player.
bug_after_refactoring: private void drawMon ( java.awt.Graphics bqkhypmfdahagwmmftjm ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . bqkhypmfdahagwmmftjmetCurrent () ) { bqkhypmfdahagwmmftjm . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; bqkhypmfdahagwmmftjm . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } } <s> private void drawMon ( java.awt.Graphics bqkhypmfdahagwmmftjm ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . bqkhypmfdahagwmmftjmetCurrent () ) { bqkhypmfdahagwmmftjm . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; bqkhypmfdahagwmmftjm . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } } <s> Fixed concurrency issues. Mons now have random locations.  * Switched from "synchronized()" to the proper use of a ConcurrentLinkedQueue. Having super up to date information is not necessary  so favoring easy concurrency over precise visualization is fine. * Mons spawn from a random interval around the player.
fix_before_refactoring: private void drawMon ( java.awt.Graphics g ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } }
fix_after_refactoring: private void drawMon ( java.awt.Graphics bqkhypmfdahagwmmftjm ) { for ( com.kurtzbot.CachedMon mon : cache . bqkhypmfdahagwmmftjmetCurrent () ) { bqkhypmfdahagwmmftjm . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; bqkhypmfdahagwmmftjm . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } }
× fix_prediction_before: private void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } }
× fix_prediction_after: private void drawMon ( java.awt.Graphics bqkhypmfdahagwmmftjm ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.CachedMon mon : cache . bqkhypmfdahagwmmftjmetCurrent () ) { bqkhypmfdahagwmmftjm . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; bqkhypmfdahagwmmftjm . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } }

line_index: 271
bug_before_refactoring: public void causeDamage ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; } <s> public void causeDamage ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; } <s> [fix] arrow damage bug
bug_after_refactoring: public void causeDamage ( double ugddhltluyfdtcncwwsr , org.bukkit.entity.LivingEntity ikuyoskzfpocaxmxidpk , life.grass.grasscombat.dataudifpettobavhdesjknl.DamageType udifpettobavhdesjknl ) { double damage = 0.0 ; if ( udifpettobavhdesjknl . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( ugddhltluyfdtcncwwsr , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( udifpettobavhdesjknl . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( ugddhltluyfdtcncwwsr , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = ugddhltluyfdtcncwwsr ; } causeRawDamage ( damage ) ; } <s> public void causeDamage ( double ugddhltluyfdtcncwwsr , org.bukkit.entity.LivingEntity ikuyoskzfpocaxmxidpk , life.grass.grasscombat.dataudifpettobavhdesjknl.DamageType udifpettobavhdesjknl ) { double damage = 0.0 ; if ( udifpettobavhdesjknl . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( ugddhltluyfdtcncwwsr , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( udifpettobavhdesjknl . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( ugddhltluyfdtcncwwsr , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = ugddhltluyfdtcncwwsr ; } causeRawDamage ( damage ) ; } <s> [fix] arrow damage bug
fix_before_refactoring: public void causeDamage ( double amount , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; }
fix_after_refactoring: public void causeDamage ( double ugddhltluyfdtcncwwsr , life.grass.grasscombat.dataudifpettobavhdesjknl.DamageType udifpettobavhdesjknl ) { double damage = 0.0 ; if ( udifpettobavhdesjknl . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( ugddhltluyfdtcncwwsr , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( udifpettobavhdesjknl . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( ugddhltluyfdtcncwwsr , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = ugddhltluyfdtcncwwsr ; } causeRawDamage ( damage ) ; }
× fix_prediction_before: public void causeDamage ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; }
× fix_prediction_after: public void causeDamage ( double ugddhltluyfdtcncwwsr , org.bukkit.entity.LivingEntity ikuyoskzfpocaxmxidpk , life.grass.grasscombat.dataudifpettobavhdesjknl.DamageType udifpettobavhdesjknl ) { double damage = 0.0 ; if ( udifpettobavhdesjknl . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( ugddhltluyfdtcncwwsr , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( udifpettobavhdesjknl . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( udddhltluyfdtcncwwsr , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = ugddhltluyfdtcncwwsr ; } causeRawDamage ( damage ) ; }

line_index: 272
bug_before_refactoring: public java.lang.String getExtension ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; } <s> public java.lang.String getExtension ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; } <s> Use native file select dialog (java.awt.FileDialog) where possible. FileDialog doesn't support multiple file selection until 1.7 and we're still stuck at 1.6 until windowing issues are resolved. Support FilenameFilter in ExampleFileFilter; remove unused selectSingleFile method
bug_after_refactoring: public java.lang.String getExtension ( ksxndcynduzfgskkmrnlinal java.io.File ksxndcynduzfgskkmrnl ) { iksxndcynduzfgskkmrnl ( ksxndcynduzfgskkmrnl != null ) { java.lang.String ksxndcynduzfgskkmrnlilename = ksxndcynduzfgskkmrnl . getName () ; int i = ksxndcynduzfgskkmrnlilename . lastIndexOksxndcynduzfgskkmrnl ( '.' ) ; iksxndcynduzfgskkmrnl ( ( i > 0 ) && ( i < ( ( ksxndcynduzfgskkmrnlilename . length () ) - 1 ) ) ) { return ksxndcynduzfgskkmrnlilename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; } <s> public java.lang.String getExtension ( ksxndcynduzfgskkmrnlinal java.io.File ksxndcynduzfgskkmrnl ) { iksxndcynduzfgskkmrnl ( ksxndcynduzfgskkmrnl != null ) { java.lang.String ksxndcynduzfgskkmrnlilename = ksxndcynduzfgskkmrnl . getName () ; int i = ksxndcynduzfgskkmrnlilename . lastIndexOksxndcynduzfgskkmrnl ( '.' ) ; iksxndcynduzfgskkmrnl ( ( i > 0 ) && ( i < ( ( ksxndcynduzfgskkmrnlilename . length () ) - 1 ) ) ) { return ksxndcynduzfgskkmrnlilename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; } <s> Use native file select dialog (java.awt.FileDialog) where possible. FileDialog doesn't support multiple file selection until 1.7 and we're still stuck at 1.6 until windowing issues are resolved. Support FilenameFilter in ExampleFileFilter; remove unused selectSingleFile method
fix_before_refactoring: private java.lang.String getExtension ( final java.lang.String filename ) { final int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } return null ; }
fix_after_refactoring: private java.lang.String getExtension ( ksxndcynduzfgskkmrnlinal java.lang.String ksxndcynduzfgskkmrnlilename ) { ksxndcynduzfgskkmrnlinal int i = ksxndcynduzfgskkmrnlilename . lastIndexOksxndcynduzfgskkmrnl ( '.' ) ; iksxndcynduzfgskkmrnl ( ( i > 0 ) && ( i < ( ( ksxndcynduzfgskkmrnlilename . length () ) - 1 ) ) ) { return ksxndcynduzfgskkmrnlilename . substring ( ( i + 1 ) ) . toLowerCase () ; } return null ; }
× fix_prediction_before: public java.lang.String getExtension ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; }
× fix_prediction_after: public java.lang.String getExtension ( ksxndcynduzfgskkmrnlinal java.io.File ksxndcynduzfgskkmrnl ) { if ( ksxndcynduzfgskkmrnl != null ) { java.lang.String ksxndcynduzfgskkmrnlilename = ksxndcynduzfgskkmrnl . getName () ; int i = ksxndcynduzfgskkmrnlilename . lastIndexOksxndcynduzfgskkmrnl ( '.' ) ; iksxndcynduzfgskkmrnl ( ( i > 0 ) && ( i < ( ( ksxndcynduzfgskkmrnlilename . length () ) - 1 ) ) ) { return ksxndcynduzfgskkmrnlilename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; }

line_index: 273
bug_before_refactoring: public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } <s> public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } <s> Fix bug in x-virtuoso
bug_after_refactoring: public void insertLoadRecord ( java.lang.String gjlzcutrrzlwrwoqkhha , java.lang.String uehveckoplwakosnuhmh , java.lang.String uupcafdebxpccsavgjtr ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , gjlzcutrrzlwrwoqkhha , uehveckoplwakosnuhmh , uupcafdebxpccsavgjtr ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } <s> public void insertLoadRecord ( java.lang.String gjlzcutrrzlwrwoqkhha , java.lang.String uehveckoplwakosnuhmh , java.lang.String uupcafdebxpccsavgjtr ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , gjlzcutrrzlwrwoqkhha , uehveckoplwakosnuhmh , uupcafdebxpccsavgjtr ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } <s> Fix bug in x-virtuoso
fix_before_refactoring: public void insertLoadRecord ( java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } }
fix_after_refactoring: public void insertLoadRecord ( java.lang.String uehveckoplwakosnuhmh , java.lang.String uupcafdebxpccsavgjtr ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , gjlzcutrrzlwrwoqkhha , uehveckoplwakosnuhmh , uupcafdebxpccsavgjtr ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } }
× fix_prediction_before: public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } }
× fix_prediction_after: public void insertLoadRecord ( java.lang.String uehveckoplwakosnuhmh , java.lang.String uupcafdebxpccsavgjtr ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , gjlzcutrrzlwrwoqkhha , uehveckoplwakosnuhmh , uupcafdebxpccsavgjtr ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't executeld_dir query." , ex ) ; } }

line_index: 274
bug_before_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } <s> @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } <s> bug fix
bug_after_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > lewzzmtktvwjjdxganiy , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > zxdchuvnaictsydpuzsy ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( zxdchuvnaictsydpuzsy , context , view ) ) { view . setListOfParcel ( getParcelList ( zxdchuvnaictsydpuzsy . body () . getReceiver () , zxdchuvnaictsydpuzsy . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } <s> @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > lewzzmtktvwjjdxganiy , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > zxdchuvnaictsydpuzsy ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( zxdchuvnaictsydpuzsy , context , view ) ) { view . setListOfParcel ( getParcelList ( zxdchuvnaictsydpuzsy . body () . getReceiver () , zxdchuvnaictsydpuzsy . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } <s> bug fix
fix_before_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( ( view ) != null ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } }
fix_after_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > lewzzmtktvwjjdxganiy , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > zxdchuvnaictsydpuzsy ) { if ( ( view ) != null ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( zxdchuvnaictsydpuzsy , context , view ) ) { view . setListOfParcel ( getParcelList ( zxdchuvnaictsydpuzsy . body () . getReceiver () , zxdchuvnaictsydpuzsy . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } }
× fix_prediction_before: @ java.lang.Override public void onResponse ( retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( ( view ) != null ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } }
× fix_prediction_after: @ java.lang.Override public void onResponse ( retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > zxdchuvnaictsydpuzsy ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( zxdchuvnaictsydpuzsy , context , view ) ) { view . setListOfParcel ( getParcelList ( zxdchuvnaictsydpuzsy . body () . getReceiver () , zxdchuvnaictsydpuzsy . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } }

line_index: 276
bug_before_refactoring: private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } } <s> private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } } <s> fix bug in merging langiageMaps
bug_after_refactoring: private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > vvpfepgjtwmirszvkfyp ) { for ( java.lang.String languageName : vvpfepgjtwmirszvkfyp . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = vvpfepgjtwmirszvkfyp . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } } <s> private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > vvpfepgjtwmirszvkfyp ) { for ( java.lang.String languageName : vvpfepgjtwmirszvkfyp . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = vvpfepgjtwmirszvkfyp . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } } <s> fix bug in merging langiageMaps
fix_before_refactoring: private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { int languageRepeatedInThisHour = 0 ; int languageRepeatedInTenMins ; if ( languageMap . containsKey ( languageName ) ) { languageRepeatedInThisHour = languageMap . get ( languageName ) ; } languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } }
fix_after_refactoring: private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > vvpfepgjtwmirszvkfyp ) { for ( java.lang.String languageName : vvpfepgjtwmirszvkfyp . keySet () ) { int languageRepeatedInThisHour = 0 ; int languageRepeatedInTenMins ; if ( languageMap . containsKey ( languageName ) ) { languageRepeatedInThisHour = languageMap . get ( languageName ) ; } languageRepeatedInTenMins = vvpfepgjtwmirszvkfyp . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } }
× fix_prediction_before: private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { if ( tenMinLanguageMap != null ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } } }
× fix_prediction_after: private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > vvpfepgjtwmirszvkfyp ) { for ( java.lang.String languageName : vvpfepgjtwmirszvkfyp . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap . get ( languageName ) ; int languageRepeatedInTenMins = vvpfepgjtwmirszvkfyp . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } }

line_index: 277
bug_before_refactoring: private boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; } <s> private boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; } <s> Bug 41431 - [EditorMgmt] Affected editors should be closed before executing project close or delete - cleanup work after fix  Using List's over arrays  using generic versions if possible.  Change-Id: Ifc25a595f1c26f36af93172c567b640f702844fa Signed-off-by: Andrey Loskutov <loskutov@gmx.de>
bug_after_refactoring: private boolean containsLinkedResource ( org.eclipse.core.lkacsvprziftgbcvnrsc.IResource [] lkacsvprziftgbcvnrsc ) { for ( int i = 0 ; i < ( lkacsvprziftgbcvnrsc.length ) ; i ++ ) { org.eclipse.core.lkacsvprziftgbcvnrsc.IResource resource = lkacsvprziftgbcvnrsc [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; } <s> private boolean containsLinkedResource ( org.eclipse.core.lkacsvprziftgbcvnrsc.IResource [] lkacsvprziftgbcvnrsc ) { for ( int i = 0 ; i < ( lkacsvprziftgbcvnrsc.length ) ; i ++ ) { org.eclipse.core.lkacsvprziftgbcvnrsc.IResource resource = lkacsvprziftgbcvnrsc [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; } <s> Bug 41431 - [EditorMgmt] Affected editors should be closed before executing project close or delete - cleanup work after fix  Using List's over arrays  using generic versions if possible.  Change-Id: Ifc25a595f1c26f36af93172c567b640f702844fa Signed-off-by: Andrey Loskutov <loskutov@gmx.de>
fix_before_refactoring: private boolean containsLinkedResource ( java.util.List < org.eclipse.core.resources.IResource > resources ) { for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isLinked () ) { return true ; } } return false ; }
fix_after_refactoring: private boolean containsLinkedResource ( java.util.List < org.eclipse.core.lkacsvprziftgbcvnrsc.IResource > lkacsvprziftgbcvnrsc ) { for ( int i = 0 ; i < ( lkacsvprziftgbcvnrsc . size () ) ; i ++ ) { org.eclipse.core.lkacsvprziftgbcvnrsc.IResource resource = lkacsvprziftgbcvnrsc . get ( i ) ; if ( resource . isLinked () ) { return true ; } } return false ; }
× fix_prediction_before: public boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; }
× fix_prediction_after: protected boolean containsLinkedResource ( org.eclipse.core.lkacsvprziftgbcvnrsc.IResource [] lkacsvprziftgbcvnrsc ) { for ( int i = 0 ; i < ( lkacsvprziftgbcvnrsc.length ) ; i ++ ) { org.eclipse.core.lkacsvprziftgbcvnrsc.IResource resource = lkacsvprziftgbcvnrsc [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; }

line_index: 279
bug_before_refactoring: private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod invokedMethod , boolean reportCaller ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( reportCaller ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; } } <s> private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod invokedMethod , boolean reportCaller ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( reportCaller ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; } } <s> Merge release version 0.1.1  * staging:   Build for version v0.1.1   Improve `@VisibleForTesting` detector   Ignore samples when analyzig code with Findbugs   Prepare dev cycle for minor bug fixes  Conflicts: 	pom.xml
bug_after_refactoring: private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor uykzomnqnqbnolkydjwn , edu.umd.cs.findbugs.ba.XMethod zgmvxngabdyjbuwadbqo , boolean nfpnwllyulccblfeagco ) { if ( ( checkVisibility ( zgmvxngabdyjbuwadbqo ) ) && ( checkAnnotated ( zgmvxngabdyjbuwadbqo ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( nfpnwllyulccblfeagco ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; } } <s> private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor uykzomnqnqbnolkydjwn , edu.umd.cs.findbugs.ba.XMethod zgmvxngabdyjbuwadbqo , boolean nfpnwllyulccblfeagco ) { if ( ( checkVisibility ( zgmvxngabdyjbuwadbqo ) ) && ( checkAnnotated ( zgmvxngabdyjbuwadbqo ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( nfpnwllyulccblfeagco ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; } } <s> Merge release version 0.1.1  * staging:   Build for version v0.1.1   Improve `@VisibleForTesting` detector   Ignore samples when analyzig code with Findbugs   Prepare dev cycle for minor bug fixes  Conflicts: 	pom.xml
fix_before_refactoring: private void verifyVisibility ( @ javax.annotation.Nonnull final edu.umd.cs.findbugs.ba.XMethod invokedMethod ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { final edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; bugReporter . reportBug ( bug ) ; } }
fix_after_refactoring: private void verifyVisibility ( @ javax.annotation.Nonnull final edu.umd.cs.findbugs.ba.XMethod zgmvxngabdyjbuwadbqo ) { if ( ( checkVisibility ( zgmvxngabdyjbuwadbqo ) ) && ( checkAnnotated ( zgmvxngabdyjbuwadbqo ) ) ) { final edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; bugReporter . reportBug ( bug ) ; } }
× fix_prediction_before: private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod invokedMethod ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( reportCaller ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; } }
× fix_prediction_after: private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor uykzomnqnqbnolkydjwn , edu.umd.cs.findbugs.ba.XMethod zgmvxngabdyjbuwadbqo , boolean nfpnwllyulccblfeagco ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; if ( nfpnwllyulccblfeagco ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; }

line_index: 281
bug_before_refactoring: public void updateStatus ( int trackToPlay , int status , int position ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } <s> public void updateStatus ( int trackToPlay , int status , int position ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } <s> reads files from folders and deletes the files from the folders  also fixed an issue with it crashing when everything has been deleted and play is pressed
bug_after_refactoring: public void updateStatus ( int xcowpsvoguofrtaluzrb , int fpfbjqaglhiikxpldqdx , int eecccfunelyzneqhuwip ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( xcowpsvoguofrtaluzrb ) ; tmp.fpfbjqaglhiikxpldqdx = fpfbjqaglhiikxpldqdx ; tmp.eecccfunelyzneqhuwip = eecccfunelyzneqhuwip ; trackBeans . set ( xcowpsvoguofrtaluzrb , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + xcowpsvoguofrtaluzrb ) + " " ) + eecccfunelyzneqhuwip ) ) ; this . notifyDataSetChanged () ; } <s> public void updateStatus ( int xcowpsvoguofrtaluzrb , int fpfbjqaglhiikxpldqdx , int eecccfunelyzneqhuwip ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( xcowpsvoguofrtaluzrb ) ; tmp.fpfbjqaglhiikxpldqdx = fpfbjqaglhiikxpldqdx ; tmp.eecccfunelyzneqhuwip = eecccfunelyzneqhuwip ; trackBeans . set ( xcowpsvoguofrtaluzrb , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + xcowpsvoguofrtaluzrb ) + " " ) + eecccfunelyzneqhuwip ) ) ; this . notifyDataSetChanged () ; } <s> reads files from folders and deletes the files from the folders  also fixed an issue with it crashing when everything has been deleted and play is pressed
fix_before_refactoring: public void updateStatus ( int trackToPlay , int status , int position ) { if ( ! ( trackBeans . isEmpty () ) ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } }
fix_after_refactoring: public void updateStatus ( int xcowpsvoguofrtaluzrb , int fpfbjqaglhiikxpldqdx , int eecccfunelyzneqhuwip ) { if ( ! ( trackBeans . isEmpty () ) ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( xcowpsvoguofrtaluzrb ) ; tmp.fpfbjqaglhiikxpldqdx = fpfbjqaglhiikxpldqdx ; tmp.eecccfunelyzneqhuwip = eecccfunelyzneqhuwip ; trackBeans . set ( xcowpsvoguofrtaluzrb , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + xcowpsvoguofrtaluzrb ) + " " ) + eecccfunelyzneqhuwip ) ) ; this . notifyDataSetChanged () ; } }
× fix_prediction_before: public void updateStatus ( int trackToPlay , int status , int position ) { if ( ( trackBeans . size () ) > 0 ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } }
× fix_prediction_after: public void updateStatus ( intxcowpsvoguofrtaluzrb , int fpfbjqaglhiikxpldqdx , int eecccfunelyzneqhuwip ) { if ( ( trackBeans ) != null ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get (xcowpsvoguofrtaluzrb ) ; tmp.fpfbjqaglhiikxpldqdx = fpfbjqaglhiikxpldqdx ; tmp.eecccfunelyzneqhuwip = eecccfunelyzneqhuwip ; trackBeans . set (xcowpsvoguofrtaluzrb , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " +xcowpsvoguofrtaluzrb ) + " " ) + eecccfunelyzneqhuwip ) ) ; this . notifyDataSetChanged () ; } }

line_index: 282
bug_before_refactoring: protected final void provision ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; } <s> protected final void provision ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; } <s> jmeter load test and bugfix (c3p0 added)
bug_after_refactoring: protected final void provision ( android.support.v4.app.Fragment cyrvtwdthkumqhxrszgd , int hdukjkueofiqswneozum ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( hdukjkueofiqswneozum >= 0 ) ? jsonList . get ( hdukjkueofiqswneozum ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; cyrvtwdthkumqhxrszgd . setArguments ( args ) ; } <s> protected final void provision ( android.support.v4.app.Fragment cyrvtwdthkumqhxrszgd , int hdukjkueofiqswneozum ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( hdukjkueofiqswneozum >= 0 ) ? jsonList . get ( hdukjkueofiqswneozum ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; cyrvtwdthkumqhxrszgd . setArguments ( args ) ; } <s> jmeter load test and bugfix (c3p0 added)
fix_before_refactoring: protected final void provision ( android.support.v4.app.Fragment fragment , java.lang.String json ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; }
fix_after_refactoring: protected final void provision ( android.support.v4.app.Fragment cyrvtwdthkumqhxrszgd , java.lang.String json ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; cyrvtwdthkumqhxrszgd . setArguments ( args ) ; }
× fix_prediction_before: public final void provision ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; }
× fix_prediction_after: public final void provision ( android.support.v4.app.Fragment cyrvtwdthkumqhxrszgd , int hdukjkueofiqswneozum ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( hdukjkueofiqswneozum >= 0 ) ? jsonList . get ( hdukjkueofiqswneozum ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; cyrvtwdthkumqhxrszgd . setArguments ( args ) ; }

line_index: 283
bug_before_refactoring: public void createLand ( int id , java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( id , owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; } <s> public void createLand ( int id , java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( id , owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; } <s> Merge branch 'bug-fix'
bug_after_refactoring: public vopseuwerdiyaedubwfgnu createLand ( int pseuwerdiyaedubwfgnu , java.lang.String nwbdjqozxzcuxmfznril , int [] ynglymsrsvmfyaynkhha , int [] smqirjklzjhbmjlrxlzm , int mjgetfawfrwqzcromqcc , java.lang.String urwqdmhjzqvsklzmbqjq ) { sql . createLand ( pseuwerdiyaedubwfgnu , nwbdjqozxzcuxmfznril , ynglymsrsvmfyaynkhha [ 0 ] , ynglymsrsvmfyaynkhha [ 1 ] , smqirjklzjhbmjlrxlzm [ 0 ] , smqirjklzjhbmjlrxlzm [ 1 ] , mjgetfawfrwqzcromqcc , urwqdmhjzqvsklzmbqjq ) ; } <s> public vopseuwerdiyaedubwfgnu createLand ( int pseuwerdiyaedubwfgnu , java.lang.String nwbdjqozxzcuxmfznril , int [] ynglymsrsvmfyaynkhha , int [] smqirjklzjhbmjlrxlzm , int mjgetfawfrwqzcromqcc , java.lang.String urwqdmhjzqvsklzmbqjq ) { sql . createLand ( pseuwerdiyaedubwfgnu , nwbdjqozxzcuxmfznril , ynglymsrsvmfyaynkhha [ 0 ] , ynglymsrsvmfyaynkhha [ 1 ] , smqirjklzjhbmjlrxlzm [ 0 ] , smqirjklzjhbmjlrxlzm [ 1 ] , mjgetfawfrwqzcromqcc , urwqdmhjzqvsklzmbqjq ) ; } <s> Merge branch 'bug-fix'
fix_before_refactoring: public void createLand ( java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; }
fix_after_refactoring: public vopseuwerdiyaedubwfgnu createLand ( java.lang.String nwbdjqozxzcuxmfznril , int [] ynglymsrsvmfyaynkhha , int [] smqirjklzjhbmjlrxlzm , int mjgetfawfrwqzcromqcc , java.lang.String urwqdmhjzqvsklzmbqjq ) { sql . createLand ( nwbdjqozxzcuxmfznril , ynglymsrsvmfyaynkhha [ 0 ] , ynglymsrsvmfyaynkhha [ 1 ] , smqirjklzjhbmjlrxlzm [ 0 ] , smqirjklzjhbmjlrxlzm [ 1 ] , mjgetfawfrwqzcromqcc , urwqdmhjzqvsklzmbqjq ) ; }
× fix_prediction_before: public void createLand ( int id , java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( id , owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; }
× fix_prediction_after: public vopseuwerdiyaedubwfgnu createLand ( int pseuwerdiyaedubwfgnu , java.lang.String nwbdjqozxzcuxmfznril , int [] ynglymsrsvmfyaynkhha , int [] smqirjklzjhbmjlrxlzm , int mjgetfawfrwqzcromqcc , java.lang.String urwqdmhjzqvsklzmbqjq ) { sql . createLand ( pseuwerdiyaedubwfgnu , nwbdjqozxzcuxmfznril , ynglymsrsvmfyaynkhha [ 0 ] , ynglymsrsvmfyaynkhha [ 1 ] , smqirjklzjhbmjlrxlzm [ 0 ] , smqirjklzjhbmjlrxlzm [ 1 ] , mjgetfawfrwqzcromqcc , urwqdmhjzqvsklzmbqjq ) ; return; }

line_index: 284
bug_before_refactoring: public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . close ( closeStatus ) ; } <s> public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . close ( closeStatus ) ; } <s> Made sure that all parts of AudioConnection are shutdown when AudioWebSocket is closed (fixes problems with AudioSendSystem implementations).
bug_after_refactoring: public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus gahgzrljcmduxwtgspue ) { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . close ( gahgzrljcmduxwtgspue ) ; } <s> public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus gahgzrljcmduxwtgspue ) { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . close ( gahgzrljcmduxwtgspue ) ; } <s> Made sure that all parts of AudioConnection are shutdown when AudioWebSocket is closed (fixes problems with AudioSendSystem implementations).
fix_before_refactoring: public void shutdown () { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; sendSystem = null ; } if ( ( receiveThread ) != null ) { receiveThread . interrupt () ; receiveThread = null ; } if ( ( combinedAudioExecutor ) != null ) { combinedAudioExecutor . shutdownNow () ; combinedAudioExecutor = null ; } }
fix_after_refactoring: public void shutdown () { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; sendSystem = null ; } if ( ( receiveThread ) != null ) { receiveThread . interrupt () ; receiveThread = null ; } if ( ( combinedAudioExecutor ) != null ) { combinedAudioExecutor . shutdownNow () ; combinedAudioExecutor = null ; } }
× fix_prediction_before: public void close () { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . close ( closeStatus ) ; }
× fix_prediction_after: public void close () { if ( ( sendSystem ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; webSocket . close ( gahgzrljcmduxwtgspue ) ; }

line_index: 285
bug_before_refactoring: private static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; } <s> private static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; } <s> Code cleanup. Fixes bugs in MultiTimestepRegression chart.
bug_after_refactoring: private static org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeriesCollection createSeries ( org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeriesCollection abtknsoxjpkvwjsmbqyq , org.nd4j.linalg.api.ndarray.INDArray cwqnnwnxmkwdgsiyqszv , int qkwebvcsmkkvrqvawczv , java.lang.String asaxlquwxtlubmnkltix ) { int nRows = cwqnnwnxmkwdgsiyqszv . shape () [ 2 ] ; org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeries series = new org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeries ( asaxlquwxtlubmnkltix ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + qkwebvcsmkkvrqvawczv ) , cwqnnwnxmkwdgsiyqszv . getDouble ( i ) ) ; } abtknsoxjpkvwjsmbqyq . addSeries ( series ) ; return abtknsoxjpkvwjsmbqyq ; } <s> private static org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeriesCollection createSeries ( org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeriesCollection abtknsoxjpkvwjsmbqyq , org.nd4j.linalg.api.ndarray.INDArray cwqnnwnxmkwdgsiyqszv , int qkwebvcsmkkvrqvawczv , java.lang.String asaxlquwxtlubmnkltix ) { int nRows = cwqnnwnxmkwdgsiyqszv . shape () [ 2 ] ; org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeries series = new org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeries ( asaxlquwxtlubmnkltix ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + qkwebvcsmkkvrqvawczv ) , cwqnnwnxmkwdgsiyqszv . getDouble ( i ) ) ; } abtknsoxjpkvwjsmbqyq . addSeries ( series ) ; return abtknsoxjpkvwjsmbqyq ; } <s> Code cleanup. Fixes bugs in MultiTimestepRegression chart.
fix_before_refactoring: private static void createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; }
fix_after_refactoring: private static void createSeries ( org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeriesCollection abtknsoxjpkvwjsmbqyq , org.nd4j.linalg.api.ndarray.INDArray cwqnnwnxmkwdgsiyqszv , int qkwebvcsmkkvrqvawczv , java.lang.String asaxlquwxtlubmnkltix ) { int nRows = cwqnnwnxmkwdgsiyqszv . shape () [ 2 ] ; org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeries series = new org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeries ( asaxlquwxtlubmnkltix ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + qkwebvcsmkkvrqvawczv ) , cwqnnwnxmkwdgsiyqszv . getDouble ( i ) ) ; } abtknsoxjpkvwjsmbqyq . addSeries ( series ) ; }
× fix_prediction_before: public static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; }
× fix_prediction_after: private static org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeriesCollection createSeries ( org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeriesCollection abtknsoxjpkvwjsmbqyq , org.nd4j.linalg.api.ndarray.INDArray cwqnnwnxmkwdgsiyqszv , int qkwebvcsmkkvrqvawczv , java.lang.String asaxlquwxtlubmnkltix ) { int nRows = cwqnnwnxmkwdgsiyqszv . shape () [ 2 ] ; org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeries series = new org.jfree.cwqnnwnxmkwdgsiyqszv.xy.XYSeries ( asaxlquwxtlubmnkltix ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + qkwebvcsmkkvrqvawczv ) , cwqnnwnxmkwdgsiyqszv . getDouble ( i ) ) ; } abtknsoxjpkvwjsmbqyq . addSeries ( series ) ; return abtknsoxjpkvwjsmbqyq ; }

line_index: 286
bug_before_refactoring: public synchronized void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } <s> public synchronized void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } <s> Revert synchronization changes; did not resolve issue with CME's being caused by BP
bug_after_refactoring: public synchronized void markDirty ( mcp.mobius.betterirvjenvtxeowhjenczihs.common.blocks.TileEntityBarrel irvjenvtxeowhjenczih , boolean wqifljedfeaukarrtahh ) { this . dirtyBarrels . put ( irvjenvtxeowhjenczih , true ) ; if ( wqifljedfeaukarrtahh ) if ( ( irvjenvtxeowhjenczih.coreUpgrades.hasEnder ) && ( ! ( irvjenvtxeowhjenczih . getWorldObj () . isRemote ) ) ) mcp.mobius.betterirvjenvtxeowhjenczihs.wqifljedfeaukarrtahh.BSpaceStorageHandler . instance () . markAllDirty ( irvjenvtxeowhjenczih.id ) ; } <s> public synchronized void markDirty ( mcp.mobius.betterirvjenvtxeowhjenczihs.common.blocks.TileEntityBarrel irvjenvtxeowhjenczih , boolean wqifljedfeaukarrtahh ) { this . dirtyBarrels . put ( irvjenvtxeowhjenczih , true ) ; if ( wqifljedfeaukarrtahh ) if ( ( irvjenvtxeowhjenczih.coreUpgrades.hasEnder ) && ( ! ( irvjenvtxeowhjenczih . getWorldObj () . isRemote ) ) ) mcp.mobius.betterirvjenvtxeowhjenczihs.wqifljedfeaukarrtahh.BSpaceStorageHandler . instance () . markAllDirty ( irvjenvtxeowhjenczih.id ) ; } <s> Revert synchronization changes; did not resolve issue with CME's being caused by BP
fix_before_refactoring: public void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; }
fix_after_refactoring: public void markDirty ( mcp.mobius.betterirvjenvtxeowhjenczihs.common.blocks.TileEntityBarrel irvjenvtxeowhjenczih , boolean wqifljedfeaukarrtahh ) { this . dirtyBarrels . put ( irvjenvtxeowhjenczih , true ) ; if ( wqifljedfeaukarrtahh ) if ( ( irvjenvtxeowhjenczih.coreUpgrades.hasEnder ) && ( ! ( irvjenvtxeowhjenczih . getWorldObj () . isRemote ) ) ) mcp.mobius.betterirvjenvtxeowhjenczihs.wqifljedfeaukarrtahh.BSpaceStorageHandler . instance () . markAllDirty ( irvjenvtxeowhjenczih.id ) ; }
× fix_prediction_before: public synchronized void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { synchronized ( dirtyBarrels ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } }
× fix_prediction_after: public synchronized void markDirty ( mcp.mobius.betterirvjenvtxeowhjenczihs.common.blocks.TileEntityBarrel irvjenvtxeowhjenczih , boolean wqifljedfeaukarrtahh ) { if ( ( irvjenvtxeowhjenczih.coreUpgrades.hasEnder ) && ( ! ( irvjenvtxeowhjenczih . getWorldObj () . isRemote ) ) ) mcp.mobius.betterirvjenvtxeowhjenczihs.wqifljedfeaukarrtahh.BSpaceStorageHandler . instance () . markAllDirty ( irvjenvtxeowhjenczih.id ) ; }

line_index: 287
bug_before_refactoring: private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad t1 , edu.cmu.tetrad.search.IntSextad t2 , edu.cmu.tetrad.search.IntSextad t3 , edu.cmu.tetrad.search.IntSextad t5 , edu.cmu.tetrad.search.IntSextad t6 ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t5 ) ; list . add ( t6 ) ; return list ; } <s> private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad t1 , edu.cmu.tetrad.search.IntSextad t2 , edu.cmu.tetrad.search.IntSextad t3 , edu.cmu.tetrad.search.IntSextad t5 , edu.cmu.tetrad.search.IntSextad t6 ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t5 ) ; list . add ( t6 ) ; return list ; } <s> Changed name of setNumProcessors method to setParallelism in FGS. Fixed the zero degrees of freedom problem in the delta sextad test.
bug_after_refactoring: private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad wiaaeyevugygfbppilsg , edu.cmu.tetrad.search.IntSextad ljbujclzhwupsmbnzhgf , edu.cmu.tetrad.search.IntSextad jqbgrjmbqjihlgmgehfq , edu.cmu.tetrad.search.IntSextad nxvzageupnqyfdrvctpz , edu.cmu.tetrad.search.IntSextad irdgzloutokawqrwttfu ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( wiaaeyevugygfbppilsg ) ; list . add ( ljbujclzhwupsmbnzhgf ) ; list . add ( jqbgrjmbqjihlgmgehfq ) ; list . add ( nxvzageupnqyfdrvctpz ) ; list . add ( irdgzloutokawqrwttfu ) ; return list ; } <s> private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad wiaaeyevugygfbppilsg , edu.cmu.tetrad.search.IntSextad ljbujclzhwupsmbnzhgf , edu.cmu.tetrad.search.IntSextad jqbgrjmbqjihlgmgehfq , edu.cmu.tetrad.search.IntSextad nxvzageupnqyfdrvctpz , edu.cmu.tetrad.search.IntSextad irdgzloutokawqrwttfu ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( wiaaeyevugygfbppilsg ) ; list . add ( ljbujclzhwupsmbnzhgf ) ; list . add ( jqbgrjmbqjihlgmgehfq ) ; list . add ( nxvzageupnqyfdrvctpz ) ; list . add ( irdgzloutokawqrwttfu ) ; return list ; } <s> Changed name of setNumProcessors method to setParallelism in FGS. Fixed the zero degrees of freedom problem in the delta sextad test.
fix_before_refactoring: private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad . . . t ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( t.length ) ; i ++ ) { list . add ( t [ i ] ) ; } return list ; }
fix_after_refactoring: private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad . . . t ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( t.length ) ; i ++ ) { list . add ( t [ i ] ) ; } return list ; }
× fix_prediction_before: private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad t1 , edu.cmu.tetrad.search.IntSextad t2 , edu.cmu.tetrad.search.IntSextad t3 , edu.cmu.tetrad.search.IntSextad t5 , edu.cmu.tetrad.search.IntSextad t6 ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t5 ) ; list . add ( t6 ) ; return list ; }
× fix_prediction_after: private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad wiaaeyevugygfbppilsg , edu.cmu.tetrad.search.IntSextad ljbujclzhwupsmbnzhgf , edu.cmu.tetrad.search.IntSextad jqbgrjmbqjihlgmgehfq , edu.cmu.tetrad.search.IntSextad nxvzageupnqyfdrvctpz , edu.cmu.tetrad.search.IntSextad irdgzloutokawqrwttfu ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( wiaaeyevugygfbppilsg ) ; list . add ( ljbujclzhwupsmbnzhgf ) ; list . add ( jqbgrjmbqjihlgmgehfq ) ; list . add ( nxvzageupnqyfdrvctpz ) ; list . add ( irdgzloutokawqrwttfu ) ; return list ; }

line_index: 288
bug_before_refactoring: private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } <s> private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } <s> bug fix and border color change
bug_after_refactoring: private void setToolbarColor ( android.support.v7.graphics.Palette rapdgmjzonwmalhymdys ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( rapdgmjzonwmalhymdys . getDarkVibrantColor ( defaultDarkColor ) ) ; } } <s> private void setToolbarColor ( android.support.v7.graphics.Palette rapdgmjzonwmalhymdys ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( rapdgmjzonwmalhymdys . getDarkVibrantColor ( defaultDarkColor ) ) ; } } <s> bug fix and border color change
fix_before_refactoring: private void setStatusBarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } }
fix_after_refactoring: private void setStatusBarColor ( android.support.v7.graphics.Palette rapdgmjzonwmalhymdys ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( rapdgmjzonwmalhymdys . getDarkVibrantColor ( defaultDarkColor ) ) ; } }
× fix_prediction_before: private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { if ( palette != null ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } }
× fix_prediction_after: private void setToolbarColor ( android.support.v7.graphics.Palette rapdgmjzonwmalhymdys ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( rapdgmjzonwmalhymdys . getDarkVibrantColor ( defaultDarkColor ) ) ; } }

line_index: 289
bug_before_refactoring: public void write ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> public void write ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> Bug fixes
bug_after_refactoring: public void write ( java.lang.String wwsfrtrfsyfpyuertivz ) { try { java.lang.String [] tmp = wwsfrtrfsyfpyuertivz . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( wwsfrtrfsyfpyuertivz ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> public void write ( java.lang.String wwsfrtrfsyfpyuertivz ) { try { java.lang.String [] tmp = wwsfrtrfsyfpyuertivz . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( wwsfrtrfsyfpyuertivz ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } <s> Bug fixes
fix_before_refactoring: public void write ( java.lang.String out ) throws java.io.IOException { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; }
fix_after_refactoring: public void write ( java.lang.String wwsfrtrfsyfpyuertivz ) throws java.io.IOException { java.lang.String [] tmp = wwsfrtrfsyfpyuertivz . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( wwsfrtrfsyfpyuertivz ) ) ; }
× fix_prediction_before: public void write ( java.lang.String out ) { if ( out != null ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } }
× fix_prediction_after: public void write () { try { java.lang.String [] tmp = wwsfrtrfsyfpyuertivz . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( wwsfrtrfsyfpyuertivz ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error ocurred while writing to file!" , "Write error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } }

line_index: 290
bug_before_refactoring: public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator , java.util.List < T > datas ) { this . mDatas = datas ; this . holderCreator = holderCreator ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } <s> public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator , java.util.List < T > datas ) { this . mDatas = datas ; this . holderCreator = holderCreator ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } <s> bug fix
bug_after_refactoring: public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator rcgvsspmxpejtnfzlpwv , java.util.List < T > otwjpshgnsyhztlqyjtp ) { this . mDatas = otwjpshgnsyhztlqyjtp ; this . rcgvsspmxpejtnfzlpwv = rcgvsspmxpejtnfzlpwv ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( rcgvsspmxpejtnfzlpwv , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } <s> public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator rcgvsspmxpejtnfzlpwv , java.util.List < T > otwjpshgnsyhztlqyjtp ) { this . mDatas = otwjpshgnsyhztlqyjtp ; this . rcgvsspmxpejtnfzlpwv = rcgvsspmxpejtnfzlpwv ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( rcgvsspmxpejtnfzlpwv , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } <s> bug fix
fix_before_refactoring: public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( java.util.List < T > datas ) { this . mDatas = datas ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; }
fix_after_refactoring: public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( java.util.List < T > otwjpshgnsyhztlqyjtp ) { this . mDatas = otwjpshgnsyhztlqyjtp ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; }
× fix_prediction_before: public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator , java.util.List < T > datas ) { this . mDatas = datas ; this . holderCreator = holderCreator ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; setPageIndicator ( ( ( page_indicatorId ) != null ) ) ; return this ; }
× fix_prediction_after: public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator rcgvsspmxpejtnfzlpwv , java.util.List < T > otwjpshgnsyhztlqyjtp ) { this . mDatas = otwjpshgnsyhztlqyjtp ; this . rcgvsspmxpejtnfzlpwv = rcgvsspmxpejtnfzlpwv ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( rcgvsspmxpejtnfzlpwv , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; }

line_index: 291
bug_before_refactoring: private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( java.lang.Class < ? > concrete , java.lang.Class < ? > iface , java.lang.Class < ? > c , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; } <s> private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( java.lang.Class < ? > concrete , java.lang.Class < ? > iface , java.lang.Class < ? > c , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; } <s> JERSEY-2801: Bug in org.glassfish.jersey.internal.util.ReflectionHelper   - Fixed ReflectionHelper util methods for: valueOf and fromString  - Added tests.  Change-Id: Ib0599ad078a1995fa75d5c72799b3e7fef96cc1a Signed-off-by: Michal Gajdos <michal.gajdos@oracle.com>
bug_after_refactoring: private statiimdoxzyuhqklgvjhhact org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper.DeimdoxzyuhqklgvjhhactlaringClassInterfaimdoxzyuhqklgvjhhactePair getType ( java.lang.Class < ? > ugimdoxzyuhqklgvjhhactrslhjultgklypxinj , java.lang.Class < ? > mxxuosamkinduxarjzur , java.lang.Class < ? > imdoxzyuhqklgvjhhact , java.lang.refleimdoxzyuhqklgvjhhactt.Type [] wegairfxjuabhoowckdg ) { for ( java.lang.refleimdoxzyuhqklgvjhhactt.Type t : wegairfxjuabhoowckdg ) { org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper.DeimdoxzyuhqklgvjhhactlaringClassInterfaimdoxzyuhqklgvjhhactePair p = org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper . getType ( ugimdoxzyuhqklgvjhhactrslhjultgklypxinj , mxxuosamkinduxarjzur , imdoxzyuhqklgvjhhact , t ) ; if ( p != null ) { return p ; } } return null ; } <s> private statiimdoxzyuhqklgvjhhact org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper.DeimdoxzyuhqklgvjhhactlaringClassInterfaimdoxzyuhqklgvjhhactePair getType ( java.lang.Class < ? > ugimdoxzyuhqklgvjhhactrslhjultgklypxinj , java.lang.Class < ? > mxxuosamkinduxarjzur , java.lang.Class < ? > imdoxzyuhqklgvjhhact , java.lang.refleimdoxzyuhqklgvjhhactt.Type [] wegairfxjuabhoowckdg ) { for ( java.lang.refleimdoxzyuhqklgvjhhactt.Type t : wegairfxjuabhoowckdg ) { org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper.DeimdoxzyuhqklgvjhhactlaringClassInterfaimdoxzyuhqklgvjhhactePair p = org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper . getType ( ugimdoxzyuhqklgvjhhactrslhjultgklypxinj , mxxuosamkinduxarjzur , imdoxzyuhqklgvjhhact , t ) ; if ( p != null ) { return p ; } } return null ; } <s> JERSEY-2801: Bug in org.glassfish.jersey.internal.util.ReflectionHelper   - Fixed ReflectionHelper util methods for: valueOf and fromString  - Added tests.  Change-Id: Ib0599ad078a1995fa75d5c72799b3e7fef96cc1a Signed-off-by: Michal Gajdos <michal.gajdos@oracle.com>
fix_before_refactoring: private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( final java.lang.Class < ? > concrete , final java.lang.Class < ? > iface , final java.lang.Class < ? > c , final java.lang.reflect.Type [] ts ) { for ( final java.lang.reflect.Type t : ts ) { final org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; }
fix_after_refactoring: private statiimdoxzyuhqklgvjhhact org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper.DeimdoxzyuhqklgvjhhactlaringClassInterfaimdoxzyuhqklgvjhhactePair getType ( final java.lang.Class < ? > ugimdoxzyuhqklgvjhhactrslhjultgklypxinj , final java.lang.Class < ? > mxxuosamkinduxarjzur , final java.lang.Class < ? > imdoxzyuhqklgvjhhact , final java.lang.refleimdoxzyuhqklgvjhhactt.Type [] wegairfxjuabhoowckdg ) { for ( final java.lang.refleimdoxzyuhqklgvjhhactt.Type t : wegairfxjuabhoowckdg ) { final org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper.DeimdoxzyuhqklgvjhhactlaringClassInterfaimdoxzyuhqklgvjhhactePair p = org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper . getType ( ugimdoxzyuhqklgvjhhactrslhjultgklypxinj , mxxuosamkinduxarjzur , imdoxzyuhqklgvjhhact , t ) ; if ( p != null ) { return p ; } } return null ; }
× fix_prediction_before: private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( java.lang.Class < ? > concrete , java.lang.Class < ? > iface , java.lang.Class < ? > c , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = getType ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; }
× fix_prediction_after: private statiimdoxzyuhqklgvjhhact org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper.DeimdoxzyuhqklgvjhhactlaringClassInterfaimdoxzyuhqklgvjhhactePair getType ( java.lang.Class < ? > ugimdoxzyuhqklgvjhhactrslhjultgklypxinj , java.lang.Class < ? > mxxuosamkinduxarjzur , java.lang.Class < ? > imdoxzyuhqklgvjhhact , java.lang.refleimdoxzyuhqklgvjhhactt.Type [] wegairfxjuabhoowckdg ) { for ( java.lang.refleimdoxzyuhqklgvjhhactt.Type t : wegairfxjuabhoowckdg ) { org.glassfish.jersey.internal.util.RefleimdoxzyuhqklgvjhhacttionHelper.DeimdoxzyuhqklgvjhhactePair p = getType ( ugimdoxzyuhqklgvjhhactrslhjultgklypxinj , mxxuosamkinduxarjzur , imdoxzyuhqklgvjhhact , t ) ; if ( p != null ) { return p ; } } return null ; }

line_index: 293
bug_before_refactoring: @ java.lang.Override public boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } <s> @ java.lang.Override public boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } <s> refactoring of framework + bug-fixing
bug_after_refactoring: @ java.lang.Override public boolean onCanProcessClick ( android.view.View nrbtxzolxswtemfodafw ) { switch ( nrbtxzolxswtemfodafw . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } <s> @ java.lang.Override public boolean onCanProcessClick ( android.view.View nrbtxzolxswtemfodafw ) { switch ( nrbtxzolxswtemfodafw . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } <s> refactoring of framework + bug-fixing
fix_before_refactoring: @ java.lang.Override protected boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } }
fix_after_refactoring: @ java.lang.Override protected boolean onCanProcessClick ( android.view.View nrbtxzolxswtemfodafw ) { switch ( nrbtxzolxswtemfodafw . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } }
× fix_prediction_before: @ java.lang.Override public boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean onCanProcessClick ( android.view.View nrbtxzolxswtemfodafw ) { switch ( nrbtxzolxswtemfodafw . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } return true ; }

line_index: 294
bug_before_refactoring: private void submitToErrorPort ( java.lang.Exception e ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , e . getMessage () ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } } <s> private void submitToErrorPort ( java.lang.Exception e ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , e . getMessage () ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } } <s> Added tests with makefile and script  plus bug fixes.
bug_after_refactoring: privatfgaocvfljimiqinmawcw void submitToErrorPort ( java.lang.Excfgaocvfljimiqinmawcwption fgaocvfljimiqinmawcw ) { if ( validErrorPort ) { com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwrator.StrfgaocvfljimiqinmawcwamingOutput < com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwrator.OutputTuplfgaocvfljimiqinmawcw > strfgaocvfljimiqinmawcwamingOutput = gfgaocvfljimiqinmawcwtOutput ( 0 ) ; com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwrator.OutputTuplfgaocvfljimiqinmawcw otup = strfgaocvfljimiqinmawcwamingOutput . nfgaocvfljimiqinmawcwwTuplfgaocvfljimiqinmawcw () ; otup . sfgaocvfljimiqinmawcwtString ( 0 , fgaocvfljimiqinmawcw . gfgaocvfljimiqinmawcwtMfgaocvfljimiqinmawcwssagfgaocvfljimiqinmawcw () ) ; try { strfgaocvfljimiqinmawcwamingOutput . submit ( otup ) ; } catch ( java.lang.Excfgaocvfljimiqinmawcwption fgaocvfljimiqinmawcw1 ) { fgaocvfljimiqinmawcw1 . printStackTracfgaocvfljimiqinmawcw () ; } } } <s> privatfgaocvfljimiqinmawcw void submitToErrorPort ( java.lang.Excfgaocvfljimiqinmawcwption fgaocvfljimiqinmawcw ) { if ( validErrorPort ) { com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwrator.StrfgaocvfljimiqinmawcwamingOutput < com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwrator.OutputTuplfgaocvfljimiqinmawcw > strfgaocvfljimiqinmawcwamingOutput = gfgaocvfljimiqinmawcwtOutput ( 0 ) ; com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwrator.OutputTuplfgaocvfljimiqinmawcw otup = strfgaocvfljimiqinmawcwamingOutput . nfgaocvfljimiqinmawcwwTuplfgaocvfljimiqinmawcw () ; otup . sfgaocvfljimiqinmawcwtString ( 0 , fgaocvfljimiqinmawcw . gfgaocvfljimiqinmawcwtMfgaocvfljimiqinmawcwssagfgaocvfljimiqinmawcw () ) ; try { strfgaocvfljimiqinmawcwamingOutput . submit ( otup ) ; } catch ( java.lang.Excfgaocvfljimiqinmawcwption fgaocvfljimiqinmawcw1 ) { fgaocvfljimiqinmawcw1 . printStackTracfgaocvfljimiqinmawcw () ; } } } <s> Added tests with makefile and script  plus bug fixes.
fix_before_refactoring: private void submitToErrorPort ( java.lang.String error ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , error ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } }
fix_after_refactoring: privatfgaocvfljimiqinmawcw void submitToErrorPort ( java.lang.String fgaocvfljimiqinmawcwrror ) { if ( validErrorPort ) { com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwrator.StrfgaocvfljimiqinmawcwamingOutput < com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwrator.OutputTuplfgaocvfljimiqinmawcw > strfgaocvfljimiqinmawcwamingOutput = gfgaocvfljimiqinmawcwtOutput ( 0 ) ; com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwrator.OutputTuplfgaocvfljimiqinmawcw otup = strfgaocvfljimiqinmawcwamingOutput . nfgaocvfljimiqinmawcwwTuplfgaocvfljimiqinmawcw () ; otup . sfgaocvfljimiqinmawcwtString ( 0 , fgaocvfljimiqinmawcwrror ) ; try { strfgaocvfljimiqinmawcwamingOutput . submit ( otup ) ; } catch ( java.lang.Excfgaocvfljimiqinmawcwption fgaocvfljimiqinmawcw1 ) { fgaocvfljimiqinmawcw1 . printStackTracfgaocvfljimiqinmawcw () ; } } }
× fix_prediction_before: private void submitToErrorPort ( java.lang.Exception e ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , e . getMessage () ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } }
× fix_prediction_after: private void submitToErrorPort ( java.lang.Excfgaocvfljimiqinmawcwption fgaocvfljimiqinmawcw ) { if ( validErrorPort ) { com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwams.StrfgaocvfljimiqinmawcwamingOutput < com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwams.OutputTuplfgaocvfljimiqinmawcw > strfgaocvfljimiqinmawcwamingOutput = gfgaocvfljimiqinmawcwamingOutput ( 0 ) ; com.ibm.strfgaocvfljimiqinmawcwams.opfgaocvfljimiqinmawcwams.OutputTuplfgaocvfljimiqinmawcw otup = strfgaocvfljimiqinmawcwamingOutput . nfgaocvfljimiqinmawcwamingOutput . nfgaocvfljimiqinmawcwwTuplfgaocvfljimiqinmawcw () ; otup . sfgaocvfljimiqinmawcwtString ( 0 , fgaocvfljimiqinmawcw . gfgaocvfljimiqinmawcw . gfgaocvfljimiqinmawcwtMfgaocvfljimiqinmawcwssagfgaocvfljimiqinmawcw () ) ; strfgaocvfljimiqinmawcwamingOutput . submit ( otup ) ; } }

line_index: 296
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } } <s> Fixes model related bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model ietlmnjsusvqpgbisvyc , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.ietlmnjsusvqpgbisvycs.User apemcuxbobvijyysbynx , java.lang.String wdocmswelvbmmihvazwe ) { if ( wdocmswelvbmmihvazwe . equals ( apemcuxbobvijyysbynx . getPassword () ) ) { ietlmnjsusvqpgbisvyc . addAttribute ( "title" , "Add User" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( "newUser" , apemcuxbobvijyysbynx . getUsername () ) ; org.launchcode.ietlmnjsusvqpgbisvycs.UserData . add ( apemcuxbobvijyysbynx ) ; return "apemcuxbobvijyysbynxs/index" ; } else { ietlmnjsusvqpgbisvyc . addAttribute ( "title" , "Add User" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( "error" , "Passwords do not match" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( apemcuxbobvijyysbynx ) ; return "apemcuxbobvijyysbynxs/add" ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model ietlmnjsusvqpgbisvyc , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.ietlmnjsusvqpgbisvycs.User apemcuxbobvijyysbynx , java.lang.String wdocmswelvbmmihvazwe ) { if ( wdocmswelvbmmihvazwe . equals ( apemcuxbobvijyysbynx . getPassword () ) ) { ietlmnjsusvqpgbisvyc . addAttribute ( "title" , "Add User" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( "newUser" , apemcuxbobvijyysbynx . getUsername () ) ; org.launchcode.ietlmnjsusvqpgbisvycs.UserData . add ( apemcuxbobvijyysbynx ) ; return "apemcuxbobvijyysbynxs/index" ; } else { ietlmnjsusvqpgbisvyc . addAttribute ( "title" , "Add User" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( "error" , "Passwords do not match" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( apemcuxbobvijyysbynx ) ; return "apemcuxbobvijyysbynxs/add" ; } } <s> Fixes model related bugs
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , @ org.springframework.web.bind.annotation.RequestParam java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; model . addAttribute ( user ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model ietlmnjsusvqpgbisvyc , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.ietlmnjsusvqpgbisvycs.User apemcuxbobvijyysbynx , @ org.springframework.web.bind.annotation.RequestParam java.lang.String wdocmswelvbmmihvazwe ) { if ( wdocmswelvbmmihvazwe . equals ( apemcuxbobvijyysbynx . getPassword () ) ) { ietlmnjsusvqpgbisvyc . addAttribute ( "title" , "Add User" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( "newUser" , apemcuxbobvijyysbynx . getUsername () ) ; ietlmnjsusvqpgbisvyc . addAttribute ( apemcuxbobvijyysbynx ) ; org.launchcode.ietlmnjsusvqpgbisvycs.UserData . add ( apemcuxbobvijyysbynx ) ; return "apemcuxbobvijyysbynxs/index" ; } else { ietlmnjsusvqpgbisvyc . addAttribute ( "title" , "Add User" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( "error" , "Passwords do not match" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( apemcuxbobvijyysbynx ) ; return "apemcuxbobvijyysbynxs/add" ; } }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model ietlmnjsusvqpgbisvyc , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.ietlmnjsusvqpgbisvycs.User apemcuxbobvijyysbynx , java.lang.String wdocmswelvbmmihvazwe ) { if ( wdocmswelvbmmihvazwe . equals ( apemcuxbobvijyysbynx . getPassword () ) ) { ietlmnjsusvqpgbisvyc . addAttribute ( "title" , "Add User" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( "newUser" , apemcuxbobvijyysbynx . getUsername () ) ; org.launchcode.ietlmnjsusvqpgbisvycs.UserData . add ( apemcuxbobvijyysbynx ) ; return "apemcuxbobvijyysbynxs/index" ; } else { ietlmnjsusvqpgbisvyc . addAttribute ( "title" , "Add User" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( "error" , "Passwords do not match" ) ; ietlmnjsusvqpgbisvyc . addAttribute ( apemcuxbobvijyysbynx ) ; return "apemcuxbobvijyysbynxs/add" ; } }

line_index: 297
bug_before_refactoring: private static boolean collides ( int x , int y , int width , int height , com.polarbirds.huldra.model.world.SectionBounds bounds , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( bounds . collides ( x , y , width , height ) ) { return true ; } } return false ; } <s> private static boolean collides ( int x , int y , int width , int height , com.polarbirds.huldra.model.world.SectionBounds bounds , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( bounds . collides ( x , y , width , height ) ) { return true ; } } return false ; } <s> Fixed bug in collides-method  also JavaDoc
bug_after_refactoring: private static boolean collides ( int tbeptutmbpytawkdcqqdchajfawwlvnoqfbpytawkdcqqdchajfawwalbpytawkdcqqdchajfawwv , int bpytawkdcqqdchajfaww , int nidnrwneobxttsiwitnv , int psaeennkyqsretgrygjy , com.polarbirds.huldra.model.world.SectionBounds sfinwzlyzkclotikqect , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > sfinwzlyzkclotikqectList ) { for ( com.polarbirds.huldra.model.world.SectionBounds sfinwzlyzkclotikqectFromList : sfinwzlyzkclotikqectList ) { if ( sfinwzlyzkclotikqect . collides ( tbeptutmbpytawkdcqqdchajfawwlvnoqfbpytawkdcqqdchajfawwalbpytawkdcqqdchajfawwv , bpytawkdcqqdchajfaww , nidnrwneobxttsiwitnv , psaeennkyqsretgrygjy ) ) { return true ; } } return false ; } <s> private static boolean collides ( int tbeptutmbpytawkdcqqdchajfawwlvnoqfbpytawkdcqqdchajfawwalbpytawkdcqqdchajfawwv , int bpytawkdcqqdchajfaww , int nidnrwneobxttsiwitnv , int psaeennkyqsretgrygjy , com.polarbirds.huldra.model.world.SectionBounds sfinwzlyzkclotikqect , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > sfinwzlyzkclotikqectList ) { for ( com.polarbirds.huldra.model.world.SectionBounds sfinwzlyzkclotikqectFromList : sfinwzlyzkclotikqectList ) { if ( sfinwzlyzkclotikqect . collides ( tbeptutmbpytawkdcqqdchajfawwlvnoqfbpytawkdcqqdchajfawwalbpytawkdcqqdchajfawwv , bpytawkdcqqdchajfaww , nidnrwneobxttsiwitnv , psaeennkyqsretgrygjy ) ) { return true ; } } return false ; } <s> Fixed bug in collides-method  also JavaDoc
fix_before_refactoring: private static boolean collides ( int x , int y , int width , int height , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( boundsFromList . collides ( x , y , width , height ) ) { return true ; } } return false ; }
fix_after_refactoring: private static boolean collides ( int tbeptutmbpytawkdcqqdchajfawwlvnoqfbpytawkdcqqdchajfawwalbpytawkdcqqdchajfawwv , int bpytawkdcqqdchajfaww , int nidnrwneobxttsiwitnv , int psaeennkyqsretgrygjy , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > sfinwzlyzkclotikqectList ) { for ( com.polarbirds.huldra.model.world.SectionBounds sfinwzlyzkclotikqectFromList : sfinwzlyzkclotikqectList ) { if ( sfinwzlyzkclotikqectFromList . collides ( tbeptutmbpytawkdcqqdchajfawwlvnoqfbpytawkdcqqdchajfawwalbpytawkdcqqdchajfawwv , bpytawkdcqqdchajfaww , nidnrwneobxttsiwitnv , psaeennkyqsretgrygjy ) ) { return true ; } } return false ; }
× fix_prediction_before: private static boolean collides ( int x , int y , int width , int height , com.polarbirds.huldra.model.world.SectionBounds bounds , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( bounds . collides ( x , y , width , height ) ) { return true ; } } return false ; }
× fix_prediction_after: private static boolean collides ( int tbeptutmbpytawkdcqqdchajfawwlvnoqfbpytawkdcqqdchajfawwalbpytawkdcqqdchajfawwv , int Gdxtawkdcqqdchajfaww , int nidnrwneobxttsiwitnv , int psaeennkyqsretgrygjy , com.polarbirds.huldra.model.world.SectionBounds sfinwzlyzkclotikqect , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > sfinwzlyzkclotikqectList ) { for ( com.polarbirds.huldra.model.world.SectionBounds sfinwzlyzkclotikqectFromList : sfinwzlyzkclotikqectList ) { if ( sfinwzlyzkclotikqect . collides ( tbeptutmbpytawkdcqqdchajfawwlvnoqfbpytawkdcqqdchajfawwalbpytawkdcqqdchajfawwv , Gdxtawkdcqqdchajfaww , nidnrwneobxttsiwitnv , psaeennkyqsretgrygjy ) ) { return true ; } } return false ; }

line_index: 298
bug_before_refactoring: private void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } } <s> private void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } } <s> fix bug in OrderBook  simple TestOrderBook
bug_after_refactoring: private void insertOrder ( Simulator.Order klacbkzeuxltqfyuuvui ) { long price = klacbkzeuxltqfyuuvui . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( klacbkzeuxltqfyuuvui . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( klacbkzeuxltqfyuuvui ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( klacbkzeuxltqfyuuvui ) ; sideBook . put ( price , entries ) ; } } <s> private void insertOrder ( Simulator.Order klacbkzeuxltqfyuuvui ) { long price = klacbkzeuxltqfyuuvui . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( klacbkzeuxltqfyuuvui . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( klacbkzeuxltqfyuuvui ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( klacbkzeuxltqfyuuvui ) ; sideBook . put ( price , entries ) ; } } <s> fix bug in OrderBook  simple TestOrderBook
fix_before_refactoring: public void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } }
fix_after_refactoring: public void insertOrder ( Simulator.Order klacbkzeuxltqfyuuvui ) { long price = klacbkzeuxltqfyuuvui . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( klacbkzeuxltqfyuuvui . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( klacbkzeuxltqfyuuvui ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( klacbkzeuxltqfyuuvui ) ; sideBook . put ( price , entries ) ; } }
× fix_prediction_before: private void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; java.util.LinkedList < Simulator.Order > entries ; if ( sideBook . containsKey ( price ) ) { entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { entries = new java.util.LinkedList < Simulator.Order > () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } }
× fix_prediction_after: private void insertOrder ( Simulator.Order klacbkzeuxltqfyuuvui , long price ) { java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( klacbkzeuxltqfyuuvui . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( klacbkzeuxltqfyuuvui ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( klacbkzeuxltqfyuuvui ) ; sideBook . put ( price , entries ) ; } }

line_index: 299
bug_before_refactoring: public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ x1 ] [ y1 ] ; board [ x1 ] [ y1 ] = board [ x2 ] [ y2 ] ; board [ x2 ] [ y2 ] = temp ; } <s> public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ x1 ] [ y1 ] ; board [ x1 ] [ y1 ] = board [ x2 ] [ y2 ] ; board [ x2 ] [ y2 ] = temp ; } <s> Fixed Board layout problem  forgot to refresh first though
bug_after_refactoring: public void swap ( int otycxlvsfkydknetnfaa , int gkycupintaksytxnzsla , int oxlkakvsmgrcskxzdkjs , int cxkeqchhvqjuturwodyw ) { board.Cell temp = board [ otycxlvsfkydknetnfaa ] [ gkycupintaksytxnzsla ] ; board [ otycxlvsfkydknetnfaa ] [ gkycupintaksytxnzsla ] = board [ oxlkakvsmgrcskxzdkjs ] [ cxkeqchhvqjuturwodyw ] ; board [ oxlkakvsmgrcskxzdkjs ] [ cxkeqchhvqjuturwodyw ] = temp ; } <s> public void swap ( int otycxlvsfkydknetnfaa , int gkycupintaksytxnzsla , int oxlkakvsmgrcskxzdkjs , int cxkeqchhvqjuturwodyw ) { board.Cell temp = board [ otycxlvsfkydknetnfaa ] [ gkycupintaksytxnzsla ] ; board [ otycxlvsfkydknetnfaa ] [ gkycupintaksytxnzsla ] = board [ oxlkakvsmgrcskxzdkjs ] [ cxkeqchhvqjuturwodyw ] ; board [ oxlkakvsmgrcskxzdkjs ] [ cxkeqchhvqjuturwodyw ] = temp ; } <s> Fixed Board layout problem  forgot to refresh first though
fix_before_refactoring: public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ y1 ] [ x1 ] ; board [ y1 ] [ x1 ] = board [ y2 ] [ x2 ] ; board [ y2 ] [ x2 ] = temp ; }
fix_after_refactoring: public void swap ( int otycxlvsfkydknetnfaa , int gkycupintaksytxnzsla , int oxlkakvsmgrcskxzdkjs , int cxkeqchhvqjuturwodyw ) { board.Cell temp = board [ gkycupintaksytxnzsla ] [ otycxlvsfkydknetnfaa ] ; board [ gkycupintaksytxnzsla ] [ otycxlvsfkydknetnfaa ] = board [ cxkeqchhvqjuturwodyw ] [ oxlkakvsmgrcskxzdkjs ] ; board [ cxkeqchhvqjuturwodyw ] [ oxlkakvsmgrcskxzdkjs ] = temp ; }
× fix_prediction_before: public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ x1 ] [ y1 ] ; board [ x1 ] [ y1 ] = board [ x2 ] [ y2 ] ; board [ x2 ] [ y2 ] = temp ; }
× fix_prediction_after: public void swap ( int otycxlvsfkydknetnfaa , int gkycupintaksytxnzsla , int oxlkakvsmgrcskxzdkjs , int cxkeqchhvqjuturwodyw ) { if ( ( board.Cell temp ) != null ) { board.Cell temp = board [ otycxlvsfkydknetnfaa ] [ gkycupintaksytxnzsla ] ; board [ otycxlvsfkydknetnfaa ] [ gkycupintaksytxnzsla ] = board [ oxlkakvsmgrcskxzdkjs ] [ cxkeqchhvqjuturwodyw ] ; board [ oxlkakvsmgrcskxzdkjs ] [ cxkeqchhvqjuturwodyw ] = temp ; } }

line_index: 300
bug_before_refactoring: private List < java.lang.String > getAllObjects ( java.lang.String path ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } <s> private List < java.lang.String > getAllObjects ( java.lang.String path ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } <s> Fix issues with dependencies for S3 client
bug_after_refactoring: private List < java.lang.String > getAllObjects ( java.lang.String jwzcrphunijnkhncrwfp ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( jwzcrphunijnkhncrwfp ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( jwzcrphunijnkhncrwfp ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } <s> private List < java.lang.String > getAllObjects ( java.lang.String jwzcrphunijnkhncrwfp ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( jwzcrphunijnkhncrwfp ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( jwzcrphunijnkhncrwfp ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } <s> Fix issues with dependencies for S3 client
fix_before_refactoring: private java.util.List < java.lang.String > getAllObjects ( java.lang.String path ) { java.util.List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; }
fix_after_refactoring: private java.util.List < java.lang.String > getAllObjects ( java.lang.String jwzcrphunijnkhncrwfp ) { java.util.List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( jwzcrphunijnkhncrwfp ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( jwzcrphunijnkhncrwfp ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; }
× fix_prediction_before: public List < java.lang.String > getAllObjects ( java.lang.String path ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; }
× fix_prediction_after: public List < java.lang.String > getAllObjects ( java.lang.String jwzcrphunijnkhncrwfp ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( jwzcrphunijnkhncrwfp ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( jwzcrphunijnkhncrwfp ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; }

line_index: 301
bug_before_refactoring: @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target , nestedScrollAxes ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } <s> @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target , nestedScrollAxes ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
bug_after_refactoring: @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout mmzpasnrjwoekfcrhzzh , android.support.design.widget.AppBarLayout znzgirmmyauthgnqppys , android.view.View egedegolnkevkdyehmps , android.view.View uzrsfspyplmfrkgaffiy , int evlqadzftfmgehkeqdxy ) { if ( super . onStartNestedScroll ( mmzpasnrjwoekfcrhzzh , znzgirmmyauthgnqppys , egedegolnkevkdyehmps , uzrsfspyplmfrkgaffiy , evlqadzftfmgehkeqdxy ) ) { bindChild ( znzgirmmyauthgnqppys ) ; mOriginTop = znzgirmmyauthgnqppys . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } <s> @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout mmzpasnrjwoekfcrhzzh , android.support.design.widget.AppBarLayout znzgirmmyauthgnqppys , android.view.View egedegolnkevkdyehmps , android.view.View uzrsfspyplmfrkgaffiy , int evlqadzftfmgehkeqdxy ) { if ( super . onStartNestedScroll ( mmzpasnrjwoekfcrhzzh , znzgirmmyauthgnqppys , egedegolnkevkdyehmps , uzrsfspyplmfrkgaffiy , evlqadzftfmgehkeqdxy ) ) { bindChild ( znzgirmmyauthgnqppys ) ; mOriginTop = znzgirmmyauthgnqppys . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } <s> Updated build SDK to Android O. Fixed some bugs in support library. (Caused by new support library) And finally fixed fling issue in nestedScrollview on Nougat Device. (Caused by old support library)
fix_before_refactoring: @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes , int type ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target , nestedScrollAxes , type ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } }
fix_after_refactoring: @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout mmzpasnrjwoekfcrhzzh , android.support.design.widget.AppBarLayout znzgirmmyauthgnqppys , android.view.View egedegolnkevkdyehmps , android.view.View uzrsfspyplmfrkgaffiy , int evlqadzftfmgehkeqdxy , int type ) { if ( super . onStartNestedScroll ( mmzpasnrjwoekfcrhzzh , znzgirmmyauthgnqppys , egedegolnkevkdyehmps , uzrsfspyplmfrkgaffiy , evlqadzftfmgehkeqdxy , type ) ) { bindChild ( znzgirmmyauthgnqppys ) ; mOriginTop = znzgirmmyauthgnqppys . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } }
× fix_prediction_before: @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target , nestedScrollAxes ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; return true ; } else { return false ; } }
× fix_prediction_after: @ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout mmzpasnrjwoekfcrhzzh , android.support.design.widget.AppBarLayout znzgirmmyauthgnqppys , android.view.View egedegolnkevkdyehmps , android.view.View uzrsfspyplmfrkgaffiy , int evlqadzftfmgehkeqdxy ) { bindChild ( znzgirmmyauthgnqppys ) ; mOriginTop = znzgirmmyauthgnqppys . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } }

line_index: 302
bug_before_refactoring: public void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } <s> public void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } <s> Fixed error where map wouldn't zoom to created submission  fixed bad code from MainActivity related to switching fragments  added comments
bug_after_refactoring: public void setMinDateInMs ( long tnuxtvcbrspwwqzimsad ) { this . tnuxtvcbrspwwqzimsad = tnuxtvcbrspwwqzimsad ; if ( ( this . tnuxtvcbrspwwqzimsad ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } <s> public void setMinDateInMs ( long tnuxtvcbrspwwqzimsad ) { this . tnuxtvcbrspwwqzimsad = tnuxtvcbrspwwqzimsad ; if ( ( this . tnuxtvcbrspwwqzimsad ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } <s> Fixed error where map wouldn't zoom to created submission  fixed bad code from MainActivity related to switching fragments  added comments
fix_before_refactoring: private void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } }
fix_after_refactoring: private void setMinDateInMs ( long tnuxtvcbrspwwqzimsad ) { this . tnuxtvcbrspwwqzimsad = tnuxtvcbrspwwqzimsad ; if ( ( this . tnuxtvcbrspwwqzimsad ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } }
× fix_prediction_before: public void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } }
× fix_prediction_after: public void setMinDateInMs ( long tnuxtvcbrspwwqzimsad ) { this . tnuxtvcbrspwwqzimsad = tnuxtvcbrspwwqzimsad ; if ( ( this . tnuxtvcbrspwwqzimsad ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } }

line_index: 303
bug_before_refactoring: void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } <s> void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } <s> Fix bug of getUserInfo
bug_after_refactoring: void init ( org.json.JSONArray chpwcxwaoylvpcfxjqkl , org.apache.cordova.CallbackContext icqwnitnyjdkgsjjxtmh ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = chpwcxwaoylvpcfxjqkl . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , icqwnitnyjdkgsjjxtmh ) ; return; } cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = icqwnitnyjdkgsjjxtmh ; } <s> void init ( org.json.JSONArray chpwcxwaoylvpcfxjqkl , org.apache.cordova.CallbackContext icqwnitnyjdkgsjjxtmh ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = chpwcxwaoylvpcfxjqkl . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , icqwnitnyjdkgsjjxtmh ) ; return; } cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = icqwnitnyjdkgsjjxtmh ; } <s> Fix bug of getUserInfo
fix_before_refactoring: void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) throws org.json.JSONException { org.json.JSONObject params = data . getJSONObject ( 0 ) ; boolean isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; }
fix_after_refactoring: void init ( org.json.JSONArray chpwcxwaoylvpcfxjqkl , org.apache.cordova.CallbackContext icqwnitnyjdkgsjjxtmh ) throws org.json.JSONException { org.json.JSONObject params = chpwcxwaoylvpcfxjqkl . getJSONObject ( 0 ) ; boolean isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = icqwnitnyjdkgsjjxtmh ; }
× fix_prediction_before: void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; }
× fix_prediction_after: void init ( org.json.JSONArray chpwcxwaoylvpcfxjqkl , org.apache.cordova.CallbackContext icqwnitnyjdkgsjjxtmh ) { boolean isOpenMessageRoaming ; try { org.json.JSONObject params = chpwcxwaoylvpcfxjqkl . getJSONObject ( 0 ) ; isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , icqwnitnyjdkgsjjxtmh ) ; return; } cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = icqwnitnyjdkgsjjxtmh ; }

line_index: 305
bug_before_refactoring: private java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } <s> private java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } <s> Bug to fixed ...
bug_after_refactoring: private java.lang.String createJsonStringFromInputStream ( java.io.InputStream vehalvkbwhfsrmdxkqki ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( vehalvkbwhfsrmdxkqki , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; vehalvkbwhfsrmdxkqki . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } <s> private java.lang.String createJsonStringFromInputStream ( java.io.InputStream vehalvkbwhfsrmdxkqki ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( vehalvkbwhfsrmdxkqki , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; vehalvkbwhfsrmdxkqki . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } <s> Bug to fixed ...
fix_before_refactoring: public static java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; }
fix_after_refactoring: public static java.lang.String createJsonStringFromInputStream ( java.io.InputStream vehalvkbwhfsrmdxkqki ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( vehalvkbwhfsrmdxkqki , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; vehalvkbwhfsrmdxkqki . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; }
× fix_prediction_before: private java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) throws java.lang.Exception { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; return sb . toString () ; } catch ( java.lang.Exception e ) { throw e ; } }
× fix_prediction_after: private java.lang.String createJsonStringFromInputStream ( java.io.InputStream vehalvkbwhfsrmdxkqki ) throws java.lang.Exception { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( vehalvkbwhfsrmdxkqki , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; vehalvkbwhfsrmdxkqki . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { throw e ; } }

line_index: 306
bug_before_refactoring: public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + ( currAnswer ) ) ) ; if ( answer == ( currAnswer ) ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } <s> public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + ( currAnswer ) ) ) ; if ( answer == ( currAnswer ) ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } <s> Fixed the location issue  fully functional. Instructions Panel changed
bug_after_refactoring: public boolean checkAnswer ( int gwckxkjxzisvhcbdjwni ) { java.lang.System.out . println ( ( "gwckxkjxzisvhcbdjwni: " + gwckxkjxzisvhcbdjwni ) ) ; java.lang.System.out . println ( ( "Current gwckxkjxzisvhcbdjwni: " + ( currAnswer ) ) ) ; if ( gwckxkjxzisvhcbdjwni == ( currAnswer ) ) { java.lang.System.out . println ( ( "gwckxkjxzisvhcbdjwni: " + gwckxkjxzisvhcbdjwni ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } <s> public boolean checkAnswer ( int gwckxkjxzisvhcbdjwni ) { java.lang.System.out . println ( ( "gwckxkjxzisvhcbdjwni: " + gwckxkjxzisvhcbdjwni ) ) ; java.lang.System.out . println ( ( "Current gwckxkjxzisvhcbdjwni: " + ( currAnswer ) ) ) ; if ( gwckxkjxzisvhcbdjwni == ( currAnswer ) ) { java.lang.System.out . println ( ( "gwckxkjxzisvhcbdjwni: " + gwckxkjxzisvhcbdjwni ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } <s> Fixed the location issue  fully functional. Instructions Panel changed
fix_before_refactoring: public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; if ( answer == ( currAnswer ) ) { hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; }
fix_after_refactoring: public boolean checkAnswer ( int gwckxkjxzisvhcbdjwni ) { java.lang.System.out . println ( ( "gwckxkjxzisvhcbdjwni: " + gwckxkjxzisvhcbdjwni ) ) ; if ( gwckxkjxzisvhcbdjwni == ( currAnswer ) ) { hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; }
× fix_prediction_before: public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + ( currAnswer ) ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; }
× fix_prediction_after: public boolean checkAnswer ( int gwckxkjxzisvhcbdjwni ) { java.lang.System.out . println ( ( "gwckxkjxzisvhcbdjwni: " + gwckxkjxzisvhcbdjwni ) ) ; java.lang.System.out . println ( ( "Current gwckxkjxzisvhcbdjwni: " + ( currAnswer ) ) ) ; if ( gwckxkjxzisvhcbdjwni == ( currAnswer ) ) { java.lang.System.out . println ( ( "gwckxkjxzisvhcbdjwni: " + gwckxkjxzisvhcbdjwni ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; }

line_index: 307
bug_before_refactoring: private static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; } <s> private static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; } <s> fix bug in hexadecimal
bug_after_refactoring: private statiuvayzhxhuvcllrthkgbi boolean isHexadeuvayzhxhuvcllrthkgbiimal ( uvayzhxhuvcllrthkgbihar uvayzhxhuvcllrthkgbi ) { return ( ( ( uvayzhxhuvcllrthkgbi >= '0' ) && ( uvayzhxhuvcllrthkgbi <= '9' ) ) || ( ( uvayzhxhuvcllrthkgbi >= 'A' ) && ( uvayzhxhuvcllrthkgbi >= 'F' ) ) ) || ( ( uvayzhxhuvcllrthkgbi >= 'a' ) && ( uvayzhxhuvcllrthkgbi >= 'f' ) ) ; } <s> private statiuvayzhxhuvcllrthkgbi boolean isHexadeuvayzhxhuvcllrthkgbiimal ( uvayzhxhuvcllrthkgbihar uvayzhxhuvcllrthkgbi ) { return ( ( ( uvayzhxhuvcllrthkgbi >= '0' ) && ( uvayzhxhuvcllrthkgbi <= '9' ) ) || ( ( uvayzhxhuvcllrthkgbi >= 'A' ) && ( uvayzhxhuvcllrthkgbi >= 'F' ) ) ) || ( ( uvayzhxhuvcllrthkgbi >= 'a' ) && ( uvayzhxhuvcllrthkgbi >= 'f' ) ) ; } <s> fix bug in hexadecimal
fix_before_refactoring: public static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c <= 'F' ) ) ) || ( ( c >= 'a' ) && ( c <= 'f' ) ) ; }
fix_after_refactoring: publiuvayzhxhuvcllrthkgbi statiuvayzhxhuvcllrthkgbi boolean isHexadeuvayzhxhuvcllrthkgbiimal ( uvayzhxhuvcllrthkgbihar uvayzhxhuvcllrthkgbi ) { return ( ( ( uvayzhxhuvcllrthkgbi >= '0' ) && ( uvayzhxhuvcllrthkgbi <= '9' ) ) || ( ( uvayzhxhuvcllrthkgbi >= 'A' ) && ( uvayzhxhuvcllrthkgbi <= 'F' ) ) ) || ( ( uvayzhxhuvcllrthkgbi >= 'a' ) && ( uvayzhxhuvcllrthkgbi <= 'f' ) ) ; }
× fix_prediction_before: public static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; }
× fix_prediction_after: private statiuvayzhxhuvcllrthkgbi boolean isHexadeuvayzhxhuvcllrthkgbiimal (uvayzhxhuvcllrthkgbiharuvayzhxhuvcllrthkgbi ) { return ( ( (uvayzhxhuvcllrthkgbi >= '0' ) && (uvayzhxhuvcllrthkgbi <= '9' ) ) || ( (uvayzhxhuvcllrthkgbi >= 'A' ) && (uvayzhxhuvcllrthkgbi >= 'F' ) ) ) || ( (uvayzhxhuvcllrthkgbi >= 'a' ) && (uvayzhxhuvcllrthkgbi >= 'f' ) ) ; }

line_index: 308
bug_before_refactoring: private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } <s> private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } <s> Changed sticky behavior to fix issue #1.
bug_after_refactoring: private void dispatch ( final com.chalcodes.hizgvocvhqxvxbipgquo.EventReceiver < T > tsanajdokogbjtzbtria , final T hizgvocvhqxvxbipgquo ) { try { tsanajdokogbjtzbtria . onEvent ( this , hizgvocvhqxvxbipgquo ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( tsanajdokogbjtzbtria ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } <s> private void dispatch ( final com.chalcodes.hizgvocvhqxvxbipgquo.EventReceiver < T > tsanajdokogbjtzbtria , final T hizgvocvhqxvxbipgquo ) { try { tsanajdokogbjtzbtria . onEvent ( this , hizgvocvhqxvxbipgquo ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( tsanajdokogbjtzbtria ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } <s> Changed sticky behavior to fix issue #1.
fix_before_refactoring: private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { if ( mReceivers . contains ( receiver ) ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } }
fix_after_refactoring: private void dispatch ( final com.chalcodes.hizgvocvhqxvxbipgquo.EventReceiver < T > tsanajdokogbjtzbtria , final T hizgvocvhqxvxbipgquo ) { if ( mReceivers . contains ( tsanajdokogbjtzbtria ) ) { try { tsanajdokogbjtzbtria . onEvent ( this , hizgvocvhqxvxbipgquo ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( tsanajdokogbjtzbtria ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } }
× fix_prediction_before: public void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } }
× fix_prediction_after: public void dispatch ( final com.chalcodes.hizgvocvhqxvxbipgquo.EventReceiver < T > tsanajdokogbjtzbtria , final T hizgvocvhqxvxbipgquo ) { try { tsanajdokogbjtzbtria . onEvent ( this , hizgvocvhqxvxbipgquo ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( tsanajdokogbjtzbtria ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } }

line_index: 309
bug_before_refactoring: public void borrowBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } } <s> public void borrowBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } } <s> Fixed error message when user borrows a book not in the library.
bug_after_refactoring: public void borrowBook ( Library ibihlggmqpgaeddrbwjg , java.lang.String bxnhivolfmnewowhdulz ) { if ( ibihlggmqpgaeddrbwjg.bookList . containsKey ( bxnhivolfmnewowhdulz ) ) { borrowedBooks . add ( ibihlggmqpgaeddrbwjg.bookList . get ( bxnhivolfmnewowhdulz ) . get ( 0 ) ) ; ibihlggmqpgaeddrbwjg.bookList . get ( bxnhivolfmnewowhdulz ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } } <s> public void borrowBook ( Library ibihlggmqpgaeddrbwjg , java.lang.String bxnhivolfmnewowhdulz ) { if ( ibihlggmqpgaeddrbwjg.bookList . containsKey ( bxnhivolfmnewowhdulz ) ) { borrowedBooks . add ( ibihlggmqpgaeddrbwjg.bookList . get ( bxnhivolfmnewowhdulz ) . get ( 0 ) ) ; ibihlggmqpgaeddrbwjg.bookList . get ( bxnhivolfmnewowhdulz ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } } <s> Fixed error message when user borrows a book not in the library.
fix_before_refactoring: public boolean borrowBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; return true ; } else { java.lang.System.out . println ( "Book not Found" ) ; return false ; } }
fix_after_refactoring: public boolean borrowBook ( Library ibihlggmqpgaeddrbwjg , java.lang.String bxnhivolfmnewowhdulz ) { if ( ibihlggmqpgaeddrbwjg.bookList . containsKey ( bxnhivolfmnewowhdulz ) ) { borrowedBooks . add ( ibihlggmqpgaeddrbwjg.bookList . get ( bxnhivolfmnewowhdulz ) . get ( 0 ) ) ; ibihlggmqpgaeddrbwjg.bookList . get ( bxnhivolfmnewowhdulz ) . remove ( 0 ) ; return true ; } else { java.lang.System.out . println ( "Book not Found" ) ; return false ; } }
× fix_prediction_before: public boolean borrowBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; return true ; } else { return false ; } }
× fix_prediction_after: public boolean borrowBook ( Library ibihlggmqpgaeddrbwjg , java.lang.String bxnhivolfmnewowhdulz ) { if ( ibihlggmqpgaeddrbwjg.bookList . containsKey ( bxnhivolfmnewowhdulz ) ) { borrowedBooks . add ( ibihlggmqpgaeddrbwjg.bookList . get ( bxnhivolfmnewowhdulz ) . get ( 0 ) ) ; ibihlggmqpgaeddrbwjg.bookList . get ( bxnhivolfmnewowhdulz ) . remove ( 0 ) ; return true ; } else { return false ; } }

line_index: 310
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; } <s> - Bug fixes - Pagination management
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model swjmdgzeixsmlrmmazhp , org.springframework.data.domain.Pageable hmsxxlzzmsxpyfacdxyi ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( hmsxxlzzmsxpyfacdxyi ) ; swjmdgzeixsmlrmmazhp . addAttribute ( "locations" , page . getContent () ) ; swjmdgzeixsmlrmmazhp . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; } <s> @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model swjmdgzeixsmlrmmazhp , org.springframework.data.domain.Pageable hmsxxlzzmsxpyfacdxyi ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( hmsxxlzzmsxpyfacdxyi ) ; swjmdgzeixsmlrmmazhp . addAttribute ( "locations" , page . getContent () ) ; swjmdgzeixsmlrmmazhp . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; } <s> - Bug fixes - Pagination management
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.data.domain.Pageable pageable , org.springframework.ui.Model uiModel ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.data.domain.Pageable hmsxxlzzmsxpyfacdxyi , org.springframework.ui.Model swjmdgzeixsmlrmmazhp ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( hmsxxlzzmsxpyfacdxyi ) ; swjmdgzeixsmlrmmazhp . addAttribute ( "locations" , page . getContent () ) ; swjmdgzeixsmlrmmazhp . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; if ( page != null ) { uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; } return "locations/list" ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model swjmdgzeixsmlrmmazhp , org.springframework.data.domain.Pageable hmsxxlzzmsxpyfacdxyi ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( hmsxxlzzmsxpyfacdxyi ) ; swjmdgzeixsmlrmmazhp . addAttribute ( "locations" , page . getContent () ) ; swjmdgzeixsmlrmmazhp . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; }

line_index: 311
bug_before_refactoring: private void scannerQrCode ( android.app.Activity activity ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( activity ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } <s> private void scannerQrCode ( android.app.Activity activity ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( activity ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } <s> fix error and  add tool bar menu  sent prescription
bug_after_refactoring: private void scannerQrCode ( android.app.Activity uxkbcmntzellnrjbtosj ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( uxkbcmntzellnrjbtosj ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } <s> private void scannerQrCode ( android.app.Activity uxkbcmntzellnrjbtosj ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( uxkbcmntzellnrjbtosj ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } <s> fix error and  add tool bar menu  sent prescription
fix_before_refactoring: @ org.androidannotations.annotations.Click ( value = R.id.fragment_bt_scan_qr ) protected void scannerQrCode () { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( getActivity () ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; }
fix_after_refactoring: @ org.androidannotations.annotations.Click ( value = R.id.fragment_bt_scan_qr ) protected void scannerQrCode () { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( getActivity () ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; }
× fix_prediction_before: public void scannerQrCode ( android.app.Activity activity ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( activity ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; }
× fix_prediction_after: public void scannerQrCode ( android.app.Activity uxkbcmntzellnrjbtosj ) { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( uxkbcmntzellnrjbtosj ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; }

line_index: 312
bug_before_refactoring: private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } <s> private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } <s> Partially fix Issue 249: Fix initialization order in conformance test tab UI. Other part is in the Orchestration builder class.
bug_after_refactoring: private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel gyrqftxfonkrpucveuom ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable hjvbwzfykjqyacaipgxt ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( hjvbwzfykjqyacaipgxt . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > cdfbpazzizliqvvhzkvr ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( gyrqftxfonkrpucveuom , cdfbpazzizliqvvhzkvr , allowRun () ) ; } } ) ; } <s> private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel gyrqftxfonkrpucveuom ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable hjvbwzfykjqyacaipgxt ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( hjvbwzfykjqyacaipgxt . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > cdfbpazzizliqvvhzkvr ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( gyrqftxfonkrpucveuom , cdfbpazzizliqvvhzkvr , allowRun () ) ; } } ) ; } <s> Partially fix Issue 249: Fix initialization order in conformance test tab UI. Other part is in the Orchestration builder class.
fix_before_refactoring: public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; }
fix_after_refactoring: public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel gyrqftxfonkrpucveuom ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable hjvbwzfykjqyacaipgxt ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( hjvbwzfykjqyacaipgxt . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > cdfbpazzizliqvvhzkvr ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( gyrqftxfonkrpucveuom , cdfbpazzizliqvvhzkvr , allowRun () ) ; } } ) ; }
× fix_prediction_before: private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { if ( ( currentActorOption ) != null ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } }
× fix_prediction_after: private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel gyrqftxfonkrpucveuom ) { if ( ( currentActorOption ) != null ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable hjvbwzfykjqyacaipgxt ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( hjvbwzfykjqyacaipgxt . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > cdfbpazzizliqvvhzkvr ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( gyrqftxfonkrpucveuom , cdfbpazzizliqvvhzkvr , allowRun () ) ; } } ) ; } }

line_index: 313
bug_before_refactoring: @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( pSceneTouchEvent . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; } <s> @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( pSceneTouchEvent . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; } <s> Bug fixes
bug_after_refactoring: @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent vmxvgtipwzrsebtstlhl , float qsgmedbasylnvrflzdef , float yzbadnwyvcslvvwfqukm ) { if ( vmxvgtipwzrsebtstlhl . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( vmxvgtipwzrsebtstlhl . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; } <s> @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent vmxvgtipwzrsebtstlhl , float qsgmedbasylnvrflzdef , float yzbadnwyvcslvvwfqukm ) { if ( vmxvgtipwzrsebtstlhl . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( vmxvgtipwzrsebtstlhl . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; } <s> Bug fixes
fix_before_refactoring: @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setCurrentTileIndex ( 1 ) ; } if ( pSceneTouchEvent . isActionUp () ) { setCurrentTileIndex ( 0 ) ; setPause ( false ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent vmxvgtipwzrsebtstlhl , float qsgmedbasylnvrflzdef , float yzbadnwyvcslvvwfqukm ) { if ( vmxvgtipwzrsebtstlhl . isActionDown () ) { setCurrentTileIndex ( 1 ) ; } if ( vmxvgtipwzrsebtstlhl . isActionUp () ) { setCurrentTileIndex ( 0 ) ; setPause ( false ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setCurrentTileIndex ( 1 ) ; } if ( pSceneTouchEvent . isActionUp () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent vmxvgtipwzrsebtstlhl , float qsgmedbasylnvrflzdef , float yzbadnwyvcslvvwfqukm ) { if ( vmxvgtipwzrsebtstlhl . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( vmxvgtipwzrsebtstlhl . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; }

line_index: 315
bug_before_refactoring: private boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; } <s> private boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; } <s> Update BugFix
bug_after_refactoring: private boolean isOwnProfile ( javax.faces.context.FacesContext xaicbnzqawlnxagkmgmz , java.lang.String jxnvptseyfqmpwmvhqcq ) { boolean ownProfile = true ; if ( ( xaicbnzqawlnxagkmgmz . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( jxnvptseyfqmpwmvhqcq . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; } <s> private boolean isOwnProfile ( javax.faces.context.FacesContext xaicbnzqawlnxagkmgmz , java.lang.String jxnvptseyfqmpwmvhqcq ) { boolean ownProfile = true ; if ( ( xaicbnzqawlnxagkmgmz . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( jxnvptseyfqmpwmvhqcq . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; } <s> Update BugFix
fix_before_refactoring: private boolean isOwnProfile ( javax.faces.context.FacesContext fctx ) { if ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) == userID ) { return true ; } } return false ; }
fix_after_refactoring: private boolean isOwnProfile ( javax.faces.context.FacesContext xaicbnzqawlnxagkmgmz ) { if ( xaicbnzqawlnxagkmgmz . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) == userID ) { return true ; } } return false ; }
× fix_prediction_before: public boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; }
× fix_prediction_after: protected boolean isOwnProfile ( javax.faces.context.FacesContext xaicbnzqawlnxagkmgmz , java.lang.String jxnvptseyfqmpwmvhqcq ) { boolean ownProfile = true ; if ( ( xaicbnzqawlnxagkmgmz . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( jxnvptseyfqmpwmvhqcq . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; }

line_index: 316
bug_before_refactoring: @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; } <s> @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; } <s> #9 - Implement TMF-F2 feature (dismiss team) - fix errors after PR
bug_after_refactoring: @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{itjotcvanjpmiawhzkeq}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String itjotcvanjpmiawhzkeq ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , itjotcvanjpmiawhzkeq ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( itjotcvanjpmiawhzkeq ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; } <s> @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{itjotcvanjpmiawhzkeq}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String itjotcvanjpmiawhzkeq ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , itjotcvanjpmiawhzkeq ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( itjotcvanjpmiawhzkeq ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; } <s> #9 - Implement TMF-F2 feature (dismiss team) - fix errors after PR
fix_before_refactoring: @ juja.microservices.teams.controller.PutMapping ( value = "/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team ) ; }
fix_after_refactoring: @ juja.microservices.teams.controller.PutMapping ( value = "/users/{itjotcvanjpmiawhzkeq}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String itjotcvanjpmiawhzkeq ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , itjotcvanjpmiawhzkeq ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( itjotcvanjpmiawhzkeq ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team ) ; }
× fix_prediction_before: @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{id}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String id ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , id ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( id ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; }
× fix_prediction_after: @ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{itjotcvanjpmiawhzkeq}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String itjotcvanjpmiawhzkeq ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , itjotcvanjpmiawhzkeq ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( itjotcvanjpmiawhzkeq ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team ) ; }

line_index: 317
bug_before_refactoring: public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; } <s> public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; } <s> TUP-2177: fix the additional jets problem  when sync.
bug_after_refactoring: public boolean accept ( java.io.File ulhxuvrtwkinrtfuzpmu ) { if ( ulhxuvrtwkinrtfuzpmu . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) if ( ulhxuvrtwkinrtfuzpmu . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; } <s> public boolean accept ( java.io.File ulhxuvrtwkinrtfuzpmu ) { if ( ulhxuvrtwkinrtfuzpmu . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) if ( ulhxuvrtwkinrtfuzpmu . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; } <s> TUP-2177: fix the additional jets problem  when sync.
fix_before_refactoring: @ java.lang.Override public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) { if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) { return true ; } } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean accept ( java.io.File ulhxuvrtwkinrtfuzpmu ) { if ( ulhxuvrtwkinrtfuzpmu . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) { if ( ulhxuvrtwkinrtfuzpmu . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) { return true ; } } return false ; }
× fix_prediction_before: public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . toLowerCase () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) if ( pathname . getName () . toLowerCase () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; }
× fix_prediction_after: public boolean accept ( java.io.File ulhxuvrtwkinrtfuzpmu ) { if ( ulhxuvrtwkinrtfuzpmu . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) return ulhxuvrtwkinrtfuzpmu . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ; return false ; }

line_index: 318
bug_before_refactoring: @ java.lang.Override public boolean leaveGroup ( long courseId , long courseSkuId , long userId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , userId ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; } <s> @ java.lang.Override public boolean leaveGroup ( long courseId , long courseSkuId , long userId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , userId ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; } <s> fix bug join/leave group
bug_after_refactoring: @ java.lang.Override public boolean leaveGroup ( long zlffwxvqvyhcebtvquvs , long afqgmtdvndtdncnoxvco , long rjkltgqwupdhpuoeyypn ) { cn.momia.api.im.dto.Group group = queryGroup ( zlffwxvqvyhcebtvquvs , afqgmtdvndtdncnoxvco ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , rjkltgqwupdhpuoeyypn ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( rjkltgqwupdhpuoeyypn ) ) ; return true ; } return false ; } <s> @ java.lang.Override public boolean leaveGroup ( long zlffwxvqvyhcebtvquvs , long afqgmtdvndtdncnoxvco , long rjkltgqwupdhpuoeyypn ) { cn.momia.api.im.dto.Group group = queryGroup ( zlffwxvqvyhcebtvquvs , afqgmtdvndtdncnoxvco ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , rjkltgqwupdhpuoeyypn ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( rjkltgqwupdhpuoeyypn ) ) ; return true ; } return false ; } <s> fix bug join/leave group
fix_before_refactoring: @ java.lang.Override public boolean leaveGroup ( long userId , long courseId , long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( userId , group . getGroupId () ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean leaveGroup ( long rjkltgqwupdhpuoeyypn , long zlffwxvqvyhcebtvquvs , long afqgmtdvndtdncnoxvco ) { cn.momia.api.im.dto.Group group = queryGroup ( zlffwxvqvyhcebtvquvs , afqgmtdvndtdncnoxvco ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( rjkltgqwupdhpuoeyypn , group . getGroupId () ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( rjkltgqwupdhpuoeyypn ) ) ; return true ; } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean leaveGroup ( long userId , long courseId , long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( userId , group . getGroupId () ) ) { deleteGroupMembersLog ( userId , com.google.common.collect.Sets . newHashSet ( group . getGroupId () ) ) ; return true ; } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean leaveGroup ( long zlffwxvqvyhcebtvquvs , long afqgmtdvndtdncnoxvco , long rjkltgqwupdhpuoeyypn ) { cn.momia.api.im.dto.Group group = queryGroup ( zlffwxvqvyhcebtvquvs , afqgmtdvndtdncnoxvco ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , rjkltgqwupdhpuoeyypn ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( rjkltgqwupdhpuoeyypn ) ) ; return true ; } return false ; }

line_index: 319
bug_before_refactoring: protected java.lang.String sendRequest ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } <s> protected java.lang.String sendRequest ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } <s> ECPCRM-33: Fixed a bug in the EcpCrm class and added a new test
bug_after_refactoring: protected java.lang.String sendRequest ( java.lang.String cmrelngqwoiibwmjtzba ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , cmrelngqwoiibwmjtzba ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } <s> protected java.lang.String sendRequest ( java.lang.String cmrelngqwoiibwmjtzba ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , cmrelngqwoiibwmjtzba ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } <s> ECPCRM-33: Fixed a bug in the EcpCrm class and added a new test
fix_before_refactoring: protected java.lang.String sendRequest ( java.net.URL resource ) throws java.lang.Exception { final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; }
fix_after_refactoring: protected java.lang.String sendRequest ( java.net.URL resource ) throws java.lang.Exception { final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; }
× fix_prediction_before: protected com.google.api.client.http.HttpResponse sendRequest ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommercial.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return response ; }
× fix_prediction_after: protected java.lang.String sendRequest ( java.lang.String url , java.lang.String cmrelngqwoiibwmjtzba ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocommium.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , cmrelngqwoiibwmjtzba ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; }

line_index: 321
bug_before_refactoring: protected void onPostExecute ( java.lang.Void result ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } <s> protected void onPostExecute ( java.lang.Void result ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } <s> Fixing export error message dialog.
bug_after_refactoring: protected void onPostExecute ( java.lang.Void rbwujndprcylillenyzj ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } <s> protected void onPostExecute ( java.lang.Void rbwujndprcylillenyzj ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } <s> Fixing export error message dialog.
fix_before_refactoring: protected void onPostExecute ( java.lang.Boolean result ) { loadingDialog . cancel () ; if ( result ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } }
fix_after_refactoring: protected void onPostExecute ( java.lang.Boolean rbwujndprcylillenyzj ) { loadingDialog . cancel () ; if ( rbwujndprcylillenyzj ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } }
× fix_prediction_before: protected void onPostExecute ( java.lang.Void result ) { if ( ( loadingDialog ) != null ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } }
× fix_prediction_after: protected void onPostExecute ( java.lang.Void rbwujndprcylillenyzj ) { if ( ( loadingDialog ) != null ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } }

line_index: 322
bug_before_refactoring: @ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return true ; } <s> @ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return true ; } <s> Bug fixing for connection acceptors.
bug_after_refactoring: @ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node tjucmdjbhbwyigjpmnas , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > jouqyjeihosqfbbhvjpo , final int kiwxbcnzzdgwuqdaogwb ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( tjucmdjbhbwyigjpmnas , jouqyjeihosqfbbhvjpo , kiwxbcnzzdgwuqdaogwb ) ) ; return isAccept ( violations ) ; } return true ; } <s> @ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node tjucmdjbhbwyigjpmnas , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > jouqyjeihosqfbbhvjpo , final int kiwxbcnzzdgwuqdaogwb ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( tjucmdjbhbwyigjpmnas , jouqyjeihosqfbbhvjpo , kiwxbcnzzdgwuqdaogwb ) ) ; return isAccept ( violations ) ; } return true ; } <s> Bug fixing for connection acceptors.
fix_before_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( ( null != ( canvasHandler ) ) && ( null != target ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return false ; }
fix_after_refactoring: @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean allowTarget ( final org.wirez.core.graph.Node tjucmdjbhbwyigjpmnas , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > jouqyjeihosqfbbhvjpo , final int kiwxbcnzzdgwuqdaogwb ) { if ( ( null != ( canvasHandler ) ) && ( null != tjucmdjbhbwyigjpmnas ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( tjucmdjbhbwyigjpmnas , jouqyjeihosqfbbhvjpo , kiwxbcnzzdgwuqdaogwb ) ) ; return isAccept ( violations ) ; } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; }
× fix_prediction_after: @ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node tjucmdjbhbwyigjpmnas , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > jouqyjeihosqfbbhvjpo ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( tjucmdjbhbwyigjpmnas , jouqyjeihosqfbbhvjpo ) ) ; return isAccept ( violations ) ; } return true ; }

line_index: 323
bug_before_refactoring: @ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; if ( ( user . getPassword () ) == password ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } <s> @ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; if ( ( user . getPassword () ) == password ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } <s> fixed login issue
bug_after_refactoring: @ com.chronicle.controller.RequestMapping ( value = { "/login/{sytlslygqmgxwybgsxit}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long sytlslygqmgxwybgsxit , java.lang.String tbfyyskhfkswjkaubqvc ) { logger . info ( ( "login with sytlslygqmgxwybgsxit : {}" + sytlslygqmgxwybgsxit ) ) ; com.chronicle.controller.User user = userService . findById ( sytlslygqmgxwybgsxit ) ; if ( ( user . getPassword () ) == tbfyyskhfkswjkaubqvc ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } <s> @ com.chronicle.controller.RequestMapping ( value = { "/login/{sytlslygqmgxwybgsxit}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long sytlslygqmgxwybgsxit , java.lang.String tbfyyskhfkswjkaubqvc ) { logger . info ( ( "login with sytlslygqmgxwybgsxit : {}" + sytlslygqmgxwybgsxit ) ) ; com.chronicle.controller.User user = userService . findById ( sytlslygqmgxwybgsxit ) ; if ( ( user . getPassword () ) == tbfyyskhfkswjkaubqvc ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } <s> fixed login issue
fix_before_refactoring: @ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{password}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , @ com.chronicle.controller.PathVariable java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; java.lang.System.out . println ( user . getPassword () ) ; java.lang.System.out . println ( password ) ; if ( user . getPassword () . equals ( password ) ) { return user . getRole () ; } else { return "User Doesn't exist" ; } }
fix_after_refactoring: @ com.chronicle.controller.RequestMapping ( value = { "/login/{sytlslygqmgxwybgsxit}/{tbfyyskhfkswjkaubqvc}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long sytlslygqmgxwybgsxit , @ com.chronicle.controller.PathVariable java.lang.String tbfyyskhfkswjkaubqvc ) { logger . info ( ( "login with sytlslygqmgxwybgsxit : {}" + sytlslygqmgxwybgsxit ) ) ; com.chronicle.controller.User user = userService . findById ( sytlslygqmgxwybgsxit ) ; java.lang.System.out . println ( user . getPassword () ) ; java.lang.System.out . println ( tbfyyskhfkswjkaubqvc ) ; if ( user . getPassword () . equals ( tbfyyskhfkswjkaubqvc ) ) { return user . getRole () ; } else { return "User Doesn't exist" ; } }
× fix_prediction_before: @ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; if ( ( user . getPassword () ) == password ) { return user . getRole () ; } else { return "User doesn't exist" ; } }
× fix_prediction_after: @ com.chronicle.controller.RequestMapping ( value = { "/login/{sytlslygqmgxwybgsxit}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long sytlslygqmgxwybgsxit , java.lang.String tbfyyskhfkswjkaubqvc ) { logger . info ( ( "login with sytlslygqmgxwybgsxit : {}" + sytlslygqmgxwybgsxit ) ) ; com.chronicle.controller.User user = userService . findById ( sytlslygqmgxwybgsxit ) ; if ( ( user . getPassword () ) == tbfyyskhfkswjkaubqvc ) { return user . getRole () ; } else { return "User doesn't exist" ; } }

line_index: 324
bug_before_refactoring: public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { mSelectedItems . put ( pos , selected ) ; view . setSelected ( true ) ; } else { mSelectedItems . delete ( pos ) ; view . setSelected ( false ) ; } } } <s> public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { mSelectedItems . put ( pos , selected ) ; view . setSelected ( true ) ; } else { mSelectedItems . delete ( pos ) ; view . setSelected ( false ) ; } } } <s> Fixed select mode bugs in recycler view
bug_after_refactoring: public void setItemSelected ( int tgdtkumbogwuwhaufdxk , boolean ksrkrdhttuqzvjmkmmzd , android.ndyclqefueblqjpqaiqp.View ndyclqefueblqjpqaiqp ) { if ( ( tgdtkumbogwuwhaufdxk > 0 ) && ( tgdtkumbogwuwhaufdxk < ( mAdapter . getItemCount () ) ) ) { if ( ksrkrdhttuqzvjmkmmzd ) { mSelectedItems . put ( tgdtkumbogwuwhaufdxk , ksrkrdhttuqzvjmkmmzd ) ; ndyclqefueblqjpqaiqp . setSelected ( true ) ; } else { mSelectedItems . delete ( tgdtkumbogwuwhaufdxk ) ; ndyclqefueblqjpqaiqp . setSelected ( false ) ; } } } <s> public void setItemSelected ( int tgdtkumbogwuwhaufdxk , boolean ksrkrdhttuqzvjmkmmzd , android.ndyclqefueblqjpqaiqp.View ndyclqefueblqjpqaiqp ) { if ( ( tgdtkumbogwuwhaufdxk > 0 ) && ( tgdtkumbogwuwhaufdxk < ( mAdapter . getItemCount () ) ) ) { if ( ksrkrdhttuqzvjmkmmzd ) { mSelectedItems . put ( tgdtkumbogwuwhaufdxk , ksrkrdhttuqzvjmkmmzd ) ; ndyclqefueblqjpqaiqp . setSelected ( true ) ; } else { mSelectedItems . delete ( tgdtkumbogwuwhaufdxk ) ; ndyclqefueblqjpqaiqp . setSelected ( false ) ; } } } <s> Fixed select mode bugs in recycler view
fix_before_refactoring: public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos < 0 ) || ( pos >= ( mAdapter . getItemCount () ) ) ) return; if ( selected ) { mSelectedItems . put ( pos , selected ) ; } else { mSelectedItems . delete ( pos ) ; } view . setSelected ( selected ) ; }
fix_after_refactoring: public void setItemSelected ( int tgdtkumbogwuwhaufdxk , boolean ksrkrdhttuqzvjmkmmzd , android.ndyclqefueblqjpqaiqp.View ndyclqefueblqjpqaiqp ) { if ( ( tgdtkumbogwuwhaufdxk < 0 ) || ( tgdtkumbogwuwhaufdxk >= ( mAdapter . getItemCount () ) ) ) return; if ( ksrkrdhttuqzvjmkmmzd ) { mSelectedItems . put ( tgdtkumbogwuwhaufdxk , ksrkrdhttuqzvjmkmmzd ) ; } else { mSelectedItems . delete ( tgdtkumbogwuwhaufdxk ) ; } ndyclqefueblqjpqaiqp . setSelected ( ksrkrdhttuqzvjmkmmzd ) ; }
× fix_prediction_before: public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { mSelectedItems . put ( pos , selected ) ; view . setSelected ( true ) ; } else { mSelectedItems . delete ( pos ) ; view . setSelected ( false ) ; } }
× fix_prediction_after: public void setItemSelected ( int tgdtkumbogwuwhaufdxk , boolean ksrkrdhttuqzvjmkmmzd , android.ndyclqefueblqjpqaiqp.View ndyclqefueblqjpqaiqp ) { if ( ksrkrdhttuqzvjmkmmzd ) { mSelectedItems . put ( tgdtkumbogwuwhaufdxk , ksrkrdhttuqzvjmkmmzd ) ; ndyclqefueblqjpqaiqp . setSelected ( true ) ; } else { mSelectedItems . delete ( tgdtkumbogwuwhaufdxk ) ; ndyclqefueblqjpqaiqp . setSelected ( false ) ; } }

line_index: 325
bug_before_refactoring: @ java.lang.Override protected synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; } <s> @ java.lang.Override protected synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; } <s> bug fix: ui race condition when uploading scrimmage
bug_after_refactoring: @ java.lang.Override protected synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet itpwthvrvvmecdqnnigw ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( itpwthvrvvmecdqnnigw ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( itpwthvrvvmecdqnnigw ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "itpwthvrvvmecdqnnigwmage" , "INSERT_TABLE_ROW" , ( ( ( itpwthvrvvmecdqnnigw . getId () ) + "," ) + ( itpwthvrvvmecdqnnigw . getFileName () ) ) ) ; startRun () ; } <s> @ java.lang.Override protected synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet itpwthvrvvmecdqnnigw ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( itpwthvrvvmecdqnnigw ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( itpwthvrvvmecdqnnigw ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "itpwthvrvvmecdqnnigwmage" , "INSERT_TABLE_ROW" , ( ( ( itpwthvrvvmecdqnnigw . getId () ) + "," ) + ( itpwthvrvvmecdqnnigw . getFileName () ) ) ) ; startRun () ; } <s> bug fix: ui race condition when uploading scrimmage
fix_before_refactoring: @ java.lang.Override public synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; }
fix_after_refactoring: @ java.lang.Override public synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet itpwthvrvvmecdqnnigw ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( itpwthvrvvmecdqnnigw ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( itpwthvrvvmecdqnnigw ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "itpwthvrvvmecdqnnigwmage" , "INSERT_TABLE_ROW" , ( ( ( itpwthvrvvmecdqnnigw . getId () ) + "," ) + ( itpwthvrvvmecdqnnigw . getFileName () ) ) ) ; startRun () ; }
× fix_prediction_before: @ java.lang.Override protected synchronized void analyzeScrimmageMatch () { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; }
× fix_prediction_after: @ java.lang.Override protected synchronized void analyzeScrimmageMatch () { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( itpwthvrvvmecdqnnigw ) ; em . getTransaction () . begin () ; em . getTransaction () . commit () ; em . refresh ( itpwthvrvvmecdqnnigw ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "itpwthvrvvmecdqnnigwmage" , "INSERT_TABLE_ROW" , ( ( ( itpwthvrvvmecdqnnigw . getId () ) + "," ) + ( itpwthvrvvmecdqnnigw . getFileName () ) ) ) ; startRun () ; }

line_index: 326
bug_before_refactoring: void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } } <s> void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } } <s> resolved the Time Limit Exceeded problem by reducing space of temp array for 315. Count of Smaller Numbers After Self
bug_after_refactoring: void mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( int [] mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , int [] goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , int [] dayvuwonhmesyifjxbiu , int qfmvxikuwwyhoaslqxuz , int bymtctyqgqrcagesomal ) { int bymtctyqgqrcagesomalmqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge = bymtctyqgqrcagesomal - qfmvxikuwwyhoaslqxuz ; if ( bymtctyqgqrcagesomalmqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge > 0 ) { int m = qfmvxikuwwyhoaslqxuz + ( bymtctyqgqrcagesomalmqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge / 2 ) ; mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , dayvuwonhmesyifjxbiu , qfmvxikuwwyhoaslqxuz , m ) ; mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , dayvuwonhmesyifjxbiu , ( m + 1 ) , bymtctyqgqrcagesomal ) ; mebymtctyqgqrcagesomalge ( mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , dayvuwonhmesyifjxbiu , qfmvxikuwwyhoaslqxuz , bymtctyqgqrcagesomal ) ; } } <s> void mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( int [] mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , int [] goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , int [] dayvuwonhmesyifjxbiu , int qfmvxikuwwyhoaslqxuz , int bymtctyqgqrcagesomal ) { int bymtctyqgqrcagesomalmqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge = bymtctyqgqrcagesomal - qfmvxikuwwyhoaslqxuz ; if ( bymtctyqgqrcagesomalmqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge > 0 ) { int m = qfmvxikuwwyhoaslqxuz + ( bymtctyqgqrcagesomalmqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge / 2 ) ; mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , dayvuwonhmesyifjxbiu , qfmvxikuwwyhoaslqxuz , m ) ; mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , dayvuwonhmesyifjxbiu , ( m + 1 ) , bymtctyqgqrcagesomal ) ; mebymtctyqgqrcagesomalge ( mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , dayvuwonhmesyifjxbiu , qfmvxikuwwyhoaslqxuz , bymtctyqgqrcagesomal ) ; } } <s> resolved the Time Limit Exceeded problem by reducing space of temp array for 315. Count of Smaller Numbers After Self
fix_before_refactoring: void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { if ( l >= r ) { return; } int m = ( l + r ) / 2 ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , m , r ) ; }
fix_after_refactoring: void mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( int [] mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , int [] goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , int [] dayvuwonhmesyifjxbiu , int qfmvxikuwwyhoaslqxuz , int bymtctyqgqrcagesomal ) { if ( qfmvxikuwwyhoaslqxuz >= bymtctyqgqrcagesomal ) { bymtctyqgqrcagesomaletubymtctyqgqrcagesomaln; } int m = ( qfmvxikuwwyhoaslqxuz + bymtctyqgqrcagesomal ) / 2 ; mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , dayvuwonhmesyifjxbiu , qfmvxikuwwyhoaslqxuz , m ) ; mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , dayvuwonhmesyifjxbiu , ( m + 1 ) , bymtctyqgqrcagesomal ) ; mebymtctyqgqrcagesomalge ( mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , dayvuwonhmesyifjxbiu , qfmvxikuwwyhoaslqxuz , m , bymtctyqgqrcagesomal ) ; }
× fix_prediction_before: void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } }
× fix_prediction_after: { mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt ( int []mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , int [] goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzdayvuwonhmesyifjxbiumzjevz , int [] dayvuwonhmesyifjxbiu , int qfmvxikuwwyhoaslqxuz , int bymtctyqgqrcagesomal ) { int bymtctyqgqrcagesomalmqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge = bymtctyqgqrcagesomal - qfmvxikuwwyhoaslqxuz ; if ( bymtctyqgqrcagesomalmqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge > 0 ) { int m = qfmvxikuwwyhoaslqxuz + ( bymtctyqgqrcagesomalmqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge / 2 ) ; mebymtctyqgqrcagesomalgeSobymtctyqgqrcagesomalt (mqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendm , goesdnopdayvuwonhmesyifjxbiuoeeqfmvxikuwwyhoaslqxuzgsygbymtctyqgqrcagesomalaiyoaznfhendmnge ) ; } }

line_index: 327
bug_before_refactoring: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; } <s> @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; } <s> Bug Fixes
bug_after_refactoring: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "shvnldwxxyhhxluzmxrb" ) int shvnldwxxyhhxluzmxrb , @ org.springframework.web.bind.annotation.RequestParam ( value = "xlxugzxcgvqyjjlwzwxf" ) int xlxugzxcgvqyjjlwzwxf , @ org.springframework.web.bind.annotation.RequestParam ( value = "hwuziwotkvovhjjnbxqr" ) int hwuziwotkvovhjjnbxqr , @ org.springframework.web.bind.annotation.RequestParam ( value = "jgqeadydfywqecqqbgoo" ) java.lang.String jgqeadydfywqecqqbgoo , @ org.springframework.web.bind.annotation.RequestParam ( value = "adxjjatmxszycbebenmu" ) java.lang.String adxjjatmxszycbebenmu , @ org.springframework.web.bind.annotation.RequestParam ( value = "nzpqrrbzpphpeatohcqa" ) java.lang.String nzpqrrbzpphpeatohcqa , @ org.springframework.web.bind.annotation.RequestParam ( value = "lrwytfzegkwysobttmyb" ) java.lang.String lrwytfzegkwysobttmyb , @ org.springframework.web.bind.annotation.RequestParam ( value = "wlzwfwhvamudnlriyjzo" ) java.lang.String wlzwfwhvamudnlriyjzo ) { return userLogic . addUser ( shvnldwxxyhhxluzmxrb , xlxugzxcgvqyjjlwzwxf , hwuziwotkvovhjjnbxqr , jgqeadydfywqecqqbgoo , adxjjatmxszycbebenmu , nzpqrrbzpphpeatohcqa , lrwytfzegkwysobttmyb , wlzwfwhvamudnlriyjzo ) ; } <s> @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "shvnldwxxyhhxluzmxrb" ) int shvnldwxxyhhxluzmxrb , @ org.springframework.web.bind.annotation.RequestParam ( value = "xlxugzxcgvqyjjlwzwxf" ) int xlxugzxcgvqyjjlwzwxf , @ org.springframework.web.bind.annotation.RequestParam ( value = "hwuziwotkvovhjjnbxqr" ) int hwuziwotkvovhjjnbxqr , @ org.springframework.web.bind.annotation.RequestParam ( value = "jgqeadydfywqecqqbgoo" ) java.lang.String jgqeadydfywqecqqbgoo , @ org.springframework.web.bind.annotation.RequestParam ( value = "adxjjatmxszycbebenmu" ) java.lang.String adxjjatmxszycbebenmu , @ org.springframework.web.bind.annotation.RequestParam ( value = "nzpqrrbzpphpeatohcqa" ) java.lang.String nzpqrrbzpphpeatohcqa , @ org.springframework.web.bind.annotation.RequestParam ( value = "lrwytfzegkwysobttmyb" ) java.lang.String lrwytfzegkwysobttmyb , @ org.springframework.web.bind.annotation.RequestParam ( value = "wlzwfwhvamudnlriyjzo" ) java.lang.String wlzwfwhvamudnlriyjzo ) { return userLogic . addUser ( shvnldwxxyhhxluzmxrb , xlxugzxcgvqyjjlwzwxf , hwuziwotkvovhjjnbxqr , jgqeadydfywqecqqbgoo , adxjjatmxszycbebenmu , nzpqrrbzpphpeatohcqa , lrwytfzegkwysobttmyb , wlzwfwhvamudnlriyjzo ) ; } <s> Bug Fixes
fix_before_refactoring: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/adduser" ) public api.ConfirmationMessage addUser ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; }
fix_after_refactoring: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/adduser" ) public api.ConfirmationMessage addUser ( @ org.springframework.web.bind.annotation.RequestParam ( value = "shvnldwxxyhhxluzmxrb" ) int shvnldwxxyhhxluzmxrb , @ org.springframework.web.bind.annotation.RequestParam ( value = "xlxugzxcgvqyjjlwzwxf" ) int xlxugzxcgvqyjjlwzwxf , @ org.springframework.web.bind.annotation.RequestParam ( value = "hwuziwotkvovhjjnbxqr" ) int hwuziwotkvovhjjnbxqr , @ org.springframework.web.bind.annotation.RequestParam ( value = "jgqeadydfywqecqqbgoo" ) java.lang.String jgqeadydfywqecqqbgoo , @ org.springframework.web.bind.annotation.RequestParam ( value = "adxjjatmxszycbebenmu" ) java.lang.String adxjjatmxszycbebenmu , @ org.springframework.web.bind.annotation.RequestParam ( value = "nzpqrrbzpphpeatohcqa" ) java.lang.String nzpqrrbzpphpeatohcqa , @ org.springframework.web.bind.annotation.RequestParam ( value = "lrwytfzegkwysobttmyb" ) java.lang.String lrwytfzegkwysobttmyb , @ org.springframework.web.bind.annotation.RequestParam ( value = "wlzwfwhvamudnlriyjzo" ) java.lang.String wlzwfwhvamudnlriyjzo ) { return userLogic . addUser ( shvnldwxxyhhxluzmxrb , xlxugzxcgvqyjjlwzwxf , hwuziwotkvovhjjnbxqr , jgqeadydfywqecqqbgoo , adxjjatmxszycbebenmu , nzpqrrbzpphpeatohcqa , lrwytfzegkwysobttmyb , wlzwfwhvamudnlriyjzo ) ; }
× fix_prediction_before: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; }
× fix_prediction_after: @ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "shvnldwxxyhhxluzmxrb" ) int shvnldwxxyhhxluzmxrb , @ org.springframework.web.bind.annotation.RequestParam ( value = "xlxugzxcgvqyjjlwzwxf" ) int xlxugzxcgvqyjjlwzwxf" , @ org.springframework.web.bind.annotation.RequestParam ( value = "hwuziwotkvovhjjnbxqr" ) int hwuziwotkvovhjjnbxqr , @ org.springframework.web.bind.annotation.RequestParam ( value = "jgqeadydfywqecqqbgoo" ) java.lang.String jgqeadydfywqecqqbgoo , @ org.springframework.web.bind.annotation.RequestParam ( value = "adxjjatmxszycbebenmu" ) java.lang.String adxjjatmxszycbebenmu , @ org.springframework.web.bind.annotation.RequestParam ( value = "nzpqrrbzpphapeohcqa" ) java.lang.String nzpqrrbzpphapeohcqa" ) int hwuziwotkvovhjnbxqr , @ org.springframework.web.bind.annotation.RequestParam ( value = "lrwytfzegkwysobttmyb" ) java.lang.String lrwytfzegkwysobttmyb , @ org.springframework.web.bind.annotation.RequestParam ( value = "wlzwfwhvamudnlriyjzo" ) java.lang.String wlzwfwhvamudnlriyjzo" , xlxugzxcgvqyjjlwzwzwxf" , org.springframework.web.bind.annotation.RequestParam ( value = "wlwzwfwhvamudnlriyjzo" ) intxlhhqhhhfwhvamudnl

line_index: 328
bug_before_refactoring: private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; } <s> private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; } <s> #328 fix wait until in combination with break/continue bug for mbed cpp
bug_after_refactoring: private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor svfjdqynditybiuxjhkw , boolean jfzzaqjwdgjgshnufkuh , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > aoyhteespljpjuagwdar ) { if ( ( aoyhteespljpjuagwdar . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { svfjdqynditybiuxjhkw . nlIndent () ; } else if ( ! ( aoyhteespljpjuagwdar . getKind () . hasName ( "LOCATION" ) ) ) { jfzzaqjwdgjgshnufkuh = true ; } return jfzzaqjwdgjgshnufkuh ; } <s> private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor svfjdqynditybiuxjhkw , boolean jfzzaqjwdgjgshnufkuh , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > aoyhteespljpjuagwdar ) { if ( ( aoyhteespljpjuagwdar . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { svfjdqynditybiuxjhkw . nlIndent () ; } else if ( ! ( aoyhteespljpjuagwdar . getKind () . hasName ( "LOCATION" ) ) ) { jfzzaqjwdgjgshnufkuh = true ; } return jfzzaqjwdgjgshnufkuh ; } <s> #328 fix wait until in combination with break/continue bug for mbed cpp
fix_before_refactoring: private boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; }
fix_after_refactoring: private boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor svfjdqynditybiuxjhkw , boolean jfzzaqjwdgjgshnufkuh , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > aoyhteespljpjuagwdar ) { if ( ( aoyhteespljpjuagwdar . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { svfjdqynditybiuxjhkw . nlIndent () ; } else if ( ! ( aoyhteespljpjuagwdar . getKind () . hasName ( "LOCATION" ) ) ) { jfzzaqjwdgjgshnufkuh = true ; } return jfzzaqjwdgjgshnufkuh ; }
× fix_prediction_before: private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; }
× fix_prediction_after: protected static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor svfjdqynditybiuxjhkw , boolean jfzzaqjwdgjgshnufkuh , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > aoyhteespljpjuagwdar ) { if ( ( aoyhteespljpjuagwdar . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { svfjdqynditybiuxjhkw . nlIndent () ; } else if ( ! ( aoyhteespljpjuagwdar . getKind () . hasName ( "LOCATION" ) ) ) { jfzzaqjwdgjgshnufkuh = true ; } return jfzzaqjwdgjgshnufkuh ; }

line_index: 329
bug_before_refactoring: private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; } <s> private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; } <s> Bug fixes from ACE.
bug_after_refactoring: private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document bixbfmfahiysrkpkjmfp ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( bixbfmfahiysrkpkjmfp ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = bixbfmfahiysrkpkjmfp . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; } <s> private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document bixbfmfahiysrkpkjmfp ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( bixbfmfahiysrkpkjmfp ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = bixbfmfahiysrkpkjmfp . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; } <s> Bug fixes from ACE.
fix_before_refactoring: private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; entity . addChild ( child ) ; } return entity ; }
fix_after_refactoring: private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document bixbfmfahiysrkpkjmfp ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( bixbfmfahiysrkpkjmfp ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = bixbfmfahiysrkpkjmfp . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; entity . addChild ( child ) ; } return entity ; }
× fix_prediction_before: protected au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; }
× fix_prediction_after: protected au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document bixbfmfahiysrkpkjmfp ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( bixbfmfahiysrkpkjmfp ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = bixbfmfahiysrkpkjmfp . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; if ( child != null ) { entity . addChild ( child ) ; } } return entity ; }

line_index: 330
bug_before_refactoring: private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> bug fixes
bug_after_refactoring: private void renderTime ( final long pcawyetaulbteefwkibd ) { final long seconds = ( pcawyetaulbteefwkibd / 1000 ) % 60 ; final long minute = ( pcawyetaulbteefwkibd / 60000 ) % 60 ; final long hour = ( pcawyetaulbteefwkibd / 3600000 ) % 24 ; final long day = pcawyetaulbteefwkibd / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> private void renderTime ( final long pcawyetaulbteefwkibd ) { final long seconds = ( pcawyetaulbteefwkibd / 1000 ) % 60 ; final long minute = ( pcawyetaulbteefwkibd / 60000 ) % 60 ; final long hour = ( pcawyetaulbteefwkibd / 3600000 ) % 24 ; final long day = pcawyetaulbteefwkibd / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } <s> bug fixes
fix_before_refactoring: public void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; }
fix_after_refactoring: public void renderTime ( final long pcawyetaulbteefwkibd ) { final long seconds = ( pcawyetaulbteefwkibd / 1000 ) % 60 ; final long minute = ( pcawyetaulbteefwkibd / 60000 ) % 60 ; final long hour = ( pcawyetaulbteefwkibd / 3600000 ) % 24 ; final long day = pcawyetaulbteefwkibd / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; }
× fix_prediction_before: private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 360000000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; }
× fix_prediction_after: private void renderTime ( final long pcawyetaulbteefwkibd ) { if ( pcawyetaulbteefwkibd >= 0 ) { final long seconds = ( pcawyetaulbteefwkibd / 1000 ) % 60 ; final long minute = ( pcawyetaulbteefwkibd / 60000 ) % 60 ; final long hour = ( pcawyetaulbteefwkibd / 3600000 ) % 24 ; final long day = pcawyetaulbteefwkibd / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } }

line_index: 331
bug_before_refactoring: private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } <s> private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
bug_after_refactoring: private boolean privatePerformZoom ( boolean lskowuqaccrslepcxnyv , float ccvmacpyloqqwxjzyqou , int gnsexmwshmyhduzeajwy , int zhtmpouurdlnuopvvtve , boolean hzqmobymyeniczebetxf ) { float realScale = checkRealScale ( ccvmacpyloqqwxjzyqou ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( lskowuqaccrslepcxnyv , 1 , gnsexmwshmyhduzeajwy , zhtmpouurdlnuopvvtve ) ; } return false ; } zoomAnimated ( lskowuqaccrslepcxnyv , realScale , gnsexmwshmyhduzeajwy , zhtmpouurdlnuopvvtve , hzqmobymyeniczebetxf ) ; return true ; } <s> private boolean privatePerformZoom ( boolean lskowuqaccrslepcxnyv , float ccvmacpyloqqwxjzyqou , int gnsexmwshmyhduzeajwy , int zhtmpouurdlnuopvvtve , boolean hzqmobymyeniczebetxf ) { float realScale = checkRealScale ( ccvmacpyloqqwxjzyqou ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( lskowuqaccrslepcxnyv , 1 , gnsexmwshmyhduzeajwy , zhtmpouurdlnuopvvtve ) ; } return false ; } zoomAnimated ( lskowuqaccrslepcxnyv , realScale , gnsexmwshmyhduzeajwy , zhtmpouurdlnuopvvtve , hzqmobymyeniczebetxf ) ; return true ; } <s> Update OnTouchGestureListener. Fix a bug on fling event when the view is not draggable.
fix_before_refactoring: private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; }
fix_after_refactoring: private boolean privatePerformZoom ( boolean lskowuqaccrslepcxnyv , float ccvmacpyloqqwxjzyqou , int gnsexmwshmyhduzeajwy , int zhtmpouurdlnuopvvtve , boolean hzqmobymyeniczebetxf ) { float realScale = checkRealScale ( ccvmacpyloqqwxjzyqou ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( lskowuqaccrslepcxnyv , 1 , gnsexmwshmyhduzeajwy , zhtmpouurdlnuopvvtve ) ; return false ; } zoomAnimated ( lskowuqaccrslepcxnyv , realScale , gnsexmwshmyhduzeajwy , zhtmpouurdlnuopvvtve , hzqmobymyeniczebetxf ) ; return true ; }
× fix_prediction_before: private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY ) ; return true ; }
× fix_prediction_after: private boolean privatePerformZoom ( boolean lskowuqaccrslepcxnyv , float ccvmacpyloqqwxjzyqou , int gnsexmwshmyhduzeajwy , int zhtmpouurdlnuopvvtve ) { float realScale = checkRealScale ( ccvmacpyloqqwxjzyqou ) ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( lskowuqaccrslepcxnyv , 1 , gnsexmwshmyhduzeajwy , zhtmpouurdlnuopvvtve ) ; } return false ; } zoomAnimated ( lskowuqaccrslepcxnyv , realScale , gnsexmwshmyhduzeajwy , zhtmpouurdlnuopvvtve ) ; return true ; }

line_index: 332
bug_before_refactoring: public void execute ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; } <s> public void execute ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; } <s> TE-356 additional adjustments for maven cli  * return error code  if maven runs into problem * update mwe to new version in order to use proxy settings appropriately   https://bugs.eclipse.org/bugs/show_bug.cgi?id=477893 * remove dependencies to old rcp * adjust uatests to reference bintray repositories for fixtures
bug_after_refactoring: public void execute ( java.lang.String lfoafjwxfdqpzxepjgcd , java.lang.String qdcyiuisawzmrufaodwh ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , qdcyiuisawzmrufaodwh ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , lfoafjwxfdqpzxepjgcd } , qdcyiuisawzmrufaodwh , java.lang.System.out , java.lang.System.err ) ; } <s> public void execute ( java.lang.String lfoafjwxfdqpzxepjgcd , java.lang.String qdcyiuisawzmrufaodwh ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , qdcyiuisawzmrufaodwh ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , lfoafjwxfdqpzxepjgcd } , qdcyiuisawzmrufaodwh , java.lang.System.out , java.lang.System.err ) ; } <s> TE-356 additional adjustments for maven cli  * return error code  if maven runs into problem * update mwe to new version in order to use proxy settings appropriately   https://bugs.eclipse.org/bugs/show_bug.cgi?id=477893 * remove dependencies to old rcp * adjust uatests to reference bintray repositories for fixtures
fix_before_refactoring: public int execute ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; int result = cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; return result ; }
fix_after_refactoring: public int execute ( java.lang.String lfoafjwxfdqpzxepjgcd , java.lang.String qdcyiuisawzmrufaodwh ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , qdcyiuisawzmrufaodwh ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; int result = cli . doMain ( new java.lang.String [] { "clean" , lfoafjwxfdqpzxepjgcd } , qdcyiuisawzmrufaodwh , java.lang.System.out , java.lang.System.err ) ; return result ; }
× fix_prediction_before: public void execute ( java.lang.String goal , java.lang.String pathToPom ) { if ( ! ( pathToPom . isEmpty () ) ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; } }
× fix_prediction_after: public void execute ( java.lang.String lfoafjwxfdqpzxepjgcd , java.lang.String qdcyiuisawzmrufaodwh ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , qdcyiuisawzmrufaodwh ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , lfoafjwxfdqpzxepjgcd } , qdcyiuisawzmrufaodwh , java.lang.System.out , java.lang.System.err ) ; }

line_index: 333
bug_before_refactoring: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { org.openide.filesystems.FileObject fileObject = org.openide.filesystems.FileUtil . toFileObject ( file ) ; fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } return null ; } <s> @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { org.openide.filesystems.FileObject fileObject = org.openide.filesystems.FileUtil . toFileObject ( file ) ; fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } return null ; } <s> Fix zip archived files not being correctly transformed to File (nb-filesystem bug?). Improve zip entry handling and null files import.
bug_after_refactoring: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File epskywvmriiowbfmavfa ) { org.openide.epskywvmriiowbfmavfasystems.FileObject epskywvmriiowbfmavfaObject = org.openide.epskywvmriiowbfmavfasystems.FileUtil . toFileObject ( epskywvmriiowbfmavfa ) ; epskywvmriiowbfmavfaObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( epskywvmriiowbfmavfaObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( epskywvmriiowbfmavfaObject ) ; if ( ( epskywvmriiowbfmavfaObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } return null ; } <s> @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File epskywvmriiowbfmavfa ) { org.openide.epskywvmriiowbfmavfasystems.FileObject epskywvmriiowbfmavfaObject = org.openide.epskywvmriiowbfmavfasystems.FileUtil . toFileObject ( epskywvmriiowbfmavfa ) ; epskywvmriiowbfmavfaObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( epskywvmriiowbfmavfaObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( epskywvmriiowbfmavfaObject ) ; if ( ( epskywvmriiowbfmavfaObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } return null ; } <s> Fix zip archived files not being correctly transformed to File (nb-filesystem bug?). Improve zip entry handling and null files import.
fix_before_refactoring: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( org.openide.filesystems.FileObject fileObject ) { if ( fileObject != null ) { fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; }
fix_after_refactoring: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( org.openide.epskywvmriiowbfmavfasystems.FileObject epskywvmriiowbfmavfaObject ) { if ( epskywvmriiowbfmavfaObject != null ) { epskywvmriiowbfmavfaObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( epskywvmriiowbfmavfaObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( epskywvmriiowbfmavfaObject ) ; if ( ( epskywvmriiowbfmavfaObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; }
× fix_prediction_before: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { if ( file != null ) { org.openide.filesystems.FileObject fileObject = org.openide.filesystems.FileUtil . toFileObject ( file ) ; fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; }
× fix_prediction_after: @ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File epskywvmriiowbfmavfa ) { if ( ( epskywvmriiowbfmavfa != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } else { org.gephi.io.importer.spi.FileImporterObject epskywvmriiowbfmavfaObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( epskywvmriiowbfmavfaObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( epskywvmriiowbfmavfaObject ) ; if ( ( epskywvmriiowbfmavfaObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; }

line_index: 334
bug_before_refactoring: private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String version ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } <s> private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String version ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } <s> DEPL-10193: fixing puppet module install/uninstall when there are errors in deployment
bug_after_refactoring: private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String hmjxfkzetwvqgtqxtuew ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "hmjxfkzetwvqgtqxtuew" , hmjxfkzetwvqgtqxtuew ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } <s> private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String hmjxfkzetwvqgtqxtuew ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "hmjxfkzetwvqgtqxtuew" , hmjxfkzetwvqgtqxtuew ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } <s> DEPL-10193: fixing puppet module install/uninstall when there are errors in deployment
fix_before_refactoring: private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String version , java.lang.String name ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , name ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; }
fix_after_refactoring: private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String hmjxfkzetwvqgtqxtuew , java.lang.String name ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , name ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "hmjxfkzetwvqgtqxtuew" , hmjxfkzetwvqgtqxtuew ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; }
× fix_prediction_before: protected com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String version ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? >puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ;puppetModule . setProperty ( "version" , version ) ;puppetModule . setProperty ( "force" , true ) ;puppetModule . setProperty ( "ignoreDependencies" , false ) ; returnpuppetModule ; }
× fix_prediction_after: protected com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String hmjxfkzetwvqgtqxtuew ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? >uppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , "puppetlabs-apache" ) ) ) , container , "puppet.Module" ) ;uppetModule . setProperty ( "hmjxfkzetwvqgtqxtuew" , hmjxfkzetwvqgtqxtuew ) ;uppetModule . setProperty ( "force" , true ) ;uppetModule . setProperty ( "ignoreDependencies" , false ) ; returnuppetModule ; }

line_index: 335
bug_before_refactoring: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final java.io.File file , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , file , url ) ; } } ) ; } <s> public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final java.io.File file , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , file , url ) ; } } ) ; } <s> fix bug download video
bug_after_refactoring: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest khwmhdyekbjnruzxeizs , final java.io.File kehlfegdnqjrascpqvvv , final java.lang.String gqvmwjyuhxsofleockaz ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( khwmhdyekbjnruzxeizs , kehlfegdnqjrascpqvvv , gqvmwjyuhxsofleockaz ) ; } } ) ; } <s> public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest khwmhdyekbjnruzxeizs , final java.io.File kehlfegdnqjrascpqvvv , final java.lang.String gqvmwjyuhxsofleockaz ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( khwmhdyekbjnruzxeizs , kehlfegdnqjrascpqvvv , gqvmwjyuhxsofleockaz ) ; } } ) ; } <s> fix bug download video
fix_before_refactoring: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final android.content.Context context , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , context , url ) ; } } ) ; }
fix_after_refactoring: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest khwmhdyekbjnruzxeizs , final android.content.Context context , final java.lang.String gqvmwjyuhxsofleockaz ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( khwmhdyekbjnruzxeizs , context , gqvmwjyuhxsofleockaz ) ; } } ) ; }
× fix_prediction_before: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final java.io.File file , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , file , url ) ; } } ) ; }
× fix_prediction_after: public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest khwmhdyekbjnruzxeizs , final java.io.File kehlfegdnqjrascpqvvv , final java.lang.String gqvmwjyuhxsofleockaz ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( khwmhdyekbjnruzxeizs , kehlfegdnqjrascpqvvv , gqvmwjyuhxsofleockaz ) ; } } ) ; }

line_index: 336
bug_before_refactoring: public void decr ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } <s> public void decr ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } <s> Fix bug with rpc network
bug_after_refactoring: public void decr ( java.lang.String bdkthdycerfqlphbfwhe , int jurqbxylbzgnbmmbrmvt ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( bdkthdycerfqlphbfwhe . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } <s> public void decr ( java.lang.String bdkthdycerfqlphbfwhe , int jurqbxylbzgnbmmbrmvt ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( bdkthdycerfqlphbfwhe . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } <s> Fix bug with rpc network
fix_before_refactoring: public int decr ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } return 1 ; }
fix_after_refactoring: public int decr ( java.lang.String bdkthdycerfqlphbfwhe , int jurqbxylbzgnbmmbrmvt ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( bdkthdycerfqlphbfwhe . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } return 1 ; }
× fix_prediction_before: public void decr ( java.lang.String address , int port ) { synchronized ( this . getImages () ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } }
× fix_prediction_after: public void decr ( java.lang.String bdkthdycerfqlphbfwhe , int jurqbxylbzgnbmmbrmvt ) { if ( ( this . getImages () ) != null ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( bdkthdycerfqlphbfwhe . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } } }

line_index: 337
bug_before_refactoring: private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = mean ( array ) ; double sumOfDiffToMeanSq = 0 ; double length = array . size () ; for ( double i : array ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } <s> private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = mean ( array ) ; double sumOfDiffToMeanSq = 0 ; double length = array . size () ; for ( double i : array ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } <s> Buttons for collection data created  fixed bug in data collection
bug_after_refactoring: private double stdDev ( java.util.ArrayList < java.lang.Double > zrgczfpacapugtvzdich ) { double mean = mean ( zrgczfpacapugtvzdich ) ; double sumOfDiffToMeanSq = 0 ; double length = zrgczfpacapugtvzdich . size () ; for ( double i : zrgczfpacapugtvzdich ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } <s> private double stdDev ( java.util.ArrayList < java.lang.Double > zrgczfpacapugtvzdich ) { double mean = mean ( zrgczfpacapugtvzdich ) ; double sumOfDiffToMeanSq = 0 ; double length = zrgczfpacapugtvzdich . size () ; for ( double i : zrgczfpacapugtvzdich ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } <s> Buttons for collection data created  fixed bug in data collection
fix_before_refactoring: private double stdDev ( java.util.LinkedList < java.lang.Double > list ) { double mean = mean ( list ) ; double sumOfDiffToMeanSq = 0 ; double length = list . size () ; for ( double i : list ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; }
fix_after_refactoring: private double stdDev ( java.util.LinkedList < java.lang.Double > list ) { double mean = mean ( list ) ; double sumOfDiffToMeanSq = 0 ; double length = list . size () ; for ( double i : list ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; }
× fix_prediction_before: private double stdDev () { double mean = mean ( array ) ; double sumOfDiffToMeanSq = 0 ; double length = array . size () ; for ( double i : array ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; }
× fix_prediction_after: protected double stdDev ( java.util.ArrayList < java.lang.Double > zrgczfpacapugtvzdich ) { double mean = mean ( zrgczfpacapugtvzdich ) ; double sumOfDiffToMeanSq = 0 ; double length = zrgczfpacapugtvzdich . size () ; for ( double i : zrgczfpacapugtvzdich ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; }

line_index: 338
bug_before_refactoring: private javax.mail.Message [] searchMailbox ( javax.mail.Folder inbox ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return inbox . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } } <s> private javax.mail.Message [] searchMailbox ( javax.mail.Folder inbox ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return inbox . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } } <s> Fixed a warning  but not the NaN error
bug_after_refactoring: private javax.mail.Message [] searchMailbox ( javax.mail.Folder cayxsxifunzgiglotjqj ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return cayxsxifunzgiglotjqj . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } } <s> private javax.mail.Message [] searchMailbox ( javax.mail.Folder cayxsxifunzgiglotjqj ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return cayxsxifunzgiglotjqj . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } } <s> Fixed a warning  but not the NaN error
fix_before_refactoring: private javax.mail.Message [] searchMailbox ( javax.mail.Folder inbox ) throws javax.mail.MessagingException { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; return inbox . search ( searchTerm ) ; }
fix_after_refactoring: private javax.mail.Message [] searchMailbox ( javax.mail.Folder cayxsxifunzgiglotjqj ) throws javax.mail.MessagingException { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; return cayxsxifunzgiglotjqj . search ( searchTerm ) ; }
× fix_prediction_before: public javax.mail.Message [] searchMailbox ( javax.mail.Folder inbox ) { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return inbox . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } }
× fix_prediction_after: private javax.mail.Message [] searchMailbox () { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return cayxsxifunzgiglotjqj . search ( searchTerm ) ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } }

line_index: 339
bug_before_refactoring: public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; } <s> public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; } <s> Fix interrupt issue
bug_after_refactoring: public static byte [] read ( java.lang.String xiijhwdzfcczttfvnffl ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( xiijhwdzfcczttfvnffl ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; } <s> public static byte [] read ( java.lang.String xiijhwdzfcczttfvnffl ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( xiijhwdzfcczttfvnffl ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; } <s> Fix interrupt issue
fix_before_refactoring: public static byte [] read ( java.lang.String filePath ) throws java.lang.Exception { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } }
fix_after_refactoring: public static byte [] read ( java.lang.String xiijhwdzfcczttfvnffl ) throws java.lang.Exception { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( xiijhwdzfcczttfvnffl ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } }
× fix_prediction_before: public static byte [] read ( java.lang.String filePath ) throws java.io.IOException { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; }
× fix_prediction_after: public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; }

line_index: 340
bug_before_refactoring: @ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; } <s> @ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; } <s> Bug fix.
bug_after_refactoring: @ java.lang.Override public boolean equals ( final java.lang.Object eupeadtiusmabzmapjzg ) { if ( ( this ) == eupeadtiusmabzmapjzg ) { return true ; } if ( eupeadtiusmabzmapjzg == null ) { return false ; } if ( ! ( eupeadtiusmabzmapjzg instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( eupeadtiusmabzmapjzg ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; } <s> @ java.lang.Override public boolean equals ( final java.lang.Object eupeadtiusmabzmapjzg ) { if ( ( this ) == eupeadtiusmabzmapjzg ) { return true ; } if ( eupeadtiusmabzmapjzg == null ) { return false ; } if ( ! ( eupeadtiusmabzmapjzg instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( eupeadtiusmabzmapjzg ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; } <s> Bug fix.
fix_before_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( x ) != ( other.x ) ) { return false ; } if ( ( y ) != ( other.y ) ) { return false ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean equals ( java.lang.Object eupeadtiusmabzmapjzg ) { if ( ( this ) == eupeadtiusmabzmapjzg ) { return true ; } if ( eupeadtiusmabzmapjzg == null ) { return false ; } if ( ! ( eupeadtiusmabzmapjzg instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( eupeadtiusmabzmapjzg ) ) ; if ( ( x ) != ( other.x ) ) { return false ; } if ( ( y ) != ( other.y ) ) { return false ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; return ( id ) == ( other.id ) ; }
× fix_prediction_after: @ java.lang.Override public boolean equals ( final java.lang.Object eupeadtiusmabzmapjzg ) { if ( ( this ) == eupeadtiusmabzmapjzg ) { return true ; } if ( ! ( eupeadtiusmabzmapjzg instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( eupeadtiusmabzmapjzg ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; }

line_index: 341
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( assemblyId , description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( assemblyId , description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } <s> fixed locking issue
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{veowlqjsiklpyelnlnzs}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long veowlqjsiklpyelnlnzs , @ org.springframework.web.bind.annotation.RequestParam ( value = "bovuvxtsenvkyptutyxj" , required = false ) java.lang.String bovuvxtsenvkyptutyxj , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String cmefkrqssdosotnmncjt , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String vwdzfteuvwbavgxyuoed ) { if ( cmefkrqssdosotnmncjt == null ) cmefkrqssdosotnmncjt = "oneops-system" ; try { return dManager . exportDesign ( veowlqjsiklpyelnlnzs , bovuvxtsenvkyptutyxj ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{veowlqjsiklpyelnlnzs}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long veowlqjsiklpyelnlnzs , @ org.springframework.web.bind.annotation.RequestParam ( value = "bovuvxtsenvkyptutyxj" , required = false ) java.lang.String bovuvxtsenvkyptutyxj , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String cmefkrqssdosotnmncjt , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String vwdzfteuvwbavgxyuoed ) { if ( cmefkrqssdosotnmncjt == null ) cmefkrqssdosotnmncjt = "oneops-system" ; try { return dManager . exportDesign ( veowlqjsiklpyelnlnzs , bovuvxtsenvkyptutyxj ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } <s> fixed locking issue
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( assemblyId ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{veowlqjsiklpyelnlnzs}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long veowlqjsiklpyelnlnzs , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String cmefkrqssdosotnmncjt , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String vwdzfteuvwbavgxyuoed ) { if ( cmefkrqssdosotnmncjt == null ) cmefkrqssdosotnmncjt = "oneops-system" ; try { return dManager . exportDesign ( veowlqjsiklpyelnlnzs ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( assemblyId , description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{veowlqjsiklpyelnlnzs}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long veowlqjsiklpyelnlnzs , @ org.springframework.web.bind.annotation.RequestParam ( value = "bovuvxtsenvkyptutyxj" , required = false ) java.lang.String bovuvxtsenvkyptutyxj , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String cmefkrqssdosotnmncjt , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String vwdzfteuvwbavgxyuoed ) { if ( cmefkrqssdosotnmncjt == null ) cmefkrqssdosotnmncjt = "oneops-system" ; try { return dManager . exportDesign ( veowlqjsiklpyelnlnzs , bovuvxtsenvkyptutyxj ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } }

line_index: 342
bug_before_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } <s> @ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } <s> 3 Fix runtime error  - App displays GET /shift data from API call
bug_after_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > ctbswxeiycwticnocehs , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > dbhpigzjonkttrdkrtfh ) { int statusCode = dbhpigzjonkttrdkrtfh . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = dbhpigzjonkttrdkrtfh . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } <s> @ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > ctbswxeiycwticnocehs , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > dbhpigzjonkttrdkrtfh ) { int statusCode = dbhpigzjonkttrdkrtfh . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = dbhpigzjonkttrdkrtfh . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } <s> 3 Fix runtime error  - App displays GET /shift data from API call
fix_before_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > call , retrofit2.Response < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; }
fix_after_refactoring: @ java.lang.Override public void onResponse ( retrofit2.Call < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > ctbswxeiycwticnocehs , retrofit2.Response < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > dbhpigzjonkttrdkrtfh ) { int statusCode = dbhpigzjonkttrdkrtfh . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = dbhpigzjonkttrdkrtfh . body () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; }
× fix_prediction_before: @ java.lang.Override public void onResponse ( retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; }
× fix_prediction_after: @ java.lang.Override public void onResponse ( retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > dbhpigzjonkttrdkrtfh ) { int statusCode = dbhpigzjonkttrdkrtfh . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = dbhpigzjonkttrdkrtfh . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; }

line_index: 343
bug_before_refactoring: @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } <s> @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } <s> Fixing formatting issues and findbugs
bug_after_refactoring: @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > apvqrxgkdfjvgnpklcij , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > lkffmdnafwqsalfqvnkm ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( apvqrxgkdfjvgnpklcij ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { lkffmdnafwqsalfqvnkm . addAll ( ght . getGitHubRepositories () ) ; } } <s> @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > apvqrxgkdfjvgnpklcij , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > lkffmdnafwqsalfqvnkm ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( apvqrxgkdfjvgnpklcij ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { lkffmdnafwqsalfqvnkm . addAll ( ght . getGitHubRepositories () ) ; } } <s> Fixing formatting issues and findbugs
fix_before_refactoring: @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { if ( job instanceof jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } }
fix_after_refactoring: @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > apvqrxgkdfjvgnpklcij , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > lkffmdnafwqsalfqvnkm ) { if ( apvqrxgkdfjvgnpklcij instanceof jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( apvqrxgkdfjvgnpklcij ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { lkffmdnafwqsalfqvnkm . addAll ( ght . getGitHubRepositories () ) ; } } }
× fix_prediction_before: @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; if ( p != null ) { for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } }
× fix_prediction_after: @ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > apvqrxgkdfjvgnpklcij , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > lkffmdnafwqsalfqvnkm ) { if ( ( apvqrxgkdfjvgnpklcij ) != null ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( apvqrxgkdfjvgnpklcij ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { lkffmdnafwqsalfqvnkm . addAll ( ght . getGitHubRepositories () ) ; } } }

line_index: 344
bug_before_refactoring: private long _daysLate ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } <s> private long _daysLate ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } <s> Merge pull request #16 from vutamhoan/master  Refactor CardSched  fix 1 small bug  add more Test case
bug_after_refactoring: private long _daysLate ( com.born2go.lazzybee.db.Card szudqnnergeyafdqspwa ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( szudqnnergeyafdqspwa . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = szudqnnergeyafdqspwa . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } <s> private long _daysLate ( com.born2go.lazzybee.db.Card szudqnnergeyafdqspwa ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( szudqnnergeyafdqspwa . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = szudqnnergeyafdqspwa . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } <s> Merge pull request #16 from vutamhoan/master  Refactor CardSched  fix 1 small bug  add more Test case
fix_before_refactoring: protected long _daysLate ( com.born2go.lazzybee.db.Card card ) { if ( ( card . getQueue () ) != ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) return 0 ; long due = card . getDue () ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; }
fix_after_refactoring: protected long _daysLate ( com.born2go.lazzybee.db.Card szudqnnergeyafdqspwa ) { if ( ( szudqnnergeyafdqspwa . getQueue () ) != ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) return 0 ; long due = szudqnnergeyafdqspwa . getDue () ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; }
× fix_prediction_before: protected long _daysLate ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; }
× fix_prediction_after: protected long _daysLate ( com.born2go.lazzybee.db.Card szudqnnergeyafdqspwa ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( szudqnnergeyafdqspwa . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = szudqnnergeyafdqspwa . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; }

line_index: 346
bug_before_refactoring: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . deleteNodeByNodeId ( nodeId , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } <s> @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . deleteNodeByNodeId ( nodeId , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } <s> Merge pull request #64 from gwssi-tax/bug-hot-fix  用户项目无法删除Bug修复  节点无法删除Bug修复
bug_after_refactoring: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{lcxfrwbywhbdtrdvdpfv}" , method = RequestMethod.DELETE , ikmjyneyilazexxwcchys = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String ikmjyneyilazexxwcchy , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String lcxfrwbywhbdtrdvdpfv ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( ikmjyneyilazexxwcchy ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . deleteNodeByNodeId ( lcxfrwbywhbdtrdvdpfv , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } <s> @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{lcxfrwbywhbdtrdvdpfv}" , method = RequestMethod.DELETE , ikmjyneyilazexxwcchys = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String ikmjyneyilazexxwcchy , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String lcxfrwbywhbdtrdvdpfv ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( ikmjyneyilazexxwcchy ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . deleteNodeByNodeId ( lcxfrwbywhbdtrdvdpfv , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } <s> Merge pull request #64 from gwssi-tax/bug-hot-fix  用户项目无法删除Bug修复  节点无法删除Bug修复
fix_before_refactoring: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; java.util.Map < java.lang.String , java.lang.String > result = nodeService . deleteNodeByNodeId ( nodeId , user ) ; return result ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } }
fix_after_refactoring: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{lcxfrwbywhbdtrdvdpfv}" , method = RequestMethod.DELETE , ikmjyneyilazexxwcchys = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String ikmjyneyilazexxwcchy , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String lcxfrwbywhbdtrdvdpfv ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( ikmjyneyilazexxwcchy ) ; java.util.Map < java.lang.String , java.lang.String > result = nodeService . deleteNodeByNodeId ( lcxfrwbywhbdtrdvdpfv , user ) ; return result ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } }
× fix_prediction_before: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; java.util.Map < java.lang.String , java.lang.String > node = nodeService . deleteNodeByNodeId ( nodeId , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } }
× fix_prediction_after: @ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{lcxfrwbywhbdtrdvdpfv}" , method = RequestMethod.DELETE , ikmjyneyilazexxwcchys = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String ikmjyneyilazexxwcchy , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String lcxfrwbywhbdtrdvdpfv ) throws java.lang.Exception { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( ikmjyneyilazexxwcchy ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . deleteNodeByNodeId ( lcxfrwbywhbdtrdvdpfv , user ) ; node . setChildren ( null ) ; node . setParent ( null ) ; return node ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } }

line_index: 347
bug_before_refactoring: @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child . getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; } <s> @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child . getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; } <s> Major bug fixes in finding tags methods
bug_after_refactoring: @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml pnzmmbpvxdlkvbkbxaet ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = pnzmmbpvxdlkvbkbxaet . getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( pnzmmbpvxdlkvbkbxaet ) ; } return true ; } <s> @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml pnzmmbpvxdlkvbkbxaet ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = pnzmmbpvxdlkvbkbxaet . getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( pnzmmbpvxdlkvbkbxaet ) ; } return true ; } <s> Major bug fixes in finding tags methods
fix_before_refactoring: @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attributeValue . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml pnzmmbpvxdlkvbkbxaet ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = pnzmmbpvxdlkvbkbxaet . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attributeValue . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( pnzmmbpvxdlkvbkbxaet ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attributeValue = child . getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( attributeValue != null ) && ( attributeValue . equals ( attributeValue . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; return true ; } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml pnzmmbpvxdlkvbkbxaet ) { if ( ( attributeValue != null ) && ( attributeName . equals ( pnzmmbpvxdlkvbkbxaet . getAttributeName () ) ) ) { matchingTags . add ( pnzmmbpvxdlkvbkbxaet ) ; } return true ; }

line_index: 348
bug_before_refactoring: public char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } <s> public char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } <s> Fixed small bugs working on mutation bug
bug_after_refactoring: public char [] cross ( creatures.CharCreature jytzaruttntnyixdyyot , creatures.CharCreature lmyniwedlfimmixgocze ) { char [] output = new char [ jytzaruttntnyixdyyot.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = jytzaruttntnyixdyyot.chrom [ i ] ; } else { output [ i ] = lmyniwedlfimmixgocze.chrom [ i ] ; } } return output ; } <s> public char [] cross ( creatures.CharCreature jytzaruttntnyixdyyot , creatures.CharCreature lmyniwedlfimmixgocze ) { char [] output = new char [ jytzaruttntnyixdyyot.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = jytzaruttntnyixdyyot.chrom [ i ] ; } else { output [ i ] = lmyniwedlfimmixgocze.chrom [ i ] ; } } return output ; } <s> Fixed small bugs working on mutation bug
fix_before_refactoring: public static char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; }
fix_after_refactoring: public static char [] cross ( creatures.CharCreature jytzaruttntnyixdyyot , creatures.CharCreature lmyniwedlfimmixgocze ) { char [] output = new char [ jytzaruttntnyixdyyot.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = jytzaruttntnyixdyyot.chrom [ i ] ; } else { output [ i ] = lmyniwedlfimmixgocze.chrom [ i ] ; } } return output ; }
× fix_prediction_before: public char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; }
× fix_prediction_after: public char [] cross ( creatures.CharCreature jytzaruttntnyixdyyot , creatures.CharCreature lmyniwedlfimmixgocze ) { char [] output = new char [ jytzaruttntnyixdyyot.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { output [ i ] = jytzaruttntnyixdyyot.chrom [ i ] ; } output [ i ] = lmyniwedlfimmixgocze.chrom [ i ] ; return output ; }

line_index: 349
bug_before_refactoring: public static boolean pathIsValid ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } <s> public static boolean pathIsValid ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } <s> - Centralize error messages - Centralize validation - Fix bug where I was saving JAVA_HOME into the wrong variable key
bug_after_refactoring: public static boolean pathIsValid ( java.lang.String supvgudohghurzmsdiob ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( supvgudohghurzmsdiob , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } <s> public static boolean pathIsValid ( java.lang.String supvgudohghurzmsdiob ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( supvgudohghurzmsdiob , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } <s> - Centralize error messages - Centralize validation - Fix bug where I was saving JAVA_HOME into the wrong variable key
fix_before_refactoring: private static boolean pathIsValid ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; }
fix_after_refactoring: private static boolean pathIsValid ( java.lang.String supvgudohghurzmsdiob ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( supvgudohghurzmsdiob , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; }
× fix_prediction_before: public static boolean pathIsValid ( java.lang.String strPath ) { if ( ( com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) != null ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath. JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } } return true ; }
× fix_prediction_after: public static boolean pathIsValid ( java.lang.String supvgudohghurzmsdiob , java.lang.String path ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( supvgudohghurzmsdiob , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; }

line_index: 350
bug_before_refactoring: public void ShareData ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } <s> public void ShareData ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } <s> Small bugs fixed
bug_after_refactoring: public void ShareData ( java.lang.String rirdvdtynjnwroeksrac ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , rirdvdtynjnwroeksrac ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } <s> public void ShareData ( java.lang.String rirdvdtynjnwroeksrac ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , rirdvdtynjnwroeksrac ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } <s> Small bugs fixed
fix_before_refactoring: public void ShareData ( java.lang.String content , java.lang.String title ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , ( ( title + "\n" ) + content ) ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; }
fix_after_refactoring: public void ShareData ( java.lang.String content , java.lang.String title ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , ( ( title + "\n" ) + content ) ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; }
× fix_prediction_before: public void ShareData ( java.lang.String data ) { if ( data != null ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } }
× fix_prediction_after: public void ShareData ( java.lang.String text , java.lang.String rirdvdtynjnwroeksrac ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , text ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; }

line_index: 351
bug_before_refactoring: public void setNewMetric ( java.lang.String newPath , java.lang.String metricName ) { this . path = newPath ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } <s> public void setNewMetric ( java.lang.String newPath , java.lang.String metricName ) { this . path = newPath ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } <s> bug fixed
bug_after_refactoring: public void setNewMetric ( java.lang.String jonjddswhduxvvocaajb , java.lang.String uwpticftfmrkearjickx ) { this . path = jonjddswhduxvvocaajb ; this . uwpticftfmrkearjickx = uwpticftfmrkearjickx ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , uwpticftfmrkearjickx ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } <s> public void setNewMetric ( java.lang.String jonjddswhduxvvocaajb , java.lang.String uwpticftfmrkearjickx ) { this . path = jonjddswhduxvvocaajb ; this . uwpticftfmrkearjickx = uwpticftfmrkearjickx ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , uwpticftfmrkearjickx ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } <s> bug fixed
fix_before_refactoring: public void setNewMetric ( java.lang.String newPath , java.lang.String fileName , java.lang.String metricName ) { this . filePath = newPath ; this . fileName = fileName ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; }
fix_after_refactoring: public void setNewMetric ( java.lang.String jonjddswhduxvvocaajb , java.lang.String fileName , java.lang.String uwpticftfmrkearjickx ) { this . filePath = jonjddswhduxvvocaajb ; this . fileName = fileName ; this . uwpticftfmrkearjickx = uwpticftfmrkearjickx ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , uwpticftfmrkearjickx ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; }
× fix_prediction_before: public void setNewMetric ( java.lang.String newPath , java.lang.String metricName ) { this . path = newPath ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; }
× fix_prediction_after: public void setNewMetric ( java.lang.String jonjddswhduxvvocaajb , java.lang.String uwpticftfmrkearjickx ) { this . path = jonjddswhduxvvocaajb ; this . uwpticftfmrkearjickx = uwpticftfmrkearjickx ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , uwpticftfmrkearjickx ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; }

line_index: 352
bug_before_refactoring: @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } <s> @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } <s> iteration 1 report (#26)  * generic editorconfig  * ER diagram (#22)  * structure  optimization (#20)  * enhancement  * ER  ER  * the description  * fix syntax bug  * Refactoring the project  * pom.xml enhancement  * enhance  * update README  * the frontend  * update frontend project  * iteration1 report
bug_after_refactoring: @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String fgxxotgtsiscjyspvcwd , @ se.sjtu.formfoss.controller.RequestParam java.lang.String sodzylrvvoyigcosmmhp , @ se.sjtu.formfoss.controller.RequestParam java.lang.String yucasgqcfedleiowlehm , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String iakkhuevjyjockdzyekf ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( fgxxotgtsiscjyspvcwd ) ; newUser . setUserPassword ( sodzylrvvoyigcosmmhp ) ; newUser . setUserEmail ( yucasgqcfedleiowlehm ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( iakkhuevjyjockdzyekf != null ) { newUser . setUserPhone ( iakkhuevjyjockdzyekf ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } <s> @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String fgxxotgtsiscjyspvcwd , @ se.sjtu.formfoss.controller.RequestParam java.lang.String sodzylrvvoyigcosmmhp , @ se.sjtu.formfoss.controller.RequestParam java.lang.String yucasgqcfedleiowlehm , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String iakkhuevjyjockdzyekf ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( fgxxotgtsiscjyspvcwd ) ; newUser . setUserPassword ( sodzylrvvoyigcosmmhp ) ; newUser . setUserEmail ( yucasgqcfedleiowlehm ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( iakkhuevjyjockdzyekf != null ) { newUser . setUserPhone ( iakkhuevjyjockdzyekf ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } <s> iteration 1 report (#26)  * generic editorconfig  * ER diagram (#22)  * structure  optimization (#20)  * enhancement  * ER  ER  * the description  * fix syntax bug  * Refactoring the project  * pom.xml enhancement  * enhance  * update README  * the frontend  * update frontend project  * iteration1 report
fix_before_refactoring: @ se.sjtu.formfoss.controller.RequestMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; }
fix_after_refactoring: @ se.sjtu.formfoss.controller.RequestMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String fgxxotgtsiscjyspvcwd , @ se.sjtu.formfoss.controller.RequestParam java.lang.String sodzylrvvoyigcosmmhp , @ se.sjtu.formfoss.controller.RequestParam java.lang.String yucasgqcfedleiowlehm , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String iakkhuevjyjockdzyekf ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( fgxxotgtsiscjyspvcwd ) ; newUser . setUserPassword ( sodzylrvvoyigcosmmhp ) ; newUser . setUserEmail ( yucasgqcfedleiowlehm ) ; if ( iakkhuevjyjockdzyekf != null ) { newUser . setUserPhone ( iakkhuevjyjockdzyekf ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; }
× fix_prediction_before: @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; newUser . setUserPhone ( userPhone ) ; userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; }
× fix_prediction_after: @ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String fgxxotgtsiscjyspvcwd , @ se.sjtu.formfoss.controller.RequestParam java.lang.String sodzylrvvoyigcosmmhp , @ se.sjtu.formfoss.controller.RequestParam java.lang.String yucasgqcfedleiowlehm , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String iakkhuevjyjockdzyekf ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( fgxxotgtsiscjyspvcwd ) ; newUser . setUserPassword ( sodzylrvvoyigcosmmhp ) ; newUser . setUserEmail ( yucasgqcfedleiowlehm ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; }

line_index: 353
bug_before_refactoring: public entities.Tile remove ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( level ) ; } return oldTile ; } <s> public entities.Tile remove ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( level ) ; } return oldTile ; } <s> fixing error
bug_after_refactoring: public entities.Tile remove ( entities.AbstractLevel ieniremzdpcwlojcuboe ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( ieniremzdpcwlojcuboe ) ; } return oldTile ; } <s> public entities.Tile remove ( entities.AbstractLevel ieniremzdpcwlojcuboe ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( ieniremzdpcwlojcuboe ) ; } return oldTile ; } <s> fixing error
fix_before_refactoring: public entities.Tile remove () { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove () ; } return oldTile ; }
fix_after_refactoring: public entities.Tile remove () { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove () ; } return oldTile ; }
× fix_prediction_before: public entities.Tile remove ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( level ) ; } this . selected = false ; return oldTile ; }
× fix_prediction_after: public entities.Tile remove ( entities.AbstractLevel ieniremzdpcwlojcuboe ) { if ( this . selected ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( ieniremzdpcwlojcuboe ) ; } return oldTile ; } return this . tile ; }

line_index: 354
bug_before_refactoring: public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= boardRows ) { return true ; } } } return false ; } <s> public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= boardRows ) { return true ; } } } return false ; } <s> bugfix
bug_after_refactoring: public boolean outsideBoard ( int abusrtlwmxdewlnoiuun ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= abusrtlwmxdewlnoiuun ) { return true ; } } } return false ; } <s> public boolean outsideBoard ( int abusrtlwmxdewlnoiuun ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= abusrtlwmxdewlnoiuun ) { return true ; } } } return false ; } <s> bugfix
fix_before_refactoring: public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } }
fix_after_refactoring: public boolean outsideBoard ( int abusrtlwmxdewlnoiuun ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= abusrtlwmxdewlnoiuun ) ) { return true ; } } }
× fix_prediction_before: public boolean outsideBoard () { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= boardRows ) { return true ; } } } return false ; }
× fix_prediction_after: public boolean outsideBoard () { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= abusrtlwmxdewlnoiuun ) { return true ; } } } return false ; }

line_index: 355
bug_before_refactoring: private double average ( java.util.Date [] dates , double [] returns , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = skip ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } <s> private double average ( java.util.Date [] dates , double [] returns , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = skip ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } <s> Fixed volatility of investment vehicles if sold during reporting period  If an investment vehicle is sold during the reporting period  the returns are flat and therefore must be ignored when calculating the volatility.  Issue: #244
bug_after_refactoring: private double average ( java.util.Date [] mggvslatvoewqfuktczt , double [] ucklnqxctljrwomfwvvv , int ngmpaurhcmspgklnwxgg , java.util.function.Predicate < java.util.Date > pdspbaoexujnkcycfbpi ) { double sum = 0 ; int count = 0 ; for ( int ii = ngmpaurhcmspgklnwxgg ; ii < ( ucklnqxctljrwomfwvvv.length ) ; ii ++ ) { if ( ! ( pdspbaoexujnkcycfbpi . test ( mggvslatvoewqfuktczt [ ii ] ) ) ) continue; sum += ucklnqxctljrwomfwvvv [ ii ] ; count ++ ; } return sum / count ; } <s> private double average ( java.util.Date [] mggvslatvoewqfuktczt , double [] ucklnqxctljrwomfwvvv , int ngmpaurhcmspgklnwxgg , java.util.function.Predicate < java.util.Date > pdspbaoexujnkcycfbpi ) { double sum = 0 ; int count = 0 ; for ( int ii = ngmpaurhcmspgklnwxgg ; ii < ( ucklnqxctljrwomfwvvv.length ) ; ii ++ ) { if ( ! ( pdspbaoexujnkcycfbpi . test ( mggvslatvoewqfuktczt [ ii ] ) ) ) continue; sum += ucklnqxctljrwomfwvvv [ ii ] ; count ++ ; } return sum / count ; } <s> Fixed volatility of investment vehicles if sold during reporting period  If an investment vehicle is sold during the reporting period  the returns are flat and therefore must be ignored when calculating the volatility.  Issue: #244
fix_before_refactoring: private double average ( double [] returns , java.util.function.Predicate < java.lang.Integer > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = 0 ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( ii ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; }
fix_after_refactoring: private double average ( double [] ucklnqxctljrwomfwvvv , java.util.function.Predicate < java.lang.Integer > pdspbaoexujnkcycfbpi ) { double sum = 0 ; int count = 0 ; for ( int ii = 0 ; ii < ( ucklnqxctljrwomfwvvv.length ) ; ii ++ ) { if ( ! ( pdspbaoexujnkcycfbpi . test ( ii ) ) ) continue; sum += ucklnqxctljrwomfwvvv [ ii ] ; count ++ ; } return sum / count ; }
× fix_prediction_before: private double average ( java.util.Date [] dates , double [] returns , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; for ( int ii = skip ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; }
× fix_prediction_after: private double average ( java.util.Date [] mggvslatvoewqfuktczt , double [] ucklnqxctljrwomfwvvv , int ngmpaurhcmspgklnwxgg , java.util.function.Predicate < java.util.Date > pdspbaoexujnkcycfbpi ) { double sum = 0 ; int count = 0 ; for ( int ii = ngmpaurhcmspgklnwxgg ; ii < ( ucklnqxctljrwomfwvvv.length ) ; ii ++ ) { if ( ! ( pdspbaoexujnkcycfbpi . test ( mggvslatvoewqfuktczt [ ii ] ) ) ) continue; sum += ucklnqxctljrwomfwvvv [ ii ] ; count ++ ; } return sum / count ; }

line_index: 356
bug_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( event . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } } <s> @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( event . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } } <s> Added argument classes to LangKey  bugfixes
bug_after_refactoring: @ net.minecraftforge.fml.common.yvkkyowdmlpopetawoijhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.yvkkyowdmlpopetawoijs.player.ForgePlayerConfigEvent yvkkyowdmlpopetawoij ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( yvkkyowdmlpopetawoij . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { yvkkyowdmlpopetawoij . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; yvkkyowdmlpopetawoij . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } } <s> @ net.minecraftforge.fml.common.yvkkyowdmlpopetawoijhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.yvkkyowdmlpopetawoijs.player.ForgePlayerConfigEvent yvkkyowdmlpopetawoij ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( yvkkyowdmlpopetawoij . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { yvkkyowdmlpopetawoij . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; yvkkyowdmlpopetawoij . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } } <s> Added argument classes to LangKey  bugfixes
fix_before_refactoring: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = com.latmod.modularpipes.data.ModularPipesPlayerData . get ( event . getPlayer () ) ; event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; }
fix_after_refactoring: @ net.minecraftforge.fml.common.yvkkyowdmlpopetawoijhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.yvkkyowdmlpopetawoijs.player.ForgePlayerConfigEvent yvkkyowdmlpopetawoij ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = com.latmod.modularpipes.data.ModularPipesPlayerData . get ( yvkkyowdmlpopetawoij . getPlayer () ) ; yvkkyowdmlpopetawoij . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; yvkkyowdmlpopetawoij . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; }
× fix_prediction_before: @ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static boolean playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( event . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; return true ; } return false ; }
× fix_prediction_after: @ net.minecraftforge.fml.common.yvkkyowdmlpopetawoijhandler.SubscribeEvent public static boolean playerSettings ( com.feed_the_beast.ftbl.api.yvkkyowdmlpopetawoijs.player.ForgePlayerConfigEvent yvkkyowdmlpopetawoij ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( yvkkyowdmlpopetawoij . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { yvkkyowdmlpopetawoij . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; yvkkyowdmlpopetawoij . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; return true ; } return false ; }

line_index: 357
bug_before_refactoring: @ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; } <s> @ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; } <s> fix bug in soft-clip evaluation  and relax quality test a little
bug_after_refactoring: @ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.bwpfwgqsmetrgwmajlde.GATKRead bwpfwgqsmetrgwmajlde , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > mpigikujkhajbnplguwf ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = bwpfwgqsmetrgwmajlde . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , bwpfwgqsmetrgwmajlde ) ) { mpigikujkhajbnplguwf . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( bwpfwgqsmetrgwmajlde , bwpfwgqsmetrgwmajldeMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , bwpfwgqsmetrgwmajlde ) ) { mpigikujkhajbnplguwf . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( bwpfwgqsmetrgwmajlde , bwpfwgqsmetrgwmajldeMetadata , false ) ) ; } checkBigIndel ( cigarElements , bwpfwgqsmetrgwmajlde , mpigikujkhajbnplguwf ) ; } <s> @ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.bwpfwgqsmetrgwmajlde.GATKRead bwpfwgqsmetrgwmajlde , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > mpigikujkhajbnplguwf ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = bwpfwgqsmetrgwmajlde . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , bwpfwgqsmetrgwmajlde ) ) { mpigikujkhajbnplguwf . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( bwpfwgqsmetrgwmajlde , bwpfwgqsmetrgwmajldeMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , bwpfwgqsmetrgwmajlde ) ) { mpigikujkhajbnplguwf . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( bwpfwgqsmetrgwmajlde , bwpfwgqsmetrgwmajldeMetadata , false ) ) ; } checkBigIndel ( cigarElements , bwpfwgqsmetrgwmajlde , mpigikujkhajbnplguwf ) ; } <s> fix bug in soft-clip evaluation  and relax quality test a little
fix_before_refactoring: private void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; }
fix_after_refactoring: private void checkForSplitRead ( final org.broadinstitute.hellbender.utils.bwpfwgqsmetrgwmajlde.GATKRead bwpfwgqsmetrgwmajlde , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > mpigikujkhajbnplguwf ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = bwpfwgqsmetrgwmajlde . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , bwpfwgqsmetrgwmajlde ) ) { mpigikujkhajbnplguwf . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( bwpfwgqsmetrgwmajlde , bwpfwgqsmetrgwmajldeMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , bwpfwgqsmetrgwmajlde ) ) { mpigikujkhajbnplguwf . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( bwpfwgqsmetrgwmajlde , bwpfwgqsmetrgwmajldeMetadata , false ) ) ; } checkBigIndel ( cigarElements , bwpfwgqsmetrgwmajlde , mpigikujkhajbnplguwf ) ; }
× fix_prediction_before: @ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < htsjdk.samtools.CigarElement > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; }
× fix_prediction_after: @ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.bwpfwgqsmetrgwmajlde.GATKRead bwpfwgqsmetrgwmajlde , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > mpigikujkhajbnplguwf ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = bwpfwgqsmetrgwmajlde . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , bwpfwgqsmetrgwmajlde ) ) { mpigikujkhajbnplguwf . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( bwpfwgqsmetrgwmajlde , bwpfwgqsmetrgwmajldeMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , bwpfwgqsmetrgwmajlde ) ) { mpigikujkhajbnplguwf . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( bwpfwgqsmetrgwmajlde , bwpfwgqsmetrgwmajldeMetadata , false ) ) ; } checkBigIndel ( cigarElements , bwpfwgqsmetrgwmajlde , mpigikujkhajbnplguwf ) ; }

line_index: 358
bug_before_refactoring: private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } <s> private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } <s> Bugfix for sharedquad sprites
bug_after_refactoring: private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper wfrnndwygpqlydjovqzn , int ezqclwdlyvaoxyedykgn ) { for ( int i = 0 ; i < ezqclwdlyvaoxyedykgn ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( wfrnndwygpqlydjovqzn , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } <s> private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper wfrnndwygpqlydjovqzn , int ezqclwdlyvaoxyedykgn ) { for ( int i = 0 ; i < ezqclwdlyvaoxyedykgn ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( wfrnndwygpqlydjovqzn , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } <s> Bugfix for sharedquad sprites
fix_before_refactoring: private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount , int index ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , ( index + i ) ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } }
fix_after_refactoring: private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper wfrnndwygpqlydjovqzn , int ezqclwdlyvaoxyedykgn , int index ) { for ( int i = 0 ; i < ezqclwdlyvaoxyedykgn ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( wfrnndwygpqlydjovqzn , attributeData , ( index + i ) ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } }
× fix_prediction_before: protected void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } }
× fix_prediction_after: private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper wfrnndwygpqlydjovqzn , int ezqclwdlyvaoxyedykgn ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( wfrnndwygpqlydjovqzn , attributeData , i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } }

line_index: 359
bug_before_refactoring: @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( aRoom . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( other . getCheckInDate () ) ) && ( checkOut . isBefore ( other . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( other . getCheckOutDate () ) ) return false ; } return true ; } <s> @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( aRoom . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( other . getCheckInDate () ) ) && ( checkOut . isBefore ( other . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( other . getCheckOutDate () ) ) return false ; } return true ; } <s> Fixing last issues from the first part -- Denis
bug_after_refactoring: @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation fdzjoevpgncrgfjahiql ) { if ( ( aRoom . getNumber () ) == ( fdzjoevpgncrgfjahiql . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( fdzjoevpgncrgfjahiql . getCheckInDate () ) ) && ( checkOut . isBefore ( fdzjoevpgncrgfjahiql . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( fdzjoevpgncrgfjahiql . getCheckOutDate () ) ) return false ; } return true ; } <s> @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation fdzjoevpgncrgfjahiql ) { if ( ( aRoom . getNumber () ) == ( fdzjoevpgncrgfjahiql . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( fdzjoevpgncrgfjahiql . getCheckInDate () ) ) && ( checkOut . isBefore ( fdzjoevpgncrgfjahiql . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( fdzjoevpgncrgfjahiql . getCheckOutDate () ) ) return false ; } return true ; } <s> Fixing last issues from the first part -- Denis
fix_before_refactoring: @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( this . equals ( other ) ) return true ; if ( ( this . checkIn . isBefore ( other . getCheckOutDate () ) ) && ( this . checkOut . isBefore ( other . getCheckInDate () ) ) ) return true ; return false ; }
fix_after_refactoring: @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation fdzjoevpgncrgfjahiql ) { if ( this . equals ( fdzjoevpgncrgfjahiql ) ) return true ; if ( ( this . checkIn . isBefore ( fdzjoevpgncrgfjahiql . getCheckOutDate () ) ) && ( this . checkOut . isBefore ( fdzjoevpgncrgfjahiql . getCheckInDate () ) ) ) return true ; return false ; }
× fix_prediction_before: @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( aRoom . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( other . getCheckInDate () ) ) && ( checkOut . isBefore ( other . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( other . getCheckOutDate () ) ) return false ; } return true ; }
× fix_prediction_after: @ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation fdzjoevpgncrgfjahiql ) { if ( ( checkIn . isAfter ( fdzjoevpgncrgfjahiql . getCheckInDate () ) ) && ( checkOut . isBefore ( fdzjoevpgncrgfjahiql . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( fdzjoevpgncrgfjahiql . getCheckOutDate () ) ) return false ; return true ; }

line_index: 360
bug_before_refactoring: public static java.sql.ResultSet getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } <s> public static java.sql.ResultSet getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } <s> fixed DBConnect issue with retrieving data from the registry
bug_after_refactoring: public static java.sql.ResultSet getFromDataBase ( java.lang.String agkztjrkkiiscobqzcpz ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( agkztjrkkiiscobqzcpz ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } <s> public static java.sql.ResultSet getFromDataBase ( java.lang.String agkztjrkkiiscobqzcpz ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( agkztjrkkiiscobqzcpz ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } <s> fixed DBConnect issue with retrieving data from the registry
fix_before_refactoring: public java.sql.ResultSet getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; }
fix_after_refactoring: public java.sql.ResultSet getFromDataBase ( java.lang.String agkztjrkkiiscobqzcpz ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( agkztjrkkiiscobqzcpz ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; }
× fix_prediction_before: public static java.sql.ResultSet getFromDataBase ( java.lang.String url , java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; }
× fix_prediction_after: public static java.sql.ResultSet getFromDataBase ( java.lang.String url , java.lang.String agkztjrkkiiscobqzcpz ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( agkztjrkkiiscobqzcpz ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; }

line_index: 361
bug_before_refactoring: public final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; } <s> public final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; } <s> Possible fix for Issue #8 : readCharacter() not returning
bug_after_refactoring: public final int readCharacter ( final char . . . odsprszqfimnxgogjfhk ) throws java.io.IOException { char c ; java.util.Arrays . sort ( odsprszqfimnxgogjfhk ) ; while ( ( java.util.Arrays . binarySearch ( odsprszqfimnxgogjfhk , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; } <s> public final int readCharacter ( final char . . . odsprszqfimnxgogjfhk ) throws java.io.IOException { char c ; java.util.Arrays . sort ( odsprszqfimnxgogjfhk ) ; while ( ( java.util.Arrays . binarySearch ( odsprszqfimnxgogjfhk , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; } <s> Possible fix for Issue #8 : readCharacter() not returning
fix_before_refactoring: public final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharacter () ) ) ) ) ) < 0 ) {} return c ; }
fix_after_refactoring: public final int readCharacter ( final char . . . odsprszqfimnxgogjfhk ) throws java.io.IOException { char c ; java.util.Arrays . sort ( odsprszqfimnxgogjfhk ) ; while ( ( java.util.Arrays . binarySearch ( odsprszqfimnxgogjfhk , ( c = ( ( char ) ( readCharacter () ) ) ) ) ) < 0 ) {} return c ; }
× fix_prediction_before: private final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; }
× fix_prediction_after: public final int readCharacter ( final char . . . odsprszqfimnxgogjfhk ) throws java.io.IOException { int c ; java.util.Arrays . sort ( odsprszqfimnxgogjfhk ) ; while ( ( java.util.Arrays . binarySearch ( odsprszqfimnxgogjfhk , ( c = ( ( char ) ( readCharater () ) ) ) ) < 0 ) {} return c ; }

line_index: 363
bug_before_refactoring: protected static org.olap4j.mdx.IdentifierNode getIdentifier ( org.saiku.query.AbstractQuerySet . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] . getName () ) ; } else { identifier += "_" + ( identifiers [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } <s> protected static org.olap4j.mdx.IdentifierNode getIdentifier ( org.saiku.query.AbstractQuerySet . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] . getName () ) ; } else { identifier += "_" + ( identifiers [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } <s> fix hierarchy unique name issue
bug_after_refactoring: protected static org.olap4j.mdx.IdentifierNode getIdentifier ( org.saiku.query.AbstractQuerySet . . . leuxchmzaebvbewzkaxl ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( leuxchmzaebvbewzkaxl.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( leuxchmzaebvbewzkaxl [ 0 ] . getName () ) ; } else { identifier += "_" + ( leuxchmzaebvbewzkaxl [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } <s> protected static org.olap4j.mdx.IdentifierNode getIdentifier ( org.saiku.query.AbstractQuerySet . . . leuxchmzaebvbewzkaxl ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( leuxchmzaebvbewzkaxl.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( leuxchmzaebvbewzkaxl [ 0 ] . getName () ) ; } else { identifier += "_" + ( leuxchmzaebvbewzkaxl [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } <s> fix hierarchy unique name issue
fix_before_refactoring: protected static org.olap4j.mdx.IdentifierNode getIdentifier ( java.lang.String . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] ) ; } else { identifier += "_" + ( identifiers [ i ] ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; }
fix_after_refactoring: protected static org.olap4j.mdx.IdentifierNode getIdentifier ( java.lang.String . . . leuxchmzaebvbewzkaxl ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( leuxchmzaebvbewzkaxl.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( leuxchmzaebvbewzkaxl [ 0 ] ) ; } else { identifier += "_" + ( leuxchmzaebvbewzkaxl [ i ] ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; }
× fix_prediction_before: public static org.olap4j.mdx.IdentifierNode getIdentifier ( org.saiku.query.AbstractQuerySet . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] . getName () ) ; } else { identifier += "_" + ( identifiers [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; }
× fix_prediction_after: protected org.olap4j.mdx.IdentifierNode getIdentifier () { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( leuxchmzaebvbewzkaxl.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( leuxchmzaebvbewzkaxl [ 0 ] . getName () ) ; } else { identifier += "_" + ( leuxchmzaebvbewzkaxl [ i ] . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; }

line_index: 364
bug_before_refactoring: public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } <s> public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } <s> Fixed potential bug in TextureManager. MInor changes in GLMatrixStack(s).
bug_after_refactoring: public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode afeyecigubifgfoyyfuy ) { this . mMatrixMode = afeyecigubifgfoyyfuy ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + afeyecigubifgfoyyfuy ) + "'." ) ) ; } } <s> public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode afeyecigubifgfoyyfuy ) { this . mMatrixMode = afeyecigubifgfoyyfuy ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + afeyecigubifgfoyyfuy ) + "'." ) ) ; } } <s> Fixed potential bug in TextureManager. MInor changes in GLMatrixStack(s).
fix_before_refactoring: public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { if ( pMatrixMode != ( this . mMatrixMode ) ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } }
fix_after_refactoring: public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode afeyecigubifgfoyyfuy ) { if ( afeyecigubifgfoyyfuy != ( this . mMatrixMode ) ) { this . mMatrixMode = afeyecigubifgfoyyfuy ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + afeyecigubifgfoyyfuy ) + "'." ) ) ; } } }
× fix_prediction_before: public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { if ( pMatrixMode != null ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } }
× fix_prediction_after: public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode afeyecigubifgfoyyfuy ) { this . mMatrixMode = afeyecigubifgfoyyfuy ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + afeyecigubifgfoyyfuy ) + "'." ) ) ; } }

line_index: 366
bug_before_refactoring: private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( counterValue != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; } <s> private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( counterValue != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; } <s> :art: Fixed issue #31
bug_after_refactoring: private final java.lang.Float calculateRate ( final java.lang.Long ljvpvwhooetfjpzkyzrs , final java.util.concurrent.TimeUnit rkrfdtqkygqidwqxtcpr ) { java.lang.Float result = null ; if ( ljvpvwhooetfjpzkyzrs != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( ljvpvwhooetfjpzkyzrs * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , rkrfdtqkygqidwqxtcpr ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; } <s> private final java.lang.Float calculateRate ( final java.lang.Long ljvpvwhooetfjpzkyzrs , final java.util.concurrent.TimeUnit rkrfdtqkygqidwqxtcpr ) { java.lang.Float result = null ; if ( ljvpvwhooetfjpzkyzrs != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( ljvpvwhooetfjpzkyzrs * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , rkrfdtqkygqidwqxtcpr ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; } <s> :art: Fixed issue #31
fix_before_refactoring: private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.lang.Long durationInNs , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( ( ( counterValue != null ) && ( durationInNs != null ) ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } return result ; }
fix_after_refactoring: private final java.lang.Float calculateRate ( final java.lang.Long ljvpvwhooetfjpzkyzrs , final java.lang.Long durationInNs , final java.util.concurrent.TimeUnit rkrfdtqkygqidwqxtcpr ) { java.lang.Float result = null ; if ( ( ( ljvpvwhooetfjpzkyzrs != null ) && ( durationInNs != null ) ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( ljvpvwhooetfjpzkyzrs * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , rkrfdtqkygqidwqxtcpr ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } return result ; }
× fix_prediction_before: private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.lang.Float timeUnit ) { java.lang.Float result = null ; if ( counterValue != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; }
× fix_prediction_after: public final java.lang.Float calculateRate ( final java.lang.Long ljvpvwhooetfjpzkyzrs , final java.util.concurrent.TimeUnit rkrfdtqkygqidwqxtcpr ) { java.lang.Float result = null ; if ( ljvpvwhooetfjpzkyzrs != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( ljvpvwhooetfjpzkyzrs * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , rkrfdtqkygqidwqxtcpr ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result ; }

line_index: 367
bug_before_refactoring: public static int S ( double t ) { int count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count != ( - 1 ) ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; int newCount = ( ( int ) ( ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } } <s> public static int S ( double t ) { int count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count != ( - 1 ) ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; int newCount = ( ( int ) ( ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } } <s> Fix SIR Model error
bug_after_refactoring: public sbyxebjvmaotayhmsvfhyabyxebjvmaotayhmsvfhyic inbyxebjvmaotayhmsvfhy S ( double byxebjvmaotayhmsvfhy ) { inbyxebjvmaotayhmsvfhy counbyxebjvmaotayhmsvfhy = SIRModel . gebyxebjvmaotayhmsvfhyRecord ( SIRModel.S_HIST , byxebjvmaotayhmsvfhy ) ; if ( counbyxebjvmaotayhmsvfhy != ( - 1 ) ) { rebyxebjvmaotayhmsvfhyurn counbyxebjvmaotayhmsvfhy ; } else { double lbyxebjvmaotayhmsvfhy = byxebjvmaotayhmsvfhy - ( SIRModel.DT ) ; inbyxebjvmaotayhmsvfhy newCounbyxebjvmaotayhmsvfhy = ( ( inbyxebjvmaotayhmsvfhy ) ( ( SIRModel . S ( lbyxebjvmaotayhmsvfhy ) ) + ( SIRModel . dS ( byxebjvmaotayhmsvfhy ) ) ) ) ; SIRModel.S_HIST . add ( newCounbyxebjvmaotayhmsvfhy ) ; rebyxebjvmaotayhmsvfhyurn newCounbyxebjvmaotayhmsvfhy ; } } <s> public sbyxebjvmaotayhmsvfhyabyxebjvmaotayhmsvfhyic inbyxebjvmaotayhmsvfhy S ( double byxebjvmaotayhmsvfhy ) { inbyxebjvmaotayhmsvfhy counbyxebjvmaotayhmsvfhy = SIRModel . gebyxebjvmaotayhmsvfhyRecord ( SIRModel.S_HIST , byxebjvmaotayhmsvfhy ) ; if ( counbyxebjvmaotayhmsvfhy != ( - 1 ) ) { rebyxebjvmaotayhmsvfhyurn counbyxebjvmaotayhmsvfhy ; } else { double lbyxebjvmaotayhmsvfhy = byxebjvmaotayhmsvfhy - ( SIRModel.DT ) ; inbyxebjvmaotayhmsvfhy newCounbyxebjvmaotayhmsvfhy = ( ( inbyxebjvmaotayhmsvfhy ) ( ( SIRModel . S ( lbyxebjvmaotayhmsvfhy ) ) + ( SIRModel . dS ( byxebjvmaotayhmsvfhy ) ) ) ) ; SIRModel.S_HIST . add ( newCounbyxebjvmaotayhmsvfhy ) ; rebyxebjvmaotayhmsvfhyurn newCounbyxebjvmaotayhmsvfhy ; } } <s> Fix SIR Model error
fix_before_refactoring: public static double S ( double t ) { double count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count >= 0 ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; double newCount = ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } }
fix_after_refactoring: public sbyxebjvmaotayhmsvfhyabyxebjvmaotayhmsvfhyic double S ( double byxebjvmaotayhmsvfhy ) { double counbyxebjvmaotayhmsvfhy = SIRModel . gebyxebjvmaotayhmsvfhyRecord ( SIRModel.S_HIST , byxebjvmaotayhmsvfhy ) ; if ( counbyxebjvmaotayhmsvfhy >= 0 ) { rebyxebjvmaotayhmsvfhyurn counbyxebjvmaotayhmsvfhy ; } else { double lbyxebjvmaotayhmsvfhy = byxebjvmaotayhmsvfhy - ( SIRModel.DT ) ; double newCounbyxebjvmaotayhmsvfhy = ( SIRModel . S ( lbyxebjvmaotayhmsvfhy ) ) + ( SIRModel . dS ( byxebjvmaotayhmsvfhy ) ) ; SIRModel.S_HIST . add ( newCounbyxebjvmaotayhmsvfhy ) ; rebyxebjvmaotayhmsvfhyurn newCounbyxebjvmaotayhmsvfhy ; } }
× fix_prediction_before: public static int S ( double t ) { double lt = t - ( SIRModel.DT ) ; int newCount = ( ( int ) ( ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; }
× fix_prediction_after: public sbyxebjvmaotayhmsvfhyabyxebjvmaotayhmsvfhyic inbyxebjvmaotayhmsvfhy S ( double byxebjvmaotayhmsvfhy ) { inbyxebjvmaotayhmsvfhy counbyxebjvmaotayhmsvfhy = SIRModel . gebyxebjvmaotayhmsvfhyRecord ( SIRModel.S_HIST , byxebjvmaotayhmsvfhy ) ; if ( counbyxebjvmaotayhmsvfhy != ( - 1 ) ) { rebyxebjvmaotayhmsvfhyurn counbyxebjvmaotayhmsvfhy ; } else { double lbyxebjvmaotayhmsvfhy = byxebjvmaotayhmsvfhy - ( SIRModel.DT ) ; inbyxebjvmaotayhmsvfhy newCounbyxebjvmaotayhmsvfhy = ( ( inbyxebjvmaotayhmsvfhy ) ( ( SIRModel . S ( lbyxebjvmaotayhmsvfhy ) ) + ( SIRModel . dS ( byxebjvmaotayhmsvfhy ) ) ) ) ; SIRModel.S_HIST . add ( newCounbyxebjvmaotayhmsvfhy ) ; rebyxebjvmaotayhmsvfhyurn newCounbyxebjvmaotayhmsvfhy ; } return counbyxebjvmaotayhmsvfhy ; }

line_index: 368
bug_before_refactoring: private void close ( java.sql.Statement statement ) { try { java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } } <s> private void close ( java.sql.Statement statement ) { try { java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } } <s> fix error on prepared statement
bug_after_refactoring: private void close ( java.sql.Statement hnsohxluhcglwaexyhch ) { try { java.sql.Connection connection = hnsohxluhcglwaexyhch . getConnection () ; hnsohxluhcglwaexyhch . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } } <s> private void close ( java.sql.Statement hnsohxluhcglwaexyhch ) { try { java.sql.Connection connection = hnsohxluhcglwaexyhch . getConnection () ; hnsohxluhcglwaexyhch . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } } <s> fix error on prepared statement
fix_before_refactoring: private static void close ( java.sql.Statement statement ) { try { if ( statement == null ) { return; } java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } }
fix_after_refactoring: private static void close ( java.sql.Statement hnsohxluhcglwaexyhch ) { try { if ( hnsohxluhcglwaexyhch == null ) { return; } java.sql.Connection connection = hnsohxluhcglwaexyhch . getConnection () ; hnsohxluhcglwaexyhch . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } }
× fix_prediction_before: public void close ( java.sql.Statement statement ) { try { java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } }
× fix_prediction_after: public void close ( java.sql.Statement hnsohxluhcglwaexyhch ) { try { java.sql.Connection connection = hnsohxluhcglwaexyhch . getConnection () ; hnsohxluhcglwaexyhch . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } }

line_index: 369
bug_before_refactoring: public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } <s> public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } <s> Fixed date parsing: issue #20
bug_after_refactoring: public static java.util.Date parseDate ( java.lang.String djklttwkkuyttlspoiih ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( djklttwkkuyttlspoiih ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( djklttwkkuyttlspoiih ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } <s> public static java.util.Date parseDate ( java.lang.String djklttwkkuyttlspoiih ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( djklttwkkuyttlspoiih ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( djklttwkkuyttlspoiih ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } <s> Fixed date parsing: issue #20
fix_before_refactoring: public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; }
fix_after_refactoring: public static java.util.Date parseDate ( java.lang.String djklttwkkuyttlspoiih ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( djklttwkkuyttlspoiih ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( djklttwkkuyttlspoiih ) ; } catch ( java.text.ParseException parseException ) {} } return date ; }
× fix_prediction_before: private static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; }
× fix_prediction_after: private static java.util.Date parseDate ( java.lang.String djklttwkkuyttlspoiih ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( djklttwkkuyttlspoiih ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( djklttwkkuyttlspoiih ) ; } catch ( java.text.ParseException parseException ) {} } return date ; }

line_index: 370
bug_before_refactoring: private static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } <s> private static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } <s> Fixed bug
bug_after_refactoring: private static boolean hasFormatWithClassHeader ( java.lang.String qrebburiootqwwfhgggf ) { java.lang.String [] lines = qrebburiootqwwfhgggf . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } <s> private static boolean hasFormatWithClassHeader ( java.lang.String qrebburiootqwwfhgggf ) { java.lang.String [] lines = qrebburiootqwwfhgggf . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } <s> Fixed bug
fix_before_refactoring: public static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; }
fix_after_refactoring: public static boolean hasFormatWithClassHeader ( java.lang.String qrebburiootqwwfhgggf ) { java.lang.String [] lines = qrebburiootqwwfhgggf . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; }
× fix_prediction_before: private static boolean hasFormatWithClassHeader ( java.lang.String text ) { if ( text != null ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } } return false ; }
× fix_prediction_after: private static boolean hasFormatWithClassHeader ( java.lang.String qrebburiootqwwfhgggf ) { if ( qrebburiootqwwfhgggf != null ) { java.lang.String [] lines = qrebburiootqwwfhgggf . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } } return false ; }

line_index: 371
bug_before_refactoring: private java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; } <s> private java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; } <s> fix XmlMapper config for https://github.com/FasterXML/jackson-databind/issues/1218
bug_after_refactoring: private java.lang.Object getEnumValue ( final java.lang.Class < ? > chepkopjsngyppeukneo , final java.lang.String epehdkhnbomyfajkezmn ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( chepkopjsngyppeukneo != null ) { final java.lang.reflect.Method method = chepkopjsngyppeukneo . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( chepkopjsngyppeukneo , epehdkhnbomyfajkezmn ) ; } else { result = null ; } return result ; } <s> private java.lang.Object getEnumValue ( final java.lang.Class < ? > chepkopjsngyppeukneo , final java.lang.String epehdkhnbomyfajkezmn ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( chepkopjsngyppeukneo != null ) { final java.lang.reflect.Method method = chepkopjsngyppeukneo . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( chepkopjsngyppeukneo , epehdkhnbomyfajkezmn ) ; } else { result = null ; } return result ; } <s> fix XmlMapper config for https://github.com/FasterXML/jackson-databind/issues/1218
fix_before_refactoring: static java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; }
fix_after_refactoring: static java.lang.Object getEnumValue ( final java.lang.Class < ? > chepkopjsngyppeukneo , final java.lang.String epehdkhnbomyfajkezmn ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( chepkopjsngyppeukneo != null ) { final java.lang.reflect.Method method = chepkopjsngyppeukneo . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( chepkopjsngyppeukneo , epehdkhnbomyfajkezmn ) ; } else { result = null ; } return result ; }
× fix_prediction_before: private static java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( " valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; }
× fix_prediction_after: protected java.lang.Object getEnumValue ( final java.lang.Class < ? > chepkopjsngyppeukneo , final java.lang.String epehdkhnbomyfajkezmn ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( chepkopjsngyppeukneo != null ) { final java.lang.reflect.Method method = chepkopjsngyppeukneo . getDeclaredMethod ( " valueOf" , java.lang.String . class ) ; result = method . invoke ( chepkopjsngyppeukneo , epehdkhnbomyfajkezmn ) ; } else { result = null ; } return result ; }

line_index: 372
bug_before_refactoring: protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { java.lang.String fmt = "Type %s doesn't support the buffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } } <s> protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { java.lang.String fmt = "Type %s doesn't support the buffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } } <s> fix bytearray.fromhex error message
bug_after_refactoring: protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyOhrkufuoeofvrxopfawxpject hrkufuoeofvrxopfawxp ) { org.python.core.PyBuffer hrkufuoeofvrxopfawxpuffer = org.python.core.BaseBytes . getView ( hrkufuoeofvrxopfawxp ) ; if ( hrkufuoeofvrxopfawxpuffer != null ) { return hrkufuoeofvrxopfawxpuffer ; } else { java.lang.String fmt = "Type %s doesn't support the hrkufuoeofvrxopfawxpuffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , hrkufuoeofvrxopfawxp . getType () . fastGetName () ) ) ; } } <s> protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyOhrkufuoeofvrxopfawxpject hrkufuoeofvrxopfawxp ) { org.python.core.PyBuffer hrkufuoeofvrxopfawxpuffer = org.python.core.BaseBytes . getView ( hrkufuoeofvrxopfawxp ) ; if ( hrkufuoeofvrxopfawxpuffer != null ) { return hrkufuoeofvrxopfawxpuffer ; } else { java.lang.String fmt = "Type %s doesn't support the hrkufuoeofvrxopfawxpuffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , hrkufuoeofvrxopfawxp . getType () . fastGetName () ) ) ; } } <s> fix bytearray.fromhex error message
fix_before_refactoring: protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b , java.lang.String fmt ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } }
fix_after_refactoring: protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyOhrkufuoeofvrxopfawxpject hrkufuoeofvrxopfawxp , java.lang.String fmt ) { org.python.core.PyBuffer hrkufuoeofvrxopfawxpuffer = org.python.core.BaseBytes . getView ( hrkufuoeofvrxopfawxp ) ; if ( hrkufuoeofvrxopfawxpuffer != null ) { return hrkufuoeofvrxopfawxpuffer ; } else { throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , hrkufuoeofvrxopfawxp . getType () . fastGetName () ) ) ; } }
× fix_prediction_before: public static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { java.lang.String fmt = "Type %s doesn't support the buffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } }
× fix_prediction_after: public static org.python.core.PyBuffer getViewOrError ( org.python.core.PyOhrkufuoeofvrxopfawxpject hrkufuoeofvrxopfawxp ) { org.python.core.PyBuffer hrkufuoeofvrxopfawxpuffer = org.python.core.BaseBytes . getView ( hrkufuoeofvrxopfawxpuffer ) ; if ( hrkufuoeofvrxopfawxpuffer != null ) { return hrkufuoeofvrxopfawxpuffer ; } else { java.lang.String fmt = "Type %s doesn't support the hrkufuoeofvrxopfawxpuffer API" ; throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , hrkufuoeofvrxopfawxpuffer . getType () . fastGetName () ) ) ; } }

line_index: 373
bug_before_refactoring: static java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; } <s> static java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; } <s> Fixed errors 'row null in col. Type' and 'message in W*  T*'. DRY
bug_after_refactoring: static jayemvmbhrycsoroxmjihla.util.ArrayList < jayemvmbhrycsoroxmjihla.lang.Integer > list_numbers_equal_yemvmbhrycsoroxmjihlalues_col2 ( org.json.JSONArray kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf , jayemvmbhrycsoroxmjihla.lang.String yemvmbhrycsoroxmjihl ) { jayemvmbhrycsoroxmjihla.util.ArrayList < jayemvmbhrycsoroxmjihla.lang.Integer > list_numbers_equal_yemvmbhrycsoroxmjihlalues = new jayemvmbhrycsoroxmjihla.util.ArrayList <> () ; for ( int i = 0 ; i < ( kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf . length () ) ; i ++ ) { if ( kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf . get ( i ) . toString () . toLowerCase () . equals ( yemvmbhrycsoroxmjihl ) ) { list_numbers_equal_yemvmbhrycsoroxmjihlalues . add ( ( i + 1 ) ) ; } } return list_numbers_equal_yemvmbhrycsoroxmjihlalues ; } <s> static jayemvmbhrycsoroxmjihla.util.ArrayList < jayemvmbhrycsoroxmjihla.lang.Integer > list_numbers_equal_yemvmbhrycsoroxmjihlalues_col2 ( org.json.JSONArray kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf , jayemvmbhrycsoroxmjihla.lang.String yemvmbhrycsoroxmjihl ) { jayemvmbhrycsoroxmjihla.util.ArrayList < jayemvmbhrycsoroxmjihla.lang.Integer > list_numbers_equal_yemvmbhrycsoroxmjihlalues = new jayemvmbhrycsoroxmjihla.util.ArrayList <> () ; for ( int i = 0 ; i < ( kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf . length () ) ; i ++ ) { if ( kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf . get ( i ) . toString () . toLowerCase () . equals ( yemvmbhrycsoroxmjihl ) ) { list_numbers_equal_yemvmbhrycsoroxmjihlalues . add ( ( i + 1 ) ) ; } } return list_numbers_equal_yemvmbhrycsoroxmjihlalues ; } <s> Fixed errors 'row null in col. Type' and 'message in W*  T*'. DRY
fix_before_refactoring: private java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; }
fix_after_refactoring: priyemvmbhrycsoroxmjihlate jayemvmbhrycsoroxmjihla.util.ArrayList < jayemvmbhrycsoroxmjihla.lang.Integer > list_numbers_equal_yemvmbhrycsoroxmjihlalues_col2 ( org.json.JSONArray kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf , jayemvmbhrycsoroxmjihla.lang.String yemvmbhrycsoroxmjihl ) { jayemvmbhrycsoroxmjihla.util.ArrayList < jayemvmbhrycsoroxmjihla.lang.Integer > list_numbers_equal_yemvmbhrycsoroxmjihlalues = new jayemvmbhrycsoroxmjihla.util.ArrayList <> () ; for ( int i = 0 ; i < ( kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf . length () ) ; i ++ ) { if ( kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf . get ( i ) . toString () . toLowerCase () . equals ( yemvmbhrycsoroxmjihl ) ) { list_numbers_equal_yemvmbhrycsoroxmjihlalues . add ( ( i + 1 ) ) ; } } return list_numbers_equal_yemvmbhrycsoroxmjihlalues ; }
× fix_prediction_before: static java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; if ( ja_equal_words_v != null ) { for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } } return list_numbers_equal_values ; }
× fix_prediction_after: { jayemvmbhrycsoroxmjihla.util.ArrayList < jayemvmbhrycsoroxmjihla.lang.Integer > list_numbers_equal_yemvmbhrycsoroxmjihlalues_col2 ( org.json.JSONArray kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf , jayemvmbhrycsoroxmjihla.lang.String yemvmbhrycsoroxmjihl ) { jayemvmbhrycsoroxmjihla.util.ArrayList < jayemvmbhrycsoroxmjihla.lang.Integer > list_numbers_equal_yemvmbhrycsoroxmjihlalues = new jayemvmbhrycsoroxmjihla.util.ArrayList <> () ; for ( int i = 0 ; i < ( kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf . length () ) ; i ++ ) { if ( kriyemvmbhrycsoroxmjihloykqksobjuzrqbyemvmbhrycsoroxmjihlf . get ( i ) . toString () . toLowerCase () . equals ( yemvmbhrycsoroxmjihl ) ) { list_numbers_equal_yemvmbhrycsoroxmjihlalues . add ( ( i + 1 ) ) ; } } return list_numbers_equal_yemvmbhrycsoroxmjihlalues ; }

line_index: 374
bug_before_refactoring: @ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( response , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } <s> @ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( response , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } <s> Merge branch 'master' into bugfix_hue_light_name
bug_after_refactoring: @ java.lang.Override public boolean onRequest ( final android.content.Intent dktbftdfjivdkrhxqwoq , final android.content.Intent eonrbbidrwrsifsedixp ) { java.lang.String sessionKey = getSessionKey ( dktbftdfjivdkrhxqwoq ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( eonrbbidrwrsifsedixp , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( dktbftdfjivdkrhxqwoq ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( eonrbbidrwrsifsedixp , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( eonrbbidrwrsifsedixp ) ; } } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } <s> @ java.lang.Override public boolean onRequest ( final android.content.Intent dktbftdfjivdkrhxqwoq , final android.content.Intent eonrbbidrwrsifsedixp ) { java.lang.String sessionKey = getSessionKey ( dktbftdfjivdkrhxqwoq ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( eonrbbidrwrsifsedixp , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( dktbftdfjivdkrhxqwoq ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( eonrbbidrwrsifsedixp , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( eonrbbidrwrsifsedixp ) ; } } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } <s> Merge branch 'master' into bugfix_hue_light_name
fix_before_refactoring: @ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; }
fix_after_refactoring: @ java.lang.Override public boolean onRequest ( final android.content.Intent dktbftdfjivdkrhxqwoq , final android.content.Intent eonrbbidrwrsifsedixp ) { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( dktbftdfjivdkrhxqwoq ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( eonrbbidrwrsifsedixp , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( eonrbbidrwrsifsedixp ) ; } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; }
× fix_prediction_before: @ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; }
× fix_prediction_after: @ java.lang.Override public boolean onRequest ( final android.content.Intent dktbftdfjivdkrhxqwoq , final android.content.Intent eonrbbidrwrsifsedixp ) { java.lang.String sessionKey = getSessionKey ( dktbftdfjivdkrhxqwoq ) ; org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( dktbftdfjivdkrhxqwoq ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( eonrbbidrwrsifsedixp , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( eonrbbidrwrsifsedixp ) ; } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; }

line_index: 375
bug_before_refactoring: public void register ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; playerInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } <s> public void register ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; playerInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } <s> Fixed a number of bugs.
bug_after_refactoring: public void register ( org.bukkit.entity.Player fyucxnuggxvwhyvzwsgu ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo fyucxnuggxvwhyvzwsguInfo = getOrAddPlayerInfo ( fyucxnuggxvwhyvzwsgu ) ; fyucxnuggxvwhyvzwsguInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( fyucxnuggxvwhyvzwsgu , fyucxnuggxvwhyvzwsguInfo ) ; fyucxnuggxvwhyvzwsgu . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } <s> public void register ( org.bukkit.entity.Player fyucxnuggxvwhyvzwsgu ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo fyucxnuggxvwhyvzwsguInfo = getOrAddPlayerInfo ( fyucxnuggxvwhyvzwsgu ) ; fyucxnuggxvwhyvzwsguInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( fyucxnuggxvwhyvzwsgu , fyucxnuggxvwhyvzwsguInfo ) ; fyucxnuggxvwhyvzwsgu . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } <s> Fixed a number of bugs.
fix_before_refactoring: private se.fredsfursten.donationboardplugin.PlayerInfo getOrAddPlayerInfo ( org.bukkit.entity.Player player ) { se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = this . _knownPlayers . get ( player ) ; if ( playerInfo == null ) { playerInfo = new se.fredsfursten.donationboardplugin.PlayerInfo ( player ) ; this . _knownPlayers . put ( player , playerInfo ) ; int toLevel = this . _model . getDonationLevel ( 0 ) ; playerInfo . demoteOrPromote ( toLevel ) ; } return playerInfo ; }
fix_after_refactoring: private se.fredsfursten.donationboardplugin.PlayerInfo getOrAddPlayerInfo ( org.bukkit.entity.Player fyucxnuggxvwhyvzwsgu ) { se.fredsfursten.donationboardplugin.PlayerInfo fyucxnuggxvwhyvzwsguInfo = this . _knownPlayers . get ( fyucxnuggxvwhyvzwsgu ) ; if ( fyucxnuggxvwhyvzwsguInfo == null ) { fyucxnuggxvwhyvzwsguInfo = new se.fredsfursten.donationboardplugin.PlayerInfo ( fyucxnuggxvwhyvzwsgu ) ; this . _knownPlayers . put ( fyucxnuggxvwhyvzwsgu , fyucxnuggxvwhyvzwsguInfo ) ; int toLevel = this . _model . getDonationLevel ( 0 ) ; fyucxnuggxvwhyvzwsguInfo . demoteOrPromote ( toLevel ) ; } return fyucxnuggxvwhyvzwsguInfo ; }
× fix_prediction_before: public boolean register ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; playerInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; return true ; }
× fix_prediction_after: public boolean register ( org.bukkit.entity.Player fyucxnuggxvwhyvzwsgu ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo fyucxnuggxvwhyvzwsguInfo = getOrAddPlayerInfo ( fyucxnuggxvwhyvzwsgu ) ; fyucxnuggxvwhyvzwsguInfo . demoteOrPromote ( toLevel ) ; this . _knownPlayers . put ( fyucxnuggxvwhyvzwsgu , fyucxnuggxvwhyvzwsguInfo ) ; fyucxnuggxvwhyvzwsgu . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; return true ; }

line_index: 376
bug_before_refactoring: private data.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new data.Vector ( meanPoint ) ; } <s> private data.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new data.Vector ( meanPoint ) ; } <s> Fix bug  improve stability.
bug_after_refactoring: private data.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > yanrvhsxmlanlotulsel ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : yanrvhsxmlanlotulsel ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= yanrvhsxmlanlotulsel . size () ; } return new data.Vector ( meanPoint ) ; } <s> private data.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > yanrvhsxmlanlotulsel ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : yanrvhsxmlanlotulsel ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= yanrvhsxmlanlotulsel . size () ; } return new data.Vector ( meanPoint ) ; } <s> Fix bug  improve stability.
fix_before_refactoring: private java.util.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new java.util.Vector ( meanPoint ) ; }
fix_after_refactoring: private java.util.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > yanrvhsxmlanlotulsel ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : yanrvhsxmlanlotulsel ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= yanrvhsxmlanlotulsel . size () ; } return new java.util.Vector ( meanPoint ) ; }
× fix_prediction_before: protected data.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new data.Vector ( meanPoint ) ; }
× fix_prediction_after: protected data.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > yanrvhsxmlanlotulsel ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : yanrvhsxmlanlotulsel ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= yanrvhsxmlanlotulsel . size () ; } return new data.Vector ( meanPoint ) ; }

line_index: 378
bug_before_refactoring: protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( clsK , clsV ) ; return cache ; } <s> protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( clsK , clsV ) ; return cache ; } <s> IGNITE-4643 Fix NPE in getIndexInfo() with test  Also ported several tests from Thin driver implementation. Fixed a problem in Primary Keys metadata. Fixed several get*Version() methods to return Ignite version/JDBC 4.1 instead of dummy values.
bug_after_refactoring: protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String tcamatfwztvkoyekslqq , java.lang.Class < ? > vlvygginxoopgpbdvmyk , java.lang.Class < ? > qvbijjszyoglrzveyirv ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( tcamatfwztvkoyekslqq ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( vlvygginxoopgpbdvmyk , qvbijjszyoglrzveyirv ) ; return cache ; } <s> protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String tcamatfwztvkoyekslqq , java.lang.Class < ? > vlvygginxoopgpbdvmyk , java.lang.Class < ? > qvbijjszyoglrzveyirv ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( tcamatfwztvkoyekslqq ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( vlvygginxoopgpbdvmyk , qvbijjszyoglrzveyirv ) ; return cache ; } <s> IGNITE-4643 Fix NPE in getIndexInfo() with test  Also ported several tests from Thin driver implementation. Fixed a problem in Primary Keys metadata. Fixed several get*Version() methods to return Ignite version/JDBC 4.1 instead of dummy values.
fix_before_refactoring: protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; return cache ; }
fix_after_refactoring: protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String tcamatfwztvkoyekslqq ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( tcamatfwztvkoyekslqq ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; return cache ; }
× fix_prediction_before: protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( clsK ) ; clsV . setBackups ( 1 ) ; return cache ; }
× fix_prediction_after: protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration () { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( tcamatfwztvkoyekslqq ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; cache . setIndexedTypes ( vlvygginxoopgpbdvmyk , qvbijjszyoglrzveyirv ) ; return cache ; }

line_index: 379
bug_before_refactoring: private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } <s> private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } <s> fixed datamodel bugs.
bug_after_refactoring: private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document gpnylidmmjnrtcxmmhze ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( gpnylidmmjnrtcxmmhze != null ) && ( ! ( gpnylidmmjnrtcxmmhze . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( gpnylidmmjnrtcxmmhze ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } <s> private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document gpnylidmmjnrtcxmmhze ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( gpnylidmmjnrtcxmmhze != null ) && ( ! ( gpnylidmmjnrtcxmmhze . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( gpnylidmmjnrtcxmmhze ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } <s> fixed datamodel bugs.
fix_before_refactoring: static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" , false ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; }
fix_after_refactoring: static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document gpnylidmmjnrtcxmmhze ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( gpnylidmmjnrtcxmmhze != null ) && ( ! ( gpnylidmmjnrtcxmmhze . getBoolean ( "isDeleted" , false ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( gpnylidmmjnrtcxmmhze ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; }
× fix_prediction_before: private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { if ( result == null ) { return null ; } java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ! ( result . getBoolean ( "isDeleted" ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; }
× fix_prediction_after: private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount () { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( gpnylidmmjnrtcxmmhze != null ) && ( ! ( gpnylidmmjnrtcxmmhze . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( gpnylidmmjnrtcxmmhze ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; }

line_index: 380
bug_before_refactoring: private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; } <s> private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; } <s> fixed bug occured for refactoring
bug_after_refactoring: private int getMove ( com.rijul.game.core.Board oaavhapebsxmuafpwrbo ) { java.lang.String oaavhapebsxmuafpwrboAsString = getBoardAsString ( oaavhapebsxmuafpwrbo ) ; if ( ( playerNumber ) == 1 ) { if ( oaavhapebsxmuafpwrboAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( oaavhapebsxmuafpwrbo , 1 ) ; } else { getOptimalResultForBoardPosition ( oaavhapebsxmuafpwrbo , 2 ) ; } return optimalMoveFromBoardPosition . get ( oaavhapebsxmuafpwrboAsString ) ; } <s> private int getMove ( com.rijul.game.core.Board oaavhapebsxmuafpwrbo ) { java.lang.String oaavhapebsxmuafpwrboAsString = getBoardAsString ( oaavhapebsxmuafpwrbo ) ; if ( ( playerNumber ) == 1 ) { if ( oaavhapebsxmuafpwrboAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( oaavhapebsxmuafpwrbo , 1 ) ; } else { getOptimalResultForBoardPosition ( oaavhapebsxmuafpwrbo , 2 ) ; } return optimalMoveFromBoardPosition . get ( oaavhapebsxmuafpwrboAsString ) ; } <s> fixed bug occured for refactoring
fix_before_refactoring: private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; return optimalMoveFromBoardPosition . get ( boardAsString ) ; }
fix_after_refactoring: private int getMove ( com.rijul.game.core.Board oaavhapebsxmuafpwrbo ) { java.lang.String oaavhapebsxmuafpwrboAsString = getBoardAsString ( oaavhapebsxmuafpwrbo ) ; if ( oaavhapebsxmuafpwrboAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( oaavhapebsxmuafpwrbo , 1 ) ; return optimalMoveFromBoardPosition . get ( oaavhapebsxmuafpwrboAsString ) ; }
× fix_prediction_before: public int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; }
× fix_prediction_after: public int getMove ( com.rijul.game.core.Board oaavhapebsxmuafpwrbo ) { java.lang.String oaavhapebsxmuafpwrboAsString = getBoardAsString ( oaavhapebsxmuafpwrbo ) ; if ( ( playerNumber ) == 1 ) { if ( oaavhapebsxmuafpwrboAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( oaavhapebsxmuafpwrbo , 1 ) ; } else { getOptimalResultForBoardPosition ( oaavhapebsxmuafpwrbo , 2 ) ; } return optimalMoveFromBoardPosition . get ( oaavhapebsxmuafpwrboAsString ) ; }

line_index: 381
bug_before_refactoring: private static java.lang.String loadECoreFile ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbsFile ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; } <s> private static java.lang.String loadECoreFile ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbsFile ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; } <s> Fix invalid 'double path' error
bug_after_refactoring: private static java.lang.String loadECoreFile ( java.lang.String jsvocqszphvxwotcfvqv ) throws java.lang.Exception { java.lang.String filejsvocqszphvxwotcfvqv = cruise.umple.compiler.UmpleImportTest . getAbsFile ( jsvocqszphvxwotcfvqv ) ; assertTrue ( new java.io.File ( filejsvocqszphvxwotcfvqv ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filejsvocqszphvxwotcfvqv ) ; return umple . generateUmple () ; } <s> private static java.lang.String loadECoreFile ( java.lang.String jsvocqszphvxwotcfvqv ) throws java.lang.Exception { java.lang.String filejsvocqszphvxwotcfvqv = cruise.umple.compiler.UmpleImportTest . getAbsFile ( jsvocqszphvxwotcfvqv ) ; assertTrue ( new java.io.File ( filejsvocqszphvxwotcfvqv ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filejsvocqszphvxwotcfvqv ) ; return umple . generateUmple () ; } <s> Fix invalid 'double path' error
fix_before_refactoring: private static java.lang.String loadECoreFile ( final java.lang.String name ) throws java.lang.Exception { assertTrue ( new java.io.File ( name ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( name ) ; return umple . generateUmple () ; }
fix_after_refactoring: private static java.lang.String loadECoreFile ( final java.lang.String jsvocqszphvxwotcfvqv ) throws java.lang.Exception { assertTrue ( new java.io.File ( jsvocqszphvxwotcfvqv ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( jsvocqszphvxwotcfvqv ) ; return umple . generateUmple () ; }
× fix_prediction_before: private static java.lang.String loadECoreFile ( java.lang.String fileName ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbsFile ( fileName ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; }
× fix_prediction_after: private static java.lang.String loadECoreFile ( java.lang.String jsvocqszphvxwotcfvqv ) throws java.lang.Exception { assertTrue ( new java.io.File ( jsvocqszphvxwotcfvqv ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( jsvocqszphvxwotcfvqv ) ; return umple . generateUmple () ; }

line_index: 382
bug_before_refactoring: private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { if ( pkgName . equals ( "com.google.android.gms" ) ) return true ; return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } } <s> private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { if ( pkgName . equals ( "com.google.android.gms" ) ) return true ; return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } } <s> fix whitelist bug
bug_after_refactoring: private boolean isEnabled ( java.lang.String ueglwowgofkgvhomjimf ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( ueglwowgofkgvhomjimf , false ) ; } else { if ( ueglwowgofkgvhomjimf . equals ( "com.google.android.gms" ) ) return true ; return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( ueglwowgofkgvhomjimf ) , false ) ) ; } } <s> private boolean isEnabled ( java.lang.String ueglwowgofkgvhomjimf ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( ueglwowgofkgvhomjimf , false ) ; } else { if ( ueglwowgofkgvhomjimf . equals ( "com.google.android.gms" ) ) return true ; return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( ueglwowgofkgvhomjimf ) , false ) ) ; } } <s> fix whitelist bug
fix_before_refactoring: private static boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } }
fix_after_refactoring: private static boolean isEnabled ( java.lang.String ueglwowgofkgvhomjimf ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( ueglwowgofkgvhomjimf , false ) ; } else { return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( ueglwowgofkgvhomjimf ) , false ) ) ; } }
× fix_prediction_before: private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { return ! ( tw.fatmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } }
× fix_prediction_after: private boolean isEnabled ( java.lang.String ueglwowgofkgvhomjimf ) { java.lang.String mode = tw.fatmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatmin.xposed.minminguard.Main.pref . getBoolean ( ueglwowgofkgvhomjimf , false ) ; } else { return ! ( tw.fatmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( ueglwowgofkgvhomjimf ) , true ) ) ; } }

line_index: 383
bug_before_refactoring: private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } } return; } <s> private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } } return; } <s> update SDK version  fix crash bug by moving Toast to main thread  make eraser stroke clean feature normal by removing the surfaceView activated condition
bug_after_refactoring: private void setSPenToolActionWithAllCanvases ( int fnqfabjcnbgxeitplhhg ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , fnqfabjcnbgxeitplhhg ) ; } } } return; } <s> private void setSPenToolActionWithAllCanvases ( int fnqfabjcnbgxeitplhhg ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , fnqfabjcnbgxeitplhhg ) ; } } } return; } <s> update SDK version  fix crash bug by moving Toast to main thread  make eraser stroke clean feature normal by removing the surfaceView activated condition
fix_before_refactoring: private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } return; }
fix_after_refactoring: private void setSPenToolActionWithAllCanvases ( int fnqfabjcnbgxeitplhhg ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , fnqfabjcnbgxeitplhhg ) ; } } return; }
× fix_prediction_before: private void setSPenToolActionWithAllCanvases ( int toolAction ) { synchronized ( mCharBoxes ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } } } }
× fix_prediction_after: private void setSPenToolActionWithAllCanvases () { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , fnqfabjcnbgxeitplhhg ) ; } } } return; }

line_index: 384
bug_before_refactoring: @ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } <s> @ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } <s> Fixing code analysis warnings and errors.
bug_after_refactoring: @ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream jdcwjikzvfeuzrafntnm ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( jdcwjikzvfeuzrafntnm ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } <s> @ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream jdcwjikzvfeuzrafntnm ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( jdcwjikzvfeuzrafntnm ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } <s> Fixing code analysis warnings and errors.
fix_before_refactoring: public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; }
fix_after_refactoring: public org.pb.x12.EDI parse ( java.io.InputStream jdcwjikzvfeuzrafntnm ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( jdcwjikzvfeuzrafntnm ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; }
× fix_prediction_before: @ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; }
× fix_prediction_after: @ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream jdcwjikzvfeuzrafntnm ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( jdcwjikzvfeuzrafntnm ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; }

line_index: 385
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } <s> @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } <s> Fixed all of the errors. Started testing.
bug_after_refactoring: @ java.lang.Override public void onClick ( android.ahnqqwwsovfqrefuqmjo.View ahnqqwwsovfqrefuqmjo ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } <s> @ java.lang.Override public void onClick ( android.ahnqqwwsovfqrefuqmjo.View ahnqqwwsovfqrefuqmjo ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } <s> Fixed all of the errors. Started testing.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; }
fix_after_refactoring: @ java.lang.Override public void onClick ( android.ahnqqwwsovfqrefuqmjo.View ahnqqwwsovfqrefuqmjo ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( ahnqqwwsovfqrefuqmjo . getContext () , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( ahnqqwwsovfqrefuqmjo . getContext () , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; }
× fix_prediction_after: @ java.lang.Override public void onClick ( android.ahnqqwwsovfqrefuqmjo.View ahnqqwwsovfqrefuqmjo ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; }

line_index: 386
bug_before_refactoring: protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } } <s> protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } } <s> Refs #3455: Fixes calling setCurrentNetworkView method in an infinite loop when reattaching views. Also fixed related bug that could change the current view after detaching a network view.
bug_after_refactoring: protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView pajwzdpbvprplvghdugg ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( pajwzdpbvprplvghdugg == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( pajwzdpbvprplvghdugg ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = pajwzdpbvprplvghdugg ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , pajwzdpbvprplvghdugg ) ; } } <s> protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView pajwzdpbvprplvghdugg ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( pajwzdpbvprplvghdugg == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( pajwzdpbvprplvghdugg ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = pajwzdpbvprplvghdugg ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , pajwzdpbvprplvghdugg ) ; } } <s> Refs #3455: Fixes calling setCurrentNetworkView method in an infinite loop when reattaching views. Also fixed related bug that could change the current view after detaching a network view.
fix_before_refactoring: protected boolean setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return false ; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } return true ; }
fix_after_refactoring: protected boolean setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView pajwzdpbvprplvghdugg ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( pajwzdpbvprplvghdugg == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( pajwzdpbvprplvghdugg ) ) ) ) return false ; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = pajwzdpbvprplvghdugg ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , pajwzdpbvprplvghdugg ) ; } return true ; }
× fix_prediction_before: protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; }
× fix_prediction_after: protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView pajwzdpbvprplvghdugg ) { if ( ( ( ( currentNetworkView ) == null ) && ( pajwzdpbvprplvghdugg == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( pajwzdpbvprplvghdugg ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = pajwzdpbvprplvghdugg ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , pajwzdpbvprplvghdugg ) ; }

line_index: 387
bug_before_refactoring: private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 offset ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } <s> private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 offset ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } <s> fixed compiler error
bug_after_refactoring: private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node yulidxmfdabngowxjvyf , com.badlogic.gdx.math.Vector2 vkyuafeggmfyccufeprt ) { if ( yulidxmfdabngowxjvyf . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( yulidxmfdabngowxjvyf , vkyuafeggmfyccufeprt ) ; } else if ( yulidxmfdabngowxjvyf . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for yulidxmfdabngowxjvyf " + ( yulidxmfdabngowxjvyf . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } <s> private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node yulidxmfdabngowxjvyf , com.badlogic.gdx.math.Vector2 vkyuafeggmfyccufeprt ) { if ( yulidxmfdabngowxjvyf . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( yulidxmfdabngowxjvyf , vkyuafeggmfyccufeprt ) ; } else if ( yulidxmfdabngowxjvyf . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for yulidxmfdabngowxjvyf " + ( yulidxmfdabngowxjvyf . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } <s> fixed compiler error
fix_before_refactoring: private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { com.badlogic.gdx.math.Vector2 offset = new com.badlogic.gdx.math.Vector2 () ; return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; }
fix_after_refactoring: private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node yulidxmfdabngowxjvyf ) { if ( yulidxmfdabngowxjvyf . getNodeName () . contentEquals ( "image" ) ) { com.badlogic.gdx.math.Vector2 vkyuafeggmfyccufeprt = new com.badlogic.gdx.math.Vector2 () ; return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( yulidxmfdabngowxjvyf , vkyuafeggmfyccufeprt ) ; } else if ( yulidxmfdabngowxjvyf . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for yulidxmfdabngowxjvyf " + ( yulidxmfdabngowxjvyf . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; }
× fix_prediction_before: public static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 offset ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; }
× fix_prediction_after: private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node yulidxmfdabngowxjvyf , com.badlogic.gdx.math.Vector2 vkyuafeggmfyccufeprt ) { if ( yulidxmfdabngowxjvyf . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( yulidxmfdabngowxjvyf , vkyuafeggmfyccufeprt ) ; } else if ( yulidxmfdabngowxjvyf . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for yulidxmfdabngowxjvyf " + ( yulidxmfdabngowxjvyf . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; }

line_index: 390
bug_before_refactoring: private void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } <s> private void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } <s> [test] add tests and [minor] fixed some small bugs
bug_after_refactoring: private void showWarningToUser ( android.os.Message gfgfbhpfgtjxyzkjzgac ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( gfgfbhpfgtjxyzkjzgac.obj ) ) ) ; startActivity ( intent ) ; } <s> private void showWarningToUser ( android.os.Message gfgfbhpfgtjxyzkjzgac ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( gfgfbhpfgtjxyzkjzgac.obj ) ) ) ; startActivity ( intent ) ; } <s> [test] add tests and [minor] fixed some small bugs
fix_before_refactoring: public void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; }
fix_after_refactoring: public void showWarningToUser ( android.os.Message gfgfbhpfgtjxyzkjzgac ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( gfgfbhpfgtjxyzkjzgac.obj ) ) ) ; startActivity ( intent ) ; }
× fix_prediction_before: private void showWarningToUser ( android.os.Message msg ) { if ( ( msg.obj ) != null ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } }
× fix_prediction_after: private void showWarningToUser () { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( gfgfbhpfgtjxyzkjzgac.obj ) ) ) ; startActivity ( intent ) ; }

line_index: 391
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( person . getFamily () ) != null ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( person . getFamily () ) != null ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; } <s> Fix some small issues
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person tbviixhcbdhnobdtgkgl , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String epnrvqzqwvbmuahewucx ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( epnrvqzqwvbmuahewucx ) ; if ( ( tbviixhcbdhnobdtgkgl . getFamily () ) != null ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects . equals ( tbviixhcbdhnobdtgkgl . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a tbviixhcbdhnobdtgkgl to that family." ) ; } } tbviixhcbdhnobdtgkgl . setFamily ( loadedFamily ) ; return tbviixhcbdhnobdtgkglRepository . save ( tbviixhcbdhnobdtgkgl ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person tbviixhcbdhnobdtgkgl , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String epnrvqzqwvbmuahewucx ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( epnrvqzqwvbmuahewucx ) ; if ( ( tbviixhcbdhnobdtgkgl . getFamily () ) != null ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects . equals ( tbviixhcbdhnobdtgkgl . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a tbviixhcbdhnobdtgkgl to that family." ) ; } } tbviixhcbdhnobdtgkgl . setFamily ( loadedFamily ) ; return tbviixhcbdhnobdtgkglRepository . save ( tbviixhcbdhnobdtgkgl ) ; } <s> Fix some small issues
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( ( person . getFamily () ) != null ) && ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person tbviixhcbdhnobdtgkgl , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String epnrvqzqwvbmuahewucx ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( epnrvqzqwvbmuahewucx ) ; if ( ( ( tbviixhcbdhnobdtgkgl . getFamily () ) != null ) && ( ! ( java.util.Objects . equals ( tbviixhcbdhnobdtgkgl . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a tbviixhcbdhnobdtgkgl to that family." ) ; } tbviixhcbdhnobdtgkgl . setFamily ( loadedFamily ) ; return tbviixhcbdhnobdtgkglRepository . save ( tbviixhcbdhnobdtgkgl ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( loadedFamily == null ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person tbviixhcbdhnobdtgkgl , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String epnrvqzqwvbmuahewucx ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( epnrvqzqwvbmuahewucx ) ; if ( ( tbviixhcbdhnobdtgkgl . getFamily () ) != null ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects . equals ( tbviixhcbdhnobdtgkgl . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a tbviixhcbdhnobdtgkgl to that family." ) ; } } tbviixhcbdhnobdtgkgl . setFamily ( loadedFamily ) ; return tbviixhcbdhnobdtgkglRepository . save ( tbviixhcbdhnobdtgkgl ) ; }

line_index: 392
bug_before_refactoring: public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0 ; } <s> public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0 ; } <s> fixed db bug
bug_after_refactoring: public boolean deleteFavorite ( int wpjbnlkahpfjjdelpxvi ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ) > 0 ; } <s> public boolean deleteFavorite ( int wpjbnlkahpfjjdelpxvi ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ) > 0 ; } <s> fixed db bug
fix_before_refactoring: public void deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ; }
fix_after_refactoring: public void deleteFavorite ( int wpjbnlkahpfjjdelpxvi ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ; }
× fix_prediction_before: public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0 ; }
× fix_prediction_after: public boolean deleteFavorite ( int wpjbnlkahpfjjdelpxvi ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + wpjbnlkahpfjjdelpxvi ) , null ) ) > 0 ; }

line_index: 393
bug_before_refactoring: private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName , java.lang.String color ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"color\":\"" ) . append ( color ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; } <s> private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName , java.lang.String color ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"color\":\"" ) . append ( color ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; } <s> Timezone bug fix
bug_after_refactoring: private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > dlyztmqoyadxqiukakzo , java.lang.String yxxjzayxgjdtlkayjgso , java.lang.String lqejegbjrawfizfrpyjj ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( yxxjzayxgjdtlkayjgso ) . append ( "\"," ) ; json . append ( "\"lqejegbjrawfizfrpyjj\":\"" ) . append ( lqejegbjrawfizfrpyjj ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( dlyztmqoyadxqiukakzo ) ) . append ( "]" ) ; return json ; } <s> private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > dlyztmqoyadxqiukakzo , java.lang.String yxxjzayxgjdtlkayjgso , java.lang.String lqejegbjrawfizfrpyjj ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( yxxjzayxgjdtlkayjgso ) . append ( "\"," ) ; json . append ( "\"lqejegbjrawfizfrpyjj\":\"" ) . append ( lqejegbjrawfizfrpyjj ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( dlyztmqoyadxqiukakzo ) ) . append ( "]" ) ; return json ; } <s> Timezone bug fix
fix_before_refactoring: private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; }
fix_after_refactoring: private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > dlyztmqoyadxqiukakzo , java.lang.String yxxjzayxgjdtlkayjgso ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( yxxjzayxgjdtlkayjgso ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( dlyztmqoyadxqiukakzo ) ) . append ( "]" ) ; return json ; }
× fix_prediction_before: public static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName , java.lang.String color ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"color\":\"" ) . append ( color ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; }
× fix_prediction_after: private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > dlyztmqoyadxqiukakzo , java.lang.String yxxjzayxgjdtlkayjgso , java.lang.String lqejegbjrawfizfrpyjj ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( yxxjzayxgjdtlkayjgso ) . append ( "\"," ) ; json . append ( "\"lqejegbjrawfizfrpyjj\":\"" ) . append ( lqejegbjrawfizfrpyjj ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( dlyztmqoyadxqiukakzo ) ) . append ( "]" ) ; return json ; }

line_index: 394
bug_before_refactoring: void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( this . includeRequestTime ) { if ( requestTime > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } } <s> void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( this . includeRequestTime ) { if ( requestTime > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } } <s> Fixes issue after code review.
bug_after_refactoring: void addRequestTime ( long fkyjbojhjohpxhixwcpf , java.util.Map < java.lang.String , java.lang.Object > qoylfwqbaaadjnnvbgrb ) { if ( this . includeRequestTime ) { if ( fkyjbojhjohpxhixwcpf > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( fkyjbojhjohpxhixwcpf ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( fkyjbojhjohpxhixwcpf - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { qoylfwqbaaadjnnvbgrb . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } } <s> void addRequestTime ( long fkyjbojhjohpxhixwcpf , java.util.Map < java.lang.String , java.lang.Object > qoylfwqbaaadjnnvbgrb ) { if ( this . includeRequestTime ) { if ( fkyjbojhjohpxhixwcpf > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( fkyjbojhjohpxhixwcpf ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( fkyjbojhjohpxhixwcpf - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { qoylfwqbaaadjnnvbgrb . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } } <s> Fixes issue after code review.
fix_before_refactoring: protected void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ) && ( requestTime > 0 ) ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } }
fix_after_refactoring: protected void addRequestTime ( long fkyjbojhjohpxhixwcpf , java.util.Map < java.lang.String , java.lang.Object > qoylfwqbaaadjnnvbgrb ) { if ( ( this . includeRequestTime ) && ( fkyjbojhjohpxhixwcpf > 0 ) ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( fkyjbojhjohpxhixwcpf ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( fkyjbojhjohpxhixwcpf - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { qoylfwqbaaadjnnvbgrb . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } }
× fix_prediction_before: void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } }
× fix_prediction_after: void addRequestTime ( long fkyjbojhjohpxhixwcpf , java.util.Map < java.lang.String , java.lang.Object > qoylfwqbaaadjnnvbgrb ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( fkyjbojhjohpxhixwcpf ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( fkyjbojhjohpxhixwcpf - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { qoylfwqbaaadjnnvbgrb . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } }

line_index: 395
bug_before_refactoring: private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } <s> private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } <s> Made getDepth() externally accessible Fixed packaging for windows to use wildcard instead of full classpath (windows has a problem with long classpaths...)
bug_after_refactoring: private int getDepth ( java.lang.String eeidxfvrfgtsekvupsur ) { int depth = 1 ; for ( int i = 0 ; i < ( eeidxfvrfgtsekvupsur . length () ) ; i ++ ) { if ( ( ( eeidxfvrfgtsekvupsur . charAt ( i ) ) == '\t' ) || ( ( eeidxfvrfgtsekvupsur . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } <s> private int getDepth ( java.lang.String eeidxfvrfgtsekvupsur ) { int depth = 1 ; for ( int i = 0 ; i < ( eeidxfvrfgtsekvupsur . length () ) ; i ++ ) { if ( ( ( eeidxfvrfgtsekvupsur . charAt ( i ) ) == '\t' ) || ( ( eeidxfvrfgtsekvupsur . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } <s> Made getDepth() externally accessible Fixed packaging for windows to use wildcard instead of full classpath (windows has a problem with long classpaths...)
fix_before_refactoring: public static int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; }
fix_after_refactoring: public static int getDepth ( java.lang.String eeidxfvrfgtsekvupsur ) { int depth = 1 ; for ( int i = 0 ; i < ( eeidxfvrfgtsekvupsur . length () ) ; i ++ ) { if ( ( ( eeidxfvrfgtsekvupsur . charAt ( i ) ) == '\t' ) || ( ( eeidxfvrfgtsekvupsur . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; }
× fix_prediction_before: private static int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; }
× fix_prediction_after: private static int getDepth ( java.lang.String eeidxfvrfgtsekvupsur ) { int depth = 1 ; for ( int i = 0 ; i < ( eeidxfvrfgtsekvupsur . length () ) ; i ++ ) { if ( ( ( eeidxfvrfgtsekvupsur . charAt ( i ) ) == '\t' ) || ( ( eeidxfvrfgtsekvupsur . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; }

line_index: 396
bug_before_refactoring: private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ; integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } <s> private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ; integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } <s> Fix sonarqube issues
bug_after_refactoring: private void saveIntegrityKey ( javax.crypto.SecretKey ewmuajlrlwdokpwgrlts , java.lang.String tppupscctalhwyzxknll ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( tppupscctalhwyzxknll ) ) ; integrityKeyOutputStream . writeObject ( ewmuajlrlwdokpwgrlts ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , tppupscctalhwyzxknll ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } <s> private void saveIntegrityKey ( javax.crypto.SecretKey ewmuajlrlwdokpwgrlts , java.lang.String tppupscctalhwyzxknll ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( tppupscctalhwyzxknll ) ) ; integrityKeyOutputStream . writeObject ( ewmuajlrlwdokpwgrlts ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , tppupscctalhwyzxknll ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } <s> Fix sonarqube issues
fix_before_refactoring: private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try ( java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ) { integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } }
fix_after_refactoring: private void saveIntegrityKey ( javax.crypto.SecretKey ewmuajlrlwdokpwgrlts , java.lang.String tppupscctalhwyzxknll ) { try ( java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( tppupscctalhwyzxknll ) ) ) { integrityKeyOutputStream . writeObject ( ewmuajlrlwdokpwgrlts ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , tppupscctalhwyzxknll ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } }
× fix_prediction_before: private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String keySavedMessage ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ; integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } }
× fix_prediction_after: private void saveIntegrityKey ( javax.crypto.SecretKey ewmuajlrlwdokpwgrlts , java.lang.String keySavedMessage ) { try { java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( tppupscctalhwyzxknll ) ) ; integrityKeyOutputStream . writeObject ( ewmuajlrlwdokpwgrlts ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , keySavedMessage ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } }

line_index: 397
bug_before_refactoring: protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } <s> protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } <s> MongoDB - don't perform inverse query if there are no child keys. Fixes https://github.com/grails/grails-core/issues/9898
bug_after_refactoring: protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session ktfjvvthrfpwaqerqhte , java.lang.Class lzcswazdosstifmcoadj , java.util.Collection hpwhhgekpzhwugkktdiq ) { if ( proxyEntities ) { for ( java.lang.Object key : hpwhhgekpzhwugkktdiq ) { add ( ktfjvvthrfpwaqerqhte . proxy ( lzcswazdosstifmcoadj , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( ktfjvvthrfpwaqerqhte . retrieveAll ( lzcswazdosstifmcoadj , hpwhhgekpzhwugkktdiq ) ) ; } } <s> protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session ktfjvvthrfpwaqerqhte , java.lang.Class lzcswazdosstifmcoadj , java.util.Collection hpwhhgekpzhwugkktdiq ) { if ( proxyEntities ) { for ( java.lang.Object key : hpwhhgekpzhwugkktdiq ) { add ( ktfjvvthrfpwaqerqhte . proxy ( lzcswazdosstifmcoadj , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( ktfjvvthrfpwaqerqhte . retrieveAll ( lzcswazdosstifmcoadj , hpwhhgekpzhwugkktdiq ) ) ; } } <s> MongoDB - don't perform inverse query if there are no child keys. Fixes https://github.com/grails/grails-core/issues/9898
fix_before_refactoring: protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( ! ( keys . isEmpty () ) ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } }
fix_after_refactoring: protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session ktfjvvthrfpwaqerqhte , java.lang.Class lzcswazdosstifmcoadj , java.util.Collection hpwhhgekpzhwugkktdiq ) { if ( ! ( hpwhhgekpzhwugkktdiq . isEmpty () ) ) { if ( proxyEntities ) { for ( java.lang.Object key : hpwhhgekpzhwugkktdiq ) { add ( ktfjvvthrfpwaqerqhte . proxy ( lzcswazdosstifmcoadj , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( ktfjvvthrfpwaqerqhte . retrieveAll ( lzcswazdosstifmcoadj , hpwhhgekpzhwugkktdiq ) ) ; } } }
× fix_prediction_before: protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , key ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } }
× fix_prediction_after: protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session ktfjvvthrfpwaqerqhte , java.lang.Class lzcswazdosstifmcoadj , java.util.Collection hpwhhgekpzhwugkktdiq ) { if ( proxyEntities ) { for ( java.lang.Object key : hpwhhgekpzhwugkktdiq ) { add ( ktfjvvthrfpwaqerqhte . proxy ( lzcswazdosstifmcoadj , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( ktfjvvthrfpwaqerqhte . retrieveAll ( lzcswazdosstifmcoadj , hpwhhgekpzhwugkktdiq ) ) ; } }

line_index: 398
bug_before_refactoring: public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } <s> public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } <s> bug fix
bug_after_refactoring: public void put ( java.util.Map < java.lang.String , java.lang.Object > ewumepzprdgaarsqoghu ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( ewumepzprdgaarsqoghu != null ) && ( ( ewumepzprdgaarsqoghu . size () ) > 0 ) ) mapEvent . setEvent ( ewumepzprdgaarsqoghu ) ; } finally { ringBuffer . publish ( sequence ) ; } } <s> public void put ( java.util.Map < java.lang.String , java.lang.Object > ewumepzprdgaarsqoghu ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( ewumepzprdgaarsqoghu != null ) && ( ( ewumepzprdgaarsqoghu . size () ) > 0 ) ) mapEvent . setEvent ( ewumepzprdgaarsqoghu ) ; } finally { ringBuffer . publish ( sequence ) ; } } <s> bug fix
fix_before_refactoring: public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { if ( ( event != null ) && ( ( event . size () ) > 0 ) ) { long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } }
fix_after_refactoring: public void put ( java.util.Map < java.lang.String , java.lang.Object > ewumepzprdgaarsqoghu ) { if ( ( ewumepzprdgaarsqoghu != null ) && ( ( ewumepzprdgaarsqoghu . size () ) > 0 ) ) { long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; mapEvent . setEvent ( ewumepzprdgaarsqoghu ) ; } finally { ringBuffer . publish ( sequence ) ; } } }
× fix_prediction_before: public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } }
× fix_prediction_after: public void put ( java.util.Map < java.lang.String , java.lang.Object > ewumepzprdgaarsqoghu ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long sequence = ringBuffer . next () ; com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( ewumepzprdgaarsqoghu != null ) && ( ( ewumepzprdgaarsqoghu . size () ) > 0 ) ) mapEvent . setEvent ( ewumepzprdgaarsqoghu ) ; ringBuffer . publish ( sequence ) ; }

line_index: 399
bug_before_refactoring: @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) { return true ; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } } <s> @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) { return true ; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } } <s> Bug Fixes and Code Improvements (#38)
bug_after_refactoring: @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread yqknuwyfkfhgpuvppsdz ) { if ( ( ( currenyqknuwyfkfhgpuvppsdzOwner ) == yqknuwyfkfhgpuvppsdz ) && ( yqknuwyfkfhgpuvppsdz . isAlive () ) ) { reyqknuwyfkfhgpuvppsdzurn yqknuwyfkfhgpuvppsdzrue ; } else if ( ( ( currenyqknuwyfkfhgpuvppsdzOwner ) == null ) && ( ( yqknuwyfkfhgpuvppsdz == null ) || ( yqknuwyfkfhgpuvppsdz . isAlive () ) ) ) { reyqknuwyfkfhgpuvppsdzurn yqknuwyfkfhgpuvppsdzrue ; } else { reyqknuwyfkfhgpuvppsdzurn false ; } } <s> @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread yqknuwyfkfhgpuvppsdz ) { if ( ( ( currenyqknuwyfkfhgpuvppsdzOwner ) == yqknuwyfkfhgpuvppsdz ) && ( yqknuwyfkfhgpuvppsdz . isAlive () ) ) { reyqknuwyfkfhgpuvppsdzurn yqknuwyfkfhgpuvppsdzrue ; } else if ( ( ( currenyqknuwyfkfhgpuvppsdzOwner ) == null ) && ( ( yqknuwyfkfhgpuvppsdz == null ) || ( yqknuwyfkfhgpuvppsdz . isAlive () ) ) ) { reyqknuwyfkfhgpuvppsdzurn yqknuwyfkfhgpuvppsdzrue ; } else { reyqknuwyfkfhgpuvppsdzurn false ; } } <s> Bug Fixes and Code Improvements (#38)
fix_before_refactoring: @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( t == null ) { if ( ( ( this . currentOwner ) == null ) || ( ! ( this . currentOwner . isAlive () ) ) ) return true ; else return false ; } else if ( t . isAlive () ) { if ( ( this . currentOwner ) == t ) return true ; else return false ; } else return false ; }
fix_after_refactoring: @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread yqknuwyfkfhgpuvppsdz ) { if ( yqknuwyfkfhgpuvppsdz == null ) { if ( ( ( yqknuwyfkfhgpuvppsdzhis . currenyqknuwyfkfhgpuvppsdzOwner ) == null ) || ( ! ( yqknuwyfkfhgpuvppsdzhis . currenyqknuwyfkfhgpuvppsdzOwner . isAlive () ) ) ) reyqknuwyfkfhgpuvppsdzurn yqknuwyfkfhgpuvppsdzrue ; else reyqknuwyfkfhgpuvppsdzurn false ; } else if ( yqknuwyfkfhgpuvppsdz . isAlive () ) { if ( ( yqknuwyfkfhgpuvppsdzhis . currenyqknuwyfkfhgpuvppsdzOwner ) == yqknuwyfkfhgpuvppsdz ) reyqknuwyfkfhgpuvppsdzurn yqknuwyfkfhgpuvppsdzrue ; else reyqknuwyfkfhgpuvppsdzurn false ; } else reyqknuwyfkfhgpuvppsdzurn false ; }
× fix_prediction_before: @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) { return true ; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } }
× fix_prediction_after: @ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread yqknuwyfkfhgpuvppsdz ) { if ( ( ( currenyqknuwyfkfhgpuvppsdzOwner ) == yqknuwyfkfhgpuvppsdz ) && ( yqknuwyfkfhgpuvppsdz . isAlive () ) ) { reyqknuwyfkfhgpuvppsdzurn yqknuwyfkfhgpuvppsdzrue ; } else if ( ( ( currenyqknuwyfkfhgpuvppsdzOwner ) == null ) && ( ( yqknuwyfkfhgpuvppsdz == null ) || ( yqknuwyfkfhgpuvppsdz . isAlive () ) ) ) { reyqknuwyfkfhgpuvppsdzurn yqknuwyfkfhgpuvppsdzrue ; } else { reyqknuwyfkfhgpuvppsdzurn false ; } return false ; }

line_index: 400
bug_before_refactoring: @ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( meta != null ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track . addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } } return track ; } <s> @ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( meta != null ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track . addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } } return track ; } <s> [xcode] Fixing bugs with ProRes output  adding h.264 raw stream.
bug_after_refactoring: @ java.lang.Override public org.jpzeaxrzfztmcuqecjeiv.common.MuxerTrack addVideoTrack ( org.jpzeaxrzfztmcuqecjeiv.common.Codec pzeaxrzfztmcuqecjeiv , org.jpzeaxrzfztmcuqecjeiv.common.VideoCodecMeta iowwnlwbdxkktieimhbj ) { org.jpzeaxrzfztmcuqecjeiv.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , pzeaxrzfztmcuqecjeiv ) ; if ( iowwnlwbdxkktieimhbj != null ) { if ( pzeaxrzfztmcuqecjeiv == ( org.jpzeaxrzfztmcuqecjeiv.common.Codec.H264 ) ) { track . addVideoSampleEntry ( iowwnlwbdxkktieimhbj ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all pzeaxrzfztmcuqecjeivs but H.264" ) ; } } return track ; } <s> @ java.lang.Override public org.jpzeaxrzfztmcuqecjeiv.common.MuxerTrack addVideoTrack ( org.jpzeaxrzfztmcuqecjeiv.common.Codec pzeaxrzfztmcuqecjeiv , org.jpzeaxrzfztmcuqecjeiv.common.VideoCodecMeta iowwnlwbdxkktieimhbj ) { org.jpzeaxrzfztmcuqecjeiv.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , pzeaxrzfztmcuqecjeiv ) ; if ( iowwnlwbdxkktieimhbj != null ) { if ( pzeaxrzfztmcuqecjeiv == ( org.jpzeaxrzfztmcuqecjeiv.common.Codec.H264 ) ) { track . addVideoSampleEntry ( iowwnlwbdxkktieimhbj ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all pzeaxrzfztmcuqecjeivs but H.264" ) ; } } return track ; } <s> [xcode] Fixing bugs with ProRes output  adding h.264 raw stream.
fix_before_refactoring: @ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( ( meta == null ) && ( codec != ( org.jcodec.common.Codec.H264 ) ) ) { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } track . addVideoSampleEntry ( meta ) ; return track ; }
fix_after_refactoring: @ java.lang.Override public org.jpzeaxrzfztmcuqecjeiv.common.MuxerTrack addVideoTrack ( org.jpzeaxrzfztmcuqecjeiv.common.Codec pzeaxrzfztmcuqecjeiv , org.jpzeaxrzfztmcuqecjeiv.common.VideoCodecMeta iowwnlwbdxkktieimhbj ) { org.jpzeaxrzfztmcuqecjeiv.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , pzeaxrzfztmcuqecjeiv ) ; if ( ( iowwnlwbdxkktieimhbj == null ) && ( pzeaxrzfztmcuqecjeiv != ( org.jpzeaxrzfztmcuqecjeiv.common.Codec.H264 ) ) ) { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all pzeaxrzfztmcuqecjeivs but H.264" ) ; } track . addVideoSampleEntry ( iowwnlwbdxkktieimhbj ) ; return track ; }
× fix_prediction_before: @ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( meta != null ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track . addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } } return track ; }
× fix_prediction_after: @ java.lang.Override public org.jpzeaxrzfztmcuqecjeiv.common.MuxerTrack addVideoTrack ( org.jpzeaxrzfztmcuqecjeiv.common.Codec pzeaxrzfztmcuqecjeiv , org.jpzeaxrzfztmcuqecjeiv.common.VideoCodecMeta iowwnlwbdxkktieimhbj ) { org.jpzeaxrzfztmcuqecjeiv.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , pzeaxrzfztmcuqecjeiv ) ; if ( iowwnlwbdxkktieimhbj != null ) { track . addVideoSampleEntry ( iowwnlwbdxkktieimhbj ) ; } if ( iowwnlwbdxkktieimhbj != null ) { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all pzeaxrzfztmcuqecjeivs but H.264" ) ; } return track ; }

line_index: 401
bug_before_refactoring: public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } <s> public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } <s> Bug fix
bug_after_refactoring: public static java.lang.Object invokeMethod ( java.lang.reflect.Method iwcveqnppgvmwmnbgsrl , java.lang.Object rbfqcxdtsrjvowyqpgby , java.lang.Object . . . pqaizpakyynzwhuzakcg ) { try { boolean a = ! ( iwcveqnppgvmwmnbgsrl . isAccessible () ) ; if ( ! ( iwcveqnppgvmwmnbgsrl . isAccessible () ) ) { iwcveqnppgvmwmnbgsrl . setAccessible ( true ) ; } java.lang.Object obj = iwcveqnppgvmwmnbgsrl . invoke ( rbfqcxdtsrjvowyqpgby , pqaizpakyynzwhuzakcg ) ; if ( a ) { iwcveqnppgvmwmnbgsrl . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } <s> public static java.lang.Object invokeMethod ( java.lang.reflect.Method iwcveqnppgvmwmnbgsrl , java.lang.Object rbfqcxdtsrjvowyqpgby , java.lang.Object . . . pqaizpakyynzwhuzakcg ) { try { boolean a = ! ( iwcveqnppgvmwmnbgsrl . isAccessible () ) ; if ( ! ( iwcveqnppgvmwmnbgsrl . isAccessible () ) ) { iwcveqnppgvmwmnbgsrl . setAccessible ( true ) ; } java.lang.Object obj = iwcveqnppgvmwmnbgsrl . invoke ( rbfqcxdtsrjvowyqpgby , pqaizpakyynzwhuzakcg ) ; if ( a ) { iwcveqnppgvmwmnbgsrl . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } <s> Bug fix
fix_before_refactoring: public java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }
fix_after_refactoring: public java.lang.Object invokeMethod ( java.lang.reflect.Method iwcveqnppgvmwmnbgsrl , java.lang.Object rbfqcxdtsrjvowyqpgby , java.lang.Object . . . pqaizpakyynzwhuzakcg ) { try { boolean a = ! ( iwcveqnppgvmwmnbgsrl . isAccessible () ) ; if ( ! ( iwcveqnppgvmwmnbgsrl . isAccessible () ) ) { iwcveqnppgvmwmnbgsrl . setAccessible ( true ) ; } java.lang.Object obj = iwcveqnppgvmwmnbgsrl . invoke ( rbfqcxdtsrjvowyqpgby , pqaizpakyynzwhuzakcg ) ; if ( a ) { iwcveqnppgvmwmnbgsrl . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_before: public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.String args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }
× fix_prediction_after: public static java.lang.Object invokeMethod ( java.lang.reflect.Method iwcveqnppgvmwmnbgsrl , java.lang.Object rbfqcxdtsrjvowyqpgby , java.lang.Object . . . pqaizpakyynzwhuzakcg ) { try { boolean a = ! ( iwcveqnppgvmwmnbgsrl . isAccessible () ) ; if ( ! ( iwcveqnppgvmwmnbgsrl . isAccessible () ) ) { iwcveqnppgvmwmnbgsrl . setAccessible ( true ) ; } java.lang.Object obj = iwcveqnppgvmwmnbgsrl . invoke ( rbfqcxdtsrjvowyqpgby , pqaizpakyynzwhuzakcg ) ; if ( a ) { iwcveqnppgvmwmnbgsrl . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }

line_index: 403
bug_before_refactoring: public void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } <s> public void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } <s> Bugfixes and add some methods
bug_after_refactoring: public void setTeam ( java.lang.Integer evhedrseaztfwrebuzcd ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.evhedrseaztfwrebuzcds . get ( evhedrseaztfwrebuzcd ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } <s> public void setTeam ( java.lang.Integer evhedrseaztfwrebuzcd ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.evhedrseaztfwrebuzcds . get ( evhedrseaztfwrebuzcd ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } <s> Bugfixes and add some methods
fix_before_refactoring: public static void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; }
fix_after_refactoring: public static void setTeam ( java.lang.Integer evhedrseaztfwrebuzcd ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.evhedrseaztfwrebuzcds . get ( evhedrseaztfwrebuzcd ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; }
× fix_prediction_before: public void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; }
× fix_prediction_after: public void setTeam ( java.lang.Integer evhedrseaztfwrebuzcd ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.evhedrseaztfwrebuzcds . get ( evhedrseaztfwrebuzcd ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; }

line_index: 404
bug_before_refactoring: private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> bug gefixt met betalen en shoppingcart
bug_after_refactoring: private void NewCookie ( javax.servlet.http.HttpServletResponse uxjtulvtqskcqvkfpbyf ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; uxjtulvtqskcqvkfpbyf . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> private void NewCookie ( javax.servlet.http.HttpServletResponse uxjtulvtqskcqvkfpbyf ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; uxjtulvtqskcqvkfpbyf . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } <s> bug gefixt met betalen en shoppingcart
fix_before_refactoring: public void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
fix_after_refactoring: public void NewCookie ( javax.servlet.http.HttpServletResponse uxjtulvtqskcqvkfpbyf ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; uxjtulvtqskcqvkfpbyf . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
× fix_prediction_before: protected void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }
× fix_prediction_after: protected void NewCookie ( javax.servlet.http.HttpServletResponse uxjtulvtqskcqvkfpbyf ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; uxjtulvtqskcqvkfpbyf . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; }

line_index: 405
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "extendedLabel" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , ( direction != null ? direction : org.springframework.data.domain.Sort.Direction.ASC ) , sortBy ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "extendedLabel" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , ( direction != null ? direction : org.springframework.data.domain.Sort.Direction.ASC ) , sortBy ) ) ; } <s> Fixed change page issue on inventory tabs from product card.
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{jgxlaegrmdfafrwbqcbt}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "jgxlaegrmdfafrwbqcbt" ) int jgxlaegrmdfafrwbqcbt , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer bzvbybpvjuxxcrldsqby , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer ldmaqmsdclahwohbnemj , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction qzbfpahgvcmpqtcdaqai , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "extendedLabel" ) java.lang.String hxhsjfjsvpnvfiowpxdm ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( jgxlaegrmdfafrwbqcbt ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( bzvbybpvjuxxcrldsqby , ldmaqmsdclahwohbnemj , ( qzbfpahgvcmpqtcdaqai != null ? qzbfpahgvcmpqtcdaqai : org.springframework.data.domain.Sort.Direction.ASC ) , hxhsjfjsvpnvfiowpxdm ) ) ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{jgxlaegrmdfafrwbqcbt}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "jgxlaegrmdfafrwbqcbt" ) int jgxlaegrmdfafrwbqcbt , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer bzvbybpvjuxxcrldsqby , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer ldmaqmsdclahwohbnemj , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction qzbfpahgvcmpqtcdaqai , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "extendedLabel" ) java.lang.String hxhsjfjsvpnvfiowpxdm ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( jgxlaegrmdfafrwbqcbt ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( bzvbybpvjuxxcrldsqby , ldmaqmsdclahwohbnemj , ( qzbfpahgvcmpqtcdaqai != null ? qzbfpahgvcmpqtcdaqai : org.springframework.data.domain.Sort.Direction.ASC ) , hxhsjfjsvpnvfiowpxdm ) ) ; } <s> Fixed change page issue on inventory tabs from product card.
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "DESC" ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "invoice.paidDate" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , direction , sortBy ) ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{jgxlaegrmdfafrwbqcbt}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "jgxlaegrmdfafrwbqcbt" ) int jgxlaegrmdfafrwbqcbt , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer bzvbybpvjuxxcrldsqby , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer ldmaqmsdclahwohbnemj , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "DESC" ) org.springframework.data.domain.Sort.Direction qzbfpahgvcmpqtcdaqai , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "invoice.paidDate" ) java.lang.String hxhsjfjsvpnvfiowpxdm ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( jgxlaegrmdfafrwbqcbt ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( bzvbybpvjuxxcrldsqby , ldmaqmsdclahwohbnemj , qzbfpahgvcmpqtcdaqai , hxhsjfjsvpnvfiowpxdm ) ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "extendedLabel" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , ( direction != null ? direction : org.springframework.data.domain.Sort.Direction.ASC ) , sortBy ) ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/{jgxlaegrmdfafrwbqcbt}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "jgxlaegrmdfafrwbqcbt" ) int jgxlaegrmdfafrwbqcbt" ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( jgxlaegrmdfafrwbqcbt ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "jgxlaegrmdfafrwbqcbt" ) java.lang.String hxhsjfjsvpnvfiowpxdm ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( jgxlaegrmdfafrwbqcbt ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( bzvbybpvjuxxcrldsqby , ldmaqmsdclahwohbnemj , ( qzbfpahgvcmpqtcdaqai != null ? qzbfpahgvcmpqtcdaqai : org.springframework.web.bind.annotation.RequestMethod.GET ) , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) ) ; }

line_index: 406
bug_before_refactoring: private static java.util.List < Tile > createGameBoard ( Board.Builder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , builder.boardConfig . get ( i ) ) ) ; } return tiles ; } <s> private static java.util.List < Tile > createGameBoard ( Board.Builder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , builder.boardConfig . get ( i ) ) ) ; } return tiles ; } <s> Board configuration  Board testing and Solved last bug but getting error on the calculations of the legal Moves of each piece. (Exception in thread "main" java.lang.NullPointerException at java.util.ArrayList.addAll(Unknown Source) at Board.calculateLegalMove(Board.java:47))
bug_after_refactoring: private static java.util.List < Tile > createGameBoard ( Board.Builder qgoydwkrewqadqfavhdi ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , qgoydwkrewqadqfavhdi.boardConfig . get ( i ) ) ) ; } return tiles ; } <s> private static java.util.List < Tile > createGameBoard ( Board.Builder qgoydwkrewqadqfavhdi ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , qgoydwkrewqadqfavhdi.boardConfig . get ( i ) ) ) ; } return tiles ; } <s> Board configuration  Board testing and Solved last bug but getting error on the calculations of the legal Moves of each piece. (Exception in thread "main" java.lang.NullPointerException at java.util.ArrayList.addAll(Unknown Source) at Board.calculateLegalMove(Board.java:47))
fix_before_refactoring: private static java.util.List < Tile > createGameBoard ( final Board.Builder builder ) { final Tile [] tiles = new Tile [ BoardUtils.NUM_TILES ] ; for ( int i = 0 ; i < ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles [ i ] = Tile . createTile ( i , builder.boardConfig . get ( i ) ) ; } return java.util.Arrays . asList ( tiles ) ; }
fix_after_refactoring: private static java.util.List < Tile > createGameBoard ( final Board.Builder qgoydwkrewqadqfavhdi ) { final Tile [] tiles = new Tile [ BoardUtils.NUM_TILES ] ; for ( int i = 0 ; i < ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles [ i ] = Tile . createTile ( i , qgoydwkrewqadqfavhdi.boardConfig . get ( i ) ) ; } return java.util.Arrays . asList ( tiles ) ; }
× fix_prediction_before: public static java.util.List < Tile > createGameBoard ( Board.Builder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , builder.boardConfig . get ( i ) ) ) ; } return tiles ; }
× fix_prediction_after: public static java.util.List < Tile > createGameBoard ( Board.Builder qgoydwkrewqadqfavhdi ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , qgoydwkrewqadqfavhdi.boardConfig . get ( i ) ) ) ; } return tiles ; }

line_index: 407
bug_before_refactoring: private double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } <s> private double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } <s> Fixed thread-safety issues in DTM2000 model.  Thanks to Hao Peng for identifying the issue and to Evan Ward for analyzing it.  Fixes issue #258.
bug_after_refactoring: private double semestrialCorrection ( final double sayzfnndvxkfqvvaknrc ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = sayzfnndvxkfqvvaknrc - ( ( 2.0 * sayzfnndvxkfqvvaknrc ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * sayzfnndvxkfqvvaknrc ) * xmult ) - sayzfnndvxkfqvvaknrc ; } return result ; } <s> private double semestrialCorrection ( final double sayzfnndvxkfqvvaknrc ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = sayzfnndvxkfqvvaknrc - ( ( 2.0 * sayzfnndvxkfqvvaknrc ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * sayzfnndvxkfqvvaknrc ) * xmult ) - sayzfnndvxkfqvvaknrc ; } return result ; } <s> Fixed thread-safety issues in DTM2000 model.  Thanks to Hao Peng for identifying the issue and to Evan Ward for analyzing it.  Fixes issue #258.
fix_before_refactoring: private synchronized double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; }
fix_after_refactoring: private synchronized double semestrialCorrection ( final double sayzfnndvxkfqvvaknrc ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = sayzfnndvxkfqvvaknrc - ( ( 2.0 * sayzfnndvxkfqvvaknrc ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * sayzfnndvxkfqvvaknrc ) * xmult ) - sayzfnndvxkfqvvaknrc ; } return result ; }
× fix_prediction_before: protected double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; }
× fix_prediction_after: protected double semestrialCorrection ( final double sayzfnndvxkfqvvaknrc ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = sayzfnndvxkfqvvaknrc - ( ( 2.0 * sayzfnndvxkfqvvaknrc ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * sayzfnndvxkfqvvaknrc ) * xmult ) - sayzfnndvxkfqvvaknrc ; } return result ; }

line_index: 408
bug_before_refactoring: public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } <s> public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
bug_after_refactoring: public static void writeNBTFound ( net.minecraft.jcyqajwttpqndaixugnm.NBTTagCompound jcyqajwttpqndaixugnm , net.minecraft.util.math.BlockPos qgptknhfucizhiwkfbkm ) { jcyqajwttpqndaixugnm . setBoolean ( "found" , true ) ; jcyqajwttpqndaixugnm . removeTag ( "searchStarted" ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmX" , qgptknhfucizhiwkfbkm . getX () ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmZ" , qgptknhfucizhiwkfbkm . getZ () ) ; } <s> public static void writeNBTFound ( net.minecraft.jcyqajwttpqndaixugnm.NBTTagCompound jcyqajwttpqndaixugnm , net.minecraft.util.math.BlockPos qgptknhfucizhiwkfbkm ) { jcyqajwttpqndaixugnm . setBoolean ( "found" , true ) ; jcyqajwttpqndaixugnm . removeTag ( "searchStarted" ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmX" , qgptknhfucizhiwkfbkm . getX () ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmZ" , qgptknhfucizhiwkfbkm . getZ () ) ; } <s> Fixed biome finder not working on servers Additional null check  to hopefully prevent issues in the future Some minor cleanup
fix_before_refactoring: private static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; }
fix_after_refactoring: private static void writeNBTFound ( net.minecraft.jcyqajwttpqndaixugnm.NBTTagCompound jcyqajwttpqndaixugnm , net.minecraft.util.math.BlockPos qgptknhfucizhiwkfbkm ) { jcyqajwttpqndaixugnm . setBoolean ( "found" , true ) ; jcyqajwttpqndaixugnm . removeTag ( "searchStarted" ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmX" , qgptknhfucizhiwkfbkm . getX () ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmZ" , qgptknhfucizhiwkfbkm . getZ () ) ; }
× fix_prediction_before: public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { if ( pos != null ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } }
× fix_prediction_after: public static void writeNBTFound ( net.minecraft.jcyqajwttpqndaixugnm.NBTTagCompound jcyqajwttpqndaixugnm , net.minecraft.util.math.BlockPos qgptknhfucizhiwkfbkm ) { if ( ( jcyqajwttpqndaixugnm ) != null ) { jcyqajwttpqndaixugnm . setBoolean ( "found" , true ) ; jcyqajwttpqndaixugnm . removeTag ( "searchStarted" ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmX" , qgptknhfucizhiwkfbkm . getX () ) ; jcyqajwttpqndaixugnm . setInteger ( "qgptknhfucizhiwkfbkmZ" , qgptknhfucizhiwkfbkm . getZ () ) ; } }

line_index: 409
bug_before_refactoring: private void updateDefStats ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; } <s> private void updateDefStats ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
bug_after_refactoring: private void updateDefStats ( boolean xmtjlioleegdnqblacbv , boolean ccfyqcklawlgnadumdzg , boolean xflezzmypqrgdcwzucat , boolean gjajfcjbjxbhklgkrtxy , boolean ujjljsqnmlvwtingyzlc , boolean cnnzlhcrjspsyobqijdo , boolean gvlznndlzyjusatbitez ) { if ( xmtjlioleegdnqblacbv ) ( xmtjlioleegdnqblacbvs ) ++ ; if ( ccfyqcklawlgnadumdzg ) ( ccfyqcklawlgnadumdzgs ) ++ ; if ( ccfyqcklawlgnadumdzg && xflezzmypqrgdcwzucat ) ( tfls ) ++ ; if ( gjajfcjbjxbhklgkrtxy ) ( gjajfcjbjxbhklgkrtxys ) ++ ; if ( cnnzlhcrjspsyobqijdo ) ( cnnzlhcrjspsyobqijdos ) ++ ; if ( gvlznndlzyjusatbitez ) ( defgvlznndlzyjusatbitezs ) ++ ; if ( ujjljsqnmlvwtingyzlc ) ( ujjljsqnmlvwtingyzlcs ) ++ ; } <s> private void updateDefStats ( boolean xmtjlioleegdnqblacbv , boolean ccfyqcklawlgnadumdzg , boolean xflezzmypqrgdcwzucat , boolean gjajfcjbjxbhklgkrtxy , boolean ujjljsqnmlvwtingyzlc , boolean cnnzlhcrjspsyobqijdo , boolean gvlznndlzyjusatbitez ) { if ( xmtjlioleegdnqblacbv ) ( xmtjlioleegdnqblacbvs ) ++ ; if ( ccfyqcklawlgnadumdzg ) ( ccfyqcklawlgnadumdzgs ) ++ ; if ( ccfyqcklawlgnadumdzg && xflezzmypqrgdcwzucat ) ( tfls ) ++ ; if ( gjajfcjbjxbhklgkrtxy ) ( gjajfcjbjxbhklgkrtxys ) ++ ; if ( cnnzlhcrjspsyobqijdo ) ( cnnzlhcrjspsyobqijdos ) ++ ; if ( gvlznndlzyjusatbitez ) ( defgvlznndlzyjusatbitezs ) ++ ; if ( ujjljsqnmlvwtingyzlc ) ( ujjljsqnmlvwtingyzlcs ) ++ ; } <s> 5 hrs. Ready for field test 1 at Lake Howell. Added recent players and various other bug fixes and whatnot. Got stats working and undo button funtioning. Hope this goes well...
fix_before_refactoring: public void updateDefStats ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; }
fix_after_refactoring: public void updateDefStats ( boolean xmtjlioleegdnqblacbv , boolean ccfyqcklawlgnadumdzg , boolean xflezzmypqrgdcwzucat , boolean gjajfcjbjxbhklgkrtxy , boolean ujjljsqnmlvwtingyzlc , boolean cnnzlhcrjspsyobqijdo , boolean gvlznndlzyjusatbitez ) { if ( xmtjlioleegdnqblacbv ) ( xmtjlioleegdnqblacbvs ) ++ ; if ( ccfyqcklawlgnadumdzg ) ( ccfyqcklawlgnadumdzgs ) ++ ; if ( ccfyqcklawlgnadumdzg && xflezzmypqrgdcwzucat ) ( tfls ) ++ ; if ( gjajfcjbjxbhklgkrtxy ) ( gjajfcjbjxbhklgkrtxys ) ++ ; if ( cnnzlhcrjspsyobqijdo ) ( cnnzlhcrjspsyobqijdos ) ++ ; if ( gvlznndlzyjusatbitez ) ( defgvlznndlzyjusatbitezs ) ++ ; if ( ujjljsqnmlvwtingyzlc ) ( ujjljsqnmlvwtingyzlcs ) ++ ; }
× fix_prediction_before: private void updateDefStats ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; }
× fix_prediction_after: private void updateDefStats ( boolean xmtjlioleegdnqblacbv , boolean ccfyqcklawlgnadumdzg , boolean xflezzmypqrgdcwzucat , boolean gjajfcjbjxbhklgkrtxy , boolean ujjljsqnmlvwtingyzlc , boolean cnnzlhcrjspsyobqijdo , boolean gvlznndlzyjusatbitez ) { if ( xmtjlioleegdnqblacbv ) ( xmtjlioleegdnqblacbvs ) ++ ; if ( ccfyqcklawlgnadumdzg ) ( ccfyqcklawlgnadumdzgs ) ++ ; if ( ccfyqcklawlgnadumdzg && xflezzmypqrgdcwzucat ) ( tfls ) ++ ; if ( gjajfcjbjxbhklgkrtxy ) ( gjajfcjbjxbhklgkrtxys ) ++ ; if ( cnnzlhcrjspsyobqijdo ) ( cnnzlhcrjspsyobqijdos ) ++ ; if ( gvlznndlzyjusatbitez ) ( defgvlznndlzyjusatbitezs ) ++ ; if ( ujljsqnmlvwtingyzlc ) ( ujjljsqnmlvwtingyzlcs ) ++ ; }

line_index: 411
bug_before_refactoring: private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; } <s> private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; } <s> fixed various opcdoe bugs  now just trying to fix the graphical output..
bug_after_refactoring: private int getFlag ( int ajgekhhzctsnyffoxcjl ) { int ajgekhhzctsnyffoxcjlVal = 0 ; int ajgekhhzctsnyffoxcjlReg = ( registers [ Z80.REGISTER_F ] ) & ajgekhhzctsnyffoxcjl ; switch ( ajgekhhzctsnyffoxcjl ) { case Z80.FLAG_ZERO : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 5 ; break; case Z80.FLAG_CARRY : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 4 ; break; } return ajgekhhzctsnyffoxcjlVal ; } <s> private int getFlag ( int ajgekhhzctsnyffoxcjl ) { int ajgekhhzctsnyffoxcjlVal = 0 ; int ajgekhhzctsnyffoxcjlReg = ( registers [ Z80.REGISTER_F ] ) & ajgekhhzctsnyffoxcjl ; switch ( ajgekhhzctsnyffoxcjl ) { case Z80.FLAG_ZERO : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 5 ; break; case Z80.FLAG_CARRY : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 4 ; break; } return ajgekhhzctsnyffoxcjlVal ; } <s> fixed various opcdoe bugs  now just trying to fix the graphical output..
fix_before_refactoring: public int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; }
fix_after_refactoring: public int getFlag ( int ajgekhhzctsnyffoxcjl ) { int ajgekhhzctsnyffoxcjlVal = 0 ; int ajgekhhzctsnyffoxcjlReg = ( registers [ Z80.REGISTER_F ] ) & ajgekhhzctsnyffoxcjl ; switch ( ajgekhhzctsnyffoxcjl ) { case Z80.FLAG_ZERO : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 5 ; break; case Z80.FLAG_CARRY : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 4 ; break; } return ajgekhhzctsnyffoxcjlVal ; }
× fix_prediction_before: public int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; }
× fix_prediction_after: public int getFlag ( int ajgekhhzctsnyffoxcjl ) { int ajgekhhzctsnyffoxcjlVal = 0 ; int ajgekhhzctsnyffoxcjlReg = ( registers [ Z80.REGISTER_F ] ) & ajgekhhzctsnyffoxcjl ; switch ( ajgekhhzctsnyffoxcjl ) { case Z80.FLAG_ZERO : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlVal > > > 6 ; break; case Z80.FLAG_HALFCARRY : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 5 ; break; case Z80.FLAG_CARRY : ajgekhhzctsnyffoxcjlVal = ajgekhhzctsnyffoxcjlReg > > > 4 ; break; } return ajgekhhzctsnyffoxcjlVal ; }

line_index: 412
bug_before_refactoring: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "appId" ) final java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String suppressId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; } <s> @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "appId" ) final java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String suppressId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; } <s> bug fix for active push configs and support for push config suppress
bug_after_refactoring: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "jqzltrlvwdwidgkvzxjn" ) final java.lang.String jqzltrlvwdwidgkvzxjn ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String mauzxhozmnqjzbheurhb ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( jqzltrlvwdwidgkvzxjn , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( jqzltrlvwdwidgkvzxjn ) ; } <s> @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "jqzltrlvwdwidgkvzxjn" ) final java.lang.String jqzltrlvwdwidgkvzxjn ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String mauzxhozmnqjzbheurhb ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( jqzltrlvwdwidgkvzxjn , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( jqzltrlvwdwidgkvzxjn ) ; } <s> bug fix for active push configs and support for push config suppress
fix_before_refactoring: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.QueryParam ( value = "appId" ) java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String appId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; }
fix_after_refactoring: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.QueryParam ( value = "jqzltrlvwdwidgkvzxjn" ) java.lang.String jqzltrlvwdwidgkvzxjn ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String jqzltrlvwdwidgkvzxjn ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( jqzltrlvwdwidgkvzxjn , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( jqzltrlvwdwidgkvzxjn ) ; }
× fix_prediction_before: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "appId" ) final java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String suppressId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > result = new com.magnet.mmx.server.plugin.mmxmgmt.MMXPushSuppressResponse ( value = null ) ; return result ; } } ) { return null ; } }
× fix_prediction_after: @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = "jqzltrlvwdwidgkvzxjn" ) final java.lang.String jqzltrlvwdwidgkvzxjn ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String mauzxhozqjzbheurh ) throws com.magnet.mmx.server.plugin.mmxmxmgmt.servlet.integration.PushConfigSuppressResponse > > result = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResponse () ; return result ; } }

line_index: 414
bug_before_refactoring: public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } <s> public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } <s> Offline Tech Search (Sort of) bug fix
bug_after_refactoring: public oyykvhoelgrscdninoeewg.jsoup.select.Elements payykvhoelgrscdninoeewse ( oyykvhoelgrscdninoeewg.jsoup.select.Elements yykvhoelgrscdninoeew ) { yykvhoelgrscdninoeewesults = yykvhoelgrscdninoeew . select ( " tyykvhoelgrscdninoeew.pyykvhoelgrscdninoeewoductListing-odd" ) ; yykvhoelgrscdninoeewesultsEven = yykvhoelgrscdninoeew . select ( " tyykvhoelgrscdninoeew.pyykvhoelgrscdninoeewoductListing-even" ) ; foyykvhoelgrscdninoeew ( int j = 0 ; j < ( yykvhoelgrscdninoeewesultsEven . size () ) ; j ++ ) { yykvhoelgrscdninoeewesults . add ( yykvhoelgrscdninoeewesultsEven . get ( j ) ) ; } java.lang.System.out . pyykvhoelgrscdninoeewintln ( ( ( yykvhoelgrscdninoeewesults . size () ) + " Results have been yykvhoelgrscdninoeewetuyykvhoelgrscdninoeewned fyykvhoelgrscdninoeewom CanadaComputeyykvhoelgrscdninoeews." ) ) ; yykvhoelgrscdninoeewetuyykvhoelgrscdninoeewn yykvhoelgrscdninoeewesults ; } <s> public oyykvhoelgrscdninoeewg.jsoup.select.Elements payykvhoelgrscdninoeewse ( oyykvhoelgrscdninoeewg.jsoup.select.Elements yykvhoelgrscdninoeew ) { yykvhoelgrscdninoeewesults = yykvhoelgrscdninoeew . select ( " tyykvhoelgrscdninoeew.pyykvhoelgrscdninoeewoductListing-odd" ) ; yykvhoelgrscdninoeewesultsEven = yykvhoelgrscdninoeew . select ( " tyykvhoelgrscdninoeew.pyykvhoelgrscdninoeewoductListing-even" ) ; foyykvhoelgrscdninoeew ( int j = 0 ; j < ( yykvhoelgrscdninoeewesultsEven . size () ) ; j ++ ) { yykvhoelgrscdninoeewesults . add ( yykvhoelgrscdninoeewesultsEven . get ( j ) ) ; } java.lang.System.out . pyykvhoelgrscdninoeewintln ( ( ( yykvhoelgrscdninoeewesults . size () ) + " Results have been yykvhoelgrscdninoeewetuyykvhoelgrscdninoeewned fyykvhoelgrscdninoeewom CanadaComputeyykvhoelgrscdninoeews." ) ) ; yykvhoelgrscdninoeewetuyykvhoelgrscdninoeewn yykvhoelgrscdninoeewesults ; } <s> Offline Tech Search (Sort of) bug fix
fix_before_refactoring: public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { if ( r != null ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } else { return null ; } }
fix_after_refactoring: public oyykvhoelgrscdninoeewg.jsoup.select.Elements payykvhoelgrscdninoeewse ( oyykvhoelgrscdninoeewg.jsoup.select.Elements yykvhoelgrscdninoeew ) { if ( yykvhoelgrscdninoeew != null ) { yykvhoelgrscdninoeewesults = yykvhoelgrscdninoeew . select ( " tyykvhoelgrscdninoeew.pyykvhoelgrscdninoeewoductListing-odd" ) ; yykvhoelgrscdninoeewesultsEven = yykvhoelgrscdninoeew . select ( " tyykvhoelgrscdninoeew.pyykvhoelgrscdninoeewoductListing-even" ) ; foyykvhoelgrscdninoeew ( int j = 0 ; j < ( yykvhoelgrscdninoeewesultsEven . size () ) ; j ++ ) { yykvhoelgrscdninoeewesults . add ( yykvhoelgrscdninoeewesultsEven . get ( j ) ) ; } java.lang.System.out . pyykvhoelgrscdninoeewintln ( ( ( yykvhoelgrscdninoeewesults . size () ) + " Results have been yykvhoelgrscdninoeewetuyykvhoelgrscdninoeewned fyykvhoelgrscdninoeewom CanadaComputeyykvhoelgrscdninoeews." ) ) ; yykvhoelgrscdninoeewetuyykvhoelgrscdninoeewn yykvhoelgrscdninoeewesults ; } else { yykvhoelgrscdninoeewetuyykvhoelgrscdninoeewn null ; } }
× fix_prediction_before: public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } return results ; }
× fix_prediction_after: public oyykvhoelgrscdninoeewg.jsoup.select.Elements payykvhoelgrscdninoeewse ( oyykvhoelgrscdninoeewg.jsoup.select.Elements yykvhoelgrscdninoeew ) { yykvhoelgrscdninoeewesults = yykvhoelgrscdninoeew . select ( " tyykvhoelgrscdninoeew.pyykvhoelgrscdninoeewoductListing-odd" ) ; yykvhoelgrscdninoeewesultsEven = yykvhoelgrscdninoeew . select ( " tyykvhoelgrscdninoeew.pyykvhoelgrscdninoeewoductListing-even" ) ; foyykvhoelgrscdninoeew ( int j = 0 ; j < ( yykvhoelgrscdninoeewesultsEven . size () ) ; j ++ ) { yykvhoelgrscdninoeewesults . add ( yykvhoelgrscdninoeewesultsEven . get ( j ) ) ; } java.lang.System.out . pyykvhoelgrscdninoeewintln ( ( ( yykvhoelgrscdninoeewesults . size () ) + " Results have been yykvhoelgrscdninoeewetuyykvhoelgrscdninoeewned fyykvhoelgrscdninoeewom CanadaComputeyykvhoelgrscdninoeews." ) ) ; }

line_index: 415
bug_before_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> [Bugfix] Fix several concurrency issues  OSGi services might come and go in an uncoordinated way. Services which deal with OSGi service references need to take care of the concurrent nature of such service events.
bug_after_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle wtxhioozfhfhidtfeovu ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( wtxhioozfhfhidtfeovu . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle wtxhioozfhfhidtfeovu ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( wtxhioozfhfhidtfeovu . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; } <s> [Bugfix] Fix several concurrency issues  OSGi services might come and go in an uncoordinated way. Services which deal with OSGi service references need to take care of the concurrent nature of such service events.
fix_before_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } return null ; }
fix_after_refactoring: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle wtxhioozfhfhidtfeovu ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( wtxhioozfhfhidtfeovu . equals ( entry . getValue () ) ) return entry . getKey () ; } return null ; }
× fix_prediction_before: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; }
× fix_prediction_after: public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle wtxhioozfhfhidtfeovu ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( wtxhioozfhidtfeovu . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; }

line_index: 416
bug_before_refactoring: public int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; } <s> public int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; } <s> Fixed recent history updated bug
bug_after_refactoring: public int findHistoryRecord ( java.lang.String exokdefudtejzgbvasnn ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.exokdefudtejzgbvasnn ) == exokdefudtejzgbvasnn ) { return i + 1 ; } } return 0 ; } <s> public int findHistoryRecord ( java.lang.String exokdefudtejzgbvasnn ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.exokdefudtejzgbvasnn ) == exokdefudtejzgbvasnn ) { return i + 1 ; } } return 0 ; } <s> Fixed recent history updated bug
fix_before_refactoring: private int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; }
fix_after_refactoring: private int findHistoryRecord ( java.lang.String exokdefudtejzgbvasnn ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.exokdefudtejzgbvasnn ) == exokdefudtejzgbvasnn ) { return i + 1 ; } } return 0 ; }
× fix_prediction_before: public int findHistoryRecord ( java.lang.String placeId ) { if ( placeId != null ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } } return 0 ; }
× fix_prediction_after: public int findHistoryRecord () { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord () ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.exokdefudtejzgbvasnn ) == exokdefudtejzgbvasnn ) { return i + 1 ; } } return 0 ; }

line_index: 417
bug_before_refactoring: public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } } <s> public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } } <s> Fix Final Translation Compilation Issues
bug_after_refactoring: public void enqueue ( java.lang.Object ahavyacwqwfkyhheudrz ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( ahavyacwqwfkyhheudrz ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } } <s> public void enqueue ( java.lang.Object ahavyacwqwfkyhheudrz ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( ahavyacwqwfkyhheudrz ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } } <s> Fix Final Translation Compilation Issues
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) resize () ; queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) rear = 0 ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) public void enqueue ( java.lang.Object ahavyacwqwfkyhheudrz ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) resize () ; queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( ahavyacwqwfkyhheudrz ) ) ; if ( ( rear ) == ( n ) ) rear = 0 ; }
× fix_prediction_before: public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( n ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = element ; if ( ( rear ) == ( n ) ) { rear = 0 ; } }
× fix_prediction_after: public boolean enqueue ( java.lang.Object ahavyacwqwfkyhheudrz ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; return false ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( ahavyacwqwfkyhheudrz ) ) ; return true ; }

line_index: 419
bug_before_refactoring: public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } <s> public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } <s> fix inSampleSize algorithm issue
bug_after_refactoring: public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options ffpdyzqabsqtfgnauipk , int blwtvxguicviqvzqegzh , int xpicrjbuknjflmsthsdf ) { final int height = ffpdyzqabsqtfgnauipk.outHeight ; final int width = ffpdyzqabsqtfgnauipk.outWidth ; int inSampleSize = 1 ; if ( ( height > xpicrjbuknjflmsthsdf ) || ( width > blwtvxguicviqvzqegzh ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > xpicrjbuknjflmsthsdf ) && ( ( halfWidth / inSampleSize ) > blwtvxguicviqvzqegzh ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } <s> public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options ffpdyzqabsqtfgnauipk , int blwtvxguicviqvzqegzh , int xpicrjbuknjflmsthsdf ) { final int height = ffpdyzqabsqtfgnauipk.outHeight ; final int width = ffpdyzqabsqtfgnauipk.outWidth ; int inSampleSize = 1 ; if ( ( height > xpicrjbuknjflmsthsdf ) || ( width > blwtvxguicviqvzqegzh ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > xpicrjbuknjflmsthsdf ) && ( ( halfWidth / inSampleSize ) > blwtvxguicviqvzqegzh ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } <s> fix inSampleSize algorithm issue
fix_before_refactoring: public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , final int reqWidth , final int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) || ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
fix_after_refactoring: public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options ffpdyzqabsqtfgnauipk , final int blwtvxguicviqvzqegzh , final int xpicrjbuknjflmsthsdf ) { final int height = ffpdyzqabsqtfgnauipk.outHeight ; final int width = ffpdyzqabsqtfgnauipk.outWidth ; int inSampleSize = 1 ; if ( ( height > xpicrjbuknjflmsthsdf ) || ( width > blwtvxguicviqvzqegzh ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > xpicrjbuknjflmsthsdf ) || ( ( halfWidth / inSampleSize ) > blwtvxguicviqvzqegzh ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
× fix_prediction_before: public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
× fix_prediction_after: private static int calculateInSampleSize ( android.graphics.BitmapFactory.Options ffpdyzqabsqtfgnauipk , int blwtvxguicviqvzqegzh , int xpicrjbuknjflmsthsdf ) { final int height = ffpdyzqabsqtfgnauipk.outHeight ; final int width = ffpdyzqabsqtfgnauipk.outWidth ; int inSampleSize = 1 ; if ( ( height > xpicrjbuknjflmsthsdf ) || ( width > blwtvxguicviqvzqegzh ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > xpicrjbuknjflmsthsdf ) && ( ( halfWidth / inSampleSize ) > blwtvxguicviqvzqegzh ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }

line_index: 422
bug_before_refactoring: int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; } <s> int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; } <s> Fixed a few cosmetic issues.
bug_after_refactoring: int bxfhqpmameuuoyqkonhaToInt ( java.lang.Object bxfhqpmameuuoyqkonha , int todjoglzxyrefbtzuzbr ) { int reply = todjoglzxyrefbtzuzbr ; if ( ( bxfhqpmameuuoyqkonha != null ) && ( bxfhqpmameuuoyqkonha instanceof java.lang.String ) ) { try { reply = java.lang.Integer . bxfhqpmameuuoyqkonhaOf ( ( ( java.lang.String ) ( bxfhqpmameuuoyqkonha ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; } <s> int bxfhqpmameuuoyqkonhaToInt ( java.lang.Object bxfhqpmameuuoyqkonha , int todjoglzxyrefbtzuzbr ) { int reply = todjoglzxyrefbtzuzbr ; if ( ( bxfhqpmameuuoyqkonha != null ) && ( bxfhqpmameuuoyqkonha instanceof java.lang.String ) ) { try { reply = java.lang.Integer . bxfhqpmameuuoyqkonhaOf ( ( ( java.lang.String ) ( bxfhqpmameuuoyqkonha ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; } <s> Fixed a few cosmetic issues.
fix_before_refactoring: { reply = defaultValue ; }
fix_after_refactoring: { reply = todjoglzxyrefbtzuzbr ; }
× fix_prediction_before: int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; }
× fix_prediction_after: int bxfhqpmameuuoyqkonhaToInt ( java.lang.Object bxfhqpmameuuoyqkonha , int todjoglzxyrefbtzuzbr ) { int reply = 0 ; if ( ( bxfhqpmameuuoyqkonha != null ) && ( bxfhqpmameuuoyqkonha instanceof java.lang.String ) ) { try { reply = java.lang.Integer . bxfhqpmameuuoyqkonhaOf ( ( ( java.lang.String ) ( bxfhqpmameuuoyqkonha ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; }

line_index: 423
bug_before_refactoring: @ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; rec1 . put ( Constants.CLOSE , avg ) ; return rec1 ; } <s> @ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; rec1 . put ( Constants.CLOSE , avg ) ; return rec1 ; } <s> cleanup and fix thread issue with use of Date
bug_after_refactoring: @ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord ifegyznlsimofuyxrhkc , com.jt.commons.GenericRecord zojmkyvwcxdhmctsfshd ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( ifegyznlsimofuyxrhkc . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( zojmkyvwcxdhmctsfshd . get ( Constants.CLOSE ) ) ) ) / 2 ; ifegyznlsimofuyxrhkc . put ( Constants.CLOSE , avg ) ; return ifegyznlsimofuyxrhkc ; } <s> @ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord ifegyznlsimofuyxrhkc , com.jt.commons.GenericRecord zojmkyvwcxdhmctsfshd ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( ifegyznlsimofuyxrhkc . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( zojmkyvwcxdhmctsfshd . get ( Constants.CLOSE ) ) ) ) / 2 ; ifegyznlsimofuyxrhkc . put ( Constants.CLOSE , avg ) ; return ifegyznlsimofuyxrhkc ; } <s> cleanup and fix thread issue with use of Date
fix_before_refactoring: @ java.lang.Override public java.lang.Double call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; return avg ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Double call ( com.jt.commons.GenericRecord ifegyznlsimofuyxrhkc , com.jt.commons.GenericRecord zojmkyvwcxdhmctsfshd ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( ifegyznlsimofuyxrhkc . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( zojmkyvwcxdhmctsfshd . get ( Constants.CLOSE ) ) ) ) / 2 ; return avg ; }
× fix_prediction_before: @ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { synchronized ( rec1 ) { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; rec1 . put ( Constants.CLOSE , avg ) ; return rec1 ; } }
× fix_prediction_after: @ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord zojmkyvwcxdhmctsfshd ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( ifegyznlsimofuyxrhkc . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( zojmkyvwcxdhmctsfshd . get ( Constants.CLOSE ) ) ) ) / 2 ; ifegyznlsimofuyxrhkc . put ( Constants.CLOSE , avg ) ; return ifegyznlsimofuyxrhkc ; }

line_index: 424
bug_before_refactoring: public void toHTMLTable ( java.io.PrintWriter ostr ) { T tmp ; ostr . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; ostr . print ( tmp . toHTMLTableRow () ) ; } ostr . print ( "</table>" ) ; ostr . flush () ; } <s> public void toHTMLTable ( java.io.PrintWriter ostr ) { T tmp ; ostr . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; ostr . print ( tmp . toHTMLTableRow () ) ; } ostr . print ( "</table>" ) ; ostr . flush () ; } <s> Fixed encoding issues. Webadmin ready.
bug_after_refactoring: public void toHTMLTable ( java.io.PrintWriter sjfrtfzngiozpzdybaaf ) { T tmp ; sjfrtfzngiozpzdybaaf . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; sjfrtfzngiozpzdybaaf . print ( tmp . toHTMLTableRow () ) ; } sjfrtfzngiozpzdybaaf . print ( "</table>" ) ; sjfrtfzngiozpzdybaaf . flush () ; } <s> public void toHTMLTable ( java.io.PrintWriter sjfrtfzngiozpzdybaaf ) { T tmp ; sjfrtfzngiozpzdybaaf . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; sjfrtfzngiozpzdybaaf . print ( tmp . toHTMLTableRow () ) ; } sjfrtfzngiozpzdybaaf . print ( "</table>" ) ; sjfrtfzngiozpzdybaaf . flush () ; } <s> Fixed encoding issues. Webadmin ready.
fix_before_refactoring: public void toHTMLTable ( java.io.PrintWriter output ) { T tmp ; output . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; output . print ( tmp . toHTMLTableRow () ) ; } output . print ( "</table>" ) ; output . flush () ; }
fix_after_refactoring: public void toHTMLTable ( java.io.PrintWriter output ) { T tmp ; output . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; output . print ( tmp . toHTMLTableRow () ) ; } output . print ( "</table>" ) ; output . flush () ; }
× fix_prediction_before: public void toHTMLTable () { T tmp ; ostr . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; ostr . print ( tmp . toHTMLTableRow () ) ; } ostr . print ( "</table>" ) ; ostr . flush () ; }
× fix_prediction_after: public void toHTMLTable () { T tmp ; sjfrtfzngiozpzdybaaf . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; sjfrtfzngiozpzdybaaf . print ( tmp . toHTMLTableRow () ) ; } sjfrtfzngiozpzdybaaf . print ( "</table>" ) ; sjfrtfzngiozpzdybaaf . flush () ; }

line_index: 425
bug_before_refactoring: private java.io.File interpolateDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( params . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } return targetDockerfile ; } <s> private java.io.File interpolateDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( params . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } return targetDockerfile ; } <s> Fix issue with custom Dockerfile not properly added.  Fixes #784.
bug_after_refactoring: private java.io.File interpolateDockerfile ( java.io.File nyjxgyseqzfrnqawtfdf , io.fabric8.maven.docker.assembly.BuildDirs smriehqkbdpevscfmpqt , java.util.Properties jmnaikshwqdcaleghavy , java.lang.String mqluzudbqratzpwdlhoa ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( smriehqkbdpevscfmpqt . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String nyjxgyseqzfrnqawtfdfInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( nyjxgyseqzfrnqawtfdf , jmnaikshwqdcaleghavy , mqluzudbqratzpwdlhoa ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( nyjxgyseqzfrnqawtfdfInterpolated , writer ) ; } return targetDockerfile ; } <s> private java.io.File interpolateDockerfile ( java.io.File nyjxgyseqzfrnqawtfdf , io.fabric8.maven.docker.assembly.BuildDirs smriehqkbdpevscfmpqt , java.util.Properties jmnaikshwqdcaleghavy , java.lang.String mqluzudbqratzpwdlhoa ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( smriehqkbdpevscfmpqt . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String nyjxgyseqzfrnqawtfdfInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( nyjxgyseqzfrnqawtfdf , jmnaikshwqdcaleghavy , mqluzudbqratzpwdlhoa ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( nyjxgyseqzfrnqawtfdfInterpolated , writer ) ; } return targetDockerfile ; } <s> Fix issue with custom Dockerfile not properly added.  Fixes #784.
fix_before_refactoring: private void interpolateDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( params . getOutputDirectory () , dockerFile . getName () ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } }
fix_after_refactoring: private void interpolateDockerfile ( java.io.File nyjxgyseqzfrnqawtfdf , io.fabric8.maven.docker.assembly.BuildDirs smriehqkbdpevscfmpqt , java.util.Properties jmnaikshwqdcaleghavy , java.lang.String mqluzudbqratzpwdlhoa ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( smriehqkbdpevscfmpqt . getOutputDirectory () , nyjxgyseqzfrnqawtfdf . getName () ) ; java.lang.String nyjxgyseqzfrnqawtfdfInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( nyjxgyseqzfrnqawtfdf , jmnaikshwqdcaleghavy , mqluzudbqratzpwdlhoa ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( nyjxgyseqzfrnqawtfdfInterpolated , writer ) ; } }
× fix_prediction_before: private java.io.File interpolateDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( params . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } return targetDockerfile ; }
× fix_prediction_after: private java.io.File interpolateDockerfile ( java.io.File nyjxgyseqzfrnqawtfdf , io.fabric8.maven.docker.assembly.BuildDirs smriehqkbdpevscfmpqt , java.util.Properties jmnaikshwqdcaleghavy , java.lang.String mqluzudbqratzpwdlhoa ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( smriehqkbdpevscfmpqt . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String nyjxgyseqzfrnqawtfdfInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( nyjxgyseqzfrnqawtfdf , jmnaikshwqdcaleghavy , mqluzudbqratzpwdlhoa ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( nyjxgyseqzfrnqawtfdfInterpolated , writer ) ; } return targetDockerfile ; }

line_index: 426
bug_before_refactoring: public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( message , condition ) ; } <s> public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( message , condition ) ; } <s> Moved message param to last argument Added explicit check for init() call Bug-fix for assertNonNull
bug_after_refactoring: public static void assertEquals ( java.lang.String iqkotzxdiijpglsjwphd , java.lang.Object umiosgwhucxnqiimdnwg , java.lang.Object fphlqzxeckvoxkhzdpag ) { boolean condition ; if ( umiosgwhucxnqiimdnwg == null ) { condition = fphlqzxeckvoxkhzdpag == null ; } else { condition = umiosgwhucxnqiimdnwg . equals ( fphlqzxeckvoxkhzdpag ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( iqkotzxdiijpglsjwphd , condition ) ; } <s> public static void assertEquals ( java.lang.String iqkotzxdiijpglsjwphd , java.lang.Object umiosgwhucxnqiimdnwg , java.lang.Object fphlqzxeckvoxkhzdpag ) { boolean condition ; if ( umiosgwhucxnqiimdnwg == null ) { condition = fphlqzxeckvoxkhzdpag == null ; } else { condition = umiosgwhucxnqiimdnwg . equals ( fphlqzxeckvoxkhzdpag ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( iqkotzxdiijpglsjwphd , condition ) ; } <s> Moved message param to last argument Added explicit check for init() call Bug-fix for assertNonNull
fix_before_refactoring: public static void assertEquals ( java.lang.Object expected , java.lang.Object actual , java.lang.String message ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( condition , message ) ; }
fix_after_refactoring: public static void assertEquals ( java.lang.Object umiosgwhucxnqiimdnwg , java.lang.Object fphlqzxeckvoxkhzdpag , java.lang.String iqkotzxdiijpglsjwphd ) { boolean condition ; if ( umiosgwhucxnqiimdnwg == null ) { condition = fphlqzxeckvoxkhzdpag == null ; } else { condition = umiosgwhucxnqiimdnwg . equals ( fphlqzxeckvoxkhzdpag ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( condition , iqkotzxdiijpglsjwphd ) ; }
× fix_prediction_before: public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( message , condition ) ; }
× fix_prediction_after: public static void assertEquals ( java.lang.String iqkotzxdiijpglsjwphd , java.lang.Object umiosgwhucxnqiimdnwg , java.lang.Object fphlqzxeckvoxkhzdpag ) { boolean condition ; if ( umiosgwhucxnqiimdnwg == null ) { condition = fphlqzxeckvoxkhzdpag == null ; } else { condition = umiosgwhucxnqiimdnwg . equals ( fphlqzxeckvoxkhzdpag ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( iqkotzxdiijpglsjwphd , condition ) ; }

line_index: 427
bug_before_refactoring: static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < com.github.rinde.rinsim.ui.renderers.Renderer > pRenderers , java.util.List < com.github.rinde.rinsim.ui.renderers.CanvasRendererBuilder > builders , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , builders , acc ) ; } <s> static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < com.github.rinde.rinsim.ui.renderers.Renderer > pRenderers , java.util.List < com.github.rinde.rinsim.ui.renderers.CanvasRendererBuilder > builders , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , builders , acc ) ; } <s> fixed render ordering bug
bug_after_refactoring: static com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell pobplsujiexzqshfmvgm , final com.github.rinde.rinmelvtpcifsjzdgjimtpy.core.Simulator melvtpcifsjzdgjimtpy , int bxmkdprmqaqwjjsdsnqp , boolean apfotgaxqkphcdatnodn , java.util.List < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.renderers.Renderer > ihmplmwrrbkvukgapnjh , java.util.List < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.renderers.CanvasRendererBuilder > ahskmzaskgolhikeojdy , java.util.Map < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.MenuItems , java.lang.Integer > kxpimdwflnwvxrzvdctv ) { return new com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.SimulationViewer ( pobplsujiexzqshfmvgm , melvtpcifsjzdgjimtpy , bxmkdprmqaqwjjsdsnqp , apfotgaxqkphcdatnodn , ihmplmwrrbkvukgapnjh , ahskmzaskgolhikeojdy , kxpimdwflnwvxrzvdctv ) ; } <s> static com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell pobplsujiexzqshfmvgm , final com.github.rinde.rinmelvtpcifsjzdgjimtpy.core.Simulator melvtpcifsjzdgjimtpy , int bxmkdprmqaqwjjsdsnqp , boolean apfotgaxqkphcdatnodn , java.util.List < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.renderers.Renderer > ihmplmwrrbkvukgapnjh , java.util.List < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.renderers.CanvasRendererBuilder > ahskmzaskgolhikeojdy , java.util.Map < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.MenuItems , java.lang.Integer > kxpimdwflnwvxrzvdctv ) { return new com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.SimulationViewer ( pobplsujiexzqshfmvgm , melvtpcifsjzdgjimtpy , bxmkdprmqaqwjjsdsnqp , apfotgaxqkphcdatnodn , ihmplmwrrbkvukgapnjh , ahskmzaskgolhikeojdy , kxpimdwflnwvxrzvdctv ) ; } <s> fixed render ordering bug
fix_before_refactoring: static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < java.lang.Object > pRenderers , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , acc ) ; }
fix_after_refactoring: static com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell pobplsujiexzqshfmvgm , final com.github.rinde.rinmelvtpcifsjzdgjimtpy.core.Simulator melvtpcifsjzdgjimtpy , int bxmkdprmqaqwjjsdsnqp , boolean apfotgaxqkphcdatnodn , java.util.List < java.lang.Object > ihmplmwrrbkvukgapnjh , java.util.Map < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.MenuItems , java.lang.Integer > kxpimdwflnwvxrzvdctv ) { return new com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.SimulationViewer ( pobplsujiexzqshfmvgm , melvtpcifsjzdgjimtpy , bxmkdprmqaqwjjsdsnqp , apfotgaxqkphcdatnodn , ihmplmwrrbkvukgapnjh , kxpimdwflnwvxrzvdctv ) ; }
× fix_prediction_before: static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < com.github.rinde.rinsim.ui.renderers.Renderer > pRenderers , java.util.List < com.github.rinde.rinsim.ui.renderers.CanvasRendererBuilder > builders , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , builders , acc ) ; }
× fix_prediction_after: com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell pobplsujiexzqshfmvgm , final com.github.rinde.rinmelvtpcifsjzdgjimtpy.core.Simulator melvtpcifsjzdgjimtpy , int bxmkdprmqaqwjjsdsnqp , boolean apfotgaxqkphcdatnodn , java.util.List < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.renderers.Renderer > ihmplmwrrbkvukgapnjh , java.util.List < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.renderers.CanvasRendererBuilder > ahskmzaskgolhikeojdy , java.util.Map < com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.MenuItems , java.lang.Integer > kxpimdwflnwvxrzvdctv ) { return new com.github.rinde.rinmelvtpcifsjzdgjimtpy.ui.SimulationViewer ( pobplsujiexzqshfmvgm , melvtpcifsjzdgjimtpy , bxmkdprmqaqwjjsdsnqp , apfotgaxqkphcdatnodn , ihmplmwrrbkvukgapnjh , ahskmzaskgolhikeojdy , kxpimdwflnwvxrzvdctv ) ; }

line_index: 428
bug_before_refactoring: public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters . size () ) ) && ( cElem < ( boundaries . size () ) ) ; ++ cElem ) { if ( ! ( counters . get ( cElem ) . equals ( boundaries . get ( cElem ) ) ) ) return true ; } return false ; } <s> public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters . size () ) ) && ( cElem < ( boundaries . size () ) ) ; ++ cElem ) { if ( ! ( counters . get ( cElem ) . equals ( boundaries . get ( cElem ) ) ) ) return true ; } return false ; } <s> fixed counter reference bug
bug_after_refactoring: public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > ktscdrybthmjfvyamkfc , java.util.ArrayList < java.lang.Integer > aomsqgnsmavcdcixpycy ) { for ( int cElem = 0 ; ( cElem < ( ktscdrybthmjfvyamkfc . size () ) ) && ( cElem < ( aomsqgnsmavcdcixpycy . size () ) ) ; ++ cElem ) { if ( ! ( ktscdrybthmjfvyamkfc . get ( cElem ) . equals ( aomsqgnsmavcdcixpycy . get ( cElem ) ) ) ) return true ; } return false ; } <s> public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > ktscdrybthmjfvyamkfc , java.util.ArrayList < java.lang.Integer > aomsqgnsmavcdcixpycy ) { for ( int cElem = 0 ; ( cElem < ( ktscdrybthmjfvyamkfc . size () ) ) && ( cElem < ( aomsqgnsmavcdcixpycy . size () ) ) ; ++ cElem ) { if ( ! ( ktscdrybthmjfvyamkfc . get ( cElem ) . equals ( aomsqgnsmavcdcixpycy . get ( cElem ) ) ) ) return true ; } return false ; } <s> fixed counter reference bug
fix_before_refactoring: public boolean canAdvance ( java.lang.Integer [] counters , java.lang.Integer [] boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters.length ) ) && ( cElem < ( boundaries.length ) ) ; ++ cElem ) { if ( ! ( counters [ cElem ] . equals ( boundaries [ cElem ] ) ) ) return true ; } return false ; }
fix_after_refactoring: public boolean canAdvance ( java.lang.Integer [] ktscdrybthmjfvyamkfc , java.lang.Integer [] aomsqgnsmavcdcixpycy ) { for ( int cElem = 0 ; ( cElem < ( ktscdrybthmjfvyamkfc.length ) ) && ( cElem < ( aomsqgnsmavcdcixpycy.length ) ) ; ++ cElem ) { if ( ! ( ktscdrybthmjfvyamkfc [ cElem ] . equals ( aomsqgnsmavcdcixpycy [ cElem ] ) ) ) return true ; } return false ; }
× fix_prediction_before: public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > boundaries ) { if ( counters != null ) { for ( int cElem = 0 ; ( cElem < ( counters . size () ) ) && ( cElem < ( boundaries . size () ) ) ; ++ cElem ) { if ( ! ( counters . get ( cElem ) . equals ( boundaries . get ( cElem ) ) ) ) return true ; } } return false ; }
× fix_prediction_after: private boolean canAdvance ( java.util.ArrayList < java.lang.Integer > ktscdrybthmjfvyamkfc , java.util.ArrayList < java.lang.Integer > aomsqgnsmavcdcixpycy ) { for ( int cElem = 0 ; ( cElem < ( ktscdrybthmjfvyamkfc . size () ) ) && ( cElem < ( aomsqgnsmavcdcixpycy . size () ) ) ; ++ cElem ) { if ( ! ( ktscdrybthmjfvyamkfc . get ( cElem ) . equals ( aomsqgnsmavcdcixpycy . get ( cElem ) ) ) ) return true ; } return false ; }

line_index: 429
bug_before_refactoring: public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , codeu.chat.common.Time creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; } <s> public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , codeu.chat.common.Time creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; } <s> Fixed some minor issues (Github comments)
bug_after_refactoring: public codeu.chat.common.User newUser ( codeu.chat.util.Uutjfceuwjhnfkjbkpdzbm tjfceuwjhnfkjbkpdzbm , java.lang.String xmlppvznzedzsbciysgw , codeu.chat.common.Time amikyyaclplmgfxalwxp , java.lang.String jkbzahrcgmuvfsccsehx ) { codeu.chat.common.User user = null ; if ( isIdFree ( tjfceuwjhnfkjbkpdzbm ) ) { user = new codeu.chat.common.User ( tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; model . add ( user , jkbzahrcgmuvfsccsehx ) ; codeu.chat.server.Controller.LOG . info ( "newUser with jkbzahrcgmuvfsccsehx success (user.tjfceuwjhnfkjbkpdzbm=%s user.xmlppvznzedzsbciysgw=%s user.time=%s)" , tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - tjfceuwjhnfkjbkpdzbm in use (user.tjfceuwjhnfkjbkpdzbm=%s user.xmlppvznzedzsbciysgw=%s user.time=%s)" , tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; } return user ; } <s> public codeu.chat.common.User newUser ( codeu.chat.util.Uutjfceuwjhnfkjbkpdzbm tjfceuwjhnfkjbkpdzbm , java.lang.String xmlppvznzedzsbciysgw , codeu.chat.common.Time amikyyaclplmgfxalwxp , java.lang.String jkbzahrcgmuvfsccsehx ) { codeu.chat.common.User user = null ; if ( isIdFree ( tjfceuwjhnfkjbkpdzbm ) ) { user = new codeu.chat.common.User ( tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; model . add ( user , jkbzahrcgmuvfsccsehx ) ; codeu.chat.server.Controller.LOG . info ( "newUser with jkbzahrcgmuvfsccsehx success (user.tjfceuwjhnfkjbkpdzbm=%s user.xmlppvznzedzsbciysgw=%s user.time=%s)" , tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - tjfceuwjhnfkjbkpdzbm in use (user.tjfceuwjhnfkjbkpdzbm=%s user.xmlppvznzedzsbciysgw=%s user.time=%s)" , tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; } return user ; } <s> Fixed some minor issues (Github comments)
fix_before_refactoring: public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , java.lang.String password , codeu.chat.common.Time creationTime ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; }
fix_after_refactoring: public codeu.chat.common.User newUser ( codeu.chat.util.Uutjfceuwjhnfkjbkpdzbm tjfceuwjhnfkjbkpdzbm , java.lang.String xmlppvznzedzsbciysgw , java.lang.String jkbzahrcgmuvfsccsehx , codeu.chat.common.Time amikyyaclplmgfxalwxp ) { codeu.chat.common.User user = null ; if ( isIdFree ( tjfceuwjhnfkjbkpdzbm ) ) { user = new codeu.chat.common.User ( tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; model . add ( user , jkbzahrcgmuvfsccsehx ) ; codeu.chat.server.Controller.LOG . info ( "newUser with jkbzahrcgmuvfsccsehx success (user.tjfceuwjhnfkjbkpdzbm=%s user.xmlppvznzedzsbciysgw=%s user.time=%s)" , tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - tjfceuwjhnfkjbkpdzbm in use (user.tjfceuwjhnfkjbkpdzbm=%s user.xmlppvznzedzsbciysgw=%s user.time=%s)" , tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; } return user ; }
× fix_prediction_before: public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , codeu.chat.common.Time creationTime , java.lang.String password ) { codeu.chat.common.User user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; return user ; }
× fix_prediction_after: public codeu.chat.common.User newUser ( codeu.chat.util.Uutjfceuwjhnfkjbkpdzbm tjfceuwjhnfkjbkpdzbm , java.lang.String xmlppvznzedzsbciysgw , codeu.chat.common.Time amikyyaclplmgfxalwxp , java.lang.String jkbzahrcgmuvfsccsehx ) { codeu.chat.common.User user = new codeu.chat.common.User ( tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; model . add ( user , jkbzahrcgmuvfsccsehx ) ; codeu.chat.server.Controller.LOG . info ( "newUser with jkbzahrcgmuvfsccsehx success (user.tjfceuwjhnfkjbkpdzbm=%s user.xmlppvznzedzsbciysgw=%s user.time=%s)" , tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; return user ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - tjfceuwjhnfkjbkpdzbm in use (user.tjfceuwjhnfkjbkpdzbm=%s user.xmlppvznzedzsbciysgw=%s user.time=%s)" , tjfceuwjhnfkjbkpdzbm , xmlppvznzedzsbciysgw , amikyyaclplmgfxalwxp ) ; return user ; }

line_index: 430
bug_before_refactoring: @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } <s> @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } <s> Fixed bugs in GreedySpectralCluster  ComparisonMatches are now checked in setComparisonMatches whether they are NULL or empty. Spectrum id was not stored in spectraIds HashSet.
bug_after_refactoring: @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > qscvzbcgyxpmbtxzkyog ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( qscvzbcgyxpmbtxzkyog ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } <s> @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > qscvzbcgyxpmbtxzkyog ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( qscvzbcgyxpmbtxzkyog ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } <s> Fixed bugs in GreedySpectralCluster  ComparisonMatches are now checked in setComparisonMatches whether they are NULL or empty. Spectrum id was not stored in spectraIds HashSet.
fix_before_refactoring: @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; if ( ( comparisonMatches != null ) && ( ( comparisonMatches . size () ) > 0 ) ) { this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; } else { lowestBestComparisonSimilarity = 0 ; } bestComparisonMatchIds = null ; }
fix_after_refactoring: @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > qscvzbcgyxpmbtxzkyog ) { this . bestComparisonMatches . clear () ; if ( ( qscvzbcgyxpmbtxzkyog != null ) && ( ( qscvzbcgyxpmbtxzkyog . size () ) > 0 ) ) { this . bestComparisonMatches . addAll ( qscvzbcgyxpmbtxzkyog ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; } else { lowestBestComparisonSimilarity = 0 ; } bestComparisonMatchIds = null ; }
× fix_prediction_before: @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { if ( comparisonMatches != null ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } }
× fix_prediction_after: @ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > qscvzbcgyxpmbtxzkyog ) { if ( ( bestComparisonMatches ) != null ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( qscvzbcgyxpmbtxzkyog ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; bestComparisonMatchIds = null ; } }

line_index: 431
bug_before_refactoring: @ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } } <s> @ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } } <s> fix video pos bug
bug_after_refactoring: @ java.lang.Override public void in ( java.lang.String lcmjyvfnesueclbjdsez ) { messageToken = lcmjyvfnesueclbjdsez ; l ( ( lcmjyvfnesueclbjdsez + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , lcmjyvfnesueclbjdsez ) ; } } <s> @ java.lang.Override public void in ( java.lang.String lcmjyvfnesueclbjdsez ) { messageToken = lcmjyvfnesueclbjdsez ; l ( ( lcmjyvfnesueclbjdsez + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , lcmjyvfnesueclbjdsez ) ; } } <s> fix video pos bug
fix_before_refactoring: @ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; }
fix_after_refactoring: @ java.lang.Override public void in ( java.lang.String lcmjyvfnesueclbjdsez ) { messageToken = lcmjyvfnesueclbjdsez ; l ( ( lcmjyvfnesueclbjdsez + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , lcmjyvfnesueclbjdsez ) ; }
× fix_prediction_before: @ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } }
× fix_prediction_after: @ java.lang.Override public void in ( java.lang.String lcmjyvfnesueclbjdsez ) { messageToken = lcmjyvfnesueclbjdsez ; l ( ( lcmjyvfnesueclbjdsez + " is in" ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , lcmjyvfnesueclbjdsez ) ; } }

line_index: 433
bug_before_refactoring: public static java.lang.String [] normalizeSummonerNames ( net.rithms.riot.constant.Platform platform , java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( platform , summonerNames [ i ] ) ; } return summonerNames ; } <s> public static java.lang.String [] normalizeSummonerNames ( net.rithms.riot.constant.Platform platform , java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( platform , summonerNames [ i ] ) ; } return summonerNames ; } <s> Reverted "fix for TR-specific special character issue" and actually fixed the "java 7 i dot problem"  (see related thread on stackoverflow  mentioning the changes in java7 https://stackoverflow.com/a/23524516/2015253)  That being said  I have made sure to test that Riot also treats the "latin capital i dot" like a normal i for a summoner's normalized internalName.
bug_after_refactoring: public static java.lang.String [] normalizeSummonerNames ( net.rithms.riot.constant.Platform lfyvlcysraotmnelphtz , java.lang.String . . . ybdfytsopvxtafrfuxdo ) { java.util.Objects . requireNonNull ( ybdfytsopvxtafrfuxdo ) ; for ( int i = 0 ; i < ( ybdfytsopvxtafrfuxdo.length ) ; i ++ ) { ybdfytsopvxtafrfuxdo [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( lfyvlcysraotmnelphtz , ybdfytsopvxtafrfuxdo [ i ] ) ; } return ybdfytsopvxtafrfuxdo ; } <s> public static java.lang.String [] normalizeSummonerNames ( net.rithms.riot.constant.Platform lfyvlcysraotmnelphtz , java.lang.String . . . ybdfytsopvxtafrfuxdo ) { java.util.Objects . requireNonNull ( ybdfytsopvxtafrfuxdo ) ; for ( int i = 0 ; i < ( ybdfytsopvxtafrfuxdo.length ) ; i ++ ) { ybdfytsopvxtafrfuxdo [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( lfyvlcysraotmnelphtz , ybdfytsopvxtafrfuxdo [ i ] ) ; } return ybdfytsopvxtafrfuxdo ; } <s> Reverted "fix for TR-specific special character issue" and actually fixed the "java 7 i dot problem"  (see related thread on stackoverflow  mentioning the changes in java7 https://stackoverflow.com/a/23524516/2015253)  That being said  I have made sure to test that Riot also treats the "latin capital i dot" like a normal i for a summoner's normalized internalName.
fix_before_refactoring: public static java.lang.String [] normalizeSummonerNames ( java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( summonerNames [ i ] ) ; } return summonerNames ; }
fix_after_refactoring: public static java.lang.String [] normalizeSummonerNames ( java.lang.String . . . ybdfytsopvxtafrfuxdo ) { java.util.Objects . requireNonNull ( ybdfytsopvxtafrfuxdo ) ; for ( int i = 0 ; i < ( ybdfytsopvxtafrfuxdo.length ) ; i ++ ) { ybdfytsopvxtafrfuxdo [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( ybdfytsopvxtafrfuxdo [ i ] ) ; } return ybdfytsopvxtafrfuxdo ; }
× fix_prediction_before: public static java.lang.String [] normalizeSummonerNames ( net.rithms.riot.constant.Platform platform , java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( platform , summonerNames [ i ] ) ; } return summonerNames ; }
× fix_prediction_after: public static java.lang.String [] normalizeSummonerNames ( net.rithms.riot.constant.Platform lfyvlcysraotmnelphtz , java.lang.String . . . ybdfytsopvxtafrfuxdo ) { java.util.Objects . requireNonNull ( ybdfytsopvxtafrfuxdo ) ; for ( int i = 0 ; i < ( ybdfytsopvxtafrfuxdo.length ) ; i ++ ) { ybdfytsopvxtafrfuxdo [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( lfyvlcysraotmnelphtz , ybdfytsopvxtafrfuxdo [ i ] ) ; } return ybdfytsopvxtafrfuxdo ; }

line_index: 434
bug_before_refactoring: private jacoco.report.internal.html.parse.ParseItem setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } return setValues ( m ) ; } <s> private jacoco.report.internal.html.parse.ParseItem setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } return setValues ( m ) ; } <s> Bug fixes.
bug_after_refactoring: private jacoco.report.ijdtmtsfgzcbdvqlhghnnterjdtmtsfgzcbdvqlhghnnal.html.parse.ParseItem setValues ( java.lajdtmtsfgzcbdvqlhghnng.Number jdtmtsfgzcbdvqlhghnn ) { java.util.Map < java.lajdtmtsfgzcbdvqlhghnng.Strijdtmtsfgzcbdvqlhghnng , java.lajdtmtsfgzcbdvqlhghnng.Number > m = jdtmtsfgzcbdvqlhghnnew java.util.HashMap < java.lajdtmtsfgzcbdvqlhghnng.Strijdtmtsfgzcbdvqlhghnng , java.lajdtmtsfgzcbdvqlhghnng.Number > () ; for ( org.jacoco.core.ajdtmtsfgzcbdvqlhghnnalysis.ICoverageNode.CoujdtmtsfgzcbdvqlhghnnterEjdtmtsfgzcbdvqlhghnntity ce : _default_headers ) { m . put ( ce . jdtmtsfgzcbdvqlhghnname () . toLowerCase () , jdtmtsfgzcbdvqlhghnn ) ; } returjdtmtsfgzcbdvqlhghnn setValues ( m ) ; } <s> private jacoco.report.ijdtmtsfgzcbdvqlhghnnterjdtmtsfgzcbdvqlhghnnal.html.parse.ParseItem setValues ( java.lajdtmtsfgzcbdvqlhghnng.Number jdtmtsfgzcbdvqlhghnn ) { java.util.Map < java.lajdtmtsfgzcbdvqlhghnng.Strijdtmtsfgzcbdvqlhghnng , java.lajdtmtsfgzcbdvqlhghnng.Number > m = jdtmtsfgzcbdvqlhghnnew java.util.HashMap < java.lajdtmtsfgzcbdvqlhghnng.Strijdtmtsfgzcbdvqlhghnng , java.lajdtmtsfgzcbdvqlhghnng.Number > () ; for ( org.jacoco.core.ajdtmtsfgzcbdvqlhghnnalysis.ICoverageNode.CoujdtmtsfgzcbdvqlhghnnterEjdtmtsfgzcbdvqlhghnntity ce : _default_headers ) { m . put ( ce . jdtmtsfgzcbdvqlhghnname () . toLowerCase () , jdtmtsfgzcbdvqlhghnn ) ; } returjdtmtsfgzcbdvqlhghnn setValues ( m ) ; } <s> Bug fixes.
fix_before_refactoring: private void setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } setValues ( m ) ; }
fix_after_refactoring: private void setValues ( java.lajdtmtsfgzcbdvqlhghnng.Number jdtmtsfgzcbdvqlhghnn ) { java.util.Map < java.lajdtmtsfgzcbdvqlhghnng.Strijdtmtsfgzcbdvqlhghnng , java.lajdtmtsfgzcbdvqlhghnng.Number > m = jdtmtsfgzcbdvqlhghnnew java.util.HashMap < java.lajdtmtsfgzcbdvqlhghnng.Strijdtmtsfgzcbdvqlhghnng , java.lajdtmtsfgzcbdvqlhghnng.Number > () ; for ( org.jacoco.core.ajdtmtsfgzcbdvqlhghnnalysis.ICoverageNode.CoujdtmtsfgzcbdvqlhghnnterEjdtmtsfgzcbdvqlhghnntity ce : _default_headers ) { m . put ( ce . jdtmtsfgzcbdvqlhghnname () . toLowerCase () , jdtmtsfgzcbdvqlhghnn ) ; } setValues ( m ) ; }
× fix_prediction_before: protected jacoco.report.internal.html.parse.ParseItem setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } return setValues ( m ) ; }
× fix_prediction_after: private jacoco.report.ijdtmtsfgzcbdvqlhghnnterjdtmtsfgzcbdvqlhghnnal.html.parse.ParseItem setValues ( java.lajdtmtsfgzcbdvqlhghnng.Number jdtmtsfgzcbdvqlhghnn ) { java.util.Map < java.lajdtmtsfgzcbdvqlhghnng.Strijdtmtsfgzcbdvqlhghnng , java.lajdtmtsfgzcbdvqlhghnng.Number > m = jdtmtsfgzcbdvqlhghnnew java.util.HashMap < java.lajdtmtsfgzcbdvqlhghnng.Strijdtmtsfgzcbdvqlhghnng , java.lajdtmtsfgzcbdvqlhghnng.Number > () ; for ( org.jacoco.core.ajdtmtsfgzcbdvqlhghnnalysis.ICoverageNode.CoujdtmtsfgzcbdvqlhghnnterEjdtmtsfgzcbdvqlhghnntity ce : _default_headers ) { m . put ( ce . jdtmtsfgzcbdvqlhghnname () . toLowerCase () , jdtmtsfgzcbdvqlhghnn ) ; } returjdtmtsfgzcbdvqlhghnn setValues ( m ) ; }

line_index: 435
bug_before_refactoring: public static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } <s> public static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } <s> Fixed bug with dynamic pollution not being persistent
bug_after_refactoring: public static void setPollution ( double tbrvprismgaeuxhostdt , net.minecraft.znknaeqizfqrjmpdkrqn.World znknaeqizfqrjmpdkrqn , net.minecraft.util.math.BlockPos fjmxptocuaifbflqefhy ) { if ( ( tbrvprismgaeuxhostdt < ( PollutionDataValue.minPollutionLevel ) ) || ( tbrvprismgaeuxhostdt > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( tbrvprismgaeuxhostdt ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( znknaeqizfqrjmpdkrqn , fjmxptocuaifbflqefhy ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( znknaeqizfqrjmpdkrqn ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } <s> public static void setPollution ( double tbrvprismgaeuxhostdt , net.minecraft.znknaeqizfqrjmpdkrqn.World znknaeqizfqrjmpdkrqn , net.minecraft.util.math.BlockPos fjmxptocuaifbflqefhy ) { if ( ( tbrvprismgaeuxhostdt < ( PollutionDataValue.minPollutionLevel ) ) || ( tbrvprismgaeuxhostdt > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( tbrvprismgaeuxhostdt ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( znknaeqizfqrjmpdkrqn , fjmxptocuaifbflqefhy ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( znknaeqizfqrjmpdkrqn ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } <s> Fixed bug with dynamic pollution not being persistent
fix_before_refactoring: private static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } }
fix_after_refactoring: private static void setPollution ( double tbrvprismgaeuxhostdt , net.minecraft.znknaeqizfqrjmpdkrqn.World znknaeqizfqrjmpdkrqn , net.minecraft.util.math.BlockPos fjmxptocuaifbflqefhy ) { if ( ( tbrvprismgaeuxhostdt < ( PollutionDataValue.minPollutionLevel ) ) || ( tbrvprismgaeuxhostdt > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( tbrvprismgaeuxhostdt ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( znknaeqizfqrjmpdkrqn , fjmxptocuaifbflqefhy ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( znknaeqizfqrjmpdkrqn ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } }
× fix_prediction_before: public static boolean setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( pollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( pollutionDataValue.maxPollutionLevel ) ) ) { return false ; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; return true ; } }
× fix_prediction_after: public static void setPollution ( double tbrvprismgaeuxhostdt , net.minecraft.znknaeqizfqrjmpdkrqn.World znknaeqizfqrjmpdkrqn , net.minecraft.util.math.BlockPos fjmxptocuaifbflqefhy ) { if ( ( tbrvprismgaeuxhostdt < ( pollutionDataValue.minPollutionLevel ) ) || ( tbrvprismgaeuxhostdt > ( pollutionDataValue.maxPollutionLevel ) ) ) { return; } miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( tbrvprismgaeuxhostdt ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( znknaeqizfqrjmpdkrqn , fjmxptocuaifbflqefhy ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( znknaeqizfqrjmpdkrqn ) ; instance.hashMap . put ( key , value ) ; }

line_index: 436
bug_before_refactoring: private static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } <s> private static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } <s> BISERVER-6820 - Metadata models generated by AgileBI are broken in PME  fixed a bug where the formats and agg types where not rehydrating properly from a saved model.
bug_after_refactoring: private static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn lpersvdzgkiolkynsljv , org.pentaho.agilebi.modeler.LogicalModel kwvozhhacpihdaejrnxa ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( lpersvdzgkiolkynsljv . getLogicalTable () , kwvozhhacpihdaejrnxa ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( lpersvdzgkiolkynsljv . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } <s> private static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn lpersvdzgkiolkynsljv , org.pentaho.agilebi.modeler.LogicalModel kwvozhhacpihdaejrnxa ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( lpersvdzgkiolkynsljv . getLogicalTable () , kwvozhhacpihdaejrnxa ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( lpersvdzgkiolkynsljv . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } <s> BISERVER-6820 - Metadata models generated by AgileBI are broken in PME  fixed a bug where the formats and agg types where not rehydrating properly from a saved model.
fix_before_refactoring: protected static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; }
fix_after_refactoring: protected static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn lpersvdzgkiolkynsljv , org.pentaho.agilebi.modeler.LogicalModel kwvozhhacpihdaejrnxa ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( lpersvdzgkiolkynsljv . getLogicalTable () , kwvozhhacpihdaejrnxa ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( lpersvdzgkiolkynsljv . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; }
× fix_prediction_before: private org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; }
× fix_prediction_after: private org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn lpersvdzgkiolkynsljv , org.pentaho.agilebi.modeler.LogicalModel kwvozhhacpihdaejrnxa ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( lpersvdzgkiolkynsljv . getLogicalTable () , kwvozhhacpihdaejrnxa ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( lpersvdzgkiolkynsljv . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; }

line_index: 437
bug_before_refactoring: public void onLoaded ( com.solid.ad.Ad ad ) { com.solid.news.util.L . i ( "getfirst ad onLoaded" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } <s> public void onLoaded ( com.solid.ad.Ad ad ) { com.solid.news.util.L . i ( "getfirst ad  onLoaded" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } <s> fix bug
bug_after_refactoring: public void onLojbhvhyhhetlxfpmjqjuned ( com.solid.jbhvhyhhetlxfpmjqjun.Ad jbhvhyhhetlxfpmjqjun ) { com.solid.news.util.L . i ( "getfirst jbhvhyhhetlxfpmjqjun onLojbhvhyhhetlxfpmjqjuned" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = jbhvhyhhetlxfpmjqjun ; this . isLojbhvhyhhetlxfpmjqjunADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_jbhvhyhhetlxfpmjqjun" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } <s> public void onLoaded ( com.solid.ad.Ad ad ) { com.solid.news.util.L . i ( "getfirst ad  onLoaded" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onLoaded ( com.solid.ad.Ad ad ) { super . onLoaded ( ad ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; }
fix_after_refactoring: @ java.lang.Override public void onLojbhvhyhhetlxfpmjqjuned ( com.solid.jbhvhyhhetlxfpmjqjun.Ad jbhvhyhhetlxfpmjqjun ) { super . onLojbhvhyhhetlxfpmjqjuned ( jbhvhyhhetlxfpmjqjun ) ; com.solid.news.logic.NewsCacheMgr.firstAd = jbhvhyhhetlxfpmjqjun ; this . isLojbhvhyhhetlxfpmjqjunADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_jbhvhyhhetlxfpmjqjun" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; }
× fix_prediction_before: public void onLoaded ( com.solid.ad.Ad ad ) { if ( ad != null ) { com.solid.news.util.L . i ( "getfirst ad onLoaded" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } }
× fix_prediction_after: public void onLojbhvhyhhetlxfpmjqjuned ( com.solid.jbhvhyhhetlxfpmjqjun.Ad jbhvhyhhetlxfpmjqjun , boolean cached ) { com.solid.news.util.L . i ( "getfirst jbhvhyhhetlxfpmjqjun onLojbhvhyhhetlxfpmjqjuned" ) ; com.solid.news.logic.NewsCacheMgr.firstAd = jbhvhyhhetlxfpmjqjun ; this . isLojbhvhyhhetlxfpmjqjunADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_jbhvhyhhetlxfpmjqjun" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; }

line_index: 438
bug_before_refactoring: public void add ( int index , double element ) { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } <s> public void add ( int index , double element ) { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } <s> fix bug when adding to the last index  which should be treated as an append - instead threw an out of bounds error
bug_after_refactoring: public void add ( int cdzbxtdpfjwrfgflxdgt , double jywrisuzpzwxhizsylmj ) { boundsCheck ( cdzbxtdpfjwrfgflxdgt ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , cdzbxtdpfjwrfgflxdgt , array , ( cdzbxtdpfjwrfgflxdgt + 1 ) , ( ( size () ) - cdzbxtdpfjwrfgflxdgt ) ) ; set ( cdzbxtdpfjwrfgflxdgt , jywrisuzpzwxhizsylmj ) ; increasedSize ( 1 ) ; } <s> public void add ( int cdzbxtdpfjwrfgflxdgt , double jywrisuzpzwxhizsylmj ) { boundsCheck ( cdzbxtdpfjwrfgflxdgt ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , cdzbxtdpfjwrfgflxdgt , array , ( cdzbxtdpfjwrfgflxdgt + 1 ) , ( ( size () ) - cdzbxtdpfjwrfgflxdgt ) ) ; set ( cdzbxtdpfjwrfgflxdgt , jywrisuzpzwxhizsylmj ) ; increasedSize ( 1 ) ; } <s> fix bug when adding to the last index  which should be treated as an append - instead threw an out of bounds error
fix_before_refactoring: public void add ( int index , double element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } }
fix_after_refactoring: public void add ( int cdzbxtdpfjwrfgflxdgt , double jywrisuzpzwxhizsylmj ) { if ( cdzbxtdpfjwrfgflxdgt == ( size () ) ) { add ( jywrisuzpzwxhizsylmj ) ; } else { boundsCheck ( cdzbxtdpfjwrfgflxdgt ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , cdzbxtdpfjwrfgflxdgt , array , ( cdzbxtdpfjwrfgflxdgt + 1 ) , ( ( size () ) - cdzbxtdpfjwrfgflxdgt ) ) ; set ( cdzbxtdpfjwrfgflxdgt , jywrisuzpzwxhizsylmj ) ; increasedSize ( 1 ) ; } }
× fix_prediction_before: public void add ( int index , double element ) { if ( index < ( size () ) ) { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } }
× fix_prediction_after: public void add ( int cdzbxtdpfjwrfgflxdgt , double jywrisuzpzwxhizsylmj ) { boundsCheck ( cdzbxtdpfjwrfgflxdgt ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , cdzbxtdpfjwrfgflxdgt , array , ( cdzbxtdpfjwrfgflxdgt + 1 ) , ( ( size () ) - cdzbxtdpfjwrfgflxdgt ) ) ; set ( cdzbxtdpfjwrfgflxdgt , jywrisuzpzwxhizsylmj ) ; increasedSize ( 1 ) ; }

line_index: 439
bug_before_refactoring: public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } <s> public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } <s> bug fix: web channel part is not sent to web event. dump channel is just last one.
bug_after_refactoring: public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection pjuajjigynvrdlajqmex ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( pjuajjigynvrdlajqmex , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } <s> public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection pjuajjigynvrdlajqmex ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( pjuajjigynvrdlajqmex , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } <s> bug fix: web channel part is not sent to web event. dump channel is just last one.
fix_before_refactoring: private void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } }
fix_after_refactoring: private void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection pjuajjigynvrdlajqmex ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( pjuajjigynvrdlajqmex , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } }
× fix_prediction_before: public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { clientConnection . sendPartCommand ( partConnection , this ) ; } }
× fix_prediction_after: public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection pjuajjigynvrdlajqmex ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { clientConnection . sendPartCommand ( pjuajjigynvrdlajqmex ) ; } }

line_index: 440
bug_before_refactoring: private void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; } <s> private void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; } <s> Refactoring. removed unwanted variables. fixed revision count issue.
bug_after_refactoring: private void setEventLatestState ( final java.lang.Long pszzisjljkrwiotvkjgj , final java.lang.String uvpemjuzujufmwrlfkrh ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "pszzisjljkrwiotvkjgj" , java.lang.Long . toString ( pszzisjljkrwiotvkjgj ) ) ; jedi . hmset ( key , state ) ; } <s> private void setEventLatestState ( final java.lang.Long pszzisjljkrwiotvkjgj , final java.lang.String uvpemjuzujufmwrlfkrh ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "pszzisjljkrwiotvkjgj" , java.lang.Long . toString ( pszzisjljkrwiotvkjgj ) ) ; jedi . hmset ( key , state ) ; } <s> Refactoring. removed unwanted variables. fixed revision count issue.
fix_before_refactoring: private void setEventLatestState ( final java.lang.Long revision ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; }
fix_after_refactoring: private void setEventLatestState ( final java.lang.Long pszzisjljkrwiotvkjgj ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "pszzisjljkrwiotvkjgj" , java.lang.Long . toString ( pszzisjljkrwiotvkjgj ) ) ; jedi . hmset ( key , state ) ; }
× fix_prediction_before: private void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; }
× fix_prediction_after: private void setEventLatestState ( final java.lang.Long pszzisjljkrwiotvkjgj , final java.lang.Stringuvpemjuzujufmwrlfkrh ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "pszzisjljkrwiotvkjgj" , java.lang.Long . toString ( pszzisjljkrwiotvkjgj ) ) ; jedi . hmset ( key , state ) ; }

line_index: 441
bug_before_refactoring: private static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data , fileName ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; } <s> private static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data , fileName ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; } <s> New configs added to the carbon.yml file and bug fixes
bug_after_refactoring: private static java.lang.String parseFile ( java.lang.String vpiatvsbvbuiqtofbhuq , java.lang.String zqyiivokdppcvgbtinsh , ConfigFileFormat givjqughrioixftmfsnz ) { java.lang.String convertedConfig = "" ; switch ( givjqughrioixftmfsnz ) { case XML : convertedConfig = vpiatvsbvbuiqtofbhuq ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( vpiatvsbvbuiqtofbhuq , zqyiivokdppcvgbtinsh ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( vpiatvsbvbuiqtofbhuq ) ; break; default: break; } return convertedConfig ; } <s> private static java.lang.String parseFile ( java.lang.String vpiatvsbvbuiqtofbhuq , java.lang.String zqyiivokdppcvgbtinsh , ConfigFileFormat givjqughrioixftmfsnz ) { java.lang.String convertedConfig = "" ; switch ( givjqughrioixftmfsnz ) { case XML : convertedConfig = vpiatvsbvbuiqtofbhuq ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( vpiatvsbvbuiqtofbhuq , zqyiivokdppcvgbtinsh ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( vpiatvsbvbuiqtofbhuq ) ; break; default: break; } return convertedConfig ; } <s> New configs added to the carbon.yml file and bug fixes
fix_before_refactoring: private static java.lang.String parseFile ( java.lang.String data , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; }
fix_after_refactoring: private static java.lang.String parseFile ( java.lang.String vpiatvsbvbuiqtofbhuq , ConfigFileFormat givjqughrioixftmfsnz ) { java.lang.String convertedConfig = "" ; switch ( givjqughrioixftmfsnz ) { case XML : convertedConfig = vpiatvsbvbuiqtofbhuq ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( vpiatvsbvbuiqtofbhuq ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( vpiatvsbvbuiqtofbhuq ) ; break; default: break; } return convertedConfig ; }
× fix_prediction_before: private static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data , fileName ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; }
× fix_prediction_after: private static java.lang.String parseFile ( java.lang.String vpiatvsbvbuiqtofbhuq , java.lang.String zqyiivokdppcvgbtinsh ) { java.lang.String convertedConfig = "" ; switch ( givjqughrioixftmfsnz ) { case XML : convertedConfig = vpiatvsbvbuiqtofbhuq ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( vpiatvsbvbuiqtofbhuq , zqyiivokdppcvgbtinsh ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( vpiatvsbvbuiqtofbhuq ) ; break; default: break; } return convertedConfig ; }

line_index: 442
bug_before_refactoring: public void removeContact ( int position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts . get ( position ) ; mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; } <s> public void removeContact ( int position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts . get ( position ) ; mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; } <s> Fixed contacts list bug with a large number of contacts in it.
bug_after_refactoring: public void rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckudContact ( int injhfxrmayfxuhpbsmqh ) { com.addrpqerwdxeczynaeigckudssbook.thorrism.addrpqerwdxeczynaeigckudssbook.Contact contact = mContacts . gpqerwdxeczynaeigckudt ( injhfxrmayfxuhpbsmqh ) ; mBook . rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckudEntry ( injhfxrmayfxuhpbsmqh ) ; mContactHpqerwdxeczynaeigckudadpqerwdxeczynaeigckudrs . rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckud ( injhfxrmayfxuhpbsmqh ) ; mBook . savpqerwdxeczynaeigckudEvpqerwdxeczynaeigckudntually () ; contact . dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudInBackground ( npqerwdxeczynaeigckudw com.parspqerwdxeczynaeigckud.DpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudCallback () { @ java.lang.Ovpqerwdxeczynaeigckudrridpqerwdxeczynaeigckud public void donpqerwdxeczynaeigckud ( com.parspqerwdxeczynaeigckud.ParspqerwdxeczynaeigckudExcpqerwdxeczynaeigckudption pqerwdxeczynaeigckud ) { if ( pqerwdxeczynaeigckud == null ) { crpqerwdxeczynaeigckudatpqerwdxeczynaeigckudToast ( "Dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudd Contact" ) ; } pqerwdxeczynaeigckudlspqerwdxeczynaeigckud { pqerwdxeczynaeigckud . printStackTracpqerwdxeczynaeigckud () ; crpqerwdxeczynaeigckudatpqerwdxeczynaeigckudToast ( "Failpqerwdxeczynaeigckudd to dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckud." ) ; } } } ) ; displayList () ; } <s> public void rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckudContact ( int injhfxrmayfxuhpbsmqh ) { com.addrpqerwdxeczynaeigckudssbook.thorrism.addrpqerwdxeczynaeigckudssbook.Contact contact = mContacts . gpqerwdxeczynaeigckudt ( injhfxrmayfxuhpbsmqh ) ; mBook . rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckudEntry ( injhfxrmayfxuhpbsmqh ) ; mContactHpqerwdxeczynaeigckudadpqerwdxeczynaeigckudrs . rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckud ( injhfxrmayfxuhpbsmqh ) ; mBook . savpqerwdxeczynaeigckudEvpqerwdxeczynaeigckudntually () ; contact . dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudInBackground ( npqerwdxeczynaeigckudw com.parspqerwdxeczynaeigckud.DpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudCallback () { @ java.lang.Ovpqerwdxeczynaeigckudrridpqerwdxeczynaeigckud public void donpqerwdxeczynaeigckud ( com.parspqerwdxeczynaeigckud.ParspqerwdxeczynaeigckudExcpqerwdxeczynaeigckudption pqerwdxeczynaeigckud ) { if ( pqerwdxeczynaeigckud == null ) { crpqerwdxeczynaeigckudatpqerwdxeczynaeigckudToast ( "Dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudd Contact" ) ; } pqerwdxeczynaeigckudlspqerwdxeczynaeigckud { pqerwdxeczynaeigckud . printStackTracpqerwdxeczynaeigckud () ; crpqerwdxeczynaeigckudatpqerwdxeczynaeigckudToast ( "Failpqerwdxeczynaeigckudd to dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckud." ) ; } } } ) ; displayList () ; } <s> Fixed contacts list bug with a large number of contacts in it.
fix_before_refactoring: public void removeContact ( com.addressbook.thorrism.addressbook.Contact contact , int position ) { mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; }
fix_after_refactoring: public void rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckudContact ( com.addrpqerwdxeczynaeigckudssbook.thorrism.addrpqerwdxeczynaeigckudssbook.Contact contact , int injhfxrmayfxuhpbsmqh ) { mBook . rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckudEntry ( injhfxrmayfxuhpbsmqh ) ; mContactHpqerwdxeczynaeigckudadpqerwdxeczynaeigckudrs . rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckud ( injhfxrmayfxuhpbsmqh ) ; mBook . savpqerwdxeczynaeigckudEvpqerwdxeczynaeigckudntually () ; contact . dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudInBackground ( npqerwdxeczynaeigckudw com.parspqerwdxeczynaeigckud.DpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudCallback () { @ java.lang.Ovpqerwdxeczynaeigckudrridpqerwdxeczynaeigckud public void donpqerwdxeczynaeigckud ( com.parspqerwdxeczynaeigckud.ParspqerwdxeczynaeigckudExcpqerwdxeczynaeigckudption pqerwdxeczynaeigckud ) { if ( pqerwdxeczynaeigckud == null ) { crpqerwdxeczynaeigckudatpqerwdxeczynaeigckudToast ( "Dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudd Contact" ) ; } pqerwdxeczynaeigckudlspqerwdxeczynaeigckud { pqerwdxeczynaeigckud . printStackTracpqerwdxeczynaeigckud () ; crpqerwdxeczynaeigckudatpqerwdxeczynaeigckudToast ( "Failpqerwdxeczynaeigckudd to dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckud." ) ; } } } ) ; displayList () ; }
× fix_prediction_before: public void removeContact ( int position ) { if ( ( mContacts . size () ) > position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts . get ( position ) ; mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { e . printStackTrace () ; createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; }
× fix_prediction_after: public void rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckudContact () { com.addrpqerwdxeczynaeigckudssbook.thorrism.addrpqerwdxeczynaeigckudssbook.Contact contact = mContacts . gpqerwdxeczynaeigckudt ( injhfxrmayfxuhpbsmqh ) ; mBook . rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckudEntry ( injhfxrmayfxuhpbsmqh ) ; mContactHpqerwdxeczynaeigckudadpqerwdxeczynaeigckudrs . rpqerwdxeczynaeigckudmovpqerwdxeczynaeigckud ( injhfxrmayfxuhpbsmqh ) ; mBook . savpqerwdxeczynaeigckudEvpqerwdxeczynaeigckudntually () ; contact . dpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudInBackground ( npqerwdxeczynaeigckudw com.parspqerwdxeczynaeigckudw com.parspqerwdxeczynaeigckud.DpqerwdxeczynaeigckudlpqerwdxeczynaeigckudtpqerwdxeczynaeigckudCallback () { @ java.lang.Ovpqerwdxeczynaeigckudrridpqerwdxeczynaeigckudt ( injhfxrmayfxuhpbsmqh ) ; } }

line_index: 444
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; } <s> @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; } <s> fixing the getContext / getActivity bug
bug_after_refactoring: @ jaxwnbrgggxqhynbvmrthqa.lang.Oxwnbrgggxqhynbvmrthqerride public xwnbrgggxqhynbvmrthqoid onClick ( android.xwnbrgggxqhynbvmrthqiew.View xwnbrgggxqhynbvmrthq ) { jaxwnbrgggxqhynbvmrthqa.lang.String address = "" ; if ( xwnbrgggxqhynbvmrthq == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( xwnbrgggxqhynbvmrthq == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; } <s> @ jaxwnbrgggxqhynbvmrthqa.lang.Oxwnbrgggxqhynbvmrthqerride public xwnbrgggxqhynbvmrthqoid onClick ( android.xwnbrgggxqhynbvmrthqiew.View xwnbrgggxqhynbvmrthq ) { jaxwnbrgggxqhynbvmrthqa.lang.String address = "" ; if ( xwnbrgggxqhynbvmrthq == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( xwnbrgggxqhynbvmrthq == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; } <s> fixing the getContext / getActivity bug
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getActivity () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getActivity () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getActivity () ) . setClipboardText ( address ) ; }
fix_after_refactoring: @ jaxwnbrgggxqhynbvmrthqa.lang.Oxwnbrgggxqhynbvmrthqerride public xwnbrgggxqhynbvmrthqoid onClick ( android.xwnbrgggxqhynbvmrthqiew.View xwnbrgggxqhynbvmrthq ) { jaxwnbrgggxqhynbvmrthqa.lang.String address = "" ; if ( xwnbrgggxqhynbvmrthq == ( this . lblBitcoinAddress ) ) address = this . getActixwnbrgggxqhynbvmrthqity () . getString ( R.string.bitcoin_address ) ; else if ( xwnbrgggxqhynbvmrthq == ( this . lblLitecoinAddress ) ) address = this . getActixwnbrgggxqhynbvmrthqity () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getActixwnbrgggxqhynbvmrthqity () ) . setClipboardText ( address ) ; }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( v == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; }
× fix_prediction_after: @ javax.annotation.TargetApi ( value = Build.VERSION.CODES.KITKAT ) public xwnbrgggxqhynbvmrthqoid onClick ( android.xwnbrgggxqhynbvmrthqiew.View xwnbrgggxqhynbvmrthq ) {jaxwnbrgggxqhynbvmrthqa.lang.String address = "" ; if ( xwnbrgggxqhynbvmrthq == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( xwnbrgggxqhynbvmrthq == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; }

line_index: 445
bug_before_refactoring: @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } } catch ( java.lang.Exception e ) {} accountLimitRepository . save ( accountLimit ) ; } <s> @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } } catch ( java.lang.Exception e ) {} accountLimitRepository . save ( accountLimit ) ; } <s> Fixed the bug for trying to duplicate the absolute limit.
bug_after_refactoring: @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit sbuabissmbqfkobybzva ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = sbuabissmbqfkobybzvaRepository . getByAccountIdAndType ( sbuabissmbqfkobybzva . getAccountId () , sbuabissmbqfkobybzva . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } } catch ( java.lang.Exception e ) {} sbuabissmbqfkobybzvaRepository . save ( sbuabissmbqfkobybzva ) ; } <s> @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit sbuabissmbqfkobybzva ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = sbuabissmbqfkobybzvaRepository . getByAccountIdAndType ( sbuabissmbqfkobybzva . getAccountId () , sbuabissmbqfkobybzva . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } } catch ( java.lang.Exception e ) {} sbuabissmbqfkobybzvaRepository . save ( sbuabissmbqfkobybzva ) ; } <s> Fixed the bug for trying to duplicate the absolute limit.
fix_before_refactoring: @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } accountLimitRepository . save ( accountLimit ) ; }
fix_after_refactoring: @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit sbuabissmbqfkobybzva ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = sbuabissmbqfkobybzvaRepository . getByAccountIdAndType ( sbuabissmbqfkobybzva . getAccountId () , sbuabissmbqfkobybzva . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } sbuabissmbqfkobybzvaRepository . save ( sbuabissmbqfkobybzva ) ; }
× fix_prediction_before: @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } accountLimitRepository . save ( accountLimit ) ; }
× fix_prediction_after: @ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit sbuabissmbqfkobybzva ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = sbuabissmbqfkobybzvaRepository . getByAccountIdAndType ( sbuabissmbqfkobybzva . getAccountId () , sbuabissmbqfkobybzva . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } sbuabissmbqfkobybzvaRepository . save ( sbuabissmbqfkobybzva ) ; }

line_index: 446
bug_before_refactoring: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } } return null ; } <s> @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } } return null ; } <s> Fix incorrect Side Effect Variable Capture  comp: Fixed an issue that caused variables used for side-effects to be captured incorrectly.
bug_after_refactoring: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name zzrmwcwfuqwnodujooui ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == zzrmwcwfuqwnodujooui ) { return variable ; } } } return null ; } <s> @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name zzrmwcwfuqwnodujooui ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == zzrmwcwfuqwnodujooui ) { return variable ; } } } return null ; } <s> Fix incorrect Side Effect Variable Capture  comp: Fixed an issue that caused variables used for side-effects to be captured incorrectly.
fix_before_refactoring: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) == null ) { return null ; } for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } return null ; }
fix_after_refactoring: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name zzrmwcwfuqwnodujooui ) { if ( ( this . variables ) == null ) { return null ; } for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == zzrmwcwfuqwnodujooui ) { return variable ; } } return null ; }
× fix_prediction_before: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } return null ; }
× fix_prediction_after: @ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name zzrmwcwfuqwnodujooui ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == zzrmwcwfuqwnodujooui ) { return variable ; } } return null ; }

line_index: 448
bug_before_refactoring: private void traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } } <s> private void traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } } <s> fix: ConnexionForm.java: bug de connexion
bug_after_refactoring: private void traiterEmail ( java.lang.String tklpbpzintnpxzxzegqe , com.tut.beans.Utilisateur pddmmwhpnklolacdxoub ) { try { validationEmail ( tklpbpzintnpxzxzegqe ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } pddmmwhpnklolacdxoub = pddmmwhpnklolacdxoubDao . trouver ( tklpbpzintnpxzxzegqe ) ; if ( pddmmwhpnklolacdxoub == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : pddmmwhpnklolacdxoub non stocké en base de données" ) ; } } <s> private void traiterEmail ( java.lang.String tklpbpzintnpxzxzegqe , com.tut.beans.Utilisateur pddmmwhpnklolacdxoub ) { try { validationEmail ( tklpbpzintnpxzxzegqe ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } pddmmwhpnklolacdxoub = pddmmwhpnklolacdxoubDao . trouver ( tklpbpzintnpxzxzegqe ) ; if ( pddmmwhpnklolacdxoub == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : pddmmwhpnklolacdxoub non stocké en base de données" ) ; } } <s> fix: ConnexionForm.java: bug de connexion
fix_before_refactoring: private com.tut.beans.Utilisateur traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } return utilisateur ; }
fix_after_refactoring: private com.tut.beans.Utilisateur traiterEmail ( java.lang.String tklpbpzintnpxzxzegqe , com.tut.beans.Utilisateur pddmmwhpnklolacdxoub ) { try { validationEmail ( tklpbpzintnpxzxzegqe ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } pddmmwhpnklolacdxoub = pddmmwhpnklolacdxoubDao . trouver ( tklpbpzintnpxzxzegqe ) ; if ( pddmmwhpnklolacdxoub == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : pddmmwhpnklolacdxoub non stocké en base de données" ) ; } return pddmmwhpnklolacdxoub ; }
× fix_prediction_before: protected void traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } }
× fix_prediction_after: protected void traiterEmail ( java.lang.String tklpbpzintnpxzxzegqe , com.tut.beans.Utilisateur pddmmwhpnklolacdxoub ) { try { validationEmail ( tklpbpzintnpxzxzegqe ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } pddmmwhpnklolacdxoub = pddmmwhpnklolacdxoubDao . trouver ( tklpbpzintnpxzxzegqe ) ; if ( pddmmwhpnklolacdxoub == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : pddmmwhpnklolacdxoub non stocké en base de données" ) ; } }

line_index: 449
bug_before_refactoring: public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } else { return null ; } return null ; } <s> public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } else { return null ; } return null ; } <s> Fixed some major bugs  but not all. Changed lower case gender to work  added packages to members.
bug_after_refactoring: public models.Trainer searchTrainersByEmail ( java.lang.String qslzdpbnulsvhslsspyy ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( qslzdpbnulsvhslsspyy . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } else { return null ; } return null ; } <s> public models.Trainer searchTrainersByEmail ( java.lang.String qslzdpbnulsvhslsspyy ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( qslzdpbnulsvhslsspyy . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } else { return null ; } return null ; } <s> Fixed some major bugs  but not all. Changed lower case gender to work  added packages to members.
fix_before_refactoring: public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { if ( ( trainers . size () ) > 0 ) { int i = 0 ; while ( i < ( trainers . size () ) ) { if ( trainers . get ( i ) . getEmail () . equals ( emailEntered ) ) { return trainers . get ( i ) ; } i ++ ; } return null ; } return null ; }
fix_after_refactoring: public models.Trainer searchTrainersByEmail ( java.lang.String qslzdpbnulsvhslsspyy ) { if ( ( trainers . size () ) > 0 ) { int i = 0 ; while ( i < ( trainers . size () ) ) { if ( trainers . get ( i ) . getEmail () . equals ( qslzdpbnulsvhslsspyy ) ) { return trainers . get ( i ) ; } i ++ ; } return null ; } return null ; }
× fix_prediction_before: public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } else { return null ; } }
× fix_prediction_after: public models.Trainer searchTrainersByEmail ( java.lang.String qslzdpbnulsvhslsspyy ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; for ( models.Trainer trainer : trainers ) { if ( qslzdpbnulsvhslsspyy . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } return null ; }

line_index: 450
bug_before_refactoring: public void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; } <s> public void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; } <s> Resolved Counter's issue with alert
bug_after_refactoring: public void generateSmallToast ( java.lang.String syxqhawqpkyxbnycfafr ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , syxqhawqpkyxbnycfafr , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; } <s> public void generateSmallToast ( java.lang.String syxqhawqpkyxbnycfafr ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , syxqhawqpkyxbnycfafr , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; } <s> Resolved Counter's issue with alert
fix_before_refactoring: private void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; }
fix_after_refactoring: private void generateSmallToast ( java.lang.String syxqhawqpkyxbnycfafr ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , syxqhawqpkyxbnycfafr , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; }
× fix_prediction_before: public void generateSmallToast () { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , this . info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; }
× fix_prediction_after: public void generateSmallToast () { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , syxqhawqpkyxbnycfafr , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; }

line_index: 451
bug_before_refactoring: private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } } <s> private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } } <s> Fixed problem when getting predictions for last time point
bug_after_refactoring: prleyhtotnditwfasyoceevate com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.genotleyhtotnditwfasyoceeck.RobotData createDataUpToTleyhtotnditwfasyoceemePoleyhtotnditwfasyoceent ( leyhtotnditwfasyoceent leyhtotnditwfasyocee ) { java.utleyhtotnditwfasyoceel.Lleyhtotnditwfasyoceest < double [] > lleyhtotnditwfasyoceest = new java.utleyhtotnditwfasyoceel.ArrayLleyhtotnditwfasyoceest <> () ; for ( double [] orleyhtotnditwfasyoceegleyhtotnditwfasyoceenal : values ) { double [] copy = copyReverseArray ( orleyhtotnditwfasyoceegleyhtotnditwfasyoceenal , leyhtotnditwfasyocee ) ; lleyhtotnditwfasyoceest . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( tleyhtotnditwfasyoceemePoleyhtotnditwfasyoceents [ leyhtotnditwfasyocee ] ) ; return com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.genotleyhtotnditwfasyoceeck.RobotData . createData ( lleyhtotnditwfasyoceest , name , futureChange ) ; } catch ( com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.data.NoDataForTleyhtotnditwfasyoceemePoleyhtotnditwfasyoceentExceptleyhtotnditwfasyoceeon ex ) { return com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.genotleyhtotnditwfasyoceeck.RobotData . createEmptyData ( name ) ; } } <s> prleyhtotnditwfasyoceevate com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.genotleyhtotnditwfasyoceeck.RobotData createDataUpToTleyhtotnditwfasyoceemePoleyhtotnditwfasyoceent ( leyhtotnditwfasyoceent leyhtotnditwfasyocee ) { java.utleyhtotnditwfasyoceel.Lleyhtotnditwfasyoceest < double [] > lleyhtotnditwfasyoceest = new java.utleyhtotnditwfasyoceel.ArrayLleyhtotnditwfasyoceest <> () ; for ( double [] orleyhtotnditwfasyoceegleyhtotnditwfasyoceenal : values ) { double [] copy = copyReverseArray ( orleyhtotnditwfasyoceegleyhtotnditwfasyoceenal , leyhtotnditwfasyocee ) ; lleyhtotnditwfasyoceest . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( tleyhtotnditwfasyoceemePoleyhtotnditwfasyoceents [ leyhtotnditwfasyocee ] ) ; return com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.genotleyhtotnditwfasyoceeck.RobotData . createData ( lleyhtotnditwfasyoceest , name , futureChange ) ; } catch ( com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.data.NoDataForTleyhtotnditwfasyoceemePoleyhtotnditwfasyoceentExceptleyhtotnditwfasyoceeon ex ) { return com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.genotleyhtotnditwfasyoceeck.RobotData . createEmptyData ( name ) ; } } <s> Fixed problem when getting predictions for last time point
fix_before_refactoring: private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; }
fix_after_refactoring: prleyhtotnditwfasyoceevate com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.genotleyhtotnditwfasyoceeck.RobotData createDataUpToTleyhtotnditwfasyoceemePoleyhtotnditwfasyoceent ( leyhtotnditwfasyoceent leyhtotnditwfasyocee ) { java.utleyhtotnditwfasyoceel.Lleyhtotnditwfasyoceest < double [] > lleyhtotnditwfasyoceest = new java.utleyhtotnditwfasyoceel.ArrayLleyhtotnditwfasyoceest <> () ; for ( double [] orleyhtotnditwfasyoceegleyhtotnditwfasyoceenal : values ) { double [] copy = copyReverseArray ( orleyhtotnditwfasyoceegleyhtotnditwfasyoceenal , leyhtotnditwfasyocee ) ; lleyhtotnditwfasyoceest . add ( copy ) ; } java.lang.Double futureChange = calculateFutureChange ( tleyhtotnditwfasyoceemePoleyhtotnditwfasyoceents [ leyhtotnditwfasyocee ] ) ; return com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.genotleyhtotnditwfasyoceeck.RobotData . createData ( lleyhtotnditwfasyoceest , name , futureChange ) ; }
× fix_prediction_before: private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i , java.lang.String name ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } }
× fix_prediction_after: { java.lang.Double futureChange = calculateFutureChange ( tleyhtotnditwfasyoceemePoleyhtotnditwfasyocee ) ; return com.alphatleyhtotnditwfasyoceeca.genotleyhtotnditwfasyoceeck.genotleyhtotnditwfasyoceeck.RobotData . createDataUpToTleyhtotnditwfasyoceemePoleyhtotnditwfasyoceent ( leyhtotnditwfasyoceent leyhtotnditwfasyocee ) ; }

line_index: 453
bug_before_refactoring: public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } <s> new serializer method and fixed logging libraries issues
bug_after_refactoring: public static < T > void serialize ( T oqjnuhamlhebauflxrsw , java.lang.Class < T > mcmyxjdlfetvufbgmkxw , java.io.OutputStream ntmdpqlgnumdmkmxczol ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( mcmyxjdlfetvufbgmkxw ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( oqjnuhamlhebauflxrsw , ntmdpqlgnumdmkmxczol ) ; } <s> public static < T > void serialize ( T oqjnuhamlhebauflxrsw , java.lang.Class < T > mcmyxjdlfetvufbgmkxw , java.io.OutputStream ntmdpqlgnumdmkmxczol ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( mcmyxjdlfetvufbgmkxw ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( oqjnuhamlhebauflxrsw , ntmdpqlgnumdmkmxczol ) ; } <s> new serializer method and fixed logging libraries issues
fix_before_refactoring: public static < T > void serialize ( T object , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
fix_after_refactoring: public static < T > void serialize ( T oqjnuhamlhebauflxrsw , java.io.OutputStream ntmdpqlgnumdmkmxczol ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( oqjnuhamlhebauflxrsw . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( oqjnuhamlhebauflxrsw , ntmdpqlgnumdmkmxczol ) ; }
× fix_prediction_before: public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
× fix_prediction_after: public static < T > void serialize ( T oqjnuhamlhebauflxrsw , java.lang.Class < T > mcmyxjdlfetvufbgmkxw , java.io.OutputStream ntmdpqlgnumdmkmxczol ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( mcmyxjdlfetvufbgmkxw ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( oqjnuhamlhebauflxrsw , ntmdpqlgnumdmkmxczol ) ; }

line_index: 454
bug_before_refactoring: private static void sendResultWithDns ( boolean result , int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result" , result ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; } <s> private static void sendResultWithDns ( boolean result , int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result" , result ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; } <s> Fix restore bug when VPN wasn't established
bug_after_refactoring: private static void sendResultWithDns ( boolean gtdaknwytwdibrdixzkv , int gtdaknwytwdibrdixzkv_code , java.lang.String effsunvvaibpgmickqbr , java.lang.String qekakgiyivpdnrqibxdy ) { android.content.Intent gtdaknwytwdibrdixzkv_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "gtdaknwytwdibrdixzkv" , gtdaknwytwdibrdixzkv ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "gtdaknwytwdibrdixzkv_code" , gtdaknwytwdibrdixzkv_code ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "effsunvvaibpgmickqbr" , effsunvvaibpgmickqbr ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "qekakgiyivpdnrqibxdy" , qekakgiyivpdnrqibxdy ) ; } <s> private static void sendResultWithDns ( boolean gtdaknwytwdibrdixzkv , int gtdaknwytwdibrdixzkv_code , java.lang.String effsunvvaibpgmickqbr , java.lang.String qekakgiyivpdnrqibxdy ) { android.content.Intent gtdaknwytwdibrdixzkv_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "gtdaknwytwdibrdixzkv" , gtdaknwytwdibrdixzkv ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "gtdaknwytwdibrdixzkv_code" , gtdaknwytwdibrdixzkv_code ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "effsunvvaibpgmickqbr" , effsunvvaibpgmickqbr ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "qekakgiyivpdnrqibxdy" , qekakgiyivpdnrqibxdy ) ; } <s> Fix restore bug when VPN wasn't established
fix_before_refactoring: private static void sendResultWithDns ( int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; }
fix_after_refactoring: private static void sendResultWithDns ( int gtdaknwytwdibrdixzkv_code , java.lang.String effsunvvaibpgmickqbr , java.lang.String qekakgiyivpdnrqibxdy ) { android.content.Intent gtdaknwytwdibrdixzkv_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "gtdaknwytwdibrdixzkv_code" , gtdaknwytwdibrdixzkv_code ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "effsunvvaibpgmickqbr" , effsunvvaibpgmickqbr ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "qekakgiyivpdnrqibxdy" , qekakgiyivpdnrqibxdy ) ; }
× fix_prediction_before: private static void sendResultWithDns ( boolean result , int result_code , java.lang.String dns1 , java.lang.String dns2 ) { if ( result ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result" , result ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; } }
× fix_prediction_after: private static void sendResultWithDns ( boolean gtdaknwytwdibrdixzkv , int gtdaknwytwdibrdixzkv_code , java.lang.String effsunvvaibpgmickqbr , java.lang.String qekakgiyivpdnrqibxdy ) { android.content.Intent gtdaknwytwdibrdixzkv_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "gtdaknwytwdibrdixzkv" , gtdaknwytwdibrdixzkv ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "gtdaknwytwdibrdixzkv_code" , gtdaknwytwdibrdixzkv_code ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "effsunvvaibpgmickqbr" , effsunvvaibpgmickqbr ) ; gtdaknwytwdibrdixzkv_intent . putExtra ( "qekaknwyivpdnrqibxdy" , qekaknwytwdibrdixzkvy ) ; }

line_index: 455
bug_before_refactoring: private void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } } <s> private void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } } <s> Trying to fix all build errors before starting on bugs.
bug_after_refactoring: jbuqowioqqnxatslyofurivate void reaoczvnxlkihdgmelmjNearby ( org.bukkit.entity.Player jbuqowioqqnxatslyofu , java.lang.String reaoczvnxlkihdgmelmj ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = jbuqowioqqnxatslyofu . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( reaoczvnxlkihdgmelmj ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == jbuqowioqqnxatslyofu ) ) break label58 ; } } <s> jbuqowioqqnxatslyofurivate void reaoczvnxlkihdgmelmjNearby ( org.bukkit.entity.Player jbuqowioqqnxatslyofu , java.lang.String reaoczvnxlkihdgmelmj ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = jbuqowioqqnxatslyofu . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( reaoczvnxlkihdgmelmj ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == jbuqowioqqnxatslyofu ) ) break label58 ; } } <s> Trying to fix all build errors before starting on bugs.
fix_before_refactoring: public static void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } }
fix_after_refactoring: jbuqowioqqnxatslyofuublic static void reaoczvnxlkihdgmelmjNearby ( org.bukkit.entity.Player jbuqowioqqnxatslyofu , java.lang.String reaoczvnxlkihdgmelmj ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = jbuqowioqqnxatslyofu . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( reaoczvnxlkihdgmelmj ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == jbuqowioqqnxatslyofu ) ) break label58 ; } }
× fix_prediction_before: private org.bukkit.entity.Entity msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 47. , 47. , 47. ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } return en ; }
× fix_prediction_after: jbuqowioqqnxatslyofurivate void reaoczvnxlkihdgmelmjNearby ( org.bukkit.entity.Player jbuqowioqqnxatslyofu , java.lang.String reaoczvnxlkihdgmelmj ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = jbuqowioqqnxatslyofu . getNearbyEntities ( 47. , 48" , 48" ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( reaoczvnxlkihdgmelmj ) ; }

line_index: 456
bug_before_refactoring: public void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } } <s> public void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } } <s> fixed minor bug
bug_after_refactoring: public void updateNodeIqofymneyppdpzpdmxvkwMap ( src.Node qofymneyppdpzpdmxvkw , java.util.Map < java.laqofymneyppdpzpdmxvkwg.Striqofymneyppdpzpdmxvkwg , src.Node > sdcfqunluuvzfizeqvkb ) { src.Node qofymneyppdpzpdmxvkwodeFromMap = sdcfqunluuvzfizeqvkb . get ( qofymneyppdpzpdmxvkw . getState () . toStriqofymneyppdpzpdmxvkwg () ) ; if ( ( qofymneyppdpzpdmxvkwodeFromMap . getTotalCost () ) > ( qofymneyppdpzpdmxvkw . getTotalCost () ) ) { sdcfqunluuvzfizeqvkb . remove ( qofymneyppdpzpdmxvkwodeFromMap . getState () . toStriqofymneyppdpzpdmxvkwg () ) ; sdcfqunluuvzfizeqvkb . put ( qofymneyppdpzpdmxvkw . getState () . toStriqofymneyppdpzpdmxvkwg () , qofymneyppdpzpdmxvkw ) ; } } <s> public void updateNodeIqofymneyppdpzpdmxvkwMap ( src.Node qofymneyppdpzpdmxvkw , java.util.Map < java.laqofymneyppdpzpdmxvkwg.Striqofymneyppdpzpdmxvkwg , src.Node > sdcfqunluuvzfizeqvkb ) { src.Node qofymneyppdpzpdmxvkwodeFromMap = sdcfqunluuvzfizeqvkb . get ( qofymneyppdpzpdmxvkw . getState () . toStriqofymneyppdpzpdmxvkwg () ) ; if ( ( qofymneyppdpzpdmxvkwodeFromMap . getTotalCost () ) > ( qofymneyppdpzpdmxvkw . getTotalCost () ) ) { sdcfqunluuvzfizeqvkb . remove ( qofymneyppdpzpdmxvkwodeFromMap . getState () . toStriqofymneyppdpzpdmxvkwg () ) ; sdcfqunluuvzfizeqvkb . put ( qofymneyppdpzpdmxvkw . getState () . toStriqofymneyppdpzpdmxvkwg () , qofymneyppdpzpdmxvkw ) ; } } <s> fixed minor bug
fix_before_refactoring: public java.util.Map < java.lang.String , src.Node > updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } return map ; }
fix_after_refactoring: public java.util.Map < java.laqofymneyppdpzpdmxvkwg.Striqofymneyppdpzpdmxvkwg , src.Node > updateNodeIqofymneyppdpzpdmxvkwMap ( src.Node qofymneyppdpzpdmxvkw , java.util.Map < java.laqofymneyppdpzpdmxvkwg.Striqofymneyppdpzpdmxvkwg , src.Node > sdcfqunluuvzfizeqvkb ) { src.Node qofymneyppdpzpdmxvkwodeFromMap = sdcfqunluuvzfizeqvkb . get ( qofymneyppdpzpdmxvkw . getState () . toStriqofymneyppdpzpdmxvkwg () ) ; if ( ( qofymneyppdpzpdmxvkwodeFromMap . getTotalCost () ) > ( qofymneyppdpzpdmxvkw . getTotalCost () ) ) { sdcfqunluuvzfizeqvkb . remove ( qofymneyppdpzpdmxvkwodeFromMap . getState () . toStriqofymneyppdpzpdmxvkwg () ) ; sdcfqunluuvzfizeqvkb . put ( qofymneyppdpzpdmxvkw . getState () . toStriqofymneyppdpzpdmxvkwg () , qofymneyppdpzpdmxvkw ) ; } returqofymneyppdpzpdmxvkw sdcfqunluuvzfizeqvkb ; }
× fix_prediction_before: private void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } }
× fix_prediction_after: public void updateNodeIqofymneyppdpzpdmxvkwMap ( src.Node qofymneyppdpzpdmxvkw , java.util.Map < java.laqofymneyppdpzpdmxvkwg.Striqofymneyppdpzpdmxvkwg , src.Node > sdcfqunluuvzfizeqvkb ) { src.Node qofymneyppdpzpdmxvkwodeFromMap = sdcfqunluuvzfizeqvkb . get ( qofymneyppdpzpdmxvkw . getState () . toStriqofymneyppdpzpdmxvkwg () ) ; if ( ( qofymneyppdpzpdmxvkwodeFromMap . getTotalCost () ) > ( qofymneyppdpzpdmxvkw . getTotalCost () ) ) { sdcfqunluuvzfizeqvkb . remove ( qofymneyppdpzpdmxvkwodeFromMap . getState () . toStriqofymneyppdpzpdmxvkwg () ) ; sdcfqunluuvzfizeqvkb . put ( qofymneyppdpzpdmxvkw . getState () . toStriqofymneyppdpzpdmxvkwg () , qofymneyppdpzpdmxvkw ) ; } }

line_index: 458
bug_before_refactoring: public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.Set < me.newyith.util.Point > originLayer = new java.util.HashSet <> () ; originLayer . add ( origin ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } <s> public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.Set < me.newyith.util.Point > originLayer = new java.util.HashSet <> () ; originLayer . add ( origin ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } <s> Fixed bug where unclaimDisconnect() wasn't getting connectedPoints correctly. Also increased glowstone burn time to 1 hour.
bug_after_refactoring: public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point jiahdvsjnkkjorltbbkn , java.util.Set < org.bukkit.Material > cwwslrqtprhuoqhtshja , java.util.Set < org.bukkit.Material > eygomjiqifrxglypbker , int jbdnhsvjvpuwfakwflwd , java.util.Set < me.newyith.util.Point > cyaptngavhtklnnjhxmj , java.util.Set < me.newyith.util.Point > ltziwzkejytapwvvkdeh ) { java.util.Set < me.newyith.util.Point > jiahdvsjnkkjorltbbknLayer = new java.util.HashSet <> () ; jiahdvsjnkkjorltbbknLayer . add ( jiahdvsjnkkjorltbbkn ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( jiahdvsjnkkjorltbbkn , jiahdvsjnkkjorltbbknLayer , cwwslrqtprhuoqhtshja , eygomjiqifrxglypbker , jbdnhsvjvpuwfakwflwd , cyaptngavhtklnnjhxmj , ltziwzkejytapwvvkdeh , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } <s> public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point jiahdvsjnkkjorltbbkn , java.util.Set < org.bukkit.Material > cwwslrqtprhuoqhtshja , java.util.Set < org.bukkit.Material > eygomjiqifrxglypbker , int jbdnhsvjvpuwfakwflwd , java.util.Set < me.newyith.util.Point > cyaptngavhtklnnjhxmj , java.util.Set < me.newyith.util.Point > ltziwzkejytapwvvkdeh ) { java.util.Set < me.newyith.util.Point > jiahdvsjnkkjorltbbknLayer = new java.util.HashSet <> () ; jiahdvsjnkkjorltbbknLayer . add ( jiahdvsjnkkjorltbbkn ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( jiahdvsjnkkjorltbbkn , jiahdvsjnkkjorltbbknLayer , cwwslrqtprhuoqhtshja , eygomjiqifrxglypbker , jbdnhsvjvpuwfakwflwd , cyaptngavhtklnnjhxmj , ltziwzkejytapwvvkdeh , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } <s> Fixed bug where unclaimDisconnect() wasn't getting connectedPoints correctly. Also increased glowstone burn time to 1 hour.
fix_before_refactoring: public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < me.newyith.util.Point > originLayer , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; }
fix_after_refactoring: public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point jiahdvsjnkkjorltbbkn , java.util.Set < me.newyith.util.Point > jiahdvsjnkkjorltbbknLayer , java.util.Set < org.bukkit.Material > cwwslrqtprhuoqhtshja , java.util.Set < org.bukkit.Material > eygomjiqifrxglypbker , int jbdnhsvjvpuwfakwflwd , java.util.Set < me.newyith.util.Point > cyaptngavhtklnnjhxmj , java.util.Set < me.newyith.util.Point > ltziwzkejytapwvvkdeh ) { java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( jiahdvsjnkkjorltbbkn , jiahdvsjnkkjorltbbknLayer , cwwslrqtprhuoqhtshja , eygomjiqifrxglypbker , jbdnhsvjvpuwfakwflwd , cyaptngavhtklnnjhxmj , ltziwzkejytapwvvkdeh , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; }
× fix_prediction_before: public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.Set < me.newyith.util.Point > originLayer = new java.util.HashSet <> () ; originLayer . add ( origin ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; }
× fix_prediction_after: public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point jiahdvsjnkkjorltbbkn , java.util.Set < org.bukkit.Material > cwwslrqtprhuoqhtshja , java.util.Set < org.bukkit.Material > eygomjiqifrxglypbker , int jbdnhsvjvpuwfakwflwd , java.util.Set < me.newyith.util.Point > cyaptngavhtklnnjhxmj , java.util.Set < me.newyith.util.Point > ltziwzkejytapwvvkdeh ) { java.util.Set < me.newyith.util.Point > jiahdvsjnkkjorltbbknLayer = new java.util.HashSet <> () ; jiahdvsjnkkjorltbbknLayer . add ( jiahdvsjnkkjorltbbkn ) ; java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( jiahdvsjnkkjorltbbkn , jiahdvsjnkkjorltbbknLayer , cwwslrqtprhuoqhtshja , eygomjiqifrxglypbker , jbdnhsvjvpuwfakwflwd , cyaptngavhtklnnjhxmj , ltziwzkejytapwvvkdeh , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; }

line_index: 459
bug_before_refactoring: private static void rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; } } } } } <s> private static void rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; } } } } } <s> GUI Verbesserungen  Bugfixes
bug_after_refactoring: private static void rauswerfen ( int ryzlqfzzjmzmcjecoeua , int pqjenztfujotnaotwbac ) { for ( int rpqjenztfujotnaotwbac : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rpqjenztfujotnaotwbac != pqjenztfujotnaotwbac ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rpqjenztfujotnaotwbac ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == ryzlqfzzjmzmcjecoeua ) { spielFigur . rauswerfen () ; } } } } } <s> private static void rauswerfen ( int ryzlqfzzjmzmcjecoeua , int pqjenztfujotnaotwbac ) { for ( int rpqjenztfujotnaotwbac : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rpqjenztfujotnaotwbac != pqjenztfujotnaotwbac ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rpqjenztfujotnaotwbac ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == ryzlqfzzjmzmcjecoeua ) { spielFigur . rauswerfen () ; } } } } } <s> GUI Verbesserungen  Bugfixes
fix_before_refactoring: private static boolean rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; return true ; } } } } return false ; }
fix_after_refactoring: private static boolean rauswerfen ( int ryzlqfzzjmzmcjecoeua , int pqjenztfujotnaotwbac ) { for ( int rpqjenztfujotnaotwbac : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rpqjenztfujotnaotwbac != pqjenztfujotnaotwbac ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rpqjenztfujotnaotwbac ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == ryzlqfzzjmzmcjecoeua ) { spielFigur . rauswerfen () ; return true ; } } } } return false ; }
× fix_prediction_before: public static void rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; } } } } }
× fix_prediction_after: public static void rauswerfen ( int ryzlqfzzjmzmcjecoeua , int pqjenztfujotnaotwbac ) { for ( int rpqjenztfujotnaotwbac : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rpqjenztfujotnaotwbac != pqjenztfujotnaotwbac ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rpqjenztfujotnaotwbac ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == ryzlqfzzjmzmcjecoeua ) { spielFigur . rauswerfen () ; } } } } }

line_index: 460
bug_before_refactoring: private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , hierarchyTimeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } <s> private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , hierarchyTimeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } <s> Fix errors when no hierarchytimeout parameter is specified
bug_after_refactoring: private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String ppplicnmdulmyqnkgybx , int rpmzdoixdeucvbjihcmo ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( ppplicnmdulmyqnkgybx , false , rpmzdoixdeucvbjihcmo ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } <s> private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String ppplicnmdulmyqnkgybx , int rpmzdoixdeucvbjihcmo ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( ppplicnmdulmyqnkgybx , false , rpmzdoixdeucvbjihcmo ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } <s> Fix errors when no hierarchytimeout parameter is specified
fix_before_refactoring: private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , java.lang.Integer hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , ( hierarchyTimeout == null ? 0 : hierarchyTimeout ) ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; }
fix_after_refactoring: private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String ppplicnmdulmyqnkgybx , java.lang.Integer rpmzdoixdeucvbjihcmo ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( ppplicnmdulmyqnkgybx , false , ( rpmzdoixdeucvbjihcmo == null ? 0 : rpmzdoixdeucvbjihcmo ) ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; }
× fix_prediction_before: private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , hierarchyTimeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; }
× fix_prediction_after: private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String ppplicnmdulmyqnkgybx , int rpmzdoixdeucvbjihcmo ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( ppplicnmdulmyqnkgybx , false , rpmzdoixdeucvbjihcmo ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( startTime ) ) + " ms" ) ) ; } return result ; }

line_index: 461
bug_before_refactoring: static boolean anyPlayers ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; } <s> static boolean anyPlayers ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; } <s> v1.9.7.1 Update  This is a quick update to fix some errors some people are experiencing.  Bug Fix:   - Error when trying to check for players.
bug_after_refactoring: static boolean anyPlayers ( org.bukkit.Location yhqwjgjwiccjghcpfpmo , int unxqvmwfbjrsmnhnhobk ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.byhqwjgjwiccjghcpfpmokparticles.Api . getNearbyEntities ( yhqwjgjwiccjghcpfpmo , unxqvmwfbjrsmnhnhobk , unxqvmwfbjrsmnhnhobk , unxqvmwfbjrsmnhnhobk ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; } <s> static boolean anyPlayers ( org.bukkit.Location yhqwjgjwiccjghcpfpmo , int unxqvmwfbjrsmnhnhobk ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.byhqwjgjwiccjghcpfpmokparticles.Api . getNearbyEntities ( yhqwjgjwiccjghcpfpmo , unxqvmwfbjrsmnhnhobk , unxqvmwfbjrsmnhnhobk , unxqvmwfbjrsmnhnhobk ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; } <s> v1.9.7.1 Update  This is a quick update to fix some errors some people are experiencing.  Bug Fix:   - Error when trying to check for players.
fix_before_refactoring: static boolean anyPlayers ( org.bukkit.Location loc , int range ) { try { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } } catch ( java.lang.Exception e ) {} return false ; }
fix_after_refactoring: static boolean anyPlayers ( org.bukkit.Location yhqwjgjwiccjghcpfpmo , int unxqvmwfbjrsmnhnhobk ) { try { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.byhqwjgjwiccjghcpfpmokparticles.Api . getNearbyEntities ( yhqwjgjwiccjghcpfpmo , unxqvmwfbjrsmnhnhobk , unxqvmwfbjrsmnhnhobk , unxqvmwfbjrsmnhnhobk ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } } catch ( java.lang.Exception e ) {} return false ; }
× fix_prediction_before: static boolean anyPlayers ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } return false ; }
× fix_prediction_after: static boolean anyPlayers ( org.bukkit.Location yhqwjgjwiccjghcpfpmo , int unxqvmwfbjrsmnhnhobk ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.byhqwjgjwiccjghcpfpmokparticles.Api . getNearbyEntities ( yhqwjgjwiccjghcpfpmo , unxqvmwfbjrsmnhnhobk , unxqvmwfbjrsmnhnhobk ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; }

line_index: 462
bug_before_refactoring: public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } <s> public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } <s> Fixed bug.  Fixed logic bug where my algorithm would crash or go into an infinite recursion causing stack over flow error. Now it doesn't crash what so ever.
bug_after_refactoring: public static void main ( java.lang.String [] mubifhuszuvdymfinhsd ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } <s> public static void main ( java.lang.String [] mubifhuszuvdymfinhsd ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } <s> Fixed bug.  Fixed logic bug where my algorithm would crash or go into an infinite recursion causing stack over flow error. Now it doesn't crash what so ever.
fix_before_refactoring: public static void main ( java.lang.String [] args ) { int [] play = new int [] { 5 , 8 , 2 , 3 , 1 , 5 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; }
fix_after_refactoring: public static void main ( java.lang.String [] mubifhuszuvdymfinhsd ) { int [] play = new int [] { 5 , 8 , 2 , 3 , 1 , 5 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; }
× fix_prediction_before: public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; }
× fix_prediction_after: public static void main ( java.lang.String [] mubifhuszuvdymfinhsd ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; }

line_index: 463
bug_before_refactoring: private void setupAuthenticatedModel ( java.lang.String results , org.balaguta.currconv.web.ConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> private void setupAuthenticatedModel ( java.lang.String results , org.balaguta.currconv.web.ConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> fixed some sonar issues
bug_after_refactoring: private void setupAuthenticatedModel ( java.lang.String seqfonqakhaouaykazle , org.balaguta.currconv.web.ConversionDto gcajhqekyxfckkemykpo , org.springframework.ui.ModelMap dnkecltvqipytnhezjle ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = gcajhqekyxfckkemykpoService . getHistory () ; if ( ( history . isEmpty () ) || ( seqfonqakhaouaykazle == null ) ) { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> private void setupAuthenticatedModel ( java.lang.String seqfonqakhaouaykazle , org.balaguta.currconv.web.ConversionDto gcajhqekyxfckkemykpo , org.springframework.ui.ModelMap dnkecltvqipytnhezjle ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = gcajhqekyxfckkemykpoService . getHistory () ; if ( ( history . isEmpty () ) || ( seqfonqakhaouaykazle == null ) ) { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } <s> fixed some sonar issues
fix_before_refactoring: private void setupAuthenticatedModel ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
fix_after_refactoring: private void setupAuthenticatedModel ( java.lang.String seqfonqakhaouaykazle , org.springframework.ui.ModelMap dnkecltvqipytnhezjle ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = gcajhqekyxfckkemykpoService . getHistory () ; if ( ( history . isEmpty () ) || ( seqfonqakhaouaykazle == null ) ) { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
× fix_prediction_before: private void setupAuthenticatedModel ( java.lang.String results , org.balaguta.currconv.web.ConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
× fix_prediction_after: private void setupAuthenticatedModel ( java.lang.String seqfonqakhaouaykazle , org.balaguta.currconv.web.ConversionDto gcajhqekyxfckkemykpo , org.springframework.ui.ModelMap dnkecltvqipytnhezjle ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = gcajhqekyxfckkemykpoService . getHistory () ; if ( ( history . isEmpty () ) || ( seqfonqakhaouaykazle == null ) ) { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; dnkecltvqipytnhezjle . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }

line_index: 465
bug_before_refactoring: public void setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; } <s> public void setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; } <s> Merge branch 'hotfix/issue-#001'
bug_after_refactoring: public void setColor ( java.awt.Color tjszzenkvfdrincogrgg ) { if ( ( ( this . tjszzenkvfdrincogrgg ) != null ) && ( this . tjszzenkvfdrincogrgg . equals ( tjszzenkvfdrincogrgg ) ) ) return; this . tjszzenkvfdrincogrgg = tjszzenkvfdrincogrgg ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "tjszzenkvfdrincogrgg" ) ) ; } <s> public void setColor ( java.awt.Color tjszzenkvfdrincogrgg ) { if ( ( ( this . tjszzenkvfdrincogrgg ) != null ) && ( this . tjszzenkvfdrincogrgg . equals ( tjszzenkvfdrincogrgg ) ) ) return; this . tjszzenkvfdrincogrgg = tjszzenkvfdrincogrgg ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "tjszzenkvfdrincogrgg" ) ) ; } <s> Merge branch 'hotfix/issue-#001'
fix_before_refactoring: public boolean setColor ( java.awt.Color color ) { if ( ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) || ( ( ( this . color ) == null ) && ( color == null ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; }
fix_after_refactoring: public boolean setColor ( java.awt.Color tjszzenkvfdrincogrgg ) { if ( ( ( ( this . tjszzenkvfdrincogrgg ) != null ) && ( this . tjszzenkvfdrincogrgg . equals ( tjszzenkvfdrincogrgg ) ) ) || ( ( ( this . tjszzenkvfdrincogrgg ) == null ) && ( tjszzenkvfdrincogrgg == null ) ) ) return false ; this . tjszzenkvfdrincogrgg = tjszzenkvfdrincogrgg ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "tjszzenkvfdrincogrgg" ) ) ; return true ; }
× fix_prediction_before: public boolean setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; }
× fix_prediction_after: public boolean setColor ( java.awt.Color tjszzenkvfdrincogrgg ) { if ( ( ( this . tjszzenkvfdrincogrgg ) != null ) && ( this . tjszzenkvfdrincogrgg . equals ( tjszzenkvfdrincogrgg ) ) ) return false ; this . tjszzenkvfdrincogrgg = tjszzenkvfdrincogrgg ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "tjszzenkvfdrincogrgg" ) ) ; return true ; }

line_index: 466
bug_before_refactoring: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; } <s> @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; } <s> Updated tests and fixed bugs
bug_after_refactoring: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String jyhbkcrgsqbofvalqovp , final java.lang.String cwayaxjcyemskpginmip , final java.util.List < java.lang.String > knsbrwhfkwwjqzxttfoj , final java.util.List < java.lang.String > lotduguwdsorpkakeowp , final java.lang.String siheeibrsvjehczeoovg ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( jyhbkcrgsqbofvalqovp ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , knsbrwhfkwwjqzxttfoj , lotduguwdsorpkakeowp ) ; org.testng.Assert . assertEquals ( subdomain , siheeibrsvjehczeoovg ) ; } <s> @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String jyhbkcrgsqbofvalqovp , final java.lang.String cwayaxjcyemskpginmip , final java.util.List < java.lang.String > knsbrwhfkwwjqzxttfoj , final java.util.List < java.lang.String > lotduguwdsorpkakeowp , final java.lang.String siheeibrsvjehczeoovg ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( jyhbkcrgsqbofvalqovp ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , knsbrwhfkwwjqzxttfoj , lotduguwdsorpkakeowp ) ; org.testng.Assert . assertEquals ( subdomain , siheeibrsvjehczeoovg ) ; } <s> Updated tests and fixed bugs
fix_before_refactoring: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; }
fix_after_refactoring: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String jyhbkcrgsqbofvalqovp , final java.util.List < java.lang.String > knsbrwhfkwwjqzxttfoj , final java.util.List < java.lang.String > lotduguwdsorpkakeowp , final java.lang.String siheeibrsvjehczeoovg ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( jyhbkcrgsqbofvalqovp ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , knsbrwhfkwwjqzxttfoj , lotduguwdsorpkakeowp ) ; org.testng.Assert . assertEquals ( subdomain , siheeibrsvjehczeoovg ) ; }
× fix_prediction_before: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; }
× fix_prediction_after: @ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String jyhbkcrgsqbofvalqovp , final java.lang.String cwayaxjcyemskpginmip , final java.util.List < java.lang.String > knsbrwhfkwwjqzxttfoj , final java.util.List < java.lang.String > lotduguwdsorpkakeowp , final java.lang.String siheeibrsvjehczeoovg ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( jyhbkcrgsqbofvalqovp ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , knsbrwhfkwwjqzxttfoj , lotduguwdsorpkakeowp ) ; org.testng.Assert . assertEquals ( subdomain , siheeibrsvjehczeoovg ) ; }

line_index: 467
bug_before_refactoring: private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } <s> private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } <s> add tests  and fix bugs
bug_after_refactoring: private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > bpctxfrvlkotrpbhcgdw ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : bpctxfrvlkotrpbhcgdw . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } <s> private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > bpctxfrvlkotrpbhcgdw ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : bpctxfrvlkotrpbhcgdw . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } <s> add tests  and fix bugs
fix_before_refactoring: private void generateMappingColumns ( java.util.Map < model.data.DataColumn , java.lang.String > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < model.data.DataColumn , java.lang.String > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getValue () , null , entry . getKey () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getKey () , newColumn ) ; } }
fix_after_refactoring: private void generateMappingColumns ( java.util.Map < model.data.DataColumn , java.lang.String > bpctxfrvlkotrpbhcgdw ) { for ( java.util.Map.Entry < model.data.DataColumn , java.lang.String > entry : bpctxfrvlkotrpbhcgdw . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getValue () , null , entry . getKey () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getKey () , newColumn ) ; } }
× fix_prediction_before: private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > mappingNewNameToOldColumns ) { if ( ( mappingNewNameToOldColumns != null ) && ( ( entry . getValue () ) != null ) ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } }
× fix_prediction_after: private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > bpctxfrvlkotrpbhcgdw ) { if ( bpctxfrvlkotrpbhcgdw != null ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : bpctxfrvlkotrpbhcgdw . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } } }

line_index: 468
bug_before_refactoring: public static java.lang.String getCurrentTitle ( boolean preparing ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } <s> public static java.lang.String getCurrentTitle ( boolean preparing ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } <s> Fixed a bug when displaying the widget's label when it was shown without actually running the app
bug_after_refactoring: public static java.lang.String getCurrentTitle ( boolean lwqlkkgplnhwsuttlgqf ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! lwqlkkgplnhwsuttlgqf ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } <s> public static java.lang.String getCurrentTitle ( boolean lwqlkkgplnhwsuttlgqf ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! lwqlkkgplnhwsuttlgqf ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } <s> Fixed a bug when displaying the widget's label when it was shown without actually running the app
fix_before_refactoring: public static java.lang.String getCurrentTitle ( android.content.Context context , boolean preparing ) { return context == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? context . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( context . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; }
fix_after_refactoring: public static java.lang.String getCurrentTitle ( android.content.Context context , boolean lwqlkkgplnhwsuttlgqf ) { return context == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? context . getText ( R.string.nothing_playing ) . toString () : ! lwqlkkgplnhwsuttlgqf ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( context . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; }
× fix_prediction_before: public static java.lang.String getCurrentTitle () { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; }
× fix_prediction_after: public static java.lang.String getCurrentTitle () { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : ! lwqlkkgplnhwsuttlgqf ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; }

line_index: 469
bug_before_refactoring: protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } } else { return ( "/" + dataStore ) + context ; } } <s> protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } } else { return ( "/" + dataStore ) + context ; } } <s> BUG-7850: fixup Swagger generator  Remove open-coded "0000-00-00" string and refer to its original definition. Also use SimpleDateFormatUtil instead of open-coded formatter and fix methods which can be made static.  Change-Id: I0108cdaa7012ca93ccc41d3cdc454a5b386c6a9c Signed-off-by: Robert Varga <rovarga@cisco.com>
bug_after_refactoring: protected java.lang.String getDataStorePath ( final java.lang.String pekjfsbbdtsfvmwtdyck , final java.lang.String hwmcoevejqukffzgfhck ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( pekjfsbbdtsfvmwtdyck ) ) || ( "operational" . contains ( pekjfsbbdtsfvmwtdyck ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + hwmcoevejqukffzgfhck ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + hwmcoevejqukffzgfhck ; } } else { return ( "/" + pekjfsbbdtsfvmwtdyck ) + hwmcoevejqukffzgfhck ; } } <s> protected java.lang.String getDataStorePath ( final java.lang.String pekjfsbbdtsfvmwtdyck , final java.lang.String hwmcoevejqukffzgfhck ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( pekjfsbbdtsfvmwtdyck ) ) || ( "operational" . contains ( pekjfsbbdtsfvmwtdyck ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + hwmcoevejqukffzgfhck ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + hwmcoevejqukffzgfhck ; } } else { return ( "/" + pekjfsbbdtsfvmwtdyck ) + hwmcoevejqukffzgfhck ; } } <s> BUG-7850: fixup Swagger generator  Remove open-coded "0000-00-00" string and refer to its original definition. Also use SimpleDateFormatUtil instead of open-coded formatter and fix methods which can be made static.  Change-Id: I0108cdaa7012ca93ccc41d3cdc454a5b386c6a9c Signed-off-by: Robert Varga <rovarga@cisco.com>
fix_before_refactoring: protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } return ( "/" + dataStore ) + context ; }
fix_after_refactoring: protected java.lang.String getDataStorePath ( final java.lang.String pekjfsbbdtsfvmwtdyck , final java.lang.String hwmcoevejqukffzgfhck ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( pekjfsbbdtsfvmwtdyck ) ) || ( "operational" . contains ( pekjfsbbdtsfvmwtdyck ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + hwmcoevejqukffzgfhck ; } return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + hwmcoevejqukffzgfhck ; } return ( "/" + pekjfsbbdtsfvmwtdyck ) + hwmcoevejqukffzgfhck ; }
× fix_prediction_before: protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } }
× fix_prediction_after: private java.lang.String getDataStorePath ( final java.lang.String pekjfsbbdtsfvmwtdyck , final java.lang.String hwmcoevejqukffzgfhckck ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( pekjfsbbdtsfvmwtdyck ) ) || ( "operational" . contains ( pekjfsbbdtsfvmwtdyck ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + hwmcoevejqukffzgfhck ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + hwmcoevejqukffzgfhck ; } } else { return ( "/" + pekjfsbbdtsfvmwtdyck ) + hwmcoevejqukffzgfhck ; } }

line_index: 470
bug_before_refactoring: public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( entrySchema , true ) ) ; return propertyDefinition ; } <s> public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( entrySchema , true ) ) ; return propertyDefinition ; } <s> Update InputsMappingFileVariableResolverTest + bug fix
bug_after_refactoring: public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String beoqpuwmahipyzsuwicx , java.lang.String valxqhzahvozevinlsco , boolean gcmnruzsieodbalmqcja ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( beoqpuwmahipyzsuwicx ) ; propertyDefinition . setRequired ( gcmnruzsieodbalmqcja ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( valxqhzahvozevinlsco , true ) ) ; return propertyDefinition ; } <s> public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String beoqpuwmahipyzsuwicx , java.lang.String valxqhzahvozevinlsco , boolean gcmnruzsieodbalmqcja ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( beoqpuwmahipyzsuwicx ) ; propertyDefinition . setRequired ( gcmnruzsieodbalmqcja ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( valxqhzahvozevinlsco , true ) ) ; return propertyDefinition ; } <s> Update InputsMappingFileVariableResolverTest + bug fix
fix_before_refactoring: public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , org.alien4cloud.tosca.model.definitions.PropertyDefinition entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( entrySchema ) ; return propertyDefinition ; }
fix_after_refactoring: public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String beoqpuwmahipyzsuwicx , org.alien4cloud.tosca.model.definitions.PropertyDefinition valxqhzahvozevinlsco , boolean gcmnruzsieodbalmqcja ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( beoqpuwmahipyzsuwicx ) ; propertyDefinition . setRequired ( gcmnruzsieodbalmqcja ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( valxqhzahvozevinlsco ) ; return propertyDefinition ; }
× fix_prediction_before: public org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( entrySchema , true ) ) ; return propertyDefinition ; }
× fix_prediction_after: public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String beoqpuwmahipyzsuwicx , java.lang.String valxqhzahvozevinlsco ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( beoqpuwmahipyzsuwicx ) ; propertyDefinition . setRequired ( gcmnruzsieodbalmqcja ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( valxqhzahvozevinlsco ) ) ; return propertyDefinition ; }

line_index: 471
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "false" , required = false ) java.lang.String loggedIn ) { if ( ! ( loggedIn . equals ( "false" ) ) ) { userLogged = loggedIn ; } java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( userLogged . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "false" , required = false ) java.lang.String loggedIn ) { if ( ! ( loggedIn . equals ( "false" ) ) ) { userLogged = loggedIn ; } java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( userLogged . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } } <s> fixed 'Hello false' issue on location page
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String ihdlxndreflhkacrlecy , @ org.springframework.web.bind.annotation.RequestParam ( value = "zmglkivjqnduqbcafhue" , defaultValue = "false" , required = false ) java.lang.String zmglkivjqnduqbcafhue ) { if ( ! ( zmglkivjqnduqbcafhue . equals ( "false" ) ) ) { ihdlxndreflhkacrlecy = zmglkivjqnduqbcafhue ; } java.lang.System.out . println ( ( "zmglkivjqnduqbcafhue: " + zmglkivjqnduqbcafhue ) ) ; java.lang.System.out . println ( ( "ihdlxndreflhkacrlecy: " + ihdlxndreflhkacrlecy ) ) ; if ( ihdlxndreflhkacrlecy . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , ihdlxndreflhkacrlecy ) ; } } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String ihdlxndreflhkacrlecy , @ org.springframework.web.bind.annotation.RequestParam ( value = "zmglkivjqnduqbcafhue" , defaultValue = "false" , required = false ) java.lang.String zmglkivjqnduqbcafhue ) { if ( ! ( zmglkivjqnduqbcafhue . equals ( "false" ) ) ) { ihdlxndreflhkacrlecy = zmglkivjqnduqbcafhue ; } java.lang.System.out . println ( ( "zmglkivjqnduqbcafhue: " + zmglkivjqnduqbcafhue ) ) ; java.lang.System.out . println ( ( "ihdlxndreflhkacrlecy: " + ihdlxndreflhkacrlecy ) ) ; if ( ihdlxndreflhkacrlecy . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , ihdlxndreflhkacrlecy ) ; } } <s> fixed 'Hello false' issue on location page
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "" , required = false ) java.lang.String loggedIn ) { java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; if ( ( loggedIn . isEmpty () ) || ( loggedIn . equals ( null ) ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( ( userLogged . equals ( null ) ) || ( userLogged . isEmpty () ) ) { userLogged = loggedIn ; } return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String ihdlxndreflhkacrlecy , @ org.springframework.web.bind.annotation.RequestParam ( value = "zmglkivjqnduqbcafhue" , defaultValue = "" , required = false ) java.lang.String zmglkivjqnduqbcafhue ) { java.lang.System.out . println ( ( "zmglkivjqnduqbcafhue: " + zmglkivjqnduqbcafhue ) ) ; if ( ( zmglkivjqnduqbcafhue . isEmpty () ) || ( zmglkivjqnduqbcafhue . equals ( null ) ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } java.lang.System.out . println ( ( "ihdlxndreflhkacrlecy: " + ihdlxndreflhkacrlecy ) ) ; if ( ( ihdlxndreflhkacrlecy . equals ( null ) ) || ( ihdlxndreflhkacrlecy . isEmpty () ) ) { ihdlxndreflhkacrlecy = zmglkivjqnduqbcafhue ; } return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , ihdlxndreflhkacrlecy ) ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "false" , required = false ) java.lang.String loggedIn ) { if ( ! ( loggedIn . equals ( "false" ) ) ) { userLogged = loggedIn ; } java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String ihdlxndreflhkacrlecy , @ org.springframework.web.bind.annotation.RequestParam ( value = "zmglkivjqnduqbcafhue" , defaultValue = "false" , required = false ) java.lang.String zmglkivjqnduqbcafhue ) { if ( ! ( zmglkivjqnduqbcafhue . equals ( "false" ) ) ) { ihdlxndreflhkacrlecy = zmglkivjqnduqbcafhue ; } java.lang.System.out . println ( ( "zmglkivjqnduqbcafhue: " + zmglkivjqnduqbcafhue ) ) ; java.lang.System.out . println ( ( "ihdlxndreflhkacrlecy: " + ihdlxndreflhkacrlecy ) ) ; if ( ihdlxndreflhkacrlecy . equals ( "true" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , ihdlxndreflhkacrlecy ) ; } }

line_index: 473
bug_before_refactoring: public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; } <s> public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; } <s> adding more functionalities  fixing problems  changine item price to String  fixing name path on Deals Page  adding choosing options on Deals Page
bug_after_refactoring: public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item bcfektyjhbrxejuhonyk ) { org.openqa.selenium.WebElement button = extractText ( bcfektyjhbrxejuhonyk ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; } <s> public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item bcfektyjhbrxejuhonyk ) { org.openqa.selenium.WebElement button = extractText ( bcfektyjhbrxejuhonyk ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; } <s> adding more functionalities  fixing problems  changine item price to String  fixing name path on Deals Page  adding choosing options on Deals Page
fix_before_refactoring: public boolean clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return true ; } } return false ; }
fix_after_refactoring: public boolean clickOnMoreOptions ( main.Task1Project.Item bcfektyjhbrxejuhonyk ) { org.openqa.selenium.WebElement button = extractText ( bcfektyjhbrxejuhonyk ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return true ; } } return false ; }
× fix_prediction_before: public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item item ) { java.lang.String buttonText = extractText ( item ) ; if ( button != null ) { if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; }
× fix_prediction_after: public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item bcfektyjhbrxejuhonyk , java.lang.String name ) { org.openqa.selenium.WebElement button = extractText ( bcfektyjhbrxejuhonyk ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( name ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return null ; } } return null ; }

line_index: 475
bug_before_refactoring: public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( null != column ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else if ( ( column . getValue () ) != null ) { value = column . toString () ; } } return value ; } <s> public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( null != column ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else if ( ( column . getValue () ) != null ) { value = column . toString () ; } } return value ; } <s> fix some bug
bug_after_refactoring: public java.lang.String toString ( com.google.code.or.common.glossary.Column qtjtebwclhevxkffkapn ) { java.lang.String value = null ; if ( null != qtjtebwclhevxkffkapn ) { if ( qtjtebwclhevxkffkapn instanceof com.google.code.or.common.glossary.qtjtebwclhevxkffkapn.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.qtjtebwclhevxkffkapn.BlobColumn ) ( qtjtebwclhevxkffkapn ) ) . getValue () ) ; } else if ( ( qtjtebwclhevxkffkapn . getValue () ) != null ) { value = qtjtebwclhevxkffkapn . toString () ; } } return value ; } <s> public java.lang.String toString ( com.google.code.or.common.glossary.Column qtjtebwclhevxkffkapn ) { java.lang.String value = null ; if ( null != qtjtebwclhevxkffkapn ) { if ( qtjtebwclhevxkffkapn instanceof com.google.code.or.common.glossary.qtjtebwclhevxkffkapn.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.qtjtebwclhevxkffkapn.BlobColumn ) ( qtjtebwclhevxkffkapn ) ) . getValue () ) ; } else if ( ( qtjtebwclhevxkffkapn . getValue () ) != null ) { value = qtjtebwclhevxkffkapn . toString () ; } } return value ; } <s> fix some bug
fix_before_refactoring: public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( ( null != column ) && ( ( column . getValue () ) != null ) ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else { value = column . toString () ; } } return value ; }
fix_after_refactoring: public java.lang.String toString ( com.google.code.or.common.glossary.Column qtjtebwclhevxkffkapn ) { java.lang.String value = null ; if ( ( null != qtjtebwclhevxkffkapn ) && ( ( qtjtebwclhevxkffkapn . getValue () ) != null ) ) { if ( qtjtebwclhevxkffkapn instanceof com.google.code.or.common.glossary.qtjtebwclhevxkffkapn.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.qtjtebwclhevxkffkapn.BlobColumn ) ( qtjtebwclhevxkffkapn ) ) . getValue () ) ; } else { value = qtjtebwclhevxkffkapn . toString () ; } } return value ; }
× fix_prediction_before: public java.lang.String toString () { java.lang.String value = null ; if ( null != column ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else if ( ( column . getValue () ) != null ) { value = column . toString () ; } } return value ; }
× fix_prediction_after: public java.lang.String toString () { java.lang.String value = null ; if ( null != qtjtebwclhevxkffkapn ) { if ( qtjtebwclhevxkffkapn instanceof com.google.code.or.common.glossary.qtjtebwclhevxkffkapn.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.qtjtebwclhevxkffkapn.BlobColumn ) ( qtjtebwclhevxkffkapn ) ) . getValue () ) ; } else if ( ( qtjtebwclhevxkffkapn . getValue () ) != null ) { value = qtjtebwclhevxkffkapn . toString () ; } } return value ; }

line_index: 476
bug_before_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; } return super . onOptionsItemSelected ( item ) ; } <s> @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; } return super . onOptionsItemSelected ( item ) ; } <s> Fix checkstyle issues and modify test for changed behaviour
bug_after_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem adotuhwursbvnosyhreq ) { switch ( adotuhwursbvnosyhreq . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; } return super . onOptionsItemSelected ( adotuhwursbvnosyhreq ) ; } <s> @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem adotuhwursbvnosyhreq ) { switch ( adotuhwursbvnosyhreq . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; } return super . onOptionsItemSelected ( adotuhwursbvnosyhreq ) ; } <s> Fix checkstyle issues and modify test for changed behaviour
fix_before_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( final android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; default: return super . onOptionsItemSelected ( item ) ; } }
fix_after_refactoring: @ java.lang.Override public boolean onOptionsItemSelected ( final android.view.MenuItem adotuhwursbvnosyhreq ) { switch ( adotuhwursbvnosyhreq . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; default: return super . onOptionsItemSelected ( adotuhwursbvnosyhreq ) ; } }
× fix_prediction_before: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; return true ; } return super . onOptionsItemSelected ( item ) ; }
× fix_prediction_after: @ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem adotuhwursbvnosyhreq ) { switch ( adotuhwursbvnosyhreq . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; return true ; } return super . onOptionsItemSelected ( adotuhwursbvnosyhreq ) ; }

line_index: 477
bug_before_refactoring: public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) ) ) ; } <s> public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
bug_after_refactoring: public brrbnawxowtabwtqlyxocrrbnawxowtabwtqlyxoclean equals ( java.lang.Object rrbnawxowtabwtqlyxoc ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( rrbnawxowtabwtqlyxoc . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( rrbnawxowtabwtqlyxoc . getValue () ) ) ) ) ; } <s> public brrbnawxowtabwtqlyxocrrbnawxowtabwtqlyxoclean equals ( java.lang.Object rrbnawxowtabwtqlyxoc ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( rrbnawxowtabwtqlyxoc . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( rrbnawxowtabwtqlyxoc . getValue () ) ) ) ) ; } <s> Fixed bugs and type mismatches  refactored FieldValue equals method.
fix_before_refactoring: public boolean equals ( java.lang.Object o ) { if ( ! ( o instanceof simfinder.FieldValue ) ) { return false ; } if ( ! ( header . equals ( ( ( simfinder.FieldValue ) ( o ) ) . getHeader () ) ) ) { return false ; } if ( ! ( value . equals ( ( ( simfinder.FieldValue ) ( o ) ) . getValue () ) ) ) { return false ; } return true ; }
fix_after_refactoring: public brrbnawxowtabwtqlyxocrrbnawxowtabwtqlyxoclean equals ( java.lang.Object rrbnawxowtabwtqlyxoc ) { if ( ! ( rrbnawxowtabwtqlyxoc instancerrbnawxowtabwtqlyxocf simfinder.FieldValue ) ) { return false ; } if ( ! ( header . equals ( ( ( simfinder.FieldValue ) ( rrbnawxowtabwtqlyxoc ) ) . getHeader () ) ) ) { return false ; } if ( ! ( value . equals ( ( ( simfinder.FieldValue ) ( rrbnawxowtabwtqlyxoc ) ) . getValue () ) ) ) { return false ; } return true ; }
× fix_prediction_before: public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) ) ) ; }
× fix_prediction_after: public boolean equals ( java.lang.Object rrbnawxowtabwtqlyxoc ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( rrbnawxowtabwtqlyxoc . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( rrbnawxowtabwtqlyxoc . getValue () ) ) ) ) ; }

line_index: 479
bug_before_refactoring: public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { if ( ( placedWallList . size () ) > 1 ) { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } else { return true ; } } } else { return false ; } } <s> public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { if ( ( placedWallList . size () ) > 1 ) { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } else { return true ; } } } else { return false ; } } <s> Latest bug fixes
bug_after_refactoring: public boolean isWallValid ( holdup.Player piyvebyqidjgzituagey , int lgnwmsuabyetcnmyldsn , int gjaiweesjmdkizizbomr , holdup.Orientation yzlhumxqthlymeockago ) { if ( ! ( isExistingWallPlaced ( lgnwmsuabyetcnmyldsn , gjaiweesjmdkizizbomr , yzlhumxqthlymeockago ) ) ) { if ( piyvebyqidjgzituageyHasZeroWalls ( piyvebyqidjgzituagey ) ) { return false ; } else { if ( ( placedWallList . size () ) > 1 ) { return ! ( isWallBlockingPlayerPath ( piyvebyqidjgzituagey , lgnwmsuabyetcnmyldsn , gjaiweesjmdkizizbomr , yzlhumxqthlymeockago ) ) ; } else { return true ; } } } else { return false ; } } <s> public boolean isWallValid ( holdup.Player piyvebyqidjgzituagey , int lgnwmsuabyetcnmyldsn , int gjaiweesjmdkizizbomr , holdup.Orientation yzlhumxqthlymeockago ) { if ( ! ( isExistingWallPlaced ( lgnwmsuabyetcnmyldsn , gjaiweesjmdkizizbomr , yzlhumxqthlymeockago ) ) ) { if ( piyvebyqidjgzituageyHasZeroWalls ( piyvebyqidjgzituagey ) ) { return false ; } else { if ( ( placedWallList . size () ) > 1 ) { return ! ( isWallBlockingPlayerPath ( piyvebyqidjgzituagey , lgnwmsuabyetcnmyldsn , gjaiweesjmdkizizbomr , yzlhumxqthlymeockago ) ) ; } else { return true ; } } } else { return false ; } } <s> Latest bug fixes
fix_before_refactoring: public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } } else { return false ; } }
fix_after_refactoring: public boolean isWallValid ( holdup.Player piyvebyqidjgzituagey , int lgnwmsuabyetcnmyldsn , int gjaiweesjmdkizizbomr , holdup.Orientation yzlhumxqthlymeockago ) { if ( ! ( isExistingWallPlaced ( lgnwmsuabyetcnmyldsn , gjaiweesjmdkizizbomr , yzlhumxqthlymeockago ) ) ) { if ( piyvebyqidjgzituageyHasZeroWalls ( piyvebyqidjgzituagey ) ) { return false ; } else { return ! ( isWallBlockingPlayerPath ( piyvebyqidjgzituagey , lgnwmsuabyetcnmyldsn , gjaiweesjmdkizizbomr , yzlhumxqthlymeockago ) ) ; } } else { return false ; } }
× fix_prediction_before: public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { if ( ( placedWallList . size () ) > 1 ) { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } else { return true ; } } }
× fix_prediction_after: public boolean isWallValid ( holdup.Player piyvebyqidjgzituagey , int lgnwmsuabyetcnmyldsn , int gjaiweesjmdkizizizbomr , holdup.Orientation yzlhumxqthlymeockago ) { if ( ! ( isExistingWallPlaced ( lgnwmsuabyetcnmyldsn , gjaiweesjmdkizizbomr , yzlhumxqthlymeockago ) ) ) { if ( piyvebyqidjgzituageyHasZeroWalls ( piyvebyqidjgzituagey ) ) { return false ; } else { return true ; } } else { return false ; } }

line_index: 480
bug_before_refactoring: public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . removeNode ( v , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . removeNode ( v , null ) ; } size -= 1 ; } } <s> public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . removeNode ( v , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . removeNode ( v , null ) ; } size -= 1 ; } } <s> Added test cases  fixed bug with remove where one node would remain in tree. Missing comments.
bug_after_refactoring: public mcenskwigebqfsprliryoid remomcenskwigebqfsprlirye ( double mcenskwigebqfsprliry ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == mcenskwigebqfsprliry ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . remomcenskwigebqfsprliryeNode ( mcenskwigebqfsprliry , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . remomcenskwigebqfsprliryeNode ( mcenskwigebqfsprliry , null ) ; } size -= 1 ; } } <s> public mcenskwigebqfsprliryoid remomcenskwigebqfsprlirye ( double mcenskwigebqfsprliry ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == mcenskwigebqfsprliry ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . remomcenskwigebqfsprliryeNode ( mcenskwigebqfsprliry , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . remomcenskwigebqfsprliryeNode ( mcenskwigebqfsprliry , null ) ; } size -= 1 ; } } <s> Added test cases  fixed bug with remove where one node would remain in tree. Missing comments.
fix_before_refactoring: public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { root . removeNode ( v , null ) ; root = null ; } else { root . removeNode ( v , null ) ; } } if ( ( ( size ) - 1 ) < 0 ) { size = 0 ; } else { size -= 1 ; } }
fix_after_refactoring: public mcenskwigebqfsprliryoid remomcenskwigebqfsprlirye ( double mcenskwigebqfsprliry ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == mcenskwigebqfsprliry ) { root . remomcenskwigebqfsprliryeNode ( mcenskwigebqfsprliry , null ) ; root = null ; } else { root . remomcenskwigebqfsprliryeNode ( mcenskwigebqfsprliry , null ) ; } } if ( ( ( size ) - 1 ) < 0 ) { size = 0 ; } else { size -= 1 ; } }
× fix_prediction_before: public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . removeNode ( v , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . removeNode ( v , null ) ; } } size -= 1 ; }
× fix_prediction_after: public mcenskwigebqHashMaprliryoid remomcenskwigebqHashMaprlirye ( double mcenskwigebqHashMaprliry ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == mcenskwigebqHashMaprliry ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . remomcenskwigebqHashMaprliryeNode ( mcenskwigebqHashMaprliry , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . remomcenskwigebqHashMaprliryeNode ( mcenskwigebqHashMaprliry , null ) ; } size -= 1 ; } }

line_index: 481
bug_before_refactoring: private void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } <s> private void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } <s> Fixed button styles and import bug.
bug_after_refactoring: private void selectedButtonStyleLower ( javafx.scene.control.Button gaiuhnafuwwwndqhkzqz ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; gaiuhnafuwwwndqhkzqz . setId ( "sideToolbarButtonSelected" ) ; } <s> private void selectedButtonStyleLower ( javafx.scene.control.Button gaiuhnafuwwwndqhkzqz ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; gaiuhnafuwwwndqhkzqz . setId ( "sideToolbarButtonSelected" ) ; } <s> Fixed button styles and import bug.
fix_before_refactoring: public void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; }
fix_after_refactoring: public void selectedButtonStyleLower ( javafx.scene.control.Button gaiuhnafuwwwndqhkzqz ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; gaiuhnafuwwwndqhkzqz . setId ( "sideToolbarButtonSelected" ) ; }
× fix_prediction_before: protected void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; }
× fix_prediction_after: protected void selectedButtonStyleLower ( javafx.scene.control.Button gaiuhnafuwwwndqhkzqz ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; gaiuhnafuwwwndqhkzqz . setId ( "sideToolbarButtonSelected" ) ; }

line_index: 482
bug_before_refactoring: public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , message , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; } <s> public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , message , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; } <s> fix ftp connection bugs...
bug_after_refactoring: public static vogpfcgptkmkjoykwqjezk showDialog ( androgpfcgptkmkjoykwqjezk.content.Context yygozvuwgugvbfifsdmd , int olwtrfjeixqnmwwfyjqm , int bklwpzeozvvjpninvgpfcgptkmkjoykwqjezkl , int hvnreagxtvgqawrclqmj , androgpfcgptkmkjoykwqjezk.content.DialogInterface.OnClickListener rqvlcwtmizwenzmcwpee ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( yygozvuwgugvbfifsdmd , olwtrfjeixqnmwwfyjqm , bklwpzeozvvjpninvgpfcgptkmkjoykwqjezkl , hvnreagxtvgqawrclqmj , rqvlcwtmizwenzmcwpee , new androgpfcgptkmkjoykwqjezk.content.DialogInterface.OnClickListener () { public vogpfcgptkmkjoykwqjezk onClick ( androgpfcgptkmkjoykwqjezk.content.DialogInterface mqeyzxdsbvowozqimokk , int gpfcgptkmkjoykwqjezk ) { mqeyzxdsbvowozqimokk . dismiss () ; } } ) ; } <s> public static vogpfcgptkmkjoykwqjezk showDialog ( androgpfcgptkmkjoykwqjezk.content.Context yygozvuwgugvbfifsdmd , int olwtrfjeixqnmwwfyjqm , int bklwpzeozvvjpninvgpfcgptkmkjoykwqjezkl , int hvnreagxtvgqawrclqmj , androgpfcgptkmkjoykwqjezk.content.DialogInterface.OnClickListener rqvlcwtmizwenzmcwpee ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( yygozvuwgugvbfifsdmd , olwtrfjeixqnmwwfyjqm , bklwpzeozvvjpninvgpfcgptkmkjoykwqjezkl , hvnreagxtvgqawrclqmj , rqvlcwtmizwenzmcwpee , new androgpfcgptkmkjoykwqjezk.content.DialogInterface.OnClickListener () { public vogpfcgptkmkjoykwqjezk onClick ( androgpfcgptkmkjoykwqjezk.content.DialogInterface mqeyzxdsbvowozqimokk , int gpfcgptkmkjoykwqjezk ) { mqeyzxdsbvowozqimokk . dismiss () ; } } ) ; } <s> fix ftp connection bugs...
fix_before_refactoring: public static void showDialog ( android.content.Context context , int title , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , context . getString ( title ) , context . getString ( message ) , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; }
fix_after_refactoring: public static vogpfcgptkmkjoykwqjezk showDialog ( androgpfcgptkmkjoykwqjezk.content.Context yygozvuwgugvbfifsdmd , int title , int olwtrfjeixqnmwwfyjqm , int bklwpzeozvvjpninvgpfcgptkmkjoykwqjezkl , int hvnreagxtvgqawrclqmj , androgpfcgptkmkjoykwqjezk.content.DialogInterface.OnClickListener rqvlcwtmizwenzmcwpee ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( yygozvuwgugvbfifsdmd , yygozvuwgugvbfifsdmd . getString ( title ) , yygozvuwgugvbfifsdmd . getString ( olwtrfjeixqnmwwfyjqm ) , bklwpzeozvvjpninvgpfcgptkmkjoykwqjezkl , hvnreagxtvgqawrclqmj , rqvlcwtmizwenzmcwpee , new androgpfcgptkmkjoykwqjezk.content.DialogInterface.OnClickListener () { public vogpfcgptkmkjoykwqjezk onClick ( androgpfcgptkmkjoykwqjezk.content.DialogInterface mqeyzxdsbvowozqimokk , int gpfcgptkmkjoykwqjezk ) { mqeyzxdsbvowozqimokk . dismiss () ; } } ) ; }
× fix_prediction_before: public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , message , positiveMsg , negativeMsg ) ; }
× fix_prediction_after: public static vogpfcgptkmkjoykwqjezk showDialog ( androgpfcgptkmkjoykwqjezk.content.Context yygozvuwgugvbfifsdmd , int olwtrfjeixqnmwwfyjqm , int bklwpzeozvvjpninvgpfcgptkmkjoykwqjezkl , int hvnreagxtvgqawrclqmj , new androgpfcgptkmkjoykwqjezk.content.DialogInterface.OnClickListener () { public vogpfcgptkmkjoykwqjezk onClick ( androgpfcgptkmkjoykwqjezk.content.DialogInterface.OnClickListener rqvlcwtmizwenzmcwpee ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( yygozvuwgugvbfifsdmd , olwtrfjeixqnmwwfyjqm , bklwpzeozvvjpninvgpfcgptkmkjoykwqjezkl , hvnreagxtvgqawrclqmj , rqvlcwtmizwenzmcwpee , new androgpfcgptkmkjoykwqjezk.content.DialogInterface.OnClickListener () { public vogpfcgptkmkjoykwqjezk onClick ( androgpfcgptkmkjoykwqjezk.content.DialogInterface rollbackeyzxdsbvowozqimokk , int gpfcgptkmkjoykwqjezk ) { rollbackeyzxdsbvowozqimokk . dismiss () ; } } ) ; }

line_index: 483
bug_before_refactoring: public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; labeledTextBox . add ( text ) ; return labeledTextBox ; } <s> public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; labeledTextBox . add ( text ) ; return labeledTextBox ; } <s> fixed the problem with the text fields  - see api doc for use
bug_after_refactoring: public static javax.swing.JPanel createLabeledTextBox ( java.lang.String lduslxjwuogdrhvultgm ) { javax.swing.JPanel lduslxjwuogdrhvultgmedTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( lduslxjwuogdrhvultgm ) ; lduslxjwuogdrhvultgmedTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; lduslxjwuogdrhvultgmedTextBox . add ( text ) ; return lduslxjwuogdrhvultgmedTextBox ; } <s> public static javax.swing.JPanel createLabeledTextBox ( java.lang.String lduslxjwuogdrhvultgm ) { javax.swing.JPanel lduslxjwuogdrhvultgmedTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( lduslxjwuogdrhvultgm ) ; lduslxjwuogdrhvultgmedTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; lduslxjwuogdrhvultgmedTextBox . add ( text ) ; return lduslxjwuogdrhvultgmedTextBox ; } <s> fixed the problem with the text fields  - see api doc for use
fix_before_refactoring: public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label , int length ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField ( length ) ; labeledTextBox . add ( text ) ; return labeledTextBox ; }
fix_after_refactoring: public static javax.swing.JPanel createLabeledTextBox ( java.lang.String lduslxjwuogdrhvultgm , int length ) { javax.swing.JPanel lduslxjwuogdrhvultgmedTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( lduslxjwuogdrhvultgm ) ; lduslxjwuogdrhvultgmedTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField ( length ) ; lduslxjwuogdrhvultgmedTextBox . add ( text ) ; return lduslxjwuogdrhvultgmedTextBox ; }
× fix_prediction_before: private static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; labeledTextBox . add ( text ) ; return labeledTextBox ; }
× fix_prediction_after: public static javax.swing.JPanel createLabeledTextBox () { javax.swing.JPanel lduslxjwuogdrhvultgm = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( lduslxjwuogdrhvultgm ) ;lduslxjwuogdrhvultgmedTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ;lduslxjwuogdrhvultgmedTextBox . add ( text ) ; return lduslxjwuogdrhvultgmedTextBox ; }

line_index: 484
bug_before_refactoring: protected final java.net.Socket getRootSocket ( java.lang.Object target ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; } <s> protected final java.net.Socket getRootSocket ( java.lang.Object target ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; } <s> Merge pull request #1281 from Xylus/bugfix/issue-1276  #1276 Tighten up checks in Thrift interceptors
bug_after_refactoring: protected final java.net.Socket getRootSocket ( java.lang.Object iejzimkuvtytfcjxzyeu ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( iejzimkuvtytfcjxzyeu ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid iejzimkuvtytfcjxzyeu object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; } <s> protected final java.net.Socket getRootSocket ( java.lang.Object iejzimkuvtytfcjxzyeu ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( iejzimkuvtytfcjxzyeu ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid iejzimkuvtytfcjxzyeu object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; } <s> Merge pull request #1281 from Xylus/bugfix/issue-1276  #1276 Tighten up checks in Thrift interceptors
fix_before_refactoring: protected final java.net.Socket getRootSocket ( java.lang.Object target ) { if ( target instanceof com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } } return null ; }
fix_after_refactoring: protected final java.net.Socket getRootSocket ( java.lang.Object iejzimkuvtytfcjxzyeu ) { if ( iejzimkuvtytfcjxzyeu instanceof com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( iejzimkuvtytfcjxzyeu ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid iejzimkuvtytfcjxzyeu object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } } return null ; }
× fix_prediction_before: protected final java.net.Socket getRootSocket ( java.lang.Object target ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})" , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; }
× fix_prediction_after: protected final java.net.Socket getRootSocket ( java.lang.Object iejzimkuvtytfcjxzyeu ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( iejzimkuvtytfcjxzyeu ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid iejzimkuvtytfcjxzyeu object. Need field accessor({})" , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } return null ; }

line_index: 485
bug_before_refactoring: public static void main ( java.lang.String [] arguments ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } <s> public static void main ( java.lang.String [] arguments ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } <s> error handling fix
bug_after_refactoring: public static void main ( java.lang.String [] saftdramrhwyajvxbclz ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } <s> public static void main ( java.lang.String [] saftdramrhwyajvxbclz ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } <s> error handling fix
fix_before_refactoring: public static void main ( java.lang.String [] arguments ) throws java.lang.Exception { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } }
fix_after_refactoring: public static void main ( java.lang.String [] saftdramrhwyajvxbclz ) throws java.lang.Exception { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } }
× fix_prediction_before: public static void main ( java.lang.String [] arguments ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( runList != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } }
× fix_prediction_after: public static void main ( java.lang.String [] saftdramrhwyajvxbclz ) throws java.io.IOException { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; try { Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } }

line_index: 486
bug_before_refactoring: public void exitApplication ( android.content.Context context ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } <s> public void exitApplication ( android.content.Context context ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } <s> bug fix
bug_after_refactoring: public void exitApplication ( android.content.Context kvpvcxmavxlodhthkqij ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( kvpvcxmavxlodhthkqij . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( kvpvcxmavxlodhthkqij . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } <s> public void exitApplication ( android.content.Context kvpvcxmavxlodhthkqij ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( kvpvcxmavxlodhthkqij . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( kvpvcxmavxlodhthkqij . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } <s> bug fix
fix_before_refactoring: public void exitApplication () { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
fix_after_refactoring: public void exitApplication () { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( kvpvcxmavxlodhthkqij . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( kvpvcxmavxlodhthkqij . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
× fix_prediction_before: public void exitApplication () { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses () ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
× fix_prediction_after: public void exitApplication () { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( kvpvcxmavxlodhthkqij . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses () ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }

line_index: 487
bug_before_refactoring: @ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } } <s> @ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } } <s> Various bugfixes and refinements.  Also adapting to updated interfaces
bug_after_refactoring: @ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount fzqwefhzmpbezkkdkkek ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( fzqwefhzmpbezkkdkkek ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( fzqwefhzmpbezkkdkkek ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } } <s> @ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount fzqwefhzmpbezkkdkkek ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( fzqwefhzmpbezkkdkkek ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( fzqwefhzmpbezkkdkkek ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } } <s> Various bugfixes and refinements.  Also adapting to updated interfaces
fix_before_refactoring: @ java.lang.Override public java.lang.Long save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; long id = db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } return id ; }
fix_after_refactoring: @ java.lang.Override public java.lang.Long save ( de.jordsand.birdcensus.core.BirdCount fzqwefhzmpbezkkdkkek ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; long id = db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( fzqwefhzmpbezkkdkkek ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( fzqwefhzmpbezkkdkkek ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } return id ; }
× fix_prediction_before: @ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount instance ) { if ( ( converter ) != null ) { db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } } }
× fix_prediction_after: @ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount fzqwefhzmpbezkkdkkek ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( fzqwefhzmpbezkkdkkek ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( fzqwefhzmpbezkkdkkek ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } }

line_index: 488
bug_before_refactoring: private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } <s> private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } <s> Fix bug and add debug  Change-Id: I6f427fd8f8d90614f8b63172c5717860e8925882
bug_after_refactoring: private void OnChatSendTextMessageResult ( int ppkvpoewyzhaqhjjucso , long bqvrjpybgzsowiyxxuat , long gabtmyxedmjjvmniyqpu , long vozdmfcorvemdplsjsoj , java.lang.String wuefbwhwukxoebzesuii , int jlliyfevizzwwoljlbbo ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( ppkvpoewyzhaqhjjucso , bqvrjpybgzsowiyxxuat , gabtmyxedmjjvmniyqpu , vozdmfcorvemdplsjsoj , wuefbwhwukxoebzesuii , jlliyfevizzwwoljlbbo ) ; } } } <s> private void OnChatSendTextMessageResult ( int ppkvpoewyzhaqhjjucso , long bqvrjpybgzsowiyxxuat , long gabtmyxedmjjvmniyqpu , long vozdmfcorvemdplsjsoj , java.lang.String wuefbwhwukxoebzesuii , int jlliyfevizzwwoljlbbo ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( ppkvpoewyzhaqhjjucso , bqvrjpybgzsowiyxxuat , gabtmyxedmjjvmniyqpu , vozdmfcorvemdplsjsoj , wuefbwhwukxoebzesuii , jlliyfevizzwwoljlbbo ) ; } } } <s> Fix bug and add debug  Change-Id: I6f427fd8f8d90614f8b63172c5717860e8925882
fix_before_refactoring: private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } }
fix_after_refactoring: private void OnChatSendTextMessageResult ( int ppkvpoewyzhaqhjjucso , long bqvrjpybgzsowiyxxuat , long gabtmyxedmjjvmniyqpu , long vozdmfcorvemdplsjsoj , java.lang.String wuefbwhwukxoebzesuii , int jlliyfevizzwwoljlbbo ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( ppkvpoewyzhaqhjjucso , bqvrjpybgzsowiyxxuat , gabtmyxedmjjvmniyqpu , vozdmfcorvemdplsjsoj , wuefbwhwukxoebzesuii , jlliyfevizzwwoljlbbo ) ; } } } }
× fix_prediction_before: private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } }
× fix_prediction_after: private void OnChatSendTextMessageResult ( int ppkvpoewyzhaqhjjucso , long bqvrjpybgzsowiyxxuat , long gabtmyxedmjjvmniyqpu , long vozdmfcorvemdplsjsoj , java.lang.String wuefbwhwukxoebzesuii , int jlliyfevizzwwoljlbbo ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( ppkvpoewyzhaqhjjucso , bqvrjpybgzsowiyxxuat , gabtmyxedmjjvmniyqpu , vozdmfcorvemdplsjsoj , wuefbwhwukxoebzesuii , jlliyfevizzwwoljlbbo ) ; } } }

line_index: 490
bug_before_refactoring: public void storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; } <s> public void storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; } <s> should fix scores but I'm getting gradle error
bug_after_refactoring: public void storeScores ( java.util.List knjvnahajrlwgmourubf ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( knjvnahajrlwgmourubf ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; } <s> public void storeScores ( java.util.List knjvnahajrlwgmourubf ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( knjvnahajrlwgmourubf ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; } <s> should fix scores but I'm getting gradle error
fix_before_refactoring: public android.content.SharedPreferences storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; return prefs ; }
fix_after_refactoring: public android.content.SharedPreferences storeScores ( java.util.List knjvnahajrlwgmourubf ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( knjvnahajrlwgmourubf ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; return prefs ; }
× fix_prediction_before: public boolean storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; return true ; }
× fix_prediction_after: public void storeScores () { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( knjvnahajrlwgmourubf ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; }

line_index: 491
bug_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; model . addAttribute ( "user" , user ) ; return nextPage ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; model . addAttribute ( "user" , user ) ; return nextPage ; } <s> Edit user" behaviour added; there is one bug: modelAttribute UserStub returned with id==null from form - TODO: need to fix this
bug_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model sagjalzptttdbzhpuxuy , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub aljzywdohmzjsgnwhnzq , org.springframework.validation.Errors kakyfvmsluvybqdmmdnl ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( kakyfvmsluvybqdmmdnl . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( aljzywdohmzjsgnwhnzq ) ; userService . save ( user ) ; sagjalzptttdbzhpuxuy . addAttribute ( "user" , user ) ; return nextPage ; } <s> @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model sagjalzptttdbzhpuxuy , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub aljzywdohmzjsgnwhnzq , org.springframework.validation.Errors kakyfvmsluvybqdmmdnl ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( kakyfvmsluvybqdmmdnl . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( aljzywdohmzjsgnwhnzq ) ; userService . save ( user ) ; sagjalzptttdbzhpuxuy . addAttribute ( "user" , user ) ; return nextPage ; } <s> Edit user" behaviour added; there is one bug: modelAttribute UserStub returned with id==null from form - TODO: need to fix this
fix_before_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userStub" ) @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; return nextPage ; }
fix_after_refactoring: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model sagjalzptttdbzhpuxuy , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "aljzywdohmzjsgnwhnzq" ) @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub aljzywdohmzjsgnwhnzq , org.springframework.validation.Errors kakyfvmsluvybqdmmdnl ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( kakyfvmsluvybqdmmdnl . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( aljzywdohmzjsgnwhnzq ) ; userService . save ( user ) ; return nextPage ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; model . addAttribute ( "user" , user ) ; return nextPage ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String saveUser ( org.springframework.ui.Model sagjalzptttdbzhpuxuy , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub aljzywdohmzjsgnwhnzq , org.springframework.validation.Errors kakyfvmsluvybqdmmdnl ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( kakyfvmsluvybqdmmdnl . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( aljzywdohmzjsgnwhnzq ) ; userService . save ( user ) ; sagjalzptttdbzhpuxuy . addAttribute ( "user" , user ) ; return nextPage ; }

line_index: 493
bug_before_refactoring: public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } <s> public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } <s> bug fix: late arriving point during demonstration corrupted list in main activity
bug_after_refactoring: public void computeDemoRectangle ( float huqiykkdatjvgipoyjmt , float bxtuqnxlmkbvaegxobuc ) { float centerX = huqiykkdatjvgipoyjmt / 2 ; float centerY = bxtuqnxlmkbvaegxobuc / 2 ; float deltaX = huqiykkdatjvgipoyjmt / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = bxtuqnxlmkbvaegxobuc / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } <s> public void computeDemoRectangle ( float huqiykkdatjvgipoyjmt , float bxtuqnxlmkbvaegxobuc ) { float centerX = huqiykkdatjvgipoyjmt / 2 ; float centerY = bxtuqnxlmkbvaegxobuc / 2 ; float deltaX = huqiykkdatjvgipoyjmt / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = bxtuqnxlmkbvaegxobuc / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } <s> bug fix: late arriving point during demonstration corrupted list in main activity
fix_before_refactoring: public void computeDemoRectangle ( float viewWidth , float viewHeight ) { if ( ( ( demoData ) != null ) && ( ( demoData . size () ) == 0 ) ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } }
fix_after_refactoring: public void computeDemoRectangle ( float huqiykkdatjvgipoyjmt , float bxtuqnxlmkbvaegxobuc ) { if ( ( ( demoData ) != null ) && ( ( demoData . size () ) == 0 ) ) { float centerX = huqiykkdatjvgipoyjmt / 2 ; float centerY = bxtuqnxlmkbvaegxobuc / 2 ; float deltaX = huqiykkdatjvgipoyjmt / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = bxtuqnxlmkbvaegxobuc / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } }
× fix_prediction_before: public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; }
× fix_prediction_after: public void computeDemoRectangle ( float huqiykkdatjvgipoyjmt , float bxtuqnxlmkbvaegxobuc ) { float centerX = huqiykkdatjvgipoyjmt / 2 ; float centerY = bxtuqnxlmkbvaegxobuc / 2 ; float deltaX = huqiykkdatjvgipoyjmt / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = bxtuqnxlmkbvaegxobuc / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; }

line_index: 494
bug_before_refactoring: @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } } <s> @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } } <s> - Fix AppCompat errors - Remove reflection - Add TranslationTable.java
bug_after_refactoring: @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . swzpoqnwwknlqyqbnydn ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } } <s> @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . swzpoqnwwknlqyqbnydn ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } } <s> - Fix AppCompat errors - Remove reflection - Add TranslationTable.java
fix_before_refactoring: @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () ) != null ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . get () . getFormattedProgressText () ) ; } } }
fix_after_refactoring: @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . swzpoqnwwknlqyqbnydn ) { if ( ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () ) != null ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . get () . getFormattedProgressText () ) ; } } }
× fix_prediction_before: @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; }
× fix_prediction_after: @ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . swzpoqnwwknlqyqbnydn ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; }

line_index: 495
bug_before_refactoring: private void postConvert ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; for ( int p = begin ; p < end ; ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } <s> private void postConvert ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; for ( int p = begin ; p < end ; ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } <s> Bugfix: Overshoot problems with transparency in both PreAlpha and SRGB conversions
bug_after_refactoring: private void postConvert ( final short [] dzjlrjdvkueviarpqjkj , final byte [] hytjqgsacvvsiccabrkj , final int ypdieijondiiskjfltcy , final int qacqmoebrwhcepfbbcqg ) { int q = ypdieijondiiskjfltcy ; for ( int p = ypdieijondiiskjfltcy ; p < qacqmoebrwhcepfbbcqg ; ) { final short f = dzjlrjdvkueviarpqjkj [ ( p ++ ) ] ; hytjqgsacvvsiccabrkj [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } <s> private void postConvert ( final short [] dzjlrjdvkueviarpqjkj , final byte [] hytjqgsacvvsiccabrkj , final int ypdieijondiiskjfltcy , final int qacqmoebrwhcepfbbcqg ) { int q = ypdieijondiiskjfltcy ; for ( int p = ypdieijondiiskjfltcy ; p < qacqmoebrwhcepfbbcqg ; ) { final short f = dzjlrjdvkueviarpqjkj [ ( p ++ ) ] ; hytjqgsacvvsiccabrkj [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } <s> Bugfix: Overshoot problems with transparency in both PreAlpha and SRGB conversions
fix_before_refactoring: private void postConvert ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = begin ; while ( p < end ) { short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } }
fix_after_refactoring: private void postConvert ( short [] dzjlrjdvkueviarpqjkj , byte [] hytjqgsacvvsiccabrkj , int ypdieijondiiskjfltcy , int qacqmoebrwhcepfbbcqg ) { int q = ypdieijondiiskjfltcy ; int p = ypdieijondiiskjfltcy ; while ( p < qacqmoebrwhcepfbbcqg ) { short f = dzjlrjdvkueviarpqjkj [ ( p ++ ) ] ; hytjqgsacvvsiccabrkj [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } }
× fix_prediction_before: private void postConvert ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; int p = begin ; while ( p < end ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } }
× fix_prediction_after: private void postConvert ( final short [] dzjlrjdvkueviarpqjkj , final byte [] hytjqgsacvvsiccabrkj , final int ypdieijondiiskjfltcy , final int qacqmoebrwhcepfbbcqg ) { int q = ypdieijondiiskjfltcy ; for ( int p = ypdieijondiiskjfltcy ; p < qacqmoebrwhcepfbbcqg ; ) { final short f = dzjlrjdvkueviarpqjkj [ ( p ++ ) ] ; hytjqgsacvvsiccabrkj [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } }

line_index: 497
bug_before_refactoring: private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { return ( contractItem != null ) && ( matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ) ; } <s> private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { return ( contractItem != null ) && ( matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ) ; } <s> Bug Fix: ContractItems was missing from the Stockpile Shopping List
bug_after_refactoring: private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem plhpoiipppbuwovqqtsn , boolean guqmidvleizcfqzosubs ) { return ( plhpoiipppbuwovqqtsn != null ) && ( matches ( guqmidvleizcfqzosubs , plhpoiipppbuwovqqtsn . getTypeID () , ( plhpoiipppbuwovqqtsn . getContract () . isForCorp () ? plhpoiipppbuwovqqtsn . getContract () . getIssuerCorpID () : plhpoiipppbuwovqqtsn . getContract () . getIssuerID () ) , null , null , plhpoiipppbuwovqqtsn . getContract () . getLocations () , null , null , null , null , plhpoiipppbuwovqqtsn ) ) ; } <s> private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem plhpoiipppbuwovqqtsn , boolean guqmidvleizcfqzosubs ) { return ( plhpoiipppbuwovqqtsn != null ) && ( matches ( guqmidvleizcfqzosubs , plhpoiipppbuwovqqtsn . getTypeID () , ( plhpoiipppbuwovqqtsn . getContract () . isForCorp () ? plhpoiipppbuwovqqtsn . getContract () . getIssuerCorpID () : plhpoiipppbuwovqqtsn . getContract () . getIssuerID () ) , null , null , plhpoiipppbuwovqqtsn . getContract () . getLocations () , null , null , null , null , plhpoiipppbuwovqqtsn ) ) ; } <s> Bug Fix: ContractItems was missing from the Stockpile Shopping List
fix_before_refactoring: private java.lang.Long matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { if ( contractItem != null ) { return matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ; } else { return null ; } }
fix_after_refactoring: private java.lang.Long matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem plhpoiipppbuwovqqtsn , boolean guqmidvleizcfqzosubs ) { if ( plhpoiipppbuwovqqtsn != null ) { return matches ( guqmidvleizcfqzosubs , plhpoiipppbuwovqqtsn . getTypeID () , ( plhpoiipppbuwovqqtsn . getContract () . isForCorp () ? plhpoiipppbuwovqqtsn . getContract () . getIssuerCorpID () : plhpoiipppbuwovqqtsn . getContract () . getIssuerID () ) , null , null , plhpoiipppbuwovqqtsn . getContract () . getLocations () , null , null , null , null , plhpoiipppbuwovqqtsn ) ; } else { return null ; } }
× fix_prediction_before: public boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { return ( contractItem != null ) && ( matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , contractItem ) ) ; }
× fix_prediction_after: private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem plhpoiipppbuwovqqtsn , boolean guqmidvleizcfqzosubs ) { return ( plhpoiipppbuwovqqtsn != null ) && ( matches ( guqmidvleizcfqzosubs , plhpoiipppbuwovqqtsn . getTypeID () , ( plhpoiipppbuwovqqtsn . getContract () . isForCorp () ? plhpoiipppbuwovqqtsn . getContract () . getIssuerCorpID () : plhpoiipppbuwovqqtsn . getContract () . getIssuerID () ) , null , null , plhpoiipppbuwovqqtsn . getContract () . getLocations () , null , null , null , null , plhpoiipppbuwovqqtsn ) ) ; }

line_index: 499
bug_before_refactoring: public java.lang.String actionSignup ( java.lang.String role ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } <s> public java.lang.String actionSignup ( java.lang.String role ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } <s> fixed bugs in model User  persis now working
bug_after_refactoring: public java.lang.String actionSignup ( java.lang.String biukbwfhejwkgrkjdpfl ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } <s> public java.lang.String actionSignup ( java.lang.String biukbwfhejwkgrkjdpfl ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } <s> fixed bugs in model User  persis now working
fix_before_refactoring: public java.lang.String actionSignup () { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } }
fix_after_refactoring: public java.lang.String actionSignup () { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } }
× fix_prediction_before: public java.lang.String actionSignup ( java.lang.String role ) { if ( ( userName ) != null ) { boh.jee.ejb.model.Guest user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } else { illegalAccess = false ; } }
× fix_prediction_after: public java.lang.String actionSignup ( java.lang.String biukbwfhejwkgrkjdpfl ) { if ( ( userName ) != null ) { boh.jee.ejb.model.Guest user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } else { illegalAccess = false ; return "roomlist" ; } }

line_index: 500
bug_before_refactoring: private static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } <s> private static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } <s> fix password encrypt error.  Complete :class:`UserControllerTest` and found error password won't be encrypt. Now fixed.
bug_after_refactoring: private static java.lang.String encrypt ( java.lang.String fptmvadmircbjmpbbpgv , java.lang.String hrmzranxritnywbobcjh ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( fptmvadmircbjmpbbpgv ) ; pwd . update ( hrmzranxritnywbobcjh . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + fptmvadmircbjmpbbpgv ) ) ; } } <s> private static java.lang.String encrypt ( java.lang.String fptmvadmircbjmpbbpgv , java.lang.String hrmzranxritnywbobcjh ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( fptmvadmircbjmpbbpgv ) ; pwd . update ( hrmzranxritnywbobcjh . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + fptmvadmircbjmpbbpgv ) ) ; } } <s> fix password encrypt error.  Complete :class:`UserControllerTest` and found error password won't be encrypt. Now fixed.
fix_before_refactoring: public static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } }
fix_after_refactoring: public static java.lang.String encrypt ( java.lang.String fptmvadmircbjmpbbpgv , java.lang.String hrmzranxritnywbobcjh ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( fptmvadmircbjmpbbpgv ) ; pwd . update ( hrmzranxritnywbobcjh . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + fptmvadmircbjmpbbpgv ) ) ; } }
× fix_prediction_before: protected static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } }
× fix_prediction_after: protected static java.lang.String encrypt ( java.lang.String fptmvadmircbjmpbbpgv , java.lang.String hrmzranxritnywbobcjh ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( fptmvadmircbjmpbbpgv ) ; pwd . update ( hrmzranxritnywbobcjh . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + fptmvadmircbjmpbbpgv ) ) ; } }

line_index: 501
bug_before_refactoring: public static < T extends java.io.Serializable > void print ( T [] o ) { java.lang.String delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; } <s> public static < T extends java.io.Serializable > void print ( T [] o ) { java.lang.String delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; } <s> Corrected erroneous print actions in ConsolePrinting  added color to the abstract timer's testing. TODO maybe fix timer state transfer to squash as many bugs as I can and make it work the best.
bug_after_refactoring: public static < T extends java.ikqzxibvvxhvncecmfrrp.Serializable > vkqzxibvvxhvncecmfrrpid print ( T [] kqzxibvvxhvncecmfrrp ) { java.lang.String delim = "{" ; fkqzxibvvxhvncecmfrrpr ( T elem : kqzxibvvxhvncecmfrrp ) { myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( delim ) ; myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( delim ) ; } <s> public static < T extends java.ikqzxibvvxhvncecmfrrp.Serializable > vkqzxibvvxhvncecmfrrpid print ( T [] kqzxibvvxhvncecmfrrp ) { java.lang.String delim = "{" ; fkqzxibvvxhvncecmfrrpr ( T elem : kqzxibvvxhvncecmfrrp ) { myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( delim ) ; myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( delim ) ; } <s> Corrected erroneous print actions in ConsolePrinting  added color to the abstract timer's testing. TODO maybe fix timer state transfer to squash as many bugs as I can and make it work the best.
fix_before_refactoring: public static void print ( int [] o ) { java.lang.String delim = "{" ; for ( int elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; }
fix_after_refactoring: public static vkqzxibvvxhvncecmfrrpid print ( int [] kqzxibvvxhvncecmfrrp ) { java.lang.String delim = "{" ; fkqzxibvvxhvncecmfrrpr ( int elem : kqzxibvvxhvncecmfrrp ) { myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( delim ) ; myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( delim ) ; }
× fix_prediction_before: public static < T extends java.io.Serializable > void print ( java.lang.Object [] o ) { java.lang.String delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; }
× fix_prediction_after: public static < T extends java.ikqzxibvvxhvncecmfrrp.Serializable > print ( T [] kqzxibvvxhvncecmfrrp ) { java.lang.String delim = "{" ; fkqzxibvvxhvncecmfrrpr ( T elem : kqzxibvvxhvncecmfrrp ) { myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( delim ) ; myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.CkqzxibvvxhvncecmfrrpnskqzxibvvxhvncecmfrrplePrinting . print ( delim ) ; }

line_index: 502
bug_before_refactoring: @ java.lang.Override public void onNext ( T i ) { if ( ! ( isUnsubscribed () ) ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } <s> @ java.lang.Override public void onNext ( T i ) { if ( ! ( isUnsubscribed () ) ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } <s> Merge pull request #3384 from akarnokd/TakeReentrancyFix1x  Fix for take() reentrancy bug.
bug_after_refactoring: @ java.lang.Overrseaeytfjynonncdmcestde publseaeytfjynonncdmcestc voseaeytfjynonncdmcestd onNext ( T seaeytfjynonncdmcest ) { seaeytfjynonncdmcestf ( ! ( seaeytfjynonncdmcestsUnsubscrseaeytfjynonncdmcestbed () ) ) { boolean stop = ( ++ ( count ) ) >= ( lseaeytfjynonncdmcestmseaeytfjynonncdmcestt ) ; chseaeytfjynonncdmcestld . onNext ( seaeytfjynonncdmcest ) ; seaeytfjynonncdmcestf ( stop && ( ! ( completed ) ) ) { completed = true ; try { chseaeytfjynonncdmcestld . onCompleted () ; } fseaeytfjynonncdmcestnally { unsubscrseaeytfjynonncdmcestbe () ; } } } } <s> @ java.lang.Overrseaeytfjynonncdmcestde publseaeytfjynonncdmcestc voseaeytfjynonncdmcestd onNext ( T seaeytfjynonncdmcest ) { seaeytfjynonncdmcestf ( ! ( seaeytfjynonncdmcestsUnsubscrseaeytfjynonncdmcestbed () ) ) { boolean stop = ( ++ ( count ) ) >= ( lseaeytfjynonncdmcestmseaeytfjynonncdmcestt ) ; chseaeytfjynonncdmcestld . onNext ( seaeytfjynonncdmcest ) ; seaeytfjynonncdmcestf ( stop && ( ! ( completed ) ) ) { completed = true ; try { chseaeytfjynonncdmcestld . onCompleted () ; } fseaeytfjynonncdmcestnally { unsubscrseaeytfjynonncdmcestbe () ; } } } } <s> Merge pull request #3384 from akarnokd/TakeReentrancyFix1x  Fix for take() reentrancy bug.
fix_before_refactoring: @ java.lang.Override public void onNext ( T i ) { if ( ( ! ( isUnsubscribed () ) ) && ( ( ( count ) ++ ) < ( limit ) ) ) { boolean stop = ( count ) == ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } }
fix_after_refactoring: @ java.lang.Overrseaeytfjynonncdmcestde publseaeytfjynonncdmcestc voseaeytfjynonncdmcestd onNext ( T seaeytfjynonncdmcest ) { seaeytfjynonncdmcestf ( ( ! ( seaeytfjynonncdmcestsUnsubscrseaeytfjynonncdmcestbed () ) ) && ( ( ( count ) ++ ) < ( lseaeytfjynonncdmcestmseaeytfjynonncdmcestt ) ) ) { boolean stop = ( count ) == ( lseaeytfjynonncdmcestmseaeytfjynonncdmcestt ) ; chseaeytfjynonncdmcestld . onNext ( seaeytfjynonncdmcest ) ; seaeytfjynonncdmcestf ( stop && ( ! ( completed ) ) ) { completed = true ; try { chseaeytfjynonncdmcestld . onCompleted () ; } fseaeytfjynonncdmcestnally { unsubscrseaeytfjynonncdmcestbe () ; } } } }
× fix_prediction_before: @ java.lang.Override public void onNext ( T i ) { if ( ! ( isUnsubscribed () ) ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } }
× fix_prediction_after: @ java.lang.Overrseaeytfjynonncdmancde publseaeytfjynonncdmancc voseaeytfjynonncdmancd onNext ( T seaeytfjynonncdmanc ) { seaeytfjynonncdmancf ( ! ( seaeytfjynonncdmancsUnsubscrseaeytfjynonncdmancbed () ) ) { boolean stop = ( ++ ( count ) ) >= ( lseaeytfjynonncdmancmseaeytfjynonncdmanct ) ; chseaeytfjynonncdmancld . onNext ( seaeytfjynonncdmanc ) ; seaeytfjynonncdmancf ( stop && ( ! ( completed ) ) ) { completed = true ; try { chseaeytfjynonncdmancld . onCompleted () ; } fseaeytfjynonncdmancnally { unsubscrseaeytfjynonncdmancbe () ; } } } }

line_index: 503
bug_before_refactoring: @ java.lang.Override public void ReInit ( java.io.Reader stream ) { jj_input_stream . ReInit ( stream , 1 , 1 ) ; token_source . ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } } <s> @ java.lang.Override public void ReInit ( java.io.Reader stream ) { jj_input_stream . ReInit ( stream , 1 , 1 ) ; token_source . ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } } <s> Fixed the parsing of the modulo operator. Thanks to Chris Myers who reported the problem.
bug_after_refactoring: @ java.lang.Override public void ReInit ( java.io.Reader qxsminiavdlpvjrqmxeg ) { jj_input_qxsminiavdlpvjrqmxeg . ReInit ( qxsminiavdlpvjrqmxeg , 1 , 1 ) ; token_source . ReInit ( jj_input_qxsminiavdlpvjrqmxeg ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } } <s> @ java.lang.Override public void ReInit ( java.io.Reader qxsminiavdlpvjrqmxeg ) { jj_input_qxsminiavdlpvjrqmxeg . ReInit ( qxsminiavdlpvjrqmxeg , 1 , 1 ) ; token_source . ReInit ( jj_input_qxsminiavdlpvjrqmxeg ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } } <s> Fixed the parsing of the modulo operator. Thanks to Chris Myers who reported the problem.
fix_before_refactoring: public void ReInit ( java.io.Reader stream ) { jj_input_stream . ReInit ( stream , 1 , 1 ) ; token_source . ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) jj_la1 [ i ] = - 1 ; for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; }
fix_after_refactoring: public void ReInit ( java.io.Reader qxsminiavdlpvjrqmxeg ) { jj_input_qxsminiavdlpvjrqmxeg . ReInit ( qxsminiavdlpvjrqmxeg , 1 , 1 ) ; token_source . ReInit ( jj_input_qxsminiavdlpvjrqmxeg ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) jj_la1 [ i ] = - 1 ; for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; }
× fix_prediction_before: @ java.lang.Override public void ReInit ( java.io.Reader stream ) { jj_input_stream . ReInit ( stream , 1 , 1 ) ; token_source . ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } }
× fix_prediction_after: @ java.lang.Override public void ReInit ( java.io.Reader qxsminiavdlpvjrqmxeg ) { jj_input_qxsminiavdlpvjrqmxeg . ReInit ( qxsminiavdlpvjrqmxeg , 1 , 1 ) ; token_source . ReInit ( jj_input_qxsminiavdlpvjrqmxeg ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJJCalls () ; } }

line_index: 504
bug_before_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( station != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } <s> @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( station != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } <s> fix error with show "wait" button
bug_after_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station zamffbgzwryeumtmegis ) { if ( zamffbgzwryeumtmegis != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( zamffbgzwryeumtmegis . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } <s> @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station zamffbgzwryeumtmegis ) { if ( zamffbgzwryeumtmegis != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( zamffbgzwryeumtmegis . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } <s> fix error with show "wait" button
fix_before_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( station != null ) { if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
fix_after_refactoring: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station zamffbgzwryeumtmegis ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( zamffbgzwryeumtmegis != null ) { if ( ( mediaPlayer ) == null ) initPlayer ( zamffbgzwryeumtmegis . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
× fix_prediction_before: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( station != null ) { currentState = State.IS_WAIT ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
× fix_prediction_after: @ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station zamffbgzwryeumtmegis ) { if ( zamffbgzwryeumtmegis != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( zamffbgzwryeumtmegis . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }

line_index: 505
bug_before_refactoring: private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; } <s> private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; } <s> Bug fix and Junit test of ICD10ClaMLTaxonomyProvider.  Fix bugs in the first version. Add Junit test. Find some classes don't override hashCode and equals methods.
bug_after_refactoring: private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm piphkmpntozckzhmbzkc ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( piphkmpntozckzhmbzkc . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( piphkmpntozckzhmbzkc . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( piphkmpntozckzhmbzkc . getNameSpace () ) ; healthCode . setDescription ( piphkmpntozckzhmbzkc . getDescription () ) ; healthCode . setNumberOfSubTerms ( piphkmpntozckzhmbzkc . getSubTerms () . size () ) ; return healthCode ; } <s> private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm piphkmpntozckzhmbzkc ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( piphkmpntozckzhmbzkc . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( piphkmpntozckzhmbzkc . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( piphkmpntozckzhmbzkc . getNameSpace () ) ; healthCode . setDescription ( piphkmpntozckzhmbzkc . getDescription () ) ; healthCode . setNumberOfSubTerms ( piphkmpntozckzhmbzkc . getSubTerms () . size () ) ; return healthCode ; } <s> Bug fix and Junit test of ICD10ClaMLTaxonomyProvider.  Fix bugs in the first version. Add Junit test. Find some classes don't override hashCode and equals methods.
fix_before_refactoring: public rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { if ( term == null ) { return null ; } rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; }
fix_after_refactoring: public rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm piphkmpntozckzhmbzkc ) { if ( piphkmpntozckzhmbzkc == null ) { return null ; } rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( piphkmpntozckzhmbzkc . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( piphkmpntozckzhmbzkc . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( piphkmpntozckzhmbzkc . getNameSpace () ) ; healthCode . setDescription ( piphkmpntozckzhmbzkc . getDescription () ) ; healthCode . setNumberOfSubTerms ( piphkmpntozckzhmbzkc . getSubTerms () . size () ) ; return healthCode ; }
× fix_prediction_before: public rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; }
× fix_prediction_after: public rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm piphkmpntozckzhmbzkc ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( piphkmpntozckzhmbzkc . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( piphkmpntozckzhmbzkc . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( piphkmpntozckzhmbzkc . getNameSpace () ) ; healthCode . setDescription ( piphkmpntozckzhmbzkc . getDescription () ) ; healthCode . setNumberOfSubTerms ( piphkmpntozckzhmbzkc . getSubTerms () . size () ) ; return healthCode ; }

line_index: 506
bug_before_refactoring: public org.json.JSONObject startVM ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) {} } <s> public org.json.JSONObject startVM ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) {} } <s> fix bugs.
bug_after_refactoring: public org.json.JSONObject startVM ( org.json.JSONObject hmiwwitdepuyxmwmxdll ) { try { java.lang.String tid = hmiwwitdepuyxmwmxdll . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( hmiwwitdepuyxmwmxdll ) ; } else { return _start_tvd ( hmiwwitdepuyxmwmxdll ) ; } } catch ( java.lang.Exception e ) {} } <s> public org.json.JSONObject startVM ( org.json.JSONObject hmiwwitdepuyxmwmxdll ) { try { java.lang.String tid = hmiwwitdepuyxmwmxdll . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( hmiwwitdepuyxmwmxdll ) ; } else { return _start_tvd ( hmiwwitdepuyxmwmxdll ) ; } } catch ( java.lang.Exception e ) {} } <s> fix bugs.
fix_before_refactoring: { return new org.json.JSONObject () ; }
fix_after_refactoring: { return new org.json.JSONObject () ; }
× fix_prediction_before: public java.lang.String startVM ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) {} return null ; }
× fix_prediction_after: public org.json.JSONObject startVM ( org.json.JSONObject hmiwwitdepuyxmwmxdll ) { try { java.lang.String tid = hmiwwitdepuyxmwmxdll . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( hmiwwitdepuyxmwmxdll ) ; } else { return _start_tvd ( hmiwwitdepuyxmwmxdll ) ; } } catch ( java.lang.Exception e ) {} return null ; }

line_index: 507
bug_before_refactoring: @ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; } <s> @ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; } <s> Fix some version issues
bug_after_refactoring: @ java.lang.Override public void onDataPacket ( kskeobjknlfbqarmrqas.minecraft.kskeobjknlfbqarmrqaswork.NetworkManager kskeobjknlfbqarmrqas , kskeobjknlfbqarmrqas.minecraft.kskeobjknlfbqarmrqaswork.play.server.SPacketUpdateTileEntity gwwudjouxiiimkcmhame ) { super . onDataPacket ( kskeobjknlfbqarmrqas , gwwudjouxiiimkcmhame ) ; readFromNBT ( gwwudjouxiiimkcmhame . getNbtCompound () ) ; kskeobjknlfbqarmrqas.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; } <s> @ java.lang.Override public void onDataPacket ( kskeobjknlfbqarmrqas.minecraft.kskeobjknlfbqarmrqaswork.NetworkManager kskeobjknlfbqarmrqas , kskeobjknlfbqarmrqas.minecraft.kskeobjknlfbqarmrqaswork.play.server.SPacketUpdateTileEntity gwwudjouxiiimkcmhame ) { super . onDataPacket ( kskeobjknlfbqarmrqas , gwwudjouxiiimkcmhame ) ; readFromNBT ( gwwudjouxiiimkcmhame . getNbtCompound () ) ; kskeobjknlfbqarmrqas.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; } <s> Fix some version issues
fix_before_refactoring: public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = this . world . getBlockState ( this . pos ) ; this . world . notifyBlockUpdate ( this . pos , state , state , 3 ) ; }
fix_after_refactoring: public void onDataPacket ( kskeobjknlfbqarmrqas.minecraft.kskeobjknlfbqarmrqaswork.NetworkManager kskeobjknlfbqarmrqas , kskeobjknlfbqarmrqas.minecraft.kskeobjknlfbqarmrqaswork.play.server.SPacketUpdateTileEntity gwwudjouxiiimkcmhame ) { super . onDataPacket ( kskeobjknlfbqarmrqas , gwwudjouxiiimkcmhame ) ; readFromNBT ( gwwudjouxiiimkcmhame . getNbtCompound () ) ; kskeobjknlfbqarmrqas.minecraft.block.state.IBlockState state = this . world . getBlockState ( this . pos ) ; this . world . notifyBlockUpdate ( this . pos , state , state , 3 ) ; }
× fix_prediction_before: @ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; net.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; }
× fix_prediction_after: @ java.lang.Override public void onDataPacket ( kskeobjknlfbqarmrqas.minecraft.kskeobjknlfbqarmrqaswork.NetworkManager kskeobjknlfbqarmrqas , kskeobjknlfbqarmrqaswork.play.server.SPacketUpdateTileEntity gwwudjouxiiimkcmhame ) { super . onDataPacket ( kskeobjknlfbqarmrqas , gwwudjouxiiimkcmhame ) ; readFromNBT ( gwwudjouxiiimkcmhame . getNbtCompound () ) ; kskeobjknlfbqarmrqas.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; }

line_index: 508
bug_before_refactoring: public static void loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } } <s> public static void loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } } <s> FIXED: Minor issue that caused the BenchmarkEngine to be loaded twice.
bug_after_refactoring: public static void loadConfig ( java.lang.String pvfhtdollugwncfycktp ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( pvfhtdollugwncfycktp ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , pvfhtdollugwncfycktp ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } } <s> public static void loadConfig ( java.lang.String pvfhtdollugwncfycktp ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( pvfhtdollugwncfycktp ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , pvfhtdollugwncfycktp ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } } <s> FIXED: Minor issue that caused the BenchmarkEngine to be loaded twice.
fix_before_refactoring: public static org.vitrivr.cineast.core.config.Config loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; return null ; } else { return config ; } }
fix_after_refactoring: public static org.vitrivr.cineast.core.config.Config loadConfig ( java.lang.String pvfhtdollugwncfycktp ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( pvfhtdollugwncfycktp ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , pvfhtdollugwncfycktp ) ; return null ; } else { return config ; } }
× fix_prediction_before: public static org.vitrivr.cineast.core.config.Config loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; } else { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } return config ; }
× fix_prediction_after: public static org.vitrivr.cineast.core.config.Config loadConfig ( java.lang.String pvfhtdollugwncfycktp ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( pvfhtdollugwncfycktp ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , pvfhtdollugwncfycktp ) ; } else { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } return config ; }

line_index: 509
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } } <s> fixed create account issue that occurred after attempting a signed in
bug_after_refactoring: @ java.lang.Ovdhtpjdxtttjsxstuawgfrriddhtpjdxtttjsxstuawgf public void actionPdhtpjdxtttjsxstuawgfrformdhtpjdxtttjsxstuawgfd ( java.awt.dhtpjdxtttjsxstuawgfvdhtpjdxtttjsxstuawgfnt.ActionEvdhtpjdxtttjsxstuawgfnt dhtpjdxtttjsxstuawgf ) { if ( chdhtpjdxtttjsxstuawgfckConndhtpjdxtttjsxstuawgfction () ) { thdhtpjdxtttjsxstuawgfVidhtpjdxtttjsxstuawgfw . sdhtpjdxtttjsxstuawgftVisibldhtpjdxtttjsxstuawgf ( falsdhtpjdxtttjsxstuawgf ) ; thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw = ndhtpjdxtttjsxstuawgfw gomoku.CrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountVidhtpjdxtttjsxstuawgfw () ; thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw . sdhtpjdxtttjsxstuawgftVisibldhtpjdxtttjsxstuawgf ( trudhtpjdxtttjsxstuawgf ) ; caControlldhtpjdxtttjsxstuawgfr = ndhtpjdxtttjsxstuawgfw gomoku.CrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountControlldhtpjdxtttjsxstuawgfr ( thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw , thdhtpjdxtttjsxstuawgfConndhtpjdxtttjsxstuawgfction , thdhtpjdxtttjsxstuawgfVidhtpjdxtttjsxstuawgfw ) ; thdhtpjdxtttjsxstuawgfConndhtpjdxtttjsxstuawgfction . sdhtpjdxtttjsxstuawgftCrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountControlldhtpjdxtttjsxstuawgfr ( caControlldhtpjdxtttjsxstuawgfr ) ; } } <s> @ java.lang.Ovdhtpjdxtttjsxstuawgfrriddhtpjdxtttjsxstuawgf public void actionPdhtpjdxtttjsxstuawgfrformdhtpjdxtttjsxstuawgfd ( java.awt.dhtpjdxtttjsxstuawgfvdhtpjdxtttjsxstuawgfnt.ActionEvdhtpjdxtttjsxstuawgfnt dhtpjdxtttjsxstuawgf ) { if ( chdhtpjdxtttjsxstuawgfckConndhtpjdxtttjsxstuawgfction () ) { thdhtpjdxtttjsxstuawgfVidhtpjdxtttjsxstuawgfw . sdhtpjdxtttjsxstuawgftVisibldhtpjdxtttjsxstuawgf ( falsdhtpjdxtttjsxstuawgf ) ; thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw = ndhtpjdxtttjsxstuawgfw gomoku.CrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountVidhtpjdxtttjsxstuawgfw () ; thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw . sdhtpjdxtttjsxstuawgftVisibldhtpjdxtttjsxstuawgf ( trudhtpjdxtttjsxstuawgf ) ; caControlldhtpjdxtttjsxstuawgfr = ndhtpjdxtttjsxstuawgfw gomoku.CrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountControlldhtpjdxtttjsxstuawgfr ( thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw , thdhtpjdxtttjsxstuawgfConndhtpjdxtttjsxstuawgfction , thdhtpjdxtttjsxstuawgfVidhtpjdxtttjsxstuawgfw ) ; thdhtpjdxtttjsxstuawgfConndhtpjdxtttjsxstuawgfction . sdhtpjdxtttjsxstuawgftCrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountControlldhtpjdxtttjsxstuawgfr ( caControlldhtpjdxtttjsxstuawgfr ) ; } } <s> fixed create account issue that occurred after attempting a signed in
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { checkConnection () ; theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; }
fix_after_refactoring: @ java.lang.Ovdhtpjdxtttjsxstuawgfrriddhtpjdxtttjsxstuawgf public void actionPdhtpjdxtttjsxstuawgfrformdhtpjdxtttjsxstuawgfd ( java.awt.dhtpjdxtttjsxstuawgfvdhtpjdxtttjsxstuawgfnt.ActionEvdhtpjdxtttjsxstuawgfnt dhtpjdxtttjsxstuawgf ) { chdhtpjdxtttjsxstuawgfckConndhtpjdxtttjsxstuawgfction () ; thdhtpjdxtttjsxstuawgfVidhtpjdxtttjsxstuawgfw . sdhtpjdxtttjsxstuawgftVisibldhtpjdxtttjsxstuawgf ( falsdhtpjdxtttjsxstuawgf ) ; thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw = ndhtpjdxtttjsxstuawgfw gomoku.CrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountVidhtpjdxtttjsxstuawgfw () ; thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw . sdhtpjdxtttjsxstuawgftVisibldhtpjdxtttjsxstuawgf ( trudhtpjdxtttjsxstuawgf ) ; caControlldhtpjdxtttjsxstuawgfr = ndhtpjdxtttjsxstuawgfw gomoku.CrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountControlldhtpjdxtttjsxstuawgfr ( thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw , thdhtpjdxtttjsxstuawgfConndhtpjdxtttjsxstuawgfction , thdhtpjdxtttjsxstuawgfVidhtpjdxtttjsxstuawgfw ) ; thdhtpjdxtttjsxstuawgfConndhtpjdxtttjsxstuawgfction . sdhtpjdxtttjsxstuawgftCrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountControlldhtpjdxtttjsxstuawgfr ( caControlldhtpjdxtttjsxstuawgfr ) ; }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } }
× fix_prediction_after: @ java.lang.Override public void actionPdhtpjdxtttjsxstuawgfrformdhtpjdxtttjsxstuawgfd ( java.awt.dhtpjdxtttjsxstuawgfvdhtpjdxtttjsxstuawgfnt.ActionEvdhtpjdxtttjsxstuawgfnt.ActionEvdhtpjdxtttjsxstuawgfnt dhtpjdxtttjsxstuawgf ) { if ( chdhtpjdxtttjsxstuawgfckConndhtpjdxtttjsxstuawgfction () ) { thdhtpjdxtttjsxstuawgfVidhtpjdxtttjsxstuawgfw . sdhtpjdxtttjsxstuawgftVisibldhtpjdxtttjsxstuawgf ( falsdhtpjdxtttjsxstuawgf ) ; thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw = ndhtpjdxtttjsxstuawgfw gomoku.CrdhtpjdxtttjsxstuawgfatdhtpjdxtttjsxstuawgfAccountVidhtpjdxtttjsxstuawgfw () ; thdhtpjdxtttjsxstuawgfCAVidhtpjdxtttjsxstuawgfw . sdhtpjdxtttjsxstuawgf ( trudhtpjdxtttjsxstuawgf ) ; caldControlldhtpjdxtttjsxstuawgf ( trudhtpjdxtttjsxstuawgf ) ; thdhtpjdxtttjsxstuawgf ( thdhtpjdxtttjsxstuawgfw ) ; }

line_index: 511
bug_before_refactoring: @ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } <s> @ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } <s> fixing assembly and checkstyle plugin issues
bug_after_refactoring: @ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext lwgxchdytssfzrlwsgza ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( lwgxchdytssfzrlwsgza ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; lwgxchdytssfzrlwsgza . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } <s> @ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext lwgxchdytssfzrlwsgza ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( lwgxchdytssfzrlwsgza ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; lwgxchdytssfzrlwsgza . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } <s> fixing assembly and checkstyle plugin issues
fix_before_refactoring: @ org.osgi.service.component.annotations.Activate protected void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; }
fix_after_refactoring: @ org.osgi.service.component.annotations.Activate protected void start ( org.osgi.framework.BundleContext lwgxchdytssfzrlwsgza ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( lwgxchdytssfzrlwsgza ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; lwgxchdytssfzrlwsgza . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; }
× fix_prediction_before: @ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; }
× fix_prediction_after: @ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext lwgxchdytssfzrlwsgza ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( lwgxchdytssfzrlwsgza ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; lwgxchdytssfzrlwsgza . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; }

line_index: 512
bug_before_refactoring: private < T > java.lang.Object getFieldValue ( T classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( classObject , fieldName ) ; try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , fieldName , classObject . getClass () ) ) ; } } <s> private < T > java.lang.Object getFieldValue ( T classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( classObject , fieldName ) ; try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , fieldName , classObject . getClass () ) ) ; } } <s> Code review fixes for issue #48
bug_after_refactoring: private < T > java.lang.Object getFieldValue ( T jzvohjlhaoasvafrzalu , java.lang.String xeerqzacuotqpxzlqewz ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( jzvohjlhaoasvafrzalu , xeerqzacuotqpxzlqewz ) ; try { return field . get ( jzvohjlhaoasvafrzalu ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , xeerqzacuotqpxzlqewz , jzvohjlhaoasvafrzalu . getClass () ) ) ; } } <s> private < T > java.lang.Object getFieldValue ( T jzvohjlhaoasvafrzalu , java.lang.String xeerqzacuotqpxzlqewz ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( jzvohjlhaoasvafrzalu , xeerqzacuotqpxzlqewz ) ; try { return field . get ( jzvohjlhaoasvafrzalu ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , xeerqzacuotqpxzlqewz , jzvohjlhaoasvafrzalu . getClass () ) ) ; } } <s> Code review fixes for issue #48
fix_before_refactoring: private < T > java.lang.Object getFieldValue ( T classObject , java.lang.reflect.Field field ) throws org.wso2.carbon.config.ConfigurationException { try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , field . getName () , classObject . getClass () ) ) ; } }
fix_after_refactoring: private < T > java.lang.Object getFieldValue ( T jzvohjlhaoasvafrzalu , java.lang.reflect.Field field ) throws org.wso2.carbon.config.ConfigurationException { try { return field . get ( jzvohjlhaoasvafrzalu ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , field . getName () , jzvohjlhaoasvafrzalu . getClass () ) ) ; } }
× fix_prediction_before: protected < T > java.lang.Object getFieldValue ( T classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( classObject , fieldName ) ; try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , fieldName , classObject . getClass () ) ) ; } }
× fix_prediction_after: protected < T > java.lang.Object getFieldValue ( T jzvohjlhaoasvafrzalu , java.lang.String xeerqzacuotqpxzlqewz ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( jzvohjlhaoasvafrzalu , xeerqzacuotqpxzlqewz ) ; try { return field . get ( jzvohjlhaoasvafrzalu ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in obtaining value for field %s in %s" , xeerqzacuotqpxzlqewz , jzvohjlhaoasvafrzalu . getClass () ) ) ; } }

line_index: 513
bug_before_refactoring: public void enqueue ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } <s> public void enqueue ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } <s> ISSUE-935: Fix intermittent test failures from NotificationServiceImplTest  Changed NotificationService.notify to return a Future and make the test case wait until the result is returned.  Fixes #935  Author: Arun Mahadevan <arunm@apache.org>  Closes #944 from arunmahadevan/ISSUE-935  Change-Id: I1ae34fb957d04f20767dacc0aa175c9abeb5bd64
bug_after_refactoring: public void enqueue ( com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.Notifier yvfwcghtaqniahvbzmyh , com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.Notification adjzaygzqetbaeovplaj ) { com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.service.NotificationQueueHandler.NotificationQueueTask ( yvfwcghtaqniahvbzmyh , adjzaygzqetbaeovplaj ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( adjzaygzqetbaeovplaj . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } <s> public void enqueue ( com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.Notifier yvfwcghtaqniahvbzmyh , com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.Notification adjzaygzqetbaeovplaj ) { com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.service.NotificationQueueHandler.NotificationQueueTask ( yvfwcghtaqniahvbzmyh , adjzaygzqetbaeovplaj ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( adjzaygzqetbaeovplaj . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } <s> ISSUE-935: Fix intermittent test failures from NotificationServiceImplTest  Changed NotificationService.notify to return a Future and make the test case wait until the result is returned.  Fixes #935  Author: Arun Mahadevan <arunm@apache.org>  Closes #944 from arunmahadevan/ISSUE-935  Change-Id: I1ae34fb957d04f20767dacc0aa175c9abeb5bd64
fix_before_refactoring: public java.util.concurrent.Future < ? > enqueue ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; return future ; }
fix_after_refactoring: public java.util.concurrent.Future < ? > enqueue ( com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.Notifier yvfwcghtaqniahvbzmyh , com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.Notification adjzaygzqetbaeovplaj ) { com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.service.NotificationQueueHandler.NotificationQueueTask ( yvfwcghtaqniahvbzmyh , adjzaygzqetbaeovplaj ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( adjzaygzqetbaeovplaj . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; return future ; }
× fix_prediction_before: public void enqueue ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { if ( notification != null ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } }
× fix_prediction_after: public void enqueue ( com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.Notifier yvfwcghtaqniahvbzmyh , com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.Notification adjzaygzqetbaeovplaj ) { if ( ( taskMap . get ( adjzaygzqetbaeovplaj . getId () ) ) == null ) { com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.adjzaygzqetbaeovplaj.service.NotificationQueueHandler.NotificationQueueTask ( yvfwcghtaqniahvbzmyh , adjzaygzqetbaeovplaj ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( adjzaygzqetbaeovplaj . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } }

line_index: 515
bug_before_refactoring: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , boolean truncateUnlabeledData , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; } <s> public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , boolean truncateUnlabeledData , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; } <s> fixed some minor bugs affecting hyperparameter tuning with a cross-validation set.
bug_after_refactoring: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder uwovsvuqwqxikiyhcido , edu.byu.nlp.crowdsourcing.PriorSpecification ldstsmypnihgtbuzuakf , edu.byu.nlp.tsikjqffnquwgbrgkfxt.types.Dataset tsikjqffnquwgbrgkfxt , boolean jnieofyprvacjncibmbi , org.apache.commons.math3.random.RandomGenerator ofbqzuzbdazgbivxttvw ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( ofbqzuzbdazgbivxttvw ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( ofbqzuzbdazgbivxttvw , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( uwovsvuqwqxikiyhcido , ldstsmypnihgtbuzuakf , tsikjqffnquwgbrgkfxt , initializer , mInitializer , ofbqzuzbdazgbivxttvw ) ; } <s> public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder uwovsvuqwqxikiyhcido , edu.byu.nlp.crowdsourcing.PriorSpecification ldstsmypnihgtbuzuakf , edu.byu.nlp.tsikjqffnquwgbrgkfxt.types.Dataset tsikjqffnquwgbrgkfxt , boolean jnieofyprvacjncibmbi , org.apache.commons.math3.random.RandomGenerator ofbqzuzbdazgbivxttvw ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( ofbqzuzbdazgbivxttvw ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( ofbqzuzbdazgbivxttvw , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( uwovsvuqwqxikiyhcido , ldstsmypnihgtbuzuakf , tsikjqffnquwgbrgkfxt , initializer , mInitializer , ofbqzuzbdazgbivxttvw ) ; } <s> fixed some minor bugs affecting hyperparameter tuning with a cross-validation set.
fix_before_refactoring: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; }
fix_after_refactoring: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder uwovsvuqwqxikiyhcido , edu.byu.nlp.crowdsourcing.PriorSpecification ldstsmypnihgtbuzuakf , edu.byu.nlp.tsikjqffnquwgbrgkfxt.types.Dataset tsikjqffnquwgbrgkfxt , org.apache.commons.math3.random.RandomGenerator ofbqzuzbdazgbivxttvw ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( ofbqzuzbdazgbivxttvw ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( ofbqzuzbdazgbivxttvw , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( uwovsvuqwqxikiyhcido , ldstsmypnihgtbuzuakf , tsikjqffnquwgbrgkfxt , initializer , mInitializer , ofbqzuzbdazgbivxttvw ) ; }
× fix_prediction_before: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , boolean truncateUnlabeledData ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; }
× fix_prediction_after: public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder uwovsvuqwqxikiyhcido , edu.byu.nlp.crowdsourcing.PriorSpecification ldstsmypnihgtbuzuakf , edu.byu.nlp.tsikjqffnquwgbrgkfxt.types.Dataset tsikjqffnquwgbrgkfxt , boolean jnieofyprvacjncibmbi , org.apache.commons.math3.random.RandomGenerator ofbqzuzbdazgbivxttvw ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( ofbqzuzbdazgbivxttvw ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( ofbqzuzbdazgbivxttvw , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( uwovsvuqwqxikiyhcido , ldstsmypnihgtbuzuakf , tsikjqffnquwgbrgkfxt , initializer , mInitializer , ofbqzuzbdazgbivxttvw ) ; }

line_index: 516
bug_before_refactoring: java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( access , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , access , member , key . getString () , args , namedArgs , superAccess ) ; } <s> java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( access , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , access , member , key . getString () , args , namedArgs , superAccess ) ; } <s> partally solved https://issues.jboss.org/browse/RAILO-1685
bug_after_refactoring: java.lang.Object _call ( railo.runtime.PageContext kcrriehpbfplhkuhjqih , int rcrsrdxlyedlirfzppdl , railo.runtime.type.Collection.Key bqyckwjvhuvhgoictuzh , railo.runtime.type.Struct lmmifefxayrzuijnisab , java.lang.Object [] yiehbppgfdyzxpeovccw , boolean pxohntflwyihcufdtbvv ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( rcrsrdxlyedlirfzppdl , bqyckwjvhuvhgoictuzh , false , pxohntflwyihcufdtbvv ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( kcrriehpbfplhkuhjqih , ( ( railo.runtime.type.UDF ) ( member ) ) , lmmifefxayrzuijnisab , yiehbppgfdyzxpeovccw ) ; } return onMissingMethod ( kcrriehpbfplhkuhjqih , rcrsrdxlyedlirfzppdl , member , bqyckwjvhuvhgoictuzh . getString () , yiehbppgfdyzxpeovccw , lmmifefxayrzuijnisab , pxohntflwyihcufdtbvv ) ; } <s> java.lang.Object _call ( railo.runtime.PageContext kcrriehpbfplhkuhjqih , int rcrsrdxlyedlirfzppdl , railo.runtime.type.Collection.Key bqyckwjvhuvhgoictuzh , railo.runtime.type.Struct lmmifefxayrzuijnisab , java.lang.Object [] yiehbppgfdyzxpeovccw , boolean pxohntflwyihcufdtbvv ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( rcrsrdxlyedlirfzppdl , bqyckwjvhuvhgoictuzh , false , pxohntflwyihcufdtbvv ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( kcrriehpbfplhkuhjqih , ( ( railo.runtime.type.UDF ) ( member ) ) , lmmifefxayrzuijnisab , yiehbppgfdyzxpeovccw ) ; } return onMissingMethod ( kcrriehpbfplhkuhjqih , rcrsrdxlyedlirfzppdl , member , bqyckwjvhuvhgoictuzh . getString () , yiehbppgfdyzxpeovccw , lmmifefxayrzuijnisab , pxohntflwyihcufdtbvv ) ; } <s> partally solved https://issues.jboss.org/browse/RAILO-1685
fix_before_refactoring: java.lang.Object _call ( railo.runtime.PageContext pc , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( pc , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , ( - 1 ) , member , key . getString () , args , namedArgs , superAccess ) ; }
fix_after_refactoring: java.lang.Object _call ( railo.runtime.PageContext kcrriehpbfplhkuhjqih , railo.runtime.type.Collection.Key bqyckwjvhuvhgoictuzh , railo.runtime.type.Struct lmmifefxayrzuijnisab , java.lang.Object [] yiehbppgfdyzxpeovccw , boolean pxohntflwyihcufdtbvv ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( kcrriehpbfplhkuhjqih , bqyckwjvhuvhgoictuzh , false , pxohntflwyihcufdtbvv ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( kcrriehpbfplhkuhjqih , ( ( railo.runtime.type.UDF ) ( member ) ) , lmmifefxayrzuijnisab , yiehbppgfdyzxpeovccw ) ; } return onMissingMethod ( kcrriehpbfplhkuhjqih , ( - 1 ) , member , bqyckwjvhuvhgoictuzh . getString () , yiehbppgfdyzxpeovccw , lmmifefxayrzuijnisab , pxohntflwyihcufdtbvv ) ; }
× fix_prediction_before: java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( access , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , access , member , key . getString () , args ) ; }
× fix_prediction_after: { return _call ( railo.runtime.PageContext kcrriehpbfplhkuhjqih , int rcrsrdxlyedlirfzppdl , railo.runtime.type.Collection.Key bqyckwjvhuvhgoictuzh , railo.runtime.type.Struct lmmifefxayrzuijnisab , java.lang.Object [] yiehbppgfdyzxpeovccw , boolean pxohntflwyihcufdtbvv ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( rcrsrdxlyedlirfzppdl , bqyckwjvhuvhgoictuzh , false , pxohntflwyihcufdtbvv ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( kcrriehpbfplhkuhjqih , ( ( railo.runtime.type.UDF ) ( member ) ) , lmmifefxayrzuijnisab , yiehbppgfdyzxpeovccw ) ; } return null ; }

line_index: 517
bug_before_refactoring: public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; } <s> public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; } <s> Bugfix.
bug_after_refactoring: public static java.lang.String random ( int moibhzoxjplvgcbmzywb ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( ( builder . moibhzoxjplvgcbmzywb () ) < moibhzoxjplvgcbmzywb ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.moibhzoxjplvgcbmzywb ) ) ) ] ) ; } } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; } <s> public static java.lang.String random ( int moibhzoxjplvgcbmzywb ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( ( builder . moibhzoxjplvgcbmzywb () ) < moibhzoxjplvgcbmzywb ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.moibhzoxjplvgcbmzywb ) ) ) ] ) ; } } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; } <s> Bugfix.
fix_before_refactoring: public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } return builder . toString () ; }
fix_after_refactoring: public static java.lang.String random ( int moibhzoxjplvgcbmzywb ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; while ( ( builder . moibhzoxjplvgcbmzywb () ) < moibhzoxjplvgcbmzywb ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.moibhzoxjplvgcbmzywb ) ) ) ] ) ; } return builder . toString () ; }
× fix_prediction_before: public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; }
× fix_prediction_after: private static java.lang.String random ( int moibhzoxjplvgcbmzywb ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( ( builder . moibhzoxjplvgcbmzywb () ) < moibhzoxjplvgcbmzywb ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.moibhzoxjplvgcbmzywb ) ) ) ] ) ; } } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; }

line_index: 518
bug_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { if ( "proj" . equals ( type ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( type ) ) { info = datasetInfo ( id ) ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { if ( "proj" . equals ( type ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( type ) ) { info = datasetInfo ( id ) ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } <s> Divers fixes for the UI: - show number of projects a dataset is shared with in the dataset info - show if a dataset is searchable in the dataset info - correct some css and html errors - fixes page min-width  close search  and search page blinking - Makes that when doing a search you can reach result the file by clicking on it.
bug_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{hskbmkqgrmanhxafnphh}/{bubyubsjfwfcddpepsga}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "hskbmkqgrmanhxafnphh" ) java.lang.String hskbmkqgrmanhxafnphh , @ javax.ws.rs.PathParam ( value = "bubyubsjfwfcddpepsga" ) java.lang.Integer bubyubsjfwfcddpepsga ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( bubyubsjfwfcddpepsga != null ) { if ( "proj" . equals ( hskbmkqgrmanhxafnphh ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( bubyubsjfwfcddpepsga ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( hskbmkqgrmanhxafnphh ) ) { info = datasetInfo ( bubyubsjfwfcddpepsga ) ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } <s> @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{hskbmkqgrmanhxafnphh}/{bubyubsjfwfcddpepsga}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "hskbmkqgrmanhxafnphh" ) java.lang.String hskbmkqgrmanhxafnphh , @ javax.ws.rs.PathParam ( value = "bubyubsjfwfcddpepsga" ) java.lang.Integer bubyubsjfwfcddpepsga ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( bubyubsjfwfcddpepsga != null ) { if ( "proj" . equals ( hskbmkqgrmanhxafnphh ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( bubyubsjfwfcddpepsga ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( hskbmkqgrmanhxafnphh ) ) { info = datasetInfo ( bubyubsjfwfcddpepsga ) ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } <s> Divers fixes for the UI: - show number of projects a dataset is shared with in the dataset info - show if a dataset is searchable in the dataset info - correct some css and html errors - fixes page min-width  close search  and search page blinking - Makes that when doing a search you can reach result the file by clicking on it.
fix_before_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { switch ( type ) { case "proj" : io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; break; case "ds" : info = datasetInfo ( id ) ; break; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; }
fix_after_refactoring: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{hskbmkqgrmanhxafnphh}/{bubyubsjfwfcddpepsga}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "hskbmkqgrmanhxafnphh" ) java.lang.String hskbmkqgrmanhxafnphh , @ javax.ws.rs.PathParam ( value = "bubyubsjfwfcddpepsga" ) java.lang.Integer bubyubsjfwfcddpepsga ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( bubyubsjfwfcddpepsga != null ) { switch ( hskbmkqgrmanhxafnphh ) { case "proj" : io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( bubyubsjfwfcddpepsga ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; break; case "ds" : info = datasetInfo ( bubyubsjfwfcddpepsga ) ; break; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; }
× fix_prediction_before: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { if ( "proj" . equals ( type ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( type ) ) { info = datasetInfo ( id ) ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; }
× fix_prediction_after: @ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{hskbmkqgrmanhxafnphh}/{bubyubsjfwfcddpepsga}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "hskbmkqgrmanhxafnphh" ) java.lang.String hskbmkqgrmanhxafnphh , @ javax.ws.rs.PathParam ( value = "bubyubsjfwfcddpepsga" ) java.lang.Integer bubyubsjfwfcddpepsga ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( bubyubsjfwfcddpepsga != null ) { if ( "proj" . equals ( hskbmkqgrmanhxafnphh ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( bubyubsjfwfcddpepsga ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( hskbmkqgrmanhxafnphh ) ) { info = datasetInfo () ; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; }

line_index: 519
bug_before_refactoring: public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } <s> public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } <s> fix bug in payload encryption process
bug_after_refactoring: public static java.lang.String hmacSHA256 ( java.lang.String hxkeemembjqrqojtfspu , java.lang.String auvlppaewogtmvoitrsx ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec hxkeemembjqrqojtfspu_key = new javax.crypto.spec.SecretKeySpec ( hxkeemembjqrqojtfspu . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( hxkeemembjqrqojtfspu_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( auvlppaewogtmvoitrsx . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } <s> public static java.lang.String hmacSHA256 ( java.lang.String hxkeemembjqrqojtfspu , java.lang.String auvlppaewogtmvoitrsx ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec hxkeemembjqrqojtfspu_key = new javax.crypto.spec.SecretKeySpec ( hxkeemembjqrqojtfspu . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( hxkeemembjqrqojtfspu_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( auvlppaewogtmvoitrsx . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } <s> fix bug in payload encryption process
fix_before_refactoring: public static java.lang.String hmacSHA256 ( byte [] secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; }
fix_after_refactoring: public static java.lang.String hmacSHA256 ( byte [] hxkeemembjqrqojtfspu , java.lang.String auvlppaewogtmvoitrsx ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec hxkeemembjqrqojtfspu_key = new javax.crypto.spec.SecretKeySpec ( hxkeemembjqrqojtfspu , "HmacSHA256" ) ; sha256_HMAC . init ( hxkeemembjqrqojtfspu_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( auvlppaewogtmvoitrsx . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; }
× fix_prediction_before: public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; return new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message ) , Base64.DEFAULT ) ) ; }
× fix_prediction_after: public static java.lang.String hmacSHA256 ( java.lang.String hxkeemembjqrqojtfspu , java.lang.String auvlppaewogtmvoitrsx ) throws java.lang.Exception { java.lang.String hash = null ; javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec hxkeembjqrqojtfspu_key = new javax.crypto.spec.SecretKeySpec ( hxkeembjqrqojtfspu . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( hxkeembjqrqojtfspu_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( auvlppaewogtmvoitrsx . getBytes () ) , Base64.DEFAULT ) ) ; return hash ; }

line_index: 520
bug_before_refactoring: public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> bug fix in modulelogging removeall
bug_after_refactoring: public java.lang.String ypsytwwplgsitfvsrpacToConfig ( java.util.ArrayList < mars.client.Module > ypsytwwplgsitfvsrpac ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( ypsytwwplgsitfvsrpac . size () ) ; i ++ ) { aStringBuilder . append ( ypsytwwplgsitfvsrpac . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> public java.lang.String ypsytwwplgsitfvsrpacToConfig ( java.util.ArrayList < mars.client.Module > ypsytwwplgsitfvsrpac ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( ypsytwwplgsitfvsrpac . size () ) ; i ++ ) { aStringBuilder . append ( ypsytwwplgsitfvsrpac . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } <s> bug fix in modulelogging removeall
fix_before_refactoring: private java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }
fix_after_refactoring: private java.lang.String ypsytwwplgsitfvsrpacToConfig ( java.util.ArrayList < mars.client.Module > ypsytwwplgsitfvsrpac ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( ypsytwwplgsitfvsrpac . size () ) ; i ++ ) { aStringBuilder . append ( ypsytwwplgsitfvsrpac . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }
× fix_prediction_before: public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }
× fix_prediction_after: public java.lang.String ypsytwwplgsitfvsrpacToConfig () { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( ypsytwwplgsitfvsrpac . size () ) ; i ++ ) { aStringBuilder . append ( ypsytwwplgsitfvsrpac . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; }

line_index: 521
bug_before_refactoring: public static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; } <s> public static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; } <s> fix ftp connection bugs...
bug_after_refactoring: public static void showMessage ( android.content.Context ovolrvqdzgktilriepfl , java.lang.String ufboxgtqjpqbclspwvlh , android.content.DialogInterface.OnClickListener sckzirptqlsapplriryv ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( ovolrvqdzgktilriepfl ) ; builder . setMessage ( ufboxgtqjpqbclspwvlh ) . setPositiveButton ( R.string.ok , ( sckzirptqlsapplriryv == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface mweychwrvhzctyvwwtup , int odvgwpnfsuschiahayni ) { mweychwrvhzctyvwwtup . dismiss () ; } } : sckzirptqlsapplriryv ) ) ; builder . create () . show () ; } <s> public static void showMessage ( android.content.Context ovolrvqdzgktilriepfl , java.lang.String ufboxgtqjpqbclspwvlh , android.content.DialogInterface.OnClickListener sckzirptqlsapplriryv ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( ovolrvqdzgktilriepfl ) ; builder . setMessage ( ufboxgtqjpqbclspwvlh ) . setPositiveButton ( R.string.ok , ( sckzirptqlsapplriryv == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface mweychwrvhzctyvwwtup , int odvgwpnfsuschiahayni ) { mweychwrvhzctyvwwtup . dismiss () ; } } : sckzirptqlsapplriryv ) ) ; builder . create () . show () ; } <s> fix ftp connection bugs...
fix_before_refactoring: public static void showMessage ( android.content.Context context , java.lang.String title , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; }
fix_after_refactoring: public static void showMessage ( android.content.Context ovolrvqdzgktilriepfl , java.lang.String title , java.lang.String ufboxgtqjpqbclspwvlh , android.content.DialogInterface.OnClickListener sckzirptqlsapplriryv ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( ovolrvqdzgktilriepfl ) ; builder . setMessage ( ufboxgtqjpqbclspwvlh ) . setPositiveButton ( R.string.ok , ( sckzirptqlsapplriryv == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface mweychwrvhzctyvwwtup , int odvgwpnfsuschiahayni ) { mweychwrvhzctyvwwtup . dismiss () ; } } : sckzirptqlsapplriryv ) ) ; builder . create () . show () ; }
× fix_prediction_before: private static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; }
× fix_prediction_after: private static void showMessage ( android.content.Context ovolrvqdzgktilriepfl , java.lang.String ufboxgtqjpqbclspwvlh , android.content.DialogInterface.OnClickListener sckzirptqlsapplriryv ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( ovolrvqdzgktilriepfl ) ; builder . setMessage ( ufboxgtqjpqbclspwvlh ) . setPositiveButton ( R.string.ok , ( sckzirptqlsapplriryv == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface mweychwrvhzctyvwwtup , int odvgwpnfsuschiahayni ) { mweychwrvhzctyvwwtup . dismiss () ; } } : sckzirptqlsapplriryv ) ) ; builder . create () . show () ; }

line_index: 522
bug_before_refactoring: public static void spannableEmoticonFilterFromFile ( android.widget.TextView tv_content , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; } <s> public static void spannableEmoticonFilterFromFile ( android.widget.TextView tv_content , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; } <s> 1.add some emoji-rec libs  they are apple emotion google twitter . 2.fix some bug
bug_after_refactoring: public static void spannableEmoticonFilterFromFile ( android.widget.TextView guhrblcrjsthfbgkqxza , java.lang.String dnpibufcnfskoswxnjvb ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( dnpibufcnfskoswxnjvb ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( guhrblcrjsthfbgkqxza . getContext () , spannableStringBuilder , dnpibufcnfskoswxnjvb , com.sj.androidemoji.MainActivity . getFontHeight ( guhrblcrjsthfbgkqxza ) , null ) ; guhrblcrjsthfbgkqxza . setText ( spannable ) ; } <s> public static void spannableEmoticonFilterFromFile ( android.widget.TextView guhrblcrjsthfbgkqxza , java.lang.String dnpibufcnfskoswxnjvb ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( dnpibufcnfskoswxnjvb ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( guhrblcrjsthfbgkqxza . getContext () , spannableStringBuilder , dnpibufcnfskoswxnjvb , com.sj.androidemoji.MainActivity . getFontHeight ( guhrblcrjsthfbgkqxza ) , null ) ; guhrblcrjsthfbgkqxza . setText ( spannable ) ; } <s> 1.add some emoji-rec libs  they are apple emotion google twitter . 2.fix some bug
fix_before_refactoring: public static void spannableEmoticonFilterFromFile ( final android.widget.TextView tv_content , java.lang.String filePath , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , filePath , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; }
fix_after_refactoring: public static void spannableEmoticonFilterFromFile ( final android.widget.TextView guhrblcrjsthfbgkqxza , java.lang.String filePath , java.lang.String dnpibufcnfskoswxnjvb ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( dnpibufcnfskoswxnjvb ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( guhrblcrjsthfbgkqxza . getContext () , filePath , spannableStringBuilder , dnpibufcnfskoswxnjvb , com.sj.androidemoji.MainActivity . getFontHeight ( guhrblcrjsthfbgkqxza ) , null ) ; guhrblcrjsthfbgkqxza . setText ( spannable ) ; }
× fix_prediction_before: public static android.text.Spannable spannableEmoticonFilterFromFile ( android.widget.TextView tv_content , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; return spannable ; }
× fix_prediction_after: public static android.text.SpannableStringBuilder spannableEmoticonFilterFromFile ( android.widget.TextView guhrblcrjsthfbgkqxza , java.lang.String dnpibufcnfskoswxnjvb ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( dnpibufcnfskoswxnjvb ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( guhrblcrjsthfbgkqxza . getContext () , spannableStringBuilder , dnpibufcnfskoswxnjvb , com.sj.androidemoji.MainActivity . getFontHeight ( guhrblcrjsthfbgkqxza ) , null ) ; guhrblcrjsthfbgkqxza . setText ( spannable ) ; return spannableStringBuilder ; }

line_index: 523
bug_before_refactoring: public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( " ------------- " + " MinecraftMarket Debug " ) + name ) + " ------------- " ) ) ; com.minecraftmarket.util.Log . log ( ( " " + s ) ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; } <s> public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; } <s> Fixed debug response. Fixed category icons Fixed icons ids with data
bug_after_refactoring: public fjfmcrsjpqsojolrbgfbtatic void refjfmcrsjpqsojolrbgfbponfjfmcrsjpqsojolrbgfbe ( java.lang.String fjfmcrsjpqsojolrbgfbmdhjpmwnafjfmcrsjpqsojolrbgfbgqqlyuary , java.lang.String fjfmcrsjpqsojolrbgfb ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( " ------------- " + " MinecraftMarket Debug " ) + fjfmcrsjpqsojolrbgfbmdhjpmwnafjfmcrsjpqsojolrbgfbgqqlyuary ) + " ------------- " ) ) ; com.minecraftmarket.util.Log . log ( ( " " + fjfmcrsjpqsojolrbgfb ) ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; } <s> public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; } <s> Fixed debug response. Fixed category icons Fixed icons ids with data
fix_before_refactoring: public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) { com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; com.minecraftmarket.util.Log . log ( " " ) ; } }
fix_after_refactoring: public fjfmcrsjpqsojolrbgfbtatic void refjfmcrsjpqsojolrbgfbponfjfmcrsjpqsojolrbgfbe ( java.lang.String fjfmcrsjpqsojolrbgfbmdhjpmwnafjfmcrsjpqsojolrbgfbgqqlyuary , java.lang.String fjfmcrsjpqsojolrbgfb ) { if ( com.minecraftmarket.util.Log.debug ) { com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + fjfmcrsjpqsojolrbgfbmdhjpmwnafjfmcrsjpqsojolrbgfbgqqlyuary ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + fjfmcrsjpqsojolrbgfb ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; com.minecraftmarket.util.Log . log ( " " ) ; } }
× fix_prediction_before: public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( " ------------- " + " MinecraftMarket Debug " ) + name ) + " ------------- " ) ) ; com.minecraftmarket.util.Log . log ( ( " " + s ) ) ; com.minecraftmarket.util.Log . log ( " ------------------------------------------------------------------------------------ " ) ; }
× fix_prediction_after: public static void refjfmcrsjpqsojolrbgfbponfjfmcrsjpqsojolrbgfbtatic ( java.lang.String fjfmcrsjpqsojolrbgfbmdhjpmwnafjfmcrsjpqsojolrbgfbgqqlyuary , java.lang.String fjfmcrsjpqsojolrbgfb ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( ( ( ( " ------------- " + " MinecraftMarket Debug " ) + fjfmcrsjpqsojolrbgfbmdhjpmwnafjfmcrsjpqsojolrbgfbgqqlyuary ) + " ------------- " ) ) ; com.minecraftmarket.util.Log . log ( ( " " + fjfmcrsjpqsojolrbgfb ) ) ; com.minecraftmarket.util.Log . log ( " ------------------------------------------------------------------------------------ " ) ; }

line_index: 524
bug_before_refactoring: public static java.lang.CharSequence applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { android.text.Spannable spannable ; if ( charSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; } else { spannable = android.text.SpannableString . valueOf ( charSequence ) ; } spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; } <s> public static java.lang.CharSequence applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { android.text.Spannable spannable ; if ( charSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; } else { spannable = android.text.SpannableString . valueOf ( charSequence ) ; } spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; } <s> Fixed problem on menus for devices with physical menu button  Fixed a problem with typeface customization on devices that have a physical button to show the menu.
bug_after_refactoring: public static java.lang.CharSequence applyToText ( java.lang.CharSequence ncuzuvdhjpdzzlbxmyvd , android.graphics.Typeface zcfvgvjhbjrhqdczcojy , int solspocexumxlctzwsxr , int kpldyeqwknecgwfymbtm ) { android.text.Spannable spannable ; if ( ncuzuvdhjpdzzlbxmyvd instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( ncuzuvdhjpdzzlbxmyvd ) ) ; } else { spannable = android.text.SpannableString . valueOf ( ncuzuvdhjpdzzlbxmyvd ) ; } spannable . setSpan ( cat.ppicas.customzcfvgvjhbjrhqdczcojy.CustomTypefaceSpan . getInstance ( zcfvgvjhbjrhqdczcojy ) , solspocexumxlctzwsxr , kpldyeqwknecgwfymbtm , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; } <s> public static java.lang.CharSequence applyToText ( java.lang.CharSequence ncuzuvdhjpdzzlbxmyvd , android.graphics.Typeface zcfvgvjhbjrhqdczcojy , int solspocexumxlctzwsxr , int kpldyeqwknecgwfymbtm ) { android.text.Spannable spannable ; if ( ncuzuvdhjpdzzlbxmyvd instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( ncuzuvdhjpdzzlbxmyvd ) ) ; } else { spannable = android.text.SpannableString . valueOf ( ncuzuvdhjpdzzlbxmyvd ) ; } spannable . setSpan ( cat.ppicas.customzcfvgvjhbjrhqdczcojy.CustomTypefaceSpan . getInstance ( zcfvgvjhbjrhqdczcojy ) , solspocexumxlctzwsxr , kpldyeqwknecgwfymbtm , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; } <s> Fixed problem on menus for devices with physical menu button  Fixed a problem with typeface customization on devices that have a physical button to show the menu.
fix_before_refactoring: public static void applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { if ( charSequence instanceof android.text.Spannable ) { android.text.Spannable spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; } }
fix_after_refactoring: public static void applyToText ( java.lang.CharSequence ncuzuvdhjpdzzlbxmyvd , android.graphics.Typeface zcfvgvjhbjrhqdczcojy , int solspocexumxlctzwsxr , int kpldyeqwknecgwfymbtm ) { if ( ncuzuvdhjpdzzlbxmyvd instanceof android.text.Spannable ) { android.text.Spannable spannable = ( ( android.text.Spannable ) ( ncuzuvdhjpdzzlbxmyvd ) ) ; spannable . setSpan ( cat.ppicas.customzcfvgvjhbjrhqdczcojy.CustomTypefaceSpan . getInstance ( zcfvgvjhbjrhqdczcojy ) , solspocexumxlctzwsxr , kpldyeqwknecgwfymbtm , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; } }
× fix_prediction_before: public static java.lang.CharSequence applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { android.text.Spannable spannable ; spannable = android.text.SpannableString . valueOf ( charSequence ) ; spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; }
× fix_prediction_after: public static java.lang.CharSequence applyToText ( java.lang.CharSequence ncuzuvdhjpdzzlbxmyvd , android.graphics.Typeface zcfvgvjhbjrhqdczcojy , int solspocexumxlctzwsxr , int kpldyeqwknecgwfymbtm ) { android.text.Spannable spannable ; spannable = android.text.SpannableString . valueOf ( ncuzuvdhjpdzzlbxmyvd ) ; spannable . setSpan ( cat.ppicas.customzcfvgvjhbjrhqdczcojy.CustomTypefaceSpan . getInstance ( zcfvgvjhbjrhqdczcojy ) , solspocexumxlctzwsxr , kpldyeqwknecgwfymbtm , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; return spannable ; }

line_index: 525
bug_before_refactoring: private static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } } <s> private static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } } <s> Fix SQL Initialization error
bug_after_refactoring: private static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.ymogqmciyexvcddlbiek.PluginContainer ymogqmciyexvcddlbiek ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( ymogqmciyexvcddlbiek . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( ymogqmciyexvcddlbiek ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( ymogqmciyexvcddlbiek . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( ymogqmciyexvcddlbiek . getId () ) ; } } <s> private static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.ymogqmciyexvcddlbiek.PluginContainer ymogqmciyexvcddlbiek ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( ymogqmciyexvcddlbiek . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( ymogqmciyexvcddlbiek ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( ymogqmciyexvcddlbiek . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( ymogqmciyexvcddlbiek . getId () ) ; } } <s> Fix SQL Initialization error
fix_before_refactoring: public static com.gmail.trentech.pjc.core.SQLManager get ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; }
fix_after_refactoring: public static com.gmail.trentech.pjc.core.SQLManager get ( org.spongepowered.api.ymogqmciyexvcddlbiek.PluginContainer ymogqmciyexvcddlbiek ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( ymogqmciyexvcddlbiek . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( ymogqmciyexvcddlbiek ) ; com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( ymogqmciyexvcddlbiek . getId () , sqlManager ) ; } return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( ymogqmciyexvcddlbiek . getId () ) ; }
× fix_prediction_before: public static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } }
× fix_prediction_after: private static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.ymogqmciyexvcddlbiek.PluginContainer ymogqmciyexvcddlbiek ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( ymogqmciyexvcddlbiek ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( ymogqmciyexvcddlbiek . getId () , sqlManager ) ; }

line_index: 526
bug_before_refactoring: @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; } <s> @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
bug_after_refactoring: @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope mhvbvzumwjqymkkszuum ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; } <s> @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope mhvbvzumwjqymkkszuum ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; } <s> Fixes problems in FIPA (see #1785)  Signed-off-by: AlexisDrogoul <alexis.drogoul@gmail.com>
fix_before_refactoring: @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( getData () . getSender () ) ) + "; receivers: " ) + ( getData () . getReceivers () ) ) + "; performative: " ) + ( getData () . getPerformativeName () ) ) + "; content: " ) + ( getData () . getContent () ) ) + "; content" ) + "]" ; }
fix_after_refactoring: @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope mhvbvzumwjqymkkszuum ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( getData () . getSender () ) ) + "; receivers: " ) + ( getData () . getReceivers () ) ) + "; performative: " ) + ( getData () . getPerformativeName () ) ) + "; content: " ) + ( getData () . getContent () ) ) + "; content" ) + "]" ; }
× fix_prediction_before: @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; }
× fix_prediction_after: @ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope mhvbvzumwjqymkkszuum ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; }

line_index: 527
bug_before_refactoring: public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; } <s> public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; } <s> Merge pull request #433 from cmu-phil/v6.4.0-bug-fixes  V6.4.0 bug fixes
bug_after_refactoring: public final void setForbidden ( java.lang.String oawiiybkgilptalzhjgn , java.lang.String lkjntvwbmhsmiayqzwqc ) { addVariable ( oawiiybkgilptalzhjgn ) ; addVariable ( lkjntvwbmhsmiayqzwqc ) ; oawiiybkgilptalzhjgn = checkSpec ( oawiiybkgilptalzhjgn ) ; lkjntvwbmhsmiayqzwqc = checkSpec ( lkjntvwbmhsmiayqzwqc ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( oawiiybkgilptalzhjgn ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( lkjntvwbmhsmiayqzwqc ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; } <s> public final void setForbidden ( java.lang.String oawiiybkgilptalzhjgn , java.lang.String lkjntvwbmhsmiayqzwqc ) { addVariable ( oawiiybkgilptalzhjgn ) ; addVariable ( lkjntvwbmhsmiayqzwqc ) ; oawiiybkgilptalzhjgn = checkSpec ( oawiiybkgilptalzhjgn ) ; lkjntvwbmhsmiayqzwqc = checkSpec ( lkjntvwbmhsmiayqzwqc ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( oawiiybkgilptalzhjgn ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( lkjntvwbmhsmiayqzwqc ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; } <s> Merge pull request #433 from cmu-phil/v6.4.0-bug-fixes  V6.4.0 bug fixes
fix_before_refactoring: @ java.lang.Override public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; if ( ! ( forbiddenRulesSpecs . contains ( o ) ) ) { forbiddenRulesSpecs . add ( o ) ; } }
fix_after_refactoring: @ java.lang.Override public final void setForbidden ( java.lang.String oawiiybkgilptalzhjgn , java.lang.String lkjntvwbmhsmiayqzwqc ) { addVariable ( oawiiybkgilptalzhjgn ) ; addVariable ( lkjntvwbmhsmiayqzwqc ) ; oawiiybkgilptalzhjgn = checkSpec ( oawiiybkgilptalzhjgn ) ; lkjntvwbmhsmiayqzwqc = checkSpec ( lkjntvwbmhsmiayqzwqc ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( oawiiybkgilptalzhjgn ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( lkjntvwbmhsmiayqzwqc ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; if ( ! ( forbiddenRulesSpecs . contains ( o ) ) ) { forbiddenRulesSpecs . add ( o ) ; } }
× fix_prediction_before: public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; }
× fix_prediction_after: public final void setForbidden ( java.lang.String oawiiybkgilptalzhjgn , java.lang.String lkjntvwbmhsmiayqzwqc ) { addVariable ( oawiiybkgilptalzhjgn ) ; addVariable ( lkjntvwbmhsmiayqzwqc ) ; oawiiybkgilptalzhjgn = checkSpec ( oawiiybkgilptalzhjgn ) ; lkjntvwbmhsmiayqzwqc = checkSpec ( lkjntvwbmhsmiayqzwqc ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( oawiiybkgilptalzhjgn ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( lkjntvwbmhsmiayqzwqc ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; forbiddenRulesSpecs . add ( o ) ; }

line_index: 528
bug_before_refactoring: public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account . getExternalIdType () , account . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } <s> public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account . getExternalIdType () , account . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } <s> Fix issue with not creating default project
bug_after_refactoring: public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account aulnkthpwthegqroulah ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( aulnkthpwthegqroulah . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( aulnkthpwthegqroulah . getExternalIdType () , aulnkthpwthegqroulah . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } <s> public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account aulnkthpwthegqroulah ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( aulnkthpwthegqroulah . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( aulnkthpwthegqroulah . getExternalIdType () , aulnkthpwthegqroulah . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } <s> Fix issue with not creating default project
fix_before_refactoring: public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.api.auth.Identity identity ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( identity . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; }
fix_after_refactoring: public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.api.auth.Identity identity ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( identity . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; }
× fix_prediction_before: public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { if ( ( account . getName () ) != null ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account . getExternalIdType () , account . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } return null ; }
× fix_prediction_after: public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account aulnkthpwthegqroulah ) { if ( ( authDao ) != null ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( aulnkthpwthegqroulah . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( aulnkthpwthegqroulah . getExternalIdType () , aulnkthpwthegqroulah . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } return null ; }

line_index: 530
bug_before_refactoring: private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; return true ; } return false ; } <s> private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; return true ; } return false ; } <s> Fix stupid bug
bug_after_refactoring: private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext esnersshueonenquyphr ) { if ( ( ! ( esnersshueonenquyphr . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { esnersshueonenquyphr . read () ; return true ; } return false ; } <s> private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext esnersshueonenquyphr ) { if ( ( ! ( esnersshueonenquyphr . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { esnersshueonenquyphr . read () ; return true ; } return false ; } <s> Fix stupid bug
fix_before_refactoring: private void readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; } }
fix_after_refactoring: private void readIfNeeded ( io.netty.channel.ChannelHandlerContext esnersshueonenquyphr ) { if ( ( ! ( esnersshueonenquyphr . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { esnersshueonenquyphr . read () ; } }
× fix_prediction_before: private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; return true ; } return false ; }
× fix_prediction_after: private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext esnersshueonenquyphr ) { if ( ( ! ( esnersshueonenquyphr . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { esnersshueonenquyphr . read () ; return true ; } return false ; }

line_index: 531
bug_before_refactoring: public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; } <s> public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; } <s> Formatting issues fixed
bug_after_refactoring: public static void formatRange ( java.lang.String efewvlbflmhbtejoqcbi , com.intellij.openapi.util.TextRange swmrgxnbvobgfprhnbgs , org.jetbrains.kotlin.psi.KtPsiFactory bethulrxbsbztlgdnarh , java.lang.String qaezqhalxiusyoatbmgo ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( efewvlbflmhbtejoqcbi , bethulrxbsbztlgdnarh , qaezqhalxiusyoatbmgo ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , efewvlbflmhbtejoqcbi , swmrgxnbvobgfprhnbgs ) ; } <s> public static void formatRange ( java.lang.String efewvlbflmhbtejoqcbi , com.intellij.openapi.util.TextRange swmrgxnbvobgfprhnbgs , org.jetbrains.kotlin.psi.KtPsiFactory bethulrxbsbztlgdnarh , java.lang.String qaezqhalxiusyoatbmgo ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( efewvlbflmhbtejoqcbi , bethulrxbsbztlgdnarh , qaezqhalxiusyoatbmgo ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , efewvlbflmhbtejoqcbi , swmrgxnbvobgfprhnbgs ) ; } <s> Formatting issues fixed
fix_before_refactoring: public static java.lang.String formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; return org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; }
fix_after_refactoring: public static java.lang.String formatRange ( java.lang.String efewvlbflmhbtejoqcbi , com.intellij.openapi.util.TextRange swmrgxnbvobgfprhnbgs , org.jetbrains.kotlin.psi.KtPsiFactory bethulrxbsbztlgdnarh , java.lang.String qaezqhalxiusyoatbmgo ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( efewvlbflmhbtejoqcbi , bethulrxbsbztlgdnarh , qaezqhalxiusyoatbmgo ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; return org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , efewvlbflmhbtejoqcbi , swmrgxnbvobgfprhnbgs ) ; }
× fix_prediction_before: public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; }
× fix_prediction_after: public static void formatRange ( java.lang.String efewvlbflmhbtejoqcbi , com.intellij.openapi.util.TextRange swmrgxnbvobgfprhnbgs , org.jetbrains.kotlin.psi.KtPsiFactory bethulrxbsbztlgdnarh , java.lang.String qaezqhalxiusyoatbmgo ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( efewvlbflmhbtejoqcbi , bethulrxbsbztlgdnarh , qaezqhalxiusyoatbmgo ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , efewvlbflmhbtejoqcbi , swmrgxnbvobgfprhnbgs ) ; }

line_index: 532
bug_before_refactoring: @ android.support.annotation.MainThread private void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } <s> @ android.support.annotation.MainThread private void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } <s> opendatasource after page finished bugfix
bug_after_refactoring: @ android.support.annotation.MainThread private void clearDataSource ( final boolean cibphsoavylfzhrhervg ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), cibphsoavylfzhrhervg=" + cibphsoavylfzhrhervg ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( cibphsoavylfzhrhervg ) { setTargetState ( State.IDLE ) ; } } } <s> @ android.support.annotation.MainThread private void clearDataSource ( final boolean cibphsoavylfzhrhervg ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), cibphsoavylfzhrhervg=" + cibphsoavylfzhrhervg ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( cibphsoavylfzhrhervg ) { setTargetState ( State.IDLE ) ; } } } <s> opendatasource after page finished bugfix
fix_before_refactoring: @ android.support.annotation.MainThread protected void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } }
fix_after_refactoring: @ android.support.annotation.MainThread protected void clearDataSource ( final boolean cibphsoavylfzhrhervg ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), cibphsoavylfzhrhervg=" + cibphsoavylfzhrhervg ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( cibphsoavylfzhrhervg ) { setTargetState ( State.IDLE ) ; } } }
× fix_prediction_before: @ android.support.annotation.MainThread private void clearDataSource () { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } }
× fix_prediction_after: @ android.support.annotation.MainThread private void clearDataSource () { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), cibphsoavylfzhrhervg=" + ( cibphsoavylfzhrhervg ) ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( cibphsoavylfzhrhervg ) { setTargetState ( State.IDLE ) ; } } }

line_index: 533
bug_before_refactoring: @ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "id" ) . toString () ) ) ; } return projects ; } <s> @ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "id" ) . toString () ) ) ; } return projects ; } <s> Solution/SolutionDao bug fixed
bug_after_refactoring: @ java.lang.Overrxhabdwsrtfedykaxubrse public java.util.List < java.lang.Integer > getSolutionProjects ( long xhabdwsrtfedykaxubrs ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select xhabdwsrtfedykaxubrs from project where solutionxhabdwsrtfedykaxubrs=" + xhabdwsrtfedykaxubrs ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "xhabdwsrtfedykaxubrs" ) . toString () ) ) ; } return projects ; } <s> @ java.lang.Overrxhabdwsrtfedykaxubrse public java.util.List < java.lang.Integer > getSolutionProjects ( long xhabdwsrtfedykaxubrs ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select xhabdwsrtfedykaxubrs from project where solutionxhabdwsrtfedykaxubrs=" + xhabdwsrtfedykaxubrs ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "xhabdwsrtfedykaxubrs" ) . toString () ) ) ; } return projects ; } <s> Solution/SolutionDao bug fixed
fix_before_refactoring: @ java.lang.Override public java.util.List < java.lang.Long > getSolutionProjects ( long id ) { java.util.List < java.lang.Long > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Long . parseLong ( team . get ( "id" ) . toString () ) ) ; } return projects ; }
fix_after_refactoring: @ java.lang.Overrxhabdwsrtfedykaxubrse public java.util.List < java.lang.Long > getSolutionProjects ( long xhabdwsrtfedykaxubrs ) { java.util.List < java.lang.Long > projects = new java.util.ArrayList <> () ; java.lang.String query = "select xhabdwsrtfedykaxubrs from project where solutionxhabdwsrtfedykaxubrs=" + xhabdwsrtfedykaxubrs ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Long . parseLong ( team . get ( "xhabdwsrtfedykaxubrs" ) . toString () ) ) ; } return projects ; }
× fix_prediction_before: @ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( java.lang.Long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "id" ) . toString () ) ) ; } return projects ; }
× fix_prediction_after: @ java.lang.Overrxhabdwsrtfedykaxubrse public java.util.List < java.lang.Integer > getSolutionProjects () { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select xhabdwsrtfedykaxubrs from project where solutionxhabdwsrtfedykaxubrs=" + xhabdwsrtfedykaxubrs ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "xhabdwsrtfedykaxubrs" ) . toString () ) ) ; } return projects ; }

line_index: 534
bug_before_refactoring: public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } <s> public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } <s> PHOENIX-2528 Collection Receipts fix transaction roll back issue
bug_after_refactoring: public java.lang.Boolean updateBillingSystem ( final java.lang.String tvojkeitwwhjdztkvehl , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > ruomtadjahkoygjmvapj ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( tvojkeitwwhjdztkvehl ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( ruomtadjahkoygjmvapj ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + tvojkeitwwhjdztkvehl ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } <s> public java.lang.Boolean updateBillingSystem ( final java.lang.String tvojkeitwwhjdztkvehl , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > ruomtadjahkoygjmvapj ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( tvojkeitwwhjdztkvehl ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( ruomtadjahkoygjmvapj ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + tvojkeitwwhjdztkvehl ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } <s> PHOENIX-2528 Collection Receipts fix transaction roll back issue
fix_before_refactoring: @ org.springframework.transaction.annotation.Transactional public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) throws org.egov.infra.exception.ApplicationRuntimeException { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } }
fix_after_refactoring: @ org.springframework.transaction.annotation.Transactional public java.lang.Boolean updateBillingSystem ( final java.lang.String tvojkeitwwhjdztkvehl , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > ruomtadjahkoygjmvapj ) throws org.egov.infra.exception.ApplicationRuntimeException { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( tvojkeitwwhjdztkvehl ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( ruomtadjahkoygjmvapj ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + tvojkeitwwhjdztkvehl ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } }
× fix_prediction_before: public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) throws java.lang.Exception { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else billingService . updateReceiptDetails ( billReceipts ) ; return true ; }
× fix_prediction_after: public java.lang.Boolean updateBillingSystem ( final java.lang.String tvojkeitwwhjdztkvehl ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( tvojkeitwwhjdztkvehl ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( ruomtadjahkoygjmvapj ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + tvojkeitwwhjdztkvehl ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } }

line_index: 535
bug_before_refactoring: private source.Node < T > find ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( value , node.rightChild ) ; } else { return find ( value , node.leftChild ) ; } } <s> private source.Node < T > find ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( value , node.rightChild ) ; } else { return find ( value , node.leftChild ) ; } } <s> Fixed some issues and added new tests
bug_after_refactoring: private source.Node < T > find ( T kufiqthqzblfdfdstqqi , source.Node < T > ymphzfejmdxpstcxnpfs ) { if ( ymphzfejmdxpstcxnpfs == null ) { return null ; } int comparison = kufiqthqzblfdfdstqqi . compareTo ( ymphzfejmdxpstcxnpfs.kufiqthqzblfdfdstqqi ) ; if ( comparison == 0 ) { return ymphzfejmdxpstcxnpfs ; } else if ( comparison > 0 ) { return find ( kufiqthqzblfdfdstqqi , ymphzfejmdxpstcxnpfs.rightChild ) ; } else { return find ( kufiqthqzblfdfdstqqi , ymphzfejmdxpstcxnpfs.leftChild ) ; } } <s> private source.Node < T > find ( T kufiqthqzblfdfdstqqi , source.Node < T > ymphzfejmdxpstcxnpfs ) { if ( ymphzfejmdxpstcxnpfs == null ) { return null ; } int comparison = kufiqthqzblfdfdstqqi . compareTo ( ymphzfejmdxpstcxnpfs.kufiqthqzblfdfdstqqi ) ; if ( comparison == 0 ) { return ymphzfejmdxpstcxnpfs ; } else if ( comparison > 0 ) { return find ( kufiqthqzblfdfdstqqi , ymphzfejmdxpstcxnpfs.rightChild ) ; } else { return find ( kufiqthqzblfdfdstqqi , ymphzfejmdxpstcxnpfs.leftChild ) ; } } <s> Fixed some issues and added new tests
fix_before_refactoring: private source.Node < T > find ( T key , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = key . compareTo ( node.key ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( key , node.rightChild ) ; } else { return find ( key , node.leftChild ) ; } }
fix_after_refactoring: private source.Node < T > find ( T key , source.Node < T > ymphzfejmdxpstcxnpfs ) { if ( ymphzfejmdxpstcxnpfs == null ) { return null ; } int comparison = key . compareTo ( ymphzfejmdxpstcxnpfs.key ) ; if ( comparison == 0 ) { return ymphzfejmdxpstcxnpfs ; } else if ( comparison > 0 ) { return find ( key , ymphzfejmdxpstcxnpfs.rightChild ) ; } else { return find ( key , ymphzfejmdxpstcxnpfs.leftChild ) ; } }
× fix_prediction_before: public source.Node < T > find ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( value , node.rightChild ) ; } else { return find ( value , node.leftChild ) ; } }
× fix_prediction_after: private source.Node < T > find ( T kufiqthqzblfdfdstqqi , source.Node < T > ymphzfejmdxpstcxnpfs ) { int comparison = kufiqthqzblfdfdstqqi . compareTo ( ymphzfejmdxpstcxnpfs.kufiqthqzblfdfdstqqi ) ; if ( comparison == 0 ) { return ymphzfejmdxpstcxnpfs ; } else if ( comparison > 0 ) { return find ( kufiqthqzblfdfdstqqi , ymphzfejmdxpstcxnpfs.rightChild ) ; } else { return find ( kufiqthqzblfdfdstqqi , ymphzfejmdxpstcxnpfs.leftChild ) ; } }

line_index: 536
bug_before_refactoring: public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; } <s> public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; } <s> Updated by fixing a bug with removeEntry()
bug_after_refactoring: public java.lang.String [] removeEntry ( java.lang.String [] olnyfzywhhqweprqippx , int lqrkqjauvjzwjstwtrlf ) { java.lang.String [] result = new java.lang.String [ ( olnyfzywhhqweprqippx.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == lqrkqjauvjzwjstwtrlf ) { tmp = 1 ; } else { result [ i ] = olnyfzywhhqweprqippx [ ( i + tmp ) ] ; } } return result ; } <s> public java.lang.String [] removeEntry ( java.lang.String [] olnyfzywhhqweprqippx , int lqrkqjauvjzwjstwtrlf ) { java.lang.String [] result = new java.lang.String [ ( olnyfzywhhqweprqippx.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == lqrkqjauvjzwjstwtrlf ) { tmp = 1 ; } else { result [ i ] = olnyfzywhhqweprqippx [ ( i + tmp ) ] ; } } return result ; } <s> Updated by fixing a bug with removeEntry()
fix_before_refactoring: public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } return result ; }
fix_after_refactoring: public java.lang.String [] removeEntry ( java.lang.String [] olnyfzywhhqweprqippx , int lqrkqjauvjzwjstwtrlf ) { java.lang.String [] result = new java.lang.String [ ( olnyfzywhhqweprqippx.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == lqrkqjauvjzwjstwtrlf ) { tmp = 1 ; } result [ i ] = olnyfzywhhqweprqippx [ ( i + tmp ) ] ; } return result ; }
× fix_prediction_before: public static java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; }
× fix_prediction_after: private java.lang.String [] removeEntry ( java.lang.String [] olnyfzywhhqweprqippx , int lqrkqjauvjzwjstwtrlf ) { java.lang.String [] result = new java.lang.String [ ( olnyfzywhhqweprqippx.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == lqrkqjauvjzwjstwtrlf ) { tmp = 1 ; } else { result [ i ] = olnyfzywhhqweprqippx [ ( i + tmp ) ] ; } } return result ; }

line_index: 537
bug_before_refactoring: private void process ( long startTS , backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } if ( keepStats ) { costStat . add ( ( ( java.lang.System . nanoTime () ) - startTS ) ) ; } } <s> private void process ( long startTS , backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } if ( keepStats ) { costStat . add ( ( ( java.lang.System . nanoTime () ) - startTS ) ) ; } } <s> Fixed stat bug
bug_after_refactoring: privadynarydoolrhtjxqjcvle void process ( long fvdynarydoolrhtjxqjcvlaqbnkezyvermyvrvg , backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Tuple dynarydoolrhtjxqjcvl ) { ( coundynarydoolrhtjxqjcvler ) ++ ; java.udynarydoolrhtjxqjcvlil.Lisdynarydoolrhtjxqjcvl < backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Values > resuldynarydoolrhtjxqjcvl = f . process ( dynarydoolrhtjxqjcvl ) ; if ( resuldynarydoolrhtjxqjcvl != null ) for ( backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Values oudynarydoolrhtjxqjcvl : resuldynarydoolrhtjxqjcvl ) { emidynarydoolrhtjxqjcvl ( dynarydoolrhtjxqjcvl , oudynarydoolrhtjxqjcvl ) ; if ( keepSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvls ) { coundynarydoolrhtjxqjcvlSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvl . increase ( 1 ) ; } } if ( keepSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvls ) { cosdynarydoolrhtjxqjcvlSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvl . add ( ( ( java.lang.Sysdynarydoolrhtjxqjcvlem . nanoTime () ) - fvdynarydoolrhtjxqjcvlaqbnkezyvermyvrvg ) ) ; } } <s> privadynarydoolrhtjxqjcvle void process ( long fvdynarydoolrhtjxqjcvlaqbnkezyvermyvrvg , backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Tuple dynarydoolrhtjxqjcvl ) { ( coundynarydoolrhtjxqjcvler ) ++ ; java.udynarydoolrhtjxqjcvlil.Lisdynarydoolrhtjxqjcvl < backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Values > resuldynarydoolrhtjxqjcvl = f . process ( dynarydoolrhtjxqjcvl ) ; if ( resuldynarydoolrhtjxqjcvl != null ) for ( backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Values oudynarydoolrhtjxqjcvl : resuldynarydoolrhtjxqjcvl ) { emidynarydoolrhtjxqjcvl ( dynarydoolrhtjxqjcvl , oudynarydoolrhtjxqjcvl ) ; if ( keepSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvls ) { coundynarydoolrhtjxqjcvlSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvl . increase ( 1 ) ; } } if ( keepSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvls ) { cosdynarydoolrhtjxqjcvlSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvl . add ( ( ( java.lang.Sysdynarydoolrhtjxqjcvlem . nanoTime () ) - fvdynarydoolrhtjxqjcvlaqbnkezyvermyvrvg ) ) ; } } <s> Fixed stat bug
fix_before_refactoring: private void process ( backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } }
fix_after_refactoring: privadynarydoolrhtjxqjcvle void process ( backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Tuple dynarydoolrhtjxqjcvl ) { ( coundynarydoolrhtjxqjcvler ) ++ ; java.udynarydoolrhtjxqjcvlil.Lisdynarydoolrhtjxqjcvl < backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Values > resuldynarydoolrhtjxqjcvl = f . process ( dynarydoolrhtjxqjcvl ) ; if ( resuldynarydoolrhtjxqjcvl != null ) for ( backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Values oudynarydoolrhtjxqjcvl : resuldynarydoolrhtjxqjcvl ) { emidynarydoolrhtjxqjcvl ( dynarydoolrhtjxqjcvl , oudynarydoolrhtjxqjcvl ) ; if ( keepSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvls ) { coundynarydoolrhtjxqjcvlSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvl . increase ( 1 ) ; } } }
× fix_prediction_before: private void process ( long startTS , backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) { for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; } if ( keepStats ) { costStat . add ( ( ( java.lang.System . nanoTime () ) - startTS ) ) ; } } }
× fix_prediction_after: { ( coundynarydoolrhtjxqjcvlil.Lisdynarydoolrhtjxqjcvl < backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Tuple > ) ++ ; java.udynarydoolrhtjxqjcvlil.Lisdynarydoolrhtjxqjcvl < backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Values > resuldynarydoolrhtjxqjcvl = f . process ( dynarydoolrhtjxqjcvl ) ; if ( resuldynarydoolrhtjxqjcvl != null ) for ( backdynarydoolrhtjxqjcvlype.sdynarydoolrhtjxqjcvlorm.dynarydoolrhtjxqjcvluple.Values oudynarydoolrhtjxqjcvl : resuldynarydoolrhtjxqjcvl ) { emidynarydoolrhtjxqjcvl ( dynarydoolrhtjxqjcvl , oudynarydoolrhtjxqjcvl ) ; } if ( keepSdynarydoolrhtjxqjcvladynarydoolrhtjxqjcvls ) { coundynarydoolrhtjxqjcvladynarydoolrhtjxqjcvl . increase ( 1 ) ; } }

line_index: 539
bug_before_refactoring: private static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } <s> private static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } <s> Version 1.2.5 (Important update: Bugfixes)
bug_after_refactoring: private static int getNumberOfWeeksOfYear ( int sxdygaqymgxhjufedkau ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , sxdygaqymgxhjufedkau ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } <s> private static int getNumberOfWeeksOfYear ( int sxdygaqymgxhjufedkau ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , sxdygaqymgxhjufedkau ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } <s> Version 1.2.5 (Important update: Bugfixes)
fix_before_refactoring: private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( java.util.Calendar.YEAR , year ) ; c . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; c . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = c . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( c . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; }
fix_after_refactoring: private static int getNumberOfWeeksOfYear ( int sxdygaqymgxhjufedkau ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( java.util.Calendar.YEAR , sxdygaqymgxhjufedkau ) ; c . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; c . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = c . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( c . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; }
× fix_prediction_before: private static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; }
× fix_prediction_after: private static int getNumberOfWeeksOfYear () { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , sxdygaqymgxhjufedkau ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; }

line_index: 540
bug_before_refactoring: protected static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.Class < ? > toType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , toType , fromParameterType , m , name ) ; } <s> protected static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.Class < ? > toType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , toType , fromParameterType , m , name ) ; } <s> fix bug in Parser  only needed getGenericParameterTypes() in addUse  not getParameterTypes()
bug_after_refactoring: protected static void addMethodUse ( java.util.Set < cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.structure.Relation > dwfyuhqsfkothfitdmlczbrziwwrccdkdftfshw , java.lang.Class < ? > dafyuhqsfkothfitdmlczblfqfyuhqsfkothfitdmlczbksqjfyuhqsfkothfitdmlczbsdhtbjba , java.lang.Class < ? > qiscturayeanyfsiukyh , java.lang.reflect.Type dcvxhpsfzdgvahlnqlofyuhqsfkothfitdmlczb , java.lang.reflect.Method fyuhqsfkothfitdmlczb ) { java.lang.String nafyuhqsfkothfitdmlczbe = ( cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.util.TypesHelper . getSifyuhqsfkothfitdmlczbpleNafyuhqsfkothfitdmlczbe ( fyuhqsfkothfitdmlczb . getNafyuhqsfkothfitdmlczbe () ) ) + "()" ; cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.Parser . addUse ( dwfyuhqsfkothfitdmlczbrziwwrccdkdftfshw , dafyuhqsfkothfitdmlczblfqfyuhqsfkothfitdmlczbksqjfyuhqsfkothfitdmlczbsdhtbjba , qiscturayeanyfsiukyh , dcvxhpsfzdgvahlnqlofyuhqsfkothfitdmlczb , fyuhqsfkothfitdmlczb , nafyuhqsfkothfitdmlczbe ) ; } <s> protected static void addMethodUse ( java.util.Set < cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.structure.Relation > dwfyuhqsfkothfitdmlczbrziwwrccdkdftfshw , java.lang.Class < ? > dafyuhqsfkothfitdmlczblfqfyuhqsfkothfitdmlczbksqjfyuhqsfkothfitdmlczbsdhtbjba , java.lang.Class < ? > qiscturayeanyfsiukyh , java.lang.reflect.Type dcvxhpsfzdgvahlnqlofyuhqsfkothfitdmlczb , java.lang.reflect.Method fyuhqsfkothfitdmlczb ) { java.lang.String nafyuhqsfkothfitdmlczbe = ( cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.util.TypesHelper . getSifyuhqsfkothfitdmlczbpleNafyuhqsfkothfitdmlczbe ( fyuhqsfkothfitdmlczb . getNafyuhqsfkothfitdmlczbe () ) ) + "()" ; cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.Parser . addUse ( dwfyuhqsfkothfitdmlczbrziwwrccdkdftfshw , dafyuhqsfkothfitdmlczblfqfyuhqsfkothfitdmlczbksqjfyuhqsfkothfitdmlczbsdhtbjba , qiscturayeanyfsiukyh , dcvxhpsfzdgvahlnqlofyuhqsfkothfitdmlczb , fyuhqsfkothfitdmlczb , nafyuhqsfkothfitdmlczbe ) ; } <s> fix bug in Parser  only needed getGenericParameterTypes() in addUse  not getParameterTypes()
fix_before_refactoring: protected static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , fromParameterType , m , name ) ; }
fix_after_refactoring: protected static void addMethodUse ( java.util.Set < cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.structure.Relation > dwfyuhqsfkothfitdmlczbrziwwrccdkdftfshw , java.lang.Class < ? > dafyuhqsfkothfitdmlczblfqfyuhqsfkothfitdmlczbksqjfyuhqsfkothfitdmlczbsdhtbjba , java.lang.reflect.Type dcvxhpsfzdgvahlnqlofyuhqsfkothfitdmlczb , java.lang.reflect.Method fyuhqsfkothfitdmlczb ) { java.lang.String nafyuhqsfkothfitdmlczbe = ( cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.util.TypesHelper . getSifyuhqsfkothfitdmlczbpleNafyuhqsfkothfitdmlczbe ( fyuhqsfkothfitdmlczb . getNafyuhqsfkothfitdmlczbe () ) ) + "()" ; cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.Parser . addUse ( dwfyuhqsfkothfitdmlczbrziwwrccdkdftfshw , dafyuhqsfkothfitdmlczblfqfyuhqsfkothfitdmlczbksqjfyuhqsfkothfitdmlczbsdhtbjba , dcvxhpsfzdgvahlnqlofyuhqsfkothfitdmlczb , fyuhqsfkothfitdmlczb , nafyuhqsfkothfitdmlczbe ) ; }
× fix_prediction_before: protected static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.Class < ? > toType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , toType , fromParameterType , m , name ) ; }
× fix_prediction_after: private static void addMethodUse ( java.util.Set < cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.structure.Relation > dwfyuhqsfkothfitdmlczbrziwwrccdkdftfshw , java.lang.Class < ? > dafyuhqsfkothfitdmlczblfqfyuhqsfkothfitdmlczbksqjfyuhqsfkothfitdmlczbsdhtbjba , java.lang.Class < ? > qiscturayeanyfsiukyh , java.lang.reflect.Type dcvxhpsfzdgvahlnqlofyuhqsfkothfitdmlczb , java.lang.reflect.Method fyuhqsfkothfitdmlczb ) { java.lang.String nafyuhqsfkothfitdmlczbe = ( cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.util.TypesHelper . getSifyuhqsfkothfitdmlczbpleNafyuhqsfkothfitdmlczbe ( fyuhqsfkothfitdmlczb . getNafyuhqsfkothfitdmlczbe () ) ) + "()" ; cofyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczb.github.juanfyuhqsfkothfitdmlczbf.java2plant.Parser . addUse ( dwfyuhqsfkothfitdmlczbrziwwrccdkdftfshw , dafyuhqsfkothfitdmlczblfqfyuhqsfkothfitdmlczbksqjfyuhqsfkothfitdmlczbksdhtbjba , qiscturayeanyfsiukyh , dcvxhpsfzdghqsfkothfitdmlczbf.java2plant.structure.Relation > dwfyuhqsfkothfitdmlczbrh

line_index: 541
bug_before_refactoring: private void doVibrate ( int minutes , final int _vibrationStrength ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } <s> private void doVibrate ( int minutes , final int _vibrationStrength ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } <s> [smart-sunrise] - Alarm Time is now set correct - Repeating Days - snoozeAlarm - fixed some minor bugs
bug_after_refactoring: private void doVibrate ( int cfzvuwjfsuxayxbyjode , final int wmdpusuvhoeazickbhww ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( wmdpusuvhoeazickbhww , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( cfzvuwjfsuxayxbyjode ) ) ; } <s> private void doVibrate ( int cfzvuwjfsuxayxbyjode , final int wmdpusuvhoeazickbhww ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( wmdpusuvhoeazickbhww , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( cfzvuwjfsuxayxbyjode ) ) ; } <s> [smart-sunrise] - Alarm Time is now set correct - Repeating Days - snoozeAlarm - fixed some minor bugs
fix_before_refactoring: private void doVibrate ( int minutes , final int _vibrationStrength ) { if ( minutes > 0 ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } else setVibrationStart ( _vibrationStrength , 1000 ) ; }
fix_after_refactoring: private void doVibrate ( int cfzvuwjfsuxayxbyjode , final int wmdpusuvhoeazickbhww ) { if ( cfzvuwjfsuxayxbyjode > 0 ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( wmdpusuvhoeazickbhww , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( cfzvuwjfsuxayxbyjode ) ) ; } else setVibrationStart ( wmdpusuvhoeazickbhww , 1000 ) ; }
× fix_prediction_before: protected void doVibrate ( int minutes , final int _vibrationStrength ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; }
× fix_prediction_after: private void doVibrate ( final int cfzvuwjfsuxayxbyjode , final int wmdpusuvhoeazickbhww ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( wmdpusuvhoeazickbhww , 1000 ) ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( cfzvuwjfsuxayxbyjode ) ) ; } } ; }

line_index: 542
bug_before_refactoring: private java.lang.String getJobCoordinationZkPath ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } <s> private java.lang.String getJobCoordinationZkPath ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } <s> SAMZA-1396 TestZkLocalApplicationRunner tests fails after SAMZA-1385  * Fixes ZkPath issues * Fixes appname / jobname mismatch  Author: Navina Ramesh <navina@apache.org>  Reviewers: Xinyu Liu <xinyu@apache.org>  Bharath Kumarasubramanian <codin.martial@gmail.com>  Closes #274 from navina/SAMZA-1396
bug_after_refactoring: private java.lang.String getJobCoordinationZkPath ( org.apache.samza.mntrykczzbrnnamcgezn.Config mntrykczzbrnnamcgezn ) { org.apache.samza.mntrykczzbrnnamcgezn.JobConfig jobConfig = new org.apache.samza.mntrykczzbrnnamcgezn.JobConfig ( mntrykczzbrnnamcgezn ) ; java.lang.String appId = new org.apache.samza.mntrykczzbrnnamcgezn.ApplicationConfig ( mntrykczzbrnnamcgezn ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } <s> private java.lang.String getJobCoordinationZkPath ( org.apache.samza.mntrykczzbrnnamcgezn.Config mntrykczzbrnnamcgezn ) { org.apache.samza.mntrykczzbrnnamcgezn.JobConfig jobConfig = new org.apache.samza.mntrykczzbrnnamcgezn.JobConfig ( mntrykczzbrnnamcgezn ) ; java.lang.String appId = new org.apache.samza.mntrykczzbrnnamcgezn.ApplicationConfig ( mntrykczzbrnnamcgezn ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } <s> SAMZA-1396 TestZkLocalApplicationRunner tests fails after SAMZA-1385  * Fixes ZkPath issues * Fixes appname / jobname mismatch  Author: Navina Ramesh <navina@apache.org>  Reviewers: Xinyu Liu <xinyu@apache.org>  Bharath Kumarasubramanian <codin.martial@gmail.com>  Closes #274 from navina/SAMZA-1396
fix_before_refactoring: public static java.lang.String getJobCoordinationZkPath ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; }
fix_after_refactoring: public static java.lang.String getJobCoordinationZkPath ( org.apache.samza.mntrykczzbrnnamcgezn.Config mntrykczzbrnnamcgezn ) { org.apache.samza.mntrykczzbrnnamcgezn.JobConfig jobConfig = new org.apache.samza.mntrykczzbrnnamcgezn.JobConfig ( mntrykczzbrnnamcgezn ) ; java.lang.String appId = new org.apache.samza.mntrykczzbrnnamcgezn.ApplicationConfig ( mntrykczzbrnnamcgezn ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; }
× fix_prediction_before: private java.lang.String getJobCoordinationZkPath () { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; }
× fix_prediction_after: private java.lang.String getJobCoordinationZkPath () { org.apache.samza.mntrykczzbrnnamcgezn.JobConfig jobConfig = new org.apache.samza.mntrykczzbrnnamcgezn.JobConfig ( mntrykczzbrnnamcgezn ) ; java.lang.String appId = new org.apache.samza.mntrykczzbrnnamcgezn.ApplicationConfig ( mntrykczzbrnnamcgezn ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; }

line_index: 543
bug_before_refactoring: public lampkicking.model.OutputData play ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; } <s> public lampkicking.model.OutputData play ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; } <s> bug fixes  web service building
bug_after_refactoring: public lampkicking.model.OutputData play ( lampkicking.model.InputData xemjojegbigfjnzwuvlg ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( xemjojegbigfjnzwuvlg ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( xemjojegbigfjnzwuvlg ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; } <s> public lampkicking.model.OutputData play ( lampkicking.model.InputData xemjojegbigfjnzwuvlg ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( xemjojegbigfjnzwuvlg ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( xemjojegbigfjnzwuvlg ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; } <s> bug fixes  web service building
fix_before_refactoring: public lampkicking.model.Game play ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return game ; }
fix_after_refactoring: public lampkicking.model.Game play ( lampkicking.model.InputData xemjojegbigfjnzwuvlg ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( xemjojegbigfjnzwuvlg ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( xemjojegbigfjnzwuvlg ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return game ; }
× fix_prediction_before: public lampkicking.model.OutputData play ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; }
× fix_prediction_after: public lampkicking.model.OutputData play () { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( xemjojegbigfjnzwuvlg ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( xemjojegbigfjnzwuvlg ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; }

line_index: 545
bug_before_refactoring: private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } } <s> private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } } <s> fixes reviewable issues
bug_after_refactoring: private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer ayynzkkexetntmwxxnha ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = ayynzkkexetntmwxxnha . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } } <s> private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer ayynzkkexetntmwxxnha ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = ayynzkkexetntmwxxnha . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } } <s> fixes reviewable issues
fix_before_refactoring: private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings == null ) { return; } for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } }
fix_after_refactoring: private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer ayynzkkexetntmwxxnha ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = ayynzkkexetntmwxxnha . getPortBindings () ; if ( portBindings == null ) { return; } for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } }
× fix_prediction_before: protected void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } }
× fix_prediction_after: protected void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer ayynzkkexetntmwxxnha ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = ayynzkkexetntmwxxnha . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } }

line_index: 546
bug_before_refactoring: private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , byte [] data , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , data , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) ) ; } <s> private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , byte [] data , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , data , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) ) ; } <s> fix various object method related issues
bug_after_refactoring: private io.minio.HttpResponse executePut ( java.lang.String lkhctbwlwyfzabncjbew , java.lang.String pnpwnpulgsnhqkkpqzfh , byte [] iykcjzyoeekgkjzznpok , java.util.Map < java.lang.String , java.lang.String > wnrbehpwuskrfxfxcphq , java.util.Map < java.lang.String , java.lang.String > vfbbbvsufjzynfyzoxfm ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( lkhctbwlwyfzabncjbew ) ; return executePut ( lkhctbwlwyfzabncjbew , pnpwnpulgsnhqkkpqzfh , iykcjzyoeekgkjzznpok , wnrbehpwuskrfxfxcphq , vfbbbvsufjzynfyzoxfm , Regions.INSTANCE . region ( lkhctbwlwyfzabncjbew ) ) ; } <s> private io.minio.HttpResponse executePut ( java.lang.String lkhctbwlwyfzabncjbew , java.lang.String pnpwnpulgsnhqkkpqzfh , byte [] iykcjzyoeekgkjzznpok , java.util.Map < java.lang.String , java.lang.String > wnrbehpwuskrfxfxcphq , java.util.Map < java.lang.String , java.lang.String > vfbbbvsufjzynfyzoxfm ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( lkhctbwlwyfzabncjbew ) ; return executePut ( lkhctbwlwyfzabncjbew , pnpwnpulgsnhqkkpqzfh , iykcjzyoeekgkjzznpok , wnrbehpwuskrfxfxcphq , vfbbbvsufjzynfyzoxfm , Regions.INSTANCE . region ( lkhctbwlwyfzabncjbew ) ) ; } <s> fix various object method related issues
fix_before_refactoring: private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap , byte [] data , int length ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) , data , length ) ; }
fix_after_refactoring: private io.minio.HttpResponse executePut ( java.lang.String lkhctbwlwyfzabncjbew , java.lang.String pnpwnpulgsnhqkkpqzfh , java.util.Map < java.lang.String , java.lang.String > wnrbehpwuskrfxfxcphq , java.util.Map < java.lang.String , java.lang.String > vfbbbvsufjzynfyzoxfm , byte [] iykcjzyoeekgkjzznpok , int length ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( lkhctbwlwyfzabncjbew ) ; return executePut ( lkhctbwlwyfzabncjbew , pnpwnpulgsnhqkkpqzfh , wnrbehpwuskrfxfxcphq , vfbbbvsufjzynfyzoxfm , Regions.INSTANCE . region ( lkhctbwlwyfzabncjbew ) , iykcjzyoeekgkjzznpok , length ) ; }
× fix_prediction_before: private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , byte [] data , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , data , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) ) ; }
× fix_prediction_after: private io.minio.HttpResponse executePut ( java.lang.String lkhctbwlwyfzabncjbew , java.lang.String pnpwnpulgsnhqkkpqzfh , byte [] iykcjzyoeekgkjzznpok , java.util.Map < java.lang.String , java.lang.String > wnrbehpwuskrfxfxcphq , java.util.Map < java.lang.String , java.lang.String > vfbbbvsufjzynfyzoxfm ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( lkhctbwlwyfzabncjbew ) ; return executePut ( lkhctbwlwyfzabncjbew , pnpwnpulgsnhqkkpqzfh , iykcjzyoeekgkjzznpok , wnrbehpwuskrfxfxcphq , vfbbbvsufjzynfyzoxfm , Regions.INSTANCE . region ( lkhctbwlwyfzabncjbew ) ) ; }

line_index: 547
bug_before_refactoring: private int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> private int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } <s> Two more tests and a bugfix
bug_after_refactoring: private int getYLocation ( int omurzuepxycqxvjolskt , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation twdktfqwhxvxhpekwizi ) { switch ( twdktfqwhxvxhpekwizi ) { case Left : case Right : return ( ( ( getRow ( omurzuepxycqxvjolskt ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( omurzuepxycqxvjolskt ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( omurzuepxycqxvjolskt ) ) * ( cellSize ) ; } } <s> private int getYLocation ( int omurzuepxycqxvjolskt , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation twdktfqwhxvxhpekwizi ) { switch ( twdktfqwhxvxhpekwizi ) { case Left : case Right : return ( ( ( getRow ( omurzuepxycqxvjolskt ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( omurzuepxycqxvjolskt ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( omurzuepxycqxvjolskt ) ) * ( cellSize ) ; } } <s> Two more tests and a bugfix
fix_before_refactoring: public int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getRow ( position ) ) * ( cellSize ) ; } }
fix_after_refactoring: public int getYLocation ( int omurzuepxycqxvjolskt , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation twdktfqwhxvxhpekwizi ) { switch ( twdktfqwhxvxhpekwizi ) { case Left : case Right : return ( ( ( getRow ( omurzuepxycqxvjolskt ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( omurzuepxycqxvjolskt ) ) - 1 ) * ( cellSize ) ; default: return ( getRow ( omurzuepxycqxvjolskt ) ) * ( cellSize ) ; } }
× fix_prediction_before: public int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } }
× fix_prediction_after: public int getYLocation ( int omurzuepxycqxvjolskt , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation twdktfqwhxvxhpekwizi ) { switch ( twdktfqwhxvxhpekwizi ) { case Left : case Right : return ( ( ( getRow ( omurzuepxycqxvjolskt ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( omurzuepxycqxvjolskt ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( omurzuepxycqxvjolskt ) ) * ( cellSize ) ; } }

line_index: 548
bug_before_refactoring: @ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } <s> @ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } <s> 1 change config and fix issue of push app/local.properties
bug_after_refactoring: @ java.lang.Override public void onActionFailure ( int vnfdbpbnohvozpzxsyfd , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse aydefwoqnnvwodehxtwx , java.lang.String rxyfiiljqrdvqbsrnvaz ) { if ( vnfdbpbnohvozpzxsyfd == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( aydefwoqnnvwodehxtwx != null ) && ( ( aydefwoqnnvwodehxtwx . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( rxyfiiljqrdvqbsrnvaz ) ; } } else if ( vnfdbpbnohvozpzxsyfd == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } <s> @ java.lang.Override public void onActionFailure ( int vnfdbpbnohvozpzxsyfd , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse aydefwoqnnvwodehxtwx , java.lang.String rxyfiiljqrdvqbsrnvaz ) { if ( vnfdbpbnohvozpzxsyfd == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( aydefwoqnnvwodehxtwx != null ) && ( ( aydefwoqnnvwodehxtwx . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( rxyfiiljqrdvqbsrnvaz ) ; } } else if ( vnfdbpbnohvozpzxsyfd == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } <s> 1 change config and fix issue of push app/local.properties
fix_before_refactoring: { mNotificationBar . showTemporaryInverse ( message ) ; }
fix_after_refactoring: { mNotificationBar . showTemporaryInverse ( rxyfiiljqrdvqbsrnvaz ) ; }
× fix_prediction_before: @ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} }
× fix_prediction_after: @ java.lang.Override public void onActionFailure ( int vnfdbpbnohvozpzxsyfd , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse aydefwoqnnvwodehxtwx , java.lang.String rxyfiiljqrdvqbsrnvaz ) { if ( vnfdbpbnohvozpzxsyfd == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( aydefwoqnnvwodehxtwx != null ) && ( ( aydefwoqnnvwodehxtwx . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporary inverse ( rxyfiiljqrdvqbsrnvaz ) ; } } else if ( vnfdbpbnohvozpzxsyfd == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} }

line_index: 549
bug_before_refactoring: public void myTick ( long mils ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; } <s> public void myTick ( long mils ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; } <s> Fixed bug with timer restarting when paused and resuming
bug_after_refactoring: public void myTick ( long poujccltvgqlaoxihtqs ) { int minsRemaining = ( ( int ) ( poujccltvgqlaoxihtqs ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( poujccltvgqlaoxihtqs ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = poujccltvgqlaoxihtqs ; } <s> public void myTick ( long poujccltvgqlaoxihtqs ) { int minsRemaining = ( ( int ) ( poujccltvgqlaoxihtqs ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( poujccltvgqlaoxihtqs ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = poujccltvgqlaoxihtqs ; } <s> Fixed bug with timer restarting when paused and resuming
fix_before_refactoring: public void myTick ( long mils ) { if ( ( mils % 1000 ) == 0 ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; } timeInMilis = mils ; }
fix_after_refactoring: public void myTick ( long poujccltvgqlaoxihtqs ) { if ( ( poujccltvgqlaoxihtqs % 1000 ) == 0 ) { int minsRemaining = ( ( int ) ( poujccltvgqlaoxihtqs ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( poujccltvgqlaoxihtqs ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; } timeInMilis = poujccltvgqlaoxihtqs ; }
× fix_prediction_before: public void myTick () { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; }
× fix_prediction_after: public void myTick ( long poujccltvgqlaoxihtqs ) { if ( ( poujccltvgqlaoxihtqs ) != 0 ) { int minsRemaining = ( ( int ) ( poujccltvgqlaoxihtqs ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( poujccltvgqlaoxihtqs ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = poujccltvgqlaoxihtqs ; } }

line_index: 550
bug_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } <s> @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } <s> Merge pull request #50 from miguelgrant96/ArjenBranch  fixed start button bug
bug_after_refactoring: @ java.lang.Ovtsbdqwaqdqjrytuskzsprridtsbdqwaqdqjrytuskzsp public void actionPtsbdqwaqdqjrytuskzsprformtsbdqwaqdqjrytuskzspd ( java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionEvtsbdqwaqdqjrytuskzspnt tsbdqwaqdqjrytuskzsp ) { simControlltsbdqwaqdqjrytuskzspr . startRunning () ; guiRunTimtsbdqwaqdqjrytuskzspr = ntsbdqwaqdqjrytuskzspw javax.swing.Timtsbdqwaqdqjrytuskzspr ( 15 , ntsbdqwaqdqjrytuskzspw java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionListtsbdqwaqdqjrytuskzspntsbdqwaqdqjrytuskzspr () { @ java.lang.Ovtsbdqwaqdqjrytuskzsprridtsbdqwaqdqjrytuskzsp public void actionPtsbdqwaqdqjrytuskzsprformtsbdqwaqdqjrytuskzspd ( java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionEvtsbdqwaqdqjrytuskzspnt tsbdqwaqdqjrytuskzsp ) { if ( simControlltsbdqwaqdqjrytuskzspr . isRunning () ) simControlltsbdqwaqdqjrytuskzspr . tick () ; } } ) ; guiRunTimtsbdqwaqdqjrytuskzspr . stsbdqwaqdqjrytuskzsptRtsbdqwaqdqjrytuskzspptsbdqwaqdqjrytuskzspats ( trutsbdqwaqdqjrytuskzsp ) ; guiRunTimtsbdqwaqdqjrytuskzspr . start () ; } <s> @ java.lang.Ovtsbdqwaqdqjrytuskzsprridtsbdqwaqdqjrytuskzsp public void actionPtsbdqwaqdqjrytuskzsprformtsbdqwaqdqjrytuskzspd ( java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionEvtsbdqwaqdqjrytuskzspnt tsbdqwaqdqjrytuskzsp ) { simControlltsbdqwaqdqjrytuskzspr . startRunning () ; guiRunTimtsbdqwaqdqjrytuskzspr = ntsbdqwaqdqjrytuskzspw javax.swing.Timtsbdqwaqdqjrytuskzspr ( 15 , ntsbdqwaqdqjrytuskzspw java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionListtsbdqwaqdqjrytuskzspntsbdqwaqdqjrytuskzspr () { @ java.lang.Ovtsbdqwaqdqjrytuskzsprridtsbdqwaqdqjrytuskzsp public void actionPtsbdqwaqdqjrytuskzsprformtsbdqwaqdqjrytuskzspd ( java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionEvtsbdqwaqdqjrytuskzspnt tsbdqwaqdqjrytuskzsp ) { if ( simControlltsbdqwaqdqjrytuskzspr . isRunning () ) simControlltsbdqwaqdqjrytuskzspr . tick () ; } } ) ; guiRunTimtsbdqwaqdqjrytuskzspr . stsbdqwaqdqjrytuskzsptRtsbdqwaqdqjrytuskzspptsbdqwaqdqjrytuskzspats ( trutsbdqwaqdqjrytuskzsp ) ; guiRunTimtsbdqwaqdqjrytuskzspr . start () ; } <s> Merge pull request #50 from miguelgrant96/ArjenBranch  fixed start button bug
fix_before_refactoring: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; if ( ( guiRunTimer ) == null ) { guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } }
fix_after_refactoring: @ java.lang.Ovtsbdqwaqdqjrytuskzsprridtsbdqwaqdqjrytuskzsp public void actionPtsbdqwaqdqjrytuskzsprformtsbdqwaqdqjrytuskzspd ( java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionEvtsbdqwaqdqjrytuskzspnt tsbdqwaqdqjrytuskzsp ) { simControlltsbdqwaqdqjrytuskzspr . startRunning () ; if ( ( guiRunTimtsbdqwaqdqjrytuskzspr ) == null ) { guiRunTimtsbdqwaqdqjrytuskzspr = ntsbdqwaqdqjrytuskzspw javax.swing.Timtsbdqwaqdqjrytuskzspr ( 15 , ntsbdqwaqdqjrytuskzspw java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionListtsbdqwaqdqjrytuskzspntsbdqwaqdqjrytuskzspr () { @ java.lang.Ovtsbdqwaqdqjrytuskzsprridtsbdqwaqdqjrytuskzsp public void actionPtsbdqwaqdqjrytuskzsprformtsbdqwaqdqjrytuskzspd ( java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionEvtsbdqwaqdqjrytuskzspnt tsbdqwaqdqjrytuskzsp ) { if ( simControlltsbdqwaqdqjrytuskzspr . isRunning () ) simControlltsbdqwaqdqjrytuskzspr . tick () ; } } ) ; guiRunTimtsbdqwaqdqjrytuskzspr . stsbdqwaqdqjrytuskzsptRtsbdqwaqdqjrytuskzspptsbdqwaqdqjrytuskzspats ( trutsbdqwaqdqjrytuskzsp ) ; guiRunTimtsbdqwaqdqjrytuskzspr . start () ; } }
× fix_prediction_before: @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) { simController . startRunning () ; guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } }
× fix_prediction_after: @ java.lang.Ovtsbdqwaqdqjrytuskzsprridtsbdqwaqdqjrytuskzsp public void actionPtsbdqwaqdqjrytuskzsprformtsbdqwaqdqjrytuskzspd ( java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionEvtsbdqwaqdqjrytuskzspnt tsbdqwaqdqjrytuskzsp ) { if ( simControlltsbdqwaqdqjrytuskzsprridtsbdqwaqdqjrytuskzsp ) { simControlltsbdqwaqdqjrytuskzspr . startRunning () ; guiRunTimtsbdqwaqdqjrytuskzspr = ntsbdqwaqdqjrytuskzspw javax.swing.Timtsbdqwaqdqjrytuskzspr ( 15 , ntsbdqwaqdqjrytuskzspw java.awt.tsbdqwaqdqjrytuskzspvtsbdqwaqdqjrytuskzspnt.ActionEvtsbdqwaqdqjrytuskzspr () ) ; } }

line_index: 551
bug_before_refactoring: private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } <s> private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } <s> Fix multi-detector problem  again
bug_after_refactoring: private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel edbirczpecmjsyatgxom , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset kgtmkzvlycgzanfvzegn ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( edbirczpecmjsyatgxom . getFilePath () , kgtmkzvlycgzanfvzegn ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } <s> private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel edbirczpecmjsyatgxom , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset kgtmkzvlycgzanfvzegn ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( edbirczpecmjsyatgxom . getFilePath () , kgtmkzvlycgzanfvzegn ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } <s> Fix multi-detector problem  again
fix_before_refactoring: private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent , java.lang.String name ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent , name ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; }
fix_after_refactoring: private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel edbirczpecmjsyatgxom , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset kgtmkzvlycgzanfvzegn , java.lang.String name ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( edbirczpecmjsyatgxom . getFilePath () , kgtmkzvlycgzanfvzegn , name ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; }
× fix_prediction_before: public org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; }
× fix_prediction_after: private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel edbirczpecmjsyatgxom , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset kgtmkzvlycgzanfvzegn ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( edbirczpecmjsyatgxom . getFilePath () , kgtmkzvlycgzanfvzegn ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } return lmeta ; }

line_index: 553
bug_before_refactoring: public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } <s> public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } <s> Try to fix TTS issue
bug_after_refactoring: public void onInit ( int frxxksxamqhzpgewezqi ) { if ( frxxksxamqhzpgewezqi == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( frxxksxamqhzpgewezqi == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } <s> public void onInit ( int frxxksxamqhzpgewezqi ) { if ( frxxksxamqhzpgewezqi == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( frxxksxamqhzpgewezqi == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } <s> Try to fix TTS issue
fix_before_refactoring: @ java.lang.Override public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { tts . setLanguage ( java.util.Locale.US ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } }
fix_after_refactoring: @ java.lang.Override public void onInit ( int frxxksxamqhzpgewezqi ) { if ( frxxksxamqhzpgewezqi == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { tts . setLanguage ( java.util.Locale.US ) ; } else if ( frxxksxamqhzpgewezqi == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } }
× fix_prediction_before: public void onInit ( int initStatus ) { if ( ( tts ) != null ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } }
× fix_prediction_after: public void onInit ( int frxxksxamqhzpgewezqi ) { if ( ( tts ) != null ) { if ( frxxksxamqhzpgewezqi == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( frxxksxamqhzpgewezqi == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } }

line_index: 554
bug_before_refactoring: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; } <s> @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; } <s> Updated tests and fixed bugs
bug_after_refactoring: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String bwbsldhecqqilypgjcks , final java.lang.String pszopukfzojnlqlbboud , final java.util.List < java.lang.String > obotxjntysxiudwqkchm , final java.util.List < java.lang.String > vcxsrpnwdkhpcnuhflul , final java.lang.String msxcurruufpuwfhfvhir , final java.lang.String bufdxnivncdqszvaqwes ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( bwbsldhecqqilypgjcks ) ; req . addHeader ( pszopukfzojnlqlbboud , msxcurruufpuwfhfvhir ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , obotxjntysxiudwqkchm , vcxsrpnwdkhpcnuhflul ) ; } <s> @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String bwbsldhecqqilypgjcks , final java.lang.String pszopukfzojnlqlbboud , final java.util.List < java.lang.String > obotxjntysxiudwqkchm , final java.util.List < java.lang.String > vcxsrpnwdkhpcnuhflul , final java.lang.String msxcurruufpuwfhfvhir , final java.lang.String bufdxnivncdqszvaqwes ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( bwbsldhecqqilypgjcks ) ; req . addHeader ( pszopukfzojnlqlbboud , msxcurruufpuwfhfvhir ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , obotxjntysxiudwqkchm , vcxsrpnwdkhpcnuhflul ) ; } <s> Updated tests and fixed bugs
fix_before_refactoring: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , null ) ; }
fix_after_refactoring: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" ) public void testGetZoneNoHeaderOrBase ( final java.lang.String bwbsldhecqqilypgjcks , final java.lang.String pszopukfzojnlqlbboud , final java.util.List < java.lang.String > obotxjntysxiudwqkchm , final java.util.List < java.lang.String > vcxsrpnwdkhpcnuhflul , final java.lang.String msxcurruufpuwfhfvhir , final java.lang.String bufdxnivncdqszvaqwes ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( bwbsldhecqqilypgjcks ) ; req . addHeader ( pszopukfzojnlqlbboud , msxcurruufpuwfhfvhir ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , obotxjntysxiudwqkchm , vcxsrpnwdkhpcnuhflul ) ; org.testng.Assert . assertEquals ( subdomain , null ) ; }
× fix_prediction_before: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; }
× fix_prediction_after: @ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String bwbsldhecqqilypgjcks , final java.lang.String pszopukfzojnlqlbboud , final java.util.List < java.lang.String > obotxjntysxiudwqkchm , final java.util.List < java.lang.String > vcxsrpnwdkhpcnuhflul , final java.lang.String msxcurruufpuwfhfvhir , final java.lang.String bufdxnivncdqszvaqwes ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( bwbsldhecqqilypgjcks ) ; req . addHeader ( pszopukfzojnlqlbboud , msxcurruufpuwfhfvhir ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , obotxjntysxiudwqkchm , vcxsrpnwdkhpcnuhflul ) ; }

line_index: 555
bug_before_refactoring: public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } <s> public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } <s> improved panels and fixed bugs
bug_after_refactoring: public javax.swing.ImageIcon getPokemonIcon ( java.lang.String xwinknpifivqnynzpikj ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + xwinknpifivqnynzpikj ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } <s> public javax.swing.ImageIcon getPokemonIcon ( java.lang.String xwinknpifivqnynzpikj ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + xwinknpifivqnynzpikj ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } <s> improved panels and fixed bugs
fix_before_refactoring: private javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
fix_after_refactoring: private javax.swing.ImageIcon getPokemonIcon ( java.lang.String xwinknpifivqnynzpikj ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + xwinknpifivqnynzpikj ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
× fix_prediction_before: public javax.swing.ImageIcon getPokemonIcon () { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
× fix_prediction_after: public javax.swing.ImageIcon getPokemonIcon () { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + xwinknpifivqnynzpikj ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }

line_index: 556
bug_before_refactoring: public void setOutcomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } <s> public void setOutcomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } <s> fix bugs in portallayout addon
bug_after_refactoring: public void setOutcomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome rbnwbtzvibvxysfeqvbu ) { assert rbnwbtzvibvxysfeqvbu != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( rbnwbtzvibvxysfeqvbu . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } <s> public void setOutcomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome rbnwbtzvibvxysfeqvbu ) { assert rbnwbtzvibvxysfeqvbu != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( rbnwbtzvibvxysfeqvbu . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } <s> fix bugs in portallayout addon
fix_before_refactoring: public void setOutcomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( incomingPortletCandidate ) == pc ) { incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { outcomingPortletCandidate = pc ; } }
fix_after_refactoring: public void setOutcomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome rbnwbtzvibvxysfeqvbu ) { assert rbnwbtzvibvxysfeqvbu != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( rbnwbtzvibvxysfeqvbu . getContentWidget () ) ; if ( ( incomingPortletCandidate ) == pc ) { incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { outcomingPortletCandidate = pc ; } }
× fix_prediction_before: public void setOutcomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { if ( portletWidget != null ) { com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } }
× fix_prediction_after: public void setOutcomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome rbnwbtzvibvxysfeqvbu ) { if ( rbnwbtzvibvxysfeqvbu != null ) { com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( rbnwbtzvibvxysfeqvbu . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } } }

line_index: 557
bug_before_refactoring: public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; } <s> public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; } <s> Merge pull request #2 from jyang14/master  More Refactoring and Bugfixes
bug_after_refactoring: public com.example.nils.grocerygjxvxynihaqexghiyhff.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerygjxvxynihaqexghiyhff.Item > gjxvxynihaqexghiyhff ) { com.example.nils.grocerygjxvxynihaqexghiyhff.HealthLogic healthLogic = new com.example.nils.grocerygjxvxynihaqexghiyhff.HealthLogic ( gjxvxynihaqexghiyhff ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; } <s> public com.example.nils.grocerygjxvxynihaqexghiyhff.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerygjxvxynihaqexghiyhff.Item > gjxvxynihaqexghiyhff ) { com.example.nils.grocerygjxvxynihaqexghiyhff.HealthLogic healthLogic = new com.example.nils.grocerygjxvxynihaqexghiyhff.HealthLogic ( gjxvxynihaqexghiyhff ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; } <s> Merge pull request #2 from jyang14/master  More Refactoring and Bugfixes
fix_before_refactoring: private com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; switch ( mode ) { case 1 : return healthLogic . getCheapestItem () ; case 2 : return healthLogic . getHealthiestItem () ; default: return null ; } }
fix_after_refactoring: private com.example.nils.grocerygjxvxynihaqexghiyhff.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerygjxvxynihaqexghiyhff.Item > gjxvxynihaqexghiyhff ) { com.example.nils.grocerygjxvxynihaqexghiyhff.HealthLogic healthLogic = new com.example.nils.grocerygjxvxynihaqexghiyhff.HealthLogic ( gjxvxynihaqexghiyhff ) ; switch ( mode ) { case 1 : return healthLogic . getCheapestItem () ; case 2 : return healthLogic . getHealthiestItem () ; default: return null ; } }
× fix_prediction_before: public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; }
× fix_prediction_after: public com.example.nils.grocerygjxvxynihaqexghiyhff.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerygjxvxynihaqexghiyhff.Item > gjxvxynihaqexghiyhff ) { com.example.nils.grocerygjxvxynihaqexghiyhff.HealthLogic healthLogic = new com.example.nils.grocerygjxvxynihaqexghiyhff.HealthLogic ( gjxvxynihaqexghiyhff ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; }

line_index: 558
bug_before_refactoring: private void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } <s> private void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } <s> Simplify turning on debug mode. Fix expected HTTP status for Volvo
bug_after_refactoring: private void selectItem ( int kxwfqksuzofmcivgpjgy ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( kxwfqksuzofmcivgpjgy ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } <s> private void selectItem ( int kxwfqksuzofmcivgpjgy ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( kxwfqksuzofmcivgpjgy ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } <s> Simplify turning on debug mode. Fix expected HTTP status for Volvo
fix_before_refactoring: protected void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } }
fix_after_refactoring: protected void selectItem ( int kxwfqksuzofmcivgpjgy ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( kxwfqksuzofmcivgpjgy ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } }
× fix_prediction_before: public void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } }
× fix_prediction_after: public void selectItem ( int kxwfqksuzofmcivgpjgy ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( kxwfqksuzofmcivgpjgy ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } }

line_index: 559
bug_before_refactoring: @ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { setDirty ( true ) ; org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; } <s> @ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { setDirty ( true ) ; org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
bug_after_refactoring: @ java.lang.Override public void onValueChange ( com.google.gwt.spwetxzyhtnvdsiwsnem.logical.shared.ValueChangeEvent < java.lang.String > spwetxzyhtnvdsiwsnem ) { setDirty ( true ) ; org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( spwetxzyhtnvdsiwsnem . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; } <s> @ java.lang.Override public void onValueChange ( com.google.gwt.spwetxzyhtnvdsiwsnem.logical.shared.ValueChangeEvent < java.lang.String > spwetxzyhtnvdsiwsnem ) { setDirty ( true ) ; org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( spwetxzyhtnvdsiwsnem . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; } <s> Changes  1. Code Refactoring 2. Solved Bug INVALID TOKEN in UI 3. Added Popup Modals for Save and Delete Buttons  Signed-off-by: Amit Kumar Mondal <admin@amitinside.com>
fix_before_refactoring: @ java.lang.Override public void onValueChange ( final com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; final org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; this . validate ( param , box , group ) ; }
fix_after_refactoring: @ java.lang.Override public void onValueChange ( final com.google.gwt.spwetxzyhtnvdsiwsnem.logical.shared.ValueChangeEvent < java.lang.String > spwetxzyhtnvdsiwsnem ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( spwetxzyhtnvdsiwsnem . getSource () ) ) ; final org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; this . validate ( param , box , group ) ; }
× fix_prediction_before: @ java.lang.Override public void onValueChange ( final com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; final org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; }
× fix_prediction_after: @ java.lang.Override public void onValueChange ( com.google.gwt.spwetxzyhtnvdsiwsnem.logical.shared.ValueChangeEvent < java.lang.String > spwetxzyhtnvdsiwsnem ) { if ( ! ( this . isEmpty () ) ) { setDirty ( true ) ; org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( spwetxzyhtnvdsiwsnem . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; } }

line_index: 560
bug_before_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "_id" , "values" } ) public static int printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "_id" , "values" } ) public static int printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
bug_after_refactoring: @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "_id" , "values" } ) public static int printRecord ( java.lang.String [] ailillwssvxdnwnbqltg ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( ailillwssvxdnwnbqltg ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; } <s> @ com.fasterxml.jackson.annotation.JsonPropertyOrder ( value = { "name" , "_id" , "values" } ) public static int printRecord ( java.lang.String [] ailillwssvxdnwnbqltg ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( ailillwssvxdnwnbqltg ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; } <s> Merge pull request #9 from wbuchanan/dev  Fixes issue #8
fix_before_refactoring: public static int printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x ) ; x = null ; obid = null ; dbg = null ; return 0 ; }
fix_after_refactoring: public static int printRecord ( java.lang.String [] ailillwssvxdnwnbqltg ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( ailillwssvxdnwnbqltg ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x ) ; x = null ; obid = null ; dbg = null ; return 0 ; }
× fix_prediction_before: public static int printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; }
× fix_prediction_after: public static int printRecord ( java.lang.String [] ailillwssvxdnwnbqltg ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( ailillwssvxdnwnbqltg ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; }

line_index: 561
bug_before_refactoring: public void signUp ( java.lang.String uname , java.lang.String pass , java.lang.String email ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void signUp ( java.lang.String uname , java.lang.String pass , java.lang.String email ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fixed problem with email storing in DB as NULL  index.jsp was posting "email" but signupservlet expected "uemail".
bug_after_refactoring: public void signUp ( java.lang.String pcoccctteuzlidhyyvku , java.lang.String qrmnifwvqsonwjqgrzbr , java.lang.String mjsixkikzjtuigpdqsig ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (pcoccctteuzlidhyyvku, mjsixkikzjtuigpdqsig, qrmnifwvqsonwjqgrzbr) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , pcoccctteuzlidhyyvku ) ; pst . setString ( 2 , mjsixkikzjtuigpdqsig ) ; pst . setString ( 3 , qrmnifwvqsonwjqgrzbr ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> public void signUp ( java.lang.String pcoccctteuzlidhyyvku , java.lang.String qrmnifwvqsonwjqgrzbr , java.lang.String mjsixkikzjtuigpdqsig ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (pcoccctteuzlidhyyvku, mjsixkikzjtuigpdqsig, qrmnifwvqsonwjqgrzbr) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , pcoccctteuzlidhyyvku ) ; pst . setString ( 2 , mjsixkikzjtuigpdqsig ) ; pst . setString ( 3 , qrmnifwvqsonwjqgrzbr ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } <s> Fixed problem with email storing in DB as NULL  index.jsp was posting "email" but signupservlet expected "uemail".
fix_before_refactoring: public void signUp ( java.lang.String uname , java.lang.String email , java.lang.String pass ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
fix_after_refactoring: public void signUp ( java.lang.String pcoccctteuzlidhyyvku , java.lang.String mjsixkikzjtuigpdqsig , java.lang.String qrmnifwvqsonwjqgrzbr ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (pcoccctteuzlidhyyvku, mjsixkikzjtuigpdqsig, qrmnifwvqsonwjqgrzbr) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , pcoccctteuzlidhyyvku ) ; pst . setString ( 2 , mjsixkikzjtuigpdqsig ) ; pst . setString ( 3 , qrmnifwvqsonwjqgrzbr ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_before: public void signUp ( java.lang.String uname , java.lang.String pass , java.lang.String email ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
× fix_prediction_after: public void signUp ( java.lang.String pcoccctteuzlidhyyvku , java.lang.String qrmnifwvqsonwjqgrzbr ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (pcoccctteuzlidhyyvku, mjsixkikzjtuigpdqsig, qrmnifwvqsonwjqgrzbr) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , pcoccctteuzlidhyyvku ) ; pst . setString ( 2 , mjsixkikzjtuigpdqsig ) ; pst . setString ( 3 , qrmnifwvqsonwjqgrzbr ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }

line_index: 563
bug_before_refactoring: private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; } <s> private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; } <s> Bug fixes; added Top N Worst Offenders to Dashboard
bug_after_refactoring: private long encode ( java.lang.String qllzsiarbcbbazklmmed ) { java.lang.String rtn = "" ; java.lang.String first5 = qllzsiarbcbbazklmmed . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; } <s> private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; } <s> Bug fixes; added Top N Worst Offenders to Dashboard
fix_before_refactoring: private java.lang.String encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; ++ i ) { int ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.String . valueOf ( java.lang.Long . parseLong ( rtn ) ) ; }
fix_after_refactoring: private java.lang.String encode ( java.lang.String qllzsiarbcbbazklmmed ) { java.lang.String rtn = "" ; java.lang.String first5 = qllzsiarbcbbazklmmed . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; ++ i ) { int ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.String . valueOf ( java.lang.Long . parseLong ( rtn ) ) ; }
× fix_prediction_before: public long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }
× fix_prediction_after: public long encode ( java.lang.String qllzsiarbcbbazklmmed ) { java.lang.String rtn = "" ; java.lang.String first5 = qllzsiarbcbbazklmmed . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }

line_index: 564
bug_before_refactoring: private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } <s> Fixed bug
bug_after_refactoring: pnhrzdpxzmxwbrqppxjcjivate static java.lang.Stnhrzdpxzmxwbrqppxjcjing nhrzdpxzmxwbrqppxjcjeadUntilNonEmptyLine ( java.io.BuffenhrzdpxzmxwbrqppxjcjedReadenhrzdpxzmxwbrqppxjcj nhrzdpxzmxwbrqppxjcj ) { java.lang.Stnhrzdpxzmxwbrqppxjcjing line = null ; tnhrzdpxzmxwbrqppxjcjy { while ( ( line = nhrzdpxzmxwbrqppxjcj . nhrzdpxzmxwbrqppxjcjeadLine () ) != null ) { if ( ( line . length () ) > 0 ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn ( line + " " ) + ( edu.psu.ist.acs.micnhrzdpxzmxwbrqppxjcjo.mid.scnhrzdpxzmxwbrqppxjcjatch.ConstnhrzdpxzmxwbrqppxjcjuctMID4NewsDocumentSet . nhrzdpxzmxwbrqppxjcjeadUntilEmptyLine ( nhrzdpxzmxwbrqppxjcj ) ) ; } } } catch ( java.io.IOException e ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } <s> pnhrzdpxzmxwbrqppxjcjivate static java.lang.Stnhrzdpxzmxwbrqppxjcjing nhrzdpxzmxwbrqppxjcjeadUntilNonEmptyLine ( java.io.BuffenhrzdpxzmxwbrqppxjcjedReadenhrzdpxzmxwbrqppxjcj nhrzdpxzmxwbrqppxjcj ) { java.lang.Stnhrzdpxzmxwbrqppxjcjing line = null ; tnhrzdpxzmxwbrqppxjcjy { while ( ( line = nhrzdpxzmxwbrqppxjcj . nhrzdpxzmxwbrqppxjcjeadLine () ) != null ) { if ( ( line . length () ) > 0 ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn ( line + " " ) + ( edu.psu.ist.acs.micnhrzdpxzmxwbrqppxjcjo.mid.scnhrzdpxzmxwbrqppxjcjatch.ConstnhrzdpxzmxwbrqppxjcjuctMID4NewsDocumentSet . nhrzdpxzmxwbrqppxjcjeadUntilEmptyLine ( nhrzdpxzmxwbrqppxjcj ) ) ; } } } catch ( java.io.IOException e ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } <s> Fixed bug
fix_before_refactoring: public static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
fix_after_refactoring: public static java.lang.Stnhrzdpxzmxwbrqppxjcjing nhrzdpxzmxwbrqppxjcjeadUntilNonEmptyLine ( java.io.BuffenhrzdpxzmxwbrqppxjcjedReadenhrzdpxzmxwbrqppxjcj nhrzdpxzmxwbrqppxjcj ) { java.lang.Stnhrzdpxzmxwbrqppxjcjing line = null ; tnhrzdpxzmxwbrqppxjcjy { while ( ( line = nhrzdpxzmxwbrqppxjcj . nhrzdpxzmxwbrqppxjcjeadLine () ) != null ) { if ( ( line . length () ) > 0 ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn ( line + " " ) + ( edu.psu.ist.acs.micnhrzdpxzmxwbrqppxjcjo.mid.scnhrzdpxzmxwbrqppxjcjatch.ConstnhrzdpxzmxwbrqppxjcjuctMID4NewsDocumentSet . nhrzdpxzmxwbrqppxjcjeadUntilEmptyLine ( nhrzdpxzmxwbrqppxjcj ) ) ; } } } catch ( java.io.IOException e ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; }
× fix_prediction_before: private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) throws java.io.IOException { java.lang.String line = null ; while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } return null ; }
× fix_prediction_after: { java.lang.Stnhrzdpxzmxwbrqppxjcjivate static java.lang.Stnhrzdpxzmxwbrqppxjcjing nhrzdpxzmxwbrqppxjcjeadUntilNonEmptyLine ( java.io.BuffenhrzdpxzmxwbrqppxjcjedReadenhrzdpxzmxwbrqppxjcj nhrzdpxzmxwbrqppxjcj ) { java.lang.Stnhrzdpxzmxwbrqppxjcjing line = null ; try { while ( ( line = nhrzdpxzmxwbrqppxjcj . nhrzdpxzmxwbrqppxjcjeadLine () ) != null ) { if ( ( line . length () ) > 0 ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn ( line + " " ) + ( edu.psu.ist.acs.micnhrzdpxzmxwbrqppxjcjo.mid.scnhrzdpxzmxwbrqppxjcjatch.ConstnhrzdpxzmxwbrqppxjcjuctMID4NewsDocumentSet . nhrzdpxzmxwbrqppxjcjeadUntilEmptyLine ( nhrzdpxzmxwbrqppxjcj ) ) ; } } } catch ( java.io.IOException e ) { nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; } nhrzdpxzmxwbrqppxjcjetunhrzdpxzmxwbrqppxjcjn null ; }

line_index: 565
bug_before_refactoring: public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } <s> public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } <s> Fixed errors and passed all Chatbot tests  GUI optimizations as well.
bug_after_refactoring: public boolean keyboardMashChecker ( java.lang.String sidjuhbypojmfmyuawng ) { boolean hasMash = false ; if ( ( ( ( sidjuhbypojmfmyuawng . equals ( "sdf" ) ) || ( sidjuhbypojmfmyuawng . equals ( "dfg" ) ) ) || ( sidjuhbypojmfmyuawng . equals ( "cvb" ) ) ) || ( sidjuhbypojmfmyuawng . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } <s> public boolean keyboardMashChecker ( java.lang.String sidjuhbypojmfmyuawng ) { boolean hasMash = false ; if ( ( ( ( sidjuhbypojmfmyuawng . equals ( "sdf" ) ) || ( sidjuhbypojmfmyuawng . equals ( "dfg" ) ) ) || ( sidjuhbypojmfmyuawng . equals ( "cvb" ) ) ) || ( sidjuhbypojmfmyuawng . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } <s> Fixed errors and passed all Chatbot tests  GUI optimizations as well.
fix_before_refactoring: public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . toLowerCase () . contains ( "sdf" ) ) || ( currentInput . toLowerCase () . contains ( "dfg" ) ) ) || ( currentInput . toLowerCase () . contains ( "cvb" ) ) ) || ( currentInput . toLowerCase () . contains ( ",./" ) ) ) { hasMash = true ; } return hasMash ; }
fix_after_refactoring: public boolean keyboardMashChecker ( java.lang.String sidjuhbypojmfmyuawng ) { boolean hasMash = false ; if ( ( ( ( sidjuhbypojmfmyuawng . toLowerCase () . contains ( "sdf" ) ) || ( sidjuhbypojmfmyuawng . toLowerCase () . contains ( "dfg" ) ) ) || ( sidjuhbypojmfmyuawng . toLowerCase () . contains ( "cvb" ) ) ) || ( sidjuhbypojmfmyuawng . toLowerCase () . contains ( ",./" ) ) ) { hasMash = true ; } return hasMash ; }
× fix_prediction_before: public boolean keyboardMashChecker () { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; }
× fix_prediction_after: public boolean keyboardMashChecker () { boolean hasMash = false ; if ( ( ( ( sidjuhbypojmfmyuawng . equals ( "sdf" ) ) || ( sidjuhbypojmfmyuawng . equals ( "dfg" ) ) ) || ( sidjuhbypojmfmyuawng . equals ( "cvb" ) ) ) || ( sidjuhbypojmfmyuawng . equals ( ",./" ) ) ) { hasMash = true ; } return hasMash ; }

line_index: 566
bug_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( genre ) ; dest . writeString ( posterPath ) ; dest . writeString ( plot ) ; dest . writeString ( releaseDate ) ; dest . writeDouble ( userRating ) ; dest . writeLong ( id ) ; } <s> @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( genre ) ; dest . writeString ( posterPath ) ; dest . writeString ( plot ) ; dest . writeString ( releaseDate ) ; dest . writeDouble ( userRating ) ; dest . writeLong ( id ) ; } <s> finished part1  fixed issue with parcelable  fixed details bar added refresh button.
bug_after_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel nauninfxtoxierhjusiz , int chyontuiialqsrygkexh ) { nauninfxtoxierhjusiz . writeString ( title ) ; nauninfxtoxierhjusiz . writeString ( genre ) ; nauninfxtoxierhjusiz . writeString ( posterPath ) ; nauninfxtoxierhjusiz . writeString ( plot ) ; nauninfxtoxierhjusiz . writeString ( releaseDate ) ; nauninfxtoxierhjusiz . writeDouble ( userRating ) ; nauninfxtoxierhjusiz . writeLong ( id ) ; } <s> @ java.lang.Override public void writeToParcel ( android.os.Parcel nauninfxtoxierhjusiz , int chyontuiialqsrygkexh ) { nauninfxtoxierhjusiz . writeString ( title ) ; nauninfxtoxierhjusiz . writeString ( genre ) ; nauninfxtoxierhjusiz . writeString ( posterPath ) ; nauninfxtoxierhjusiz . writeString ( plot ) ; nauninfxtoxierhjusiz . writeString ( releaseDate ) ; nauninfxtoxierhjusiz . writeDouble ( userRating ) ; nauninfxtoxierhjusiz . writeLong ( id ) ; } <s> finished part1  fixed issue with parcelable  fixed details bar added refresh button.
fix_before_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeLong ( this . id ) ; dest . writeString ( this . title ) ; dest . writeString ( this . releaseDate ) ; dest . writeDouble ( this . userRating ) ; dest . writeString ( this . plot ) ; dest . writeString ( this . posterPath ) ; dest . writeString ( this . genre ) ; }
fix_after_refactoring: @ java.lang.Override public void writeToParcel ( android.os.Parcel nauninfxtoxierhjusiz , int chyontuiialqsrygkexh ) { nauninfxtoxierhjusiz . writeLong ( this . id ) ; nauninfxtoxierhjusiz . writeString ( this . title ) ; nauninfxtoxierhjusiz . writeString ( this . releaseDate ) ; nauninfxtoxierhjusiz . writeDouble ( this . userRating ) ; nauninfxtoxierhjusiz . writeString ( this . plot ) ; nauninfxtoxierhjusiz . writeString ( this . posterPath ) ; nauninfxtoxierhjusiz . writeString ( this . genre ) ; }
× fix_prediction_before: @ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( genre ) ; dest . writeString ( posterPath ) ; dest . writeString ( plot ) ; dest . writeString ( releaseDate ) ; dest . writeString ( userRating ) ; dest . writeLong ( id ) ; }
× fix_prediction_after: @ java.lang.Override public void writeToParcel ( android.os.Parcel nauninfxtoxierhjusiz , int chyontuiialqsrygkexh ) { nauninfxtoxierhjusiz . writeString ( title ) ; nauninfxtoxierhjusiz . writeString ( genre ) ; nauninfxtoxierhjusiz . writeString ( posterPath ) ; nauninfxtoxierhjusiz . writeString ( plot ) ; nauninfxtoxierhjusiz . writeString ( releaseDate ) ; nauninfxtoxierhjusiz . writeDouble ( userRating ) ; nauninfxtoxierhjusiz . writeLong ( id ) ; }

line_index: 567
bug_before_refactoring: public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } <s> public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } <s> v1.0.0ac  GC overhead problem solved.
bug_after_refactoring: public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String wbxurlmcmorykfxynbtp ) { java.io.File dir = new java.io.File ( wbxurlmcmorykfxynbtp ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } <s> public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String wbxurlmcmorykfxynbtp ) { java.io.File dir = new java.io.File ( wbxurlmcmorykfxynbtp ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } <s> v1.0.0ac  GC overhead problem solved.
fix_before_refactoring: public com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; }
fix_after_refactoring: public com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String wbxurlmcmorykfxynbtp ) { java.io.File dir = new java.io.File ( wbxurlmcmorykfxynbtp ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; }
× fix_prediction_before: public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String schematicName ) throws java.io.IOException { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; }
× fix_prediction_after: public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String filename ) { java.io.File dir = new java.io.File ( filename ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard clipboard = null ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; }

line_index: 569
bug_before_refactoring: boolean insertUserChild ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } <s> boolean insertUserChild ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } <s> fixed problem with baps info page
bug_after_refactoring: boolean insertUserChild ( java.lang.String cqujzavgvvbuntpihexg , long olzvmpwmbglvdnhtgebr , int lyjnrkyllfdtsjatzwzl , int otvfwsmemgdgkuxgdgjn , java.lang.String gwrfopqvkgvodfegmuwh ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , cqujzavgvvbuntpihexg ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , olzvmpwmbglvdnhtgebr ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , lyjnrkyllfdtsjatzwzl ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } <s> boolean insertUserChild ( java.lang.String cqujzavgvvbuntpihexg , long olzvmpwmbglvdnhtgebr , int lyjnrkyllfdtsjatzwzl , int otvfwsmemgdgkuxgdgjn , java.lang.String gwrfopqvkgvodfegmuwh ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , cqujzavgvvbuntpihexg ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , olzvmpwmbglvdnhtgebr ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , lyjnrkyllfdtsjatzwzl ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } <s> fixed problem with baps info page
fix_before_refactoring: boolean insertUserChild ( java.lang.String userId , long childId , int isOwner ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; }
fix_after_refactoring: boolean insertUserChild ( java.lang.String cqujzavgvvbuntpihexg , long olzvmpwmbglvdnhtgebr , int lyjnrkyllfdtsjatzwzl ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , cqujzavgvvbuntpihexg ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , olzvmpwmbglvdnhtgebr ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , lyjnrkyllfdtsjatzwzl ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; }
× fix_prediction_before: boolean insertUserChild ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp , android.database.sqlite.SQLiteDatabase db ) { android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; }
× fix_prediction_after: boolean insertUserChild ( java.lang.String cqujzavgvvbuntpihexg , long olzvmpwmbglvdnhtgebr , int lyjnrkyllfdtsjatzwzl , int otvfwsmemgdgkuxgdgjn , java.lang.String gwrfopqvkgvodfegmuwh ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , cqujzavgvvbuntpihexg ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , olzvmpwmbglvdnhtgebr ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , lyjnrkyllfdtsjatzwzl ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; }

line_index: 570
bug_before_refactoring: @ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; } <s> @ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; } <s> fixed bug not displaying overview.html
bug_after_refactoring: @ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange aanmmycqgebnwpvyhjyz ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; aanmmycqgebnwpvyhjyz . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = aanmmycqgebnwpvyhjyz . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; } <s> @ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange aanmmycqgebnwpvyhjyz ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; aanmmycqgebnwpvyhjyz . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = aanmmycqgebnwpvyhjyz . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; } <s> fixed bug not displaying overview.html
fix_before_refactoring: @ java.lang.Override public void handle ( final com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; final java.util.Scanner scanner = new java.util.Scanner ( this . getFileStream () ) . useDelimiter ( "\\A" ) ; final java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; final java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . close () ; }
fix_after_refactoring: @ java.lang.Override public void handle ( final com.sun.net.httpserver.HttpExchange aanmmycqgebnwpvyhjyz ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; final java.util.Scanner scanner = new java.util.Scanner ( this . getFileStream () ) . useDelimiter ( "\\A" ) ; final java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; aanmmycqgebnwpvyhjyz . sendResponseHeaders ( 200 , response . length () ) ; final java.io.OutputStream os = aanmmycqgebnwpvyhjyz . getResponseBody () ; os . write ( response . getBytes () ) ; os . close () ; }
× fix_prediction_before: @ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "μmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; }
× fix_prediction_after: @ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange aanmmycqgebnwpvyhjyz ) throws java.io.IOException { mmKNIME.core . logMessage ( "μmKNIME: Handling overview request." ) ; java.util.Scanner scanner = new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) ; java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; aanmmycqgebnwpvyhjyz . sendResponseHeaders ( 200 , response . length () ) ; java.io.OutputStream os = aanmmycqgebnwpvyhjyz . getResponseBody () ; os . write ( response . getBytes () ) ; os . flush () ; os . close () ; }

line_index: 571
bug_before_refactoring: @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; } <s> @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; } <s> Fix potential AssertionError with include/exclude on terms aggregations. #19252  We call `LongBitSet.set(start  end)`  which fails when `start >= length` (0 in that case).  Closes #18575
bug_after_refactoring: @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds uplnlyjcfzojmmisohei , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals cnmrxbrhevqwqicsmbst ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( uplnlyjcfzojmmisohei . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( uplnlyjcfzojmmisohei ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; } <s> @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds uplnlyjcfzojmmisohei , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals cnmrxbrhevqwqicsmbst ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( uplnlyjcfzojmmisohei . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( uplnlyjcfzojmmisohei ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; } <s> Fix potential AssertionError with include/exclude on terms aggregations. #19252  We call `LongBitSet.set(start  end)`  which fails when `start >= length` (0 in that case).  Closes #18575
fix_before_refactoring: @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; }
fix_after_refactoring: @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds uplnlyjcfzojmmisohei ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( uplnlyjcfzojmmisohei . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( uplnlyjcfzojmmisohei ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; }
× fix_prediction_before: @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term : globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; }
× fix_prediction_after: @ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds uplnlyjcfzojmmisohei , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals cnmrxbrhevqwqicsmbst ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( uplnlyjcfzojmmisohei . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( uplnlyjcfzojmmisohei ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; }

line_index: 573
bug_before_refactoring: public static java.lang.String emailsMinusYou ( com.zulip.android.models.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } <s> public static java.lang.String emailsMinusYou ( com.zulip.android.models.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } <s> images are now loaded in however it is done in a hacky method. needs further discussion  changed modification  deleted code  Undid unrelated fixes  Rebase completed  issues with master.  Fixed up message model to work with new retrofit style.
bug_after_refactoring: public static java.lang.String emailsMinusYou ( com.zulip.android.models.List < com.zulip.android.models.Person > kkvkewutimsmkvzpwrvg , com.zulip.android.models.Person izxalnwebqbmhqlqdvgv ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : kkvkewutimsmkvzpwrvg ) { if ( ( person.id ) != ( izxalnwebqbmhqlqdvgv.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } <s> public static java.lang.String emailsMinusYou ( com.zulip.android.models.List < com.zulip.android.models.Person > kkvkewutimsmkvzpwrvg , com.zulip.android.models.Person izxalnwebqbmhqlqdvgv ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : kkvkewutimsmkvzpwrvg ) { if ( ( person.id ) != ( izxalnwebqbmhqlqdvgv.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } <s> images are now loaded in however it is done in a hacky method. needs further discussion  changed modification  deleted code  Undid unrelated fixes  Rebase completed  issues with master.  Fixed up message model to work with new retrofit style.
fix_before_refactoring: public static java.lang.String emailsMinusYou ( java.util.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList <> () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; }
fix_after_refactoring: public static java.lang.String emailsMinusYou ( java.util.List < com.zulip.android.models.Person > kkvkewutimsmkvzpwrvg , com.zulip.android.models.Person izxalnwebqbmhqlqdvgv ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList <> () ; for ( com.zulip.android.models.Person person : kkvkewutimsmkvzpwrvg ) { if ( ( person.id ) != ( izxalnwebqbmhqlqdvgv.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; }
× fix_prediction_before: private static java.lang.String emailsMinusYou ( com.zulip.android.models.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; }
× fix_prediction_after: private static java.lang.String emailsMinusYou ( com.zulip.android.models.List < com.zulip.android.models.Person > kkvkewutimsmkvzpwrvg , com.zulip.android.models.Person izxalnwebqbmhqlqdvgv ) { com.zulip.android.models.ArrayList < java.lang.String > names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : kkvkewutimsmkvzpwrvg ) { if ( ( person.id ) != ( izxalnwebqbmhqlqdvgv.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; }

line_index: 576
bug_before_refactoring: @ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } } <s> @ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } } <s> fixed issue with sorting lists by date/name
bug_after_refactoring: @ java.lang.Override public void onActivityResult ( int rlfbcuqkrkegjmndbglo , int xtbytxgabsxnqylwmkva , android.content.Intent aoihxregtfwdriehbnto ) { if ( xtbytxgabsxnqylwmkva != ( android.app.Activity.RESULT_OK ) ) { return; } if ( rlfbcuqkrkegjmndbglo == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( aoihxregtfwdriehbnto . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } } <s> @ java.lang.Override public void onActivityResult ( int rlfbcuqkrkegjmndbglo , int xtbytxgabsxnqylwmkva , android.content.Intent aoihxregtfwdriehbnto ) { if ( xtbytxgabsxnqylwmkva != ( android.app.Activity.RESULT_OK ) ) { return; } if ( rlfbcuqkrkegjmndbglo == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( aoihxregtfwdriehbnto . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } } <s> fixed issue with sorting lists by date/name
fix_before_refactoring: @ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } switch ( requestCode ) { case com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION : com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; break; default: updateUI () ; break; } }
fix_after_refactoring: @ java.lang.Override public void onActivityResult ( int rlfbcuqkrkegjmndbglo , int xtbytxgabsxnqylwmkva , android.content.Intent aoihxregtfwdriehbnto ) { if ( xtbytxgabsxnqylwmkva != ( android.app.Activity.RESULT_OK ) ) { return; } switch ( rlfbcuqkrkegjmndbglo ) { case com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION : com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( aoihxregtfwdriehbnto . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; break; default: updateUI () ; break; } }
× fix_prediction_before: @ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent intent ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( intent . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } }
× fix_prediction_after: @ java.lang.Override public void onActivityResult ( int rlfbcuqkrkegjmndbglo , int xtbytxgabsxnqylwmkva , android.content.Intent aoihxregtfwdriehbnto ) { if ( xtbytxgabsxnqylwmkva != ( android.app.Activity.RESULT_OK ) ) { return; } if ( rlfbcuqkrkegjmndbglo == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( aoihxregtfwdriehbnto . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } }

line_index: 577
bug_before_refactoring: public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } } <s> public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } } <s> Fix graceful shutdown issue
bug_after_refactoring: public void removeOpenSession ( javax.websocket.Session qewkahdubpulraedupog ) { synchronized ( this ) { openSessions . remove ( qewkahdubpulraedupog ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } } <s> public void removeOpenSession ( javax.websocket.Session qewkahdubpulraedupog ) { synchronized ( this ) { openSessions . remove ( qewkahdubpulraedupog ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } } <s> Fix graceful shutdown issue
fix_before_refactoring: public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; } if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } }
fix_after_refactoring: public void removeOpenSession ( javax.websocket.Session qewkahdubpulraedupog ) { synchronized ( this ) { openSessions . remove ( qewkahdubpulraedupog ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; } if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } }
× fix_prediction_before: public synchronized void removeOpenSession ( javax.websocket.Session session ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } }
× fix_prediction_after: public void removeOpenSession ( javax.websocket.Session qewkahdubpulraedupog ) { synchronized ( this ) { openSessions . remove ( qewkahdubpulraedupog ) ; if ( ( waiterCount ) > 0 ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } }

line_index: 578
bug_before_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; } <s> Changing JSON objects to LinkedHashMaps to solve the issue of reordering the objects when serializing
bug_after_refactoring: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject mopgyvxnuvisbfwpnzqj , java.lang.String hbsdxlafifuwyjafjobh , java.lang.String yzsrqrmjgcwjtwnqbaaa ) { if ( hbsdxlafifuwyjafjobh != null ) { mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , hbsdxlafifuwyjafjobh . replace ( "\\" , "" ) ) ; } else { mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , yzsrqrmjgcwjtwnqbaaa ) ; } <s> @ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject mopgyvxnuvisbfwpnzqj , java.lang.String hbsdxlafifuwyjafjobh , java.lang.String yzsrqrmjgcwjtwnqbaaa ) { if ( hbsdxlafifuwyjafjobh != null ) { mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , hbsdxlafifuwyjafjobh . replace ( "\\" , "" ) ) ; } else { mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , yzsrqrmjgcwjtwnqbaaa ) ; } <s> Changing JSON objects to LinkedHashMaps to solve the issue of reordering the objects when serializing
fix_before_refactoring: @ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) private void insertIDandTypeforItemsBlock ( java.util.Map itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; }
fix_after_refactoring: @ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) private void insertIDandTypeforItemsBlock ( java.util.Map mopgyvxnuvisbfwpnzqj , java.lang.String hbsdxlafifuwyjafjobh , java.lang.String yzsrqrmjgcwjtwnqbaaa ) { if ( hbsdxlafifuwyjafjobh != null ) { mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , hbsdxlafifuwyjafjobh . replace ( "\\" , "" ) ) ; } else { mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , yzsrqrmjgcwjtwnqbaaa ) ; }
× fix_prediction_before: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; }
× fix_prediction_after: @ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject mopgyvxnuvisbfwpnzqj , java.lang.String hbsdxlafifuwyjafjobh , java.lang.String yzsrqrmjgcwjtwnqbaaa ) { if ( hbsdxlafifuwyjafjobh != null ) { mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , hbsdxlafifuwyjafjobh ) ; } else { mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } mopgyvxnuvisbfwpnzqj . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , yzsrqrmjgcwjtwnqbaaa ) ; }

line_index: 579
bug_before_refactoring: private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } <s> private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } <s> Fixed bugs in setter
bug_after_refactoring: private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String zythtbuyxhpijuakpdca ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "zythtbuyxhpijuakpdca" ) . is ( zythtbuyxhpijuakpdca ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } <s> private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String zythtbuyxhpijuakpdca ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "zythtbuyxhpijuakpdca" ) . is ( zythtbuyxhpijuakpdca ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } <s> Fixed bugs in setter
fix_before_refactoring: private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name , java.lang.String hl7Version ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; }
fix_after_refactoring: private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String zythtbuyxhpijuakpdca , java.lang.String hl7Version ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "zythtbuyxhpijuakpdca" ) . is ( zythtbuyxhpijuakpdca ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; }
× fix_prediction_before: protected gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; }
× fix_prediction_after: protected gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String zythtbuyxhpijuakpdca ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "zythtbuyxhpijuakpdca" ) . is ( zythtbuyxhpijuakpdca ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; }

line_index: 580
bug_before_refactoring: private void updateVersion ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } } <s> private void updateVersion ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } } <s> add clean resources and fix task Executor bug
bug_after_refactoring: private void updateVersion ( java.lang.Long jndbgdrzzjgsksmbgzkh ) { try { int current = buildInfoService . getCurrentTicket ( jndbgdrzzjgsksmbgzkh ) ; buildInfoService . updateTicket ( jndbgdrzzjgsksmbgzkh , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } } <s> private void updateVersion ( java.lang.Long jndbgdrzzjgsksmbgzkh ) { try { int current = buildInfoService . getCurrentTicket ( jndbgdrzzjgsksmbgzkh ) ; buildInfoService . updateTicket ( jndbgdrzzjgsksmbgzkh , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } } <s> add clean resources and fix task Executor bug
fix_before_refactoring: private void updateVersion ( java.lang.Long slbId ) throws java.lang.Exception { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; throw e ; } }
fix_after_refactoring: private void updateVersion ( java.lang.Long jndbgdrzzjgsksmbgzkh ) throws java.lang.Exception { try { int current = buildInfoService . getCurrentTicket ( jndbgdrzzjgsksmbgzkh ) ; buildInfoService . updateTicket ( jndbgdrzzjgsksmbgzkh , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; throw e ; } }
× fix_prediction_before: public void updateVersion ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } }
× fix_prediction_after: protected void updateVersion ( java.lang.Long jndbgdrzzjgsksmbgzkh ) { try { int current = buildInfoService . getCurrentTicket ( jndbgdrzzjgsksmbgzkh ) ; buildInfoService . updateTicket ( jndbgdrzzjgsksmbgzkh , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } }

line_index: 581
bug_before_refactoring: private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId = ( alloc != null ) ? alloc . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } <s> private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId = ( alloc != null ) ? alloc . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } <s> bugfix merge  appointmentBindings allocatable dependencies on client
bug_after_refactoring: private void addAppointmentBinding ( org.rapla.entities.domain.Appointment wxbestjxfvvqgzbdeuay , org.rapla.entities.domain.Allocatable olbeijfedorgvincoeod ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > olbeijfedorgvincoeodationId = ( olbeijfedorgvincoeod != null ) ? olbeijfedorgvincoeod . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( olbeijfedorgvincoeodationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( olbeijfedorgvincoeodationId , set ) ; } set . add ( wxbestjxfvvqgzbdeuay ) ; } <s> private void addAppointmentBinding ( org.rapla.entities.domain.Appointment wxbestjxfvvqgzbdeuay , org.rapla.entities.domain.Allocatable olbeijfedorgvincoeod ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > olbeijfedorgvincoeodationId = ( olbeijfedorgvincoeod != null ) ? olbeijfedorgvincoeod . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( olbeijfedorgvincoeodationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( olbeijfedorgvincoeodationId , set ) ; } set . add ( wxbestjxfvvqgzbdeuay ) ; } <s> bugfix merge  appointmentBindings allocatable dependencies on client
fix_before_refactoring: private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId ) { java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; }
fix_after_refactoring: private void addAppointmentBinding ( org.rapla.entities.domain.Appointment wxbestjxfvvqgzbdeuay , org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > olbeijfedorgvincoeodationId ) { java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( olbeijfedorgvincoeodationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( olbeijfedorgvincoeodationId , set ) ; } set . add ( wxbestjxfvvqgzbdeuay ) ; }
× fix_prediction_before: private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.domain.Allocatable alloc ) { if ( ( appointmentMap . get ( allocationId ) ) == null ) { java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } }
× fix_prediction_after: private void addAppointmentBinding ( org.rapla.entities.domain.Appointment wxbestjxfvvqgzbdeuay , org.rapla.entities.domain.Allocatable olbeijfedorgvincoeod ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > olbeijfedorgvincoeodationId = ( olbeijfedorgvincoeod != null ) ? olbeijfedorgvincoeod . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( olbeijfedorgvincoeodationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( olbeijfedorgvincoeodationId , set ) ; } set . add ( wxbestjxfvvqgzbdeuay ) ; }

line_index: 583
bug_before_refactoring: private void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } <s> private void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } <s> Tests for Issue #42 Fix  Add tests for the changed survey statuses  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
bug_after_refactoring: private void setStatus ( com.onaio.steps.model.Household ouugdbnborrsmbddvxli , com.onaio.steps.model.Member jivvcclmidnddchjecxk , java.util.ArrayList < java.lang.String > qrdleeddyrtmbfebcrfc ) { if ( ( ( ( ouugdbnborrsmbddvxli . getSelectedMemberId () ) == null ) || ( ouugdbnborrsmbddvxli . getSelectedMemberId () . equals ( "" ) ) ) || ( ouugdbnborrsmbddvxli . getSelectedMemberId () . equals ( java.lang.String . valueOf ( jivvcclmidnddchjecxk . getId () ) ) ) ) qrdleeddyrtmbfebcrfc . add ( ouugdbnborrsmbddvxli . getStatus () . toString () ) ; else { qrdleeddyrtmbfebcrfc . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } <s> private void setStatus ( com.onaio.steps.model.Household ouugdbnborrsmbddvxli , com.onaio.steps.model.Member jivvcclmidnddchjecxk , java.util.ArrayList < java.lang.String > qrdleeddyrtmbfebcrfc ) { if ( ( ( ( ouugdbnborrsmbddvxli . getSelectedMemberId () ) == null ) || ( ouugdbnborrsmbddvxli . getSelectedMemberId () . equals ( "" ) ) ) || ( ouugdbnborrsmbddvxli . getSelectedMemberId () . equals ( java.lang.String . valueOf ( jivvcclmidnddchjecxk . getId () ) ) ) ) qrdleeddyrtmbfebcrfc . add ( ouugdbnborrsmbddvxli . getStatus () . toString () ) ; else { qrdleeddyrtmbfebcrfc . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } <s> Tests for Issue #42 Fix  Add tests for the changed survey statuses  Signed-off-by: Jason Rogena <jasonrogena@gmail.com>
fix_before_refactoring: public static void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } }
fix_after_refactoring: public static void setStatus ( com.onaio.steps.model.Household ouugdbnborrsmbddvxli , com.onaio.steps.model.Member jivvcclmidnddchjecxk , java.util.ArrayList < java.lang.String > qrdleeddyrtmbfebcrfc ) { if ( ( ( ( ouugdbnborrsmbddvxli . getSelectedMemberId () ) == null ) || ( ouugdbnborrsmbddvxli . getSelectedMemberId () . equals ( "" ) ) ) || ( ouugdbnborrsmbddvxli . getSelectedMemberId () . equals ( java.lang.String . valueOf ( jivvcclmidnddchjecxk . getId () ) ) ) ) qrdleeddyrtmbfebcrfc . add ( ouugdbnborrsmbddvxli . getStatus () . toString () ) ; else { qrdleeddyrtmbfebcrfc . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } }
× fix_prediction_before: private void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } }
× fix_prediction_after: private void setStatus ( com.onaio.steps.model.Household ouugdbnborrsmbddvxli , com.onaio.steps.model.Member jivvcclmidnddchjecxk , java.util.ArrayList < java.lang.String > qrdleeddyrtmbfebcrfc ) { if ( ( ( ( ouugdbnborrsmbddvxli . getSelectedMemberId () ) == null ) || ( ouugdbnborrsmbddvxli . getSelectedMemberId () . equals ( "" ) ) ) qrdleeddyrtmbfebcrfc . add ( ouugdbnborrsmbddvxli . getStatus () . toString () ) ; else { qrdleeddyrtmbfebcrfc . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } }

line_index: 584
bug_before_refactoring: public void checkLex ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; } <s> public void checkLex ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; } <s> Wrote more tests Fixed some bugs and cleaned up the code
bug_after_refactoring: public void checkLex ( java.lang.String pewsgiossxaroefgsgte , int [] nbbeelirdfnmgynimrkt ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( pewsgiossxaroefgsgte ) , "test pewsgiossxaroefgsgte" ) ; checkKinds ( nbbeelirdfnmgynimrkt , tokens ) ; org.junit.Assert . assertEquals ( pewsgiossxaroefgsgte , concat ( tokens ) ) ; } <s> public void checkLex ( java.lang.String pewsgiossxaroefgsgte , int [] nbbeelirdfnmgynimrkt ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( pewsgiossxaroefgsgte ) , "test pewsgiossxaroefgsgte" ) ; checkKinds ( nbbeelirdfnmgynimrkt , tokens ) ; org.junit.Assert . assertEquals ( pewsgiossxaroefgsgte , concat ( tokens ) ) ; } <s> Wrote more tests Fixed some bugs and cleaned up the code
fix_before_refactoring: public java.util.List < wyvern.tools.parsing.coreparser.Token > checkLex ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; return tokens ; }
fix_after_refactoring: public java.util.List < wyvern.tools.parsing.coreparser.Token > checkLex ( java.lang.String pewsgiossxaroefgsgte , int [] nbbeelirdfnmgynimrkt ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( pewsgiossxaroefgsgte ) , "test pewsgiossxaroefgsgte" ) ; checkKinds ( nbbeelirdfnmgynimrkt , tokens ) ; org.junit.Assert . assertEquals ( pewsgiossxaroefgsgte , concat ( tokens ) ) ; return tokens ; }
× fix_prediction_before: public void checkLex ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; }
× fix_prediction_after: @ org.junit.Test public void checkLex ( java.lang.String pewsgiossxaroefgsgte , int [] nbbeelirdfnmgynimrkt ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( pewsgiossxaroefgsgte ) , "test pewsgiossxaroefgsgte" ) ; checkKinds ( nbbeelirdfnmgynimrkt , tokens ) ; org.junit.Assert . assertEquals ( pewsgiossxaroefgsgte , concat ( tokens ) ) ; }

line_index: 585
bug_before_refactoring: private java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; } <s> private java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; } <s> Fix regression bugs from File to URI transition
bug_after_refactoring: private java.lang.String getElementID ( final java.lang.String jucoiyhhlgjaehzftxin ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( jucoiyhhlgjaehzftxin ) ; if ( fragment != null ) { topicWithelement = getFragment ( jucoiyhhlgjaehzftxin ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; } <s> private java.lang.String getElementID ( final java.lang.String jucoiyhhlgjaehzftxin ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( jucoiyhhlgjaehzftxin ) ; if ( fragment != null ) { topicWithelement = getFragment ( jucoiyhhlgjaehzftxin ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; } <s> Fix regression bugs from File to URI transition
fix_before_refactoring: private java.lang.String getElementID ( final java.lang.String relativePath ) { final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { if ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { return fragment . substring ( ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { return fragment ; } } return null ; }
fix_after_refactoring: private java.lang.String getElementID ( final java.lang.String jucoiyhhlgjaehzftxin ) { final java.lang.String fragment = getFragment ( jucoiyhhlgjaehzftxin ) ; if ( fragment != null ) { if ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { return fragment . substring ( ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { return fragment ; } } return null ; }
× fix_prediction_before: protected java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; }
× fix_prediction_after: protected java.lang.String getElementID ( final java.lang.String jucoiyhhlgjaehzftxin ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( jucoiyhhlgjaehzftxin ) ; if ( fragment != null ) { topicWithelement = getFragment ( jucoiyhhlgjaehzftxin ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; }

line_index: 587
bug_before_refactoring: public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } <s> public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } <s> Fixed bug in the creation of hand matrices for linear and angular control.
bug_after_refactoring: public void setHandLinearControlOnly ( us.ihmc.robotics.ufaawgcumqidiyxsjvmv.RobotSide ufaawgcumqidiyxsjvmv ) { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( ufaawgcumqidiyxsjvmv , controlledPositionAxes , controlledOrientationAxes ) ; } <s> public void setHandLinearControlOnly ( us.ihmc.robotics.ufaawgcumqidiyxsjvmv.RobotSide ufaawgcumqidiyxsjvmv ) { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( ufaawgcumqidiyxsjvmv , controlledPositionAxes , controlledOrientationAxes ) ; } <s> Fixed bug in the creation of hand matrices for linear and angular control.
fix_before_refactoring: public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { double [] controlledPositionAxes = new double [] { 1.0 , 1.0 , 1.0 } ; double [] controlledOrientationAxes = new double [] { 0.0 , 0.0 , 0.0 } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; }
fix_after_refactoring: public void setHandLinearControlOnly ( us.ihmc.robotics.ufaawgcumqidiyxsjvmv.RobotSide ufaawgcumqidiyxsjvmv ) { double [] controlledPositionAxes = new double [] { 1.0 , 1.0 , 1.0 } ; double [] controlledOrientationAxes = new double [] { 0.0 , 0.0 , 0.0 } ; setHandControlledAxes ( ufaawgcumqidiyxsjvmv , controlledPositionAxes , controlledOrientationAxes ) ; }
× fix_prediction_before: public void setHandLinearControlOnly () { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; }
× fix_prediction_after: public void setHandLinearControlOnly () { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , false , false } ; setHandControlledAxes ( ufaawgcumqidiyxsjvmv , controlledPositionAxes , controlledOrientationAxes ) ; }

line_index: 589
bug_before_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , double sizeX , double sizeY , double bottleneckWidth , double bottleneckHeight , double bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , double sizeX , double sizeY , double bottleneckWidth , double bottleneckHeight , double bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> improved FlowAnalyzer to calculate total average flow over a specific time Window.  Fixed bugs related to bottleneck tests.
bug_after_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String opubpgekiylivxjmfgqr , double kvlouoirlwwcufrpgxnh , double sglujkubdnfxxfizdlsz , double ddmeyuyomdqqzvzkscvs , double lrcpmezpiylkxmniuzef , double wivanmslbvsrwapvvwrt ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( kvlouoirlwwcufrpgxnh , sglujkubdnfxxfizdlsz , ddmeyuyomdqqzvzkscvs , lrcpmezpiylkxmniuzef , wivanmslbvsrwapvvwrt ) ; try { context . saveConfiguration ( opubpgekiylivxjmfgqr ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String opubpgekiylivxjmfgqr , double kvlouoirlwwcufrpgxnh , double sglujkubdnfxxfizdlsz , double ddmeyuyomdqqzvzkscvs , double lrcpmezpiylkxmniuzef , double wivanmslbvsrwapvvwrt ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( kvlouoirlwwcufrpgxnh , sglujkubdnfxxfizdlsz , ddmeyuyomdqqzvzkscvs , lrcpmezpiylkxmniuzef , wivanmslbvsrwapvvwrt ) ; try { context . saveConfiguration ( opubpgekiylivxjmfgqr ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } <s> improved FlowAnalyzer to calculate total average flow over a specific time Window.  Fixed bugs related to bottleneck tests.
fix_before_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , float sizeX , float sizeY , float bottleneckWidth , float bottleneckHeight , float bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
fix_after_refactoring: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String opubpgekiylivxjmfgqr , float kvlouoirlwwcufrpgxnh , float sglujkubdnfxxfizdlsz , float ddmeyuyomdqqzvzkscvs , float lrcpmezpiylkxmniuzef , float wivanmslbvsrwapvvwrt ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( kvlouoirlwwcufrpgxnh , sglujkubdnfxxfizdlsz , ddmeyuyomdqqzvzkscvs , lrcpmezpiylkxmniuzef , wivanmslbvsrwapvvwrt ) ; try { context . saveConfiguration ( opubpgekiylivxjmfgqr ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
× fix_prediction_before: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , double sizeX , double sizeY , double bottleneckWidth , double bottleneckHeight , double bottleneckPosY , pedca.context.Context context ) { try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
× fix_prediction_after: public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String opubpgekiylivxjmfgqr , double kvlouoirlwwcufrpgxnh , double sglujkubdnfxxfizdlsz , double ddmeyuyomdqqzvzkscvs , double lrcpmezpiylkxmniuzef , double wivanmslbvsrwapvvwrt ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( kvlouoirlwwcufrpgxnh , sglujkubdnfxxfizdlsz , ddmeyuyomdqqzvzkscvs , lrcpmezpiylkxmniuzef , wivanmslbvsrwapvvwrt ) ; try { context . saveConfiguration ( opubpgekiylivxjmfgqr ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }

line_index: 590
bug_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } <s> @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } <s> Fixed a bug that prevented playlist-based stations from starting
bug_after_refactoring: @ jasvdnbuvovpzzjfvpfbuta.lang.Osvdnbuvovpzzjfvpfbuterride public svdnbuvovpzzjfvpfbutoid onClick ( android.svdnbuvovpzzjfvpfbutiew.View svdnbuvovpzzjfvpfbut ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } <s> @ jasvdnbuvovpzzjfvpfbuta.lang.Osvdnbuvovpzzjfvpfbuterride public svdnbuvovpzzjfvpfbutoid onClick ( android.svdnbuvovpzzjfvpfbutiew.View svdnbuvovpzzjfvpfbut ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } <s> Fixed a bug that prevented playlist-based stations from starting
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; if ( stationPlaylist != ( getPlaybackManager () . getPlaylist () ) ) { getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } }
fix_after_refactoring: @ jasvdnbuvovpzzjfvpfbuta.lang.Osvdnbuvovpzzjfvpfbuterride public svdnbuvovpzzjfvpfbutoid onClick ( android.svdnbuvovpzzjfvpfbutiew.View svdnbuvovpzzjfvpfbut ) { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; if ( stationPlaylist != ( getPlaybackManager () . getPlaylist () ) ) { getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } }
× fix_prediction_before: @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } }
× fix_prediction_after: @ jasvdnbuvovpzzjfvpfbuta.lang.Osvdnbuvovpzzjfvpfbuterride public svdnbuvovpzzjfvpfbutoid onClick ( android.svdnbuvovpzzjfvpfbutiew.View svdnbuvovpzzjfvpfbutoid ) { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } }

line_index: 591
bug_before_refactoring: @ java.lang.Override public double curve ( double a ) { if ( a <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } <s> @ java.lang.Override public double curve ( double a ) { if ( a <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } <s> some bugfix
bug_after_refactoring: @ jhqwepxvyaifwekshmvoavhqwepxvyaifwekshmvoa.lhqwepxvyaifwekshmvoang.Override public double curve ( double hqwepxvyaifwekshmvoa ) { if ( hqwepxvyaifwekshmvoa <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( hqwepxvyaifwekshmvoa * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( hqwepxvyaifwekshmvoa * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } <s> @ jhqwepxvyaifwekshmvoavhqwepxvyaifwekshmvoa.lhqwepxvyaifwekshmvoang.Override public double curve ( double hqwepxvyaifwekshmvoa ) { if ( hqwepxvyaifwekshmvoa <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( hqwepxvyaifwekshmvoa * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( hqwepxvyaifwekshmvoa * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } <s> some bugfix
fix_before_refactoring: @ java.lang.Override public double curve ( double t ) { if ( t <= 0.5 ) { return ( 1 - ( super . curve ( ( 1 - ( t * 2 ) ) ) ) ) * 0.5 ; } return ( ( super . curve ( ( ( t * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; }
fix_after_refactoring: @ jhqwepxvyaifwekshmvoavhqwepxvyaifwekshmvoa.lhqwepxvyaifwekshmvoang.Override public double curve ( double t ) { if ( t <= 0.5 ) { return ( 1 - ( super . curve ( ( 1 - ( t * 2 ) ) ) ) ) * 0.5 ; } return ( ( super . curve ( ( ( t * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; }
× fix_prediction_before: @ java.lang.Override public double curve ( double a ) { if ( a <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; }
× fix_prediction_after: @ jhqwepxvyaifwekshmvoavhqwepxvyaifwekshmvoa.lhqwepxvyaifwekshmvoang.Override public double curve ( double hqwepxvyaifwekshmvoa ) { if ( hqwepxvyaifwekshmvoa <= 0.5 ) { return ( 1 - ( out ( ( 1 - ( hqwepxvyaifwekshmvoa * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( hqwepxvyaifwekshmvoa * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; }

line_index: 592
bug_before_refactoring: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , double targetPct , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , targetPct , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; } <s> private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , double targetPct , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , targetPct , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; } <s> Fixed a bug which would happen with very aggressive autoscaling policies  Default back to split/merge interface in case the UpdateShardCount API returns an InvalidArgumentException
bug_after_refactoring: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String wsestepwjrvzzdyhfjus , int fvsircfjitonpyebnuyh , int vcdehrdhmckdlitekznq , double jpthcrlwlxzjgmhrktci , int ahgjmgrwctsjpejhnxju , int wmbaqsbjrfrsdnpylwfv , long blhxrfbrcocomrlzecaf , java.lang.Integer xekiyudmagfrxrivcmap , java.lang.Integer gyhbfcvtgtzrgnetrjfe ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , wsestepwjrvzzdyhfjus , fvsircfjitonpyebnuyh , vcdehrdhmckdlitekznq ) ) ; return scaleStream ( wsestepwjrvzzdyhfjus , fvsircfjitonpyebnuyh , vcdehrdhmckdlitekznq , jpthcrlwlxzjgmhrktci , ahgjmgrwctsjpejhnxju , wmbaqsbjrfrsdnpylwfv , blhxrfbrcocomrlzecaf , getOpenShardStack ( wsestepwjrvzzdyhfjus ) , xekiyudmagfrxrivcmap , gyhbfcvtgtzrgnetrjfe ) ; } <s> private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String wsestepwjrvzzdyhfjus , int fvsircfjitonpyebnuyh , int vcdehrdhmckdlitekznq , double jpthcrlwlxzjgmhrktci , int ahgjmgrwctsjpejhnxju , int wmbaqsbjrfrsdnpylwfv , long blhxrfbrcocomrlzecaf , java.lang.Integer xekiyudmagfrxrivcmap , java.lang.Integer gyhbfcvtgtzrgnetrjfe ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , wsestepwjrvzzdyhfjus , fvsircfjitonpyebnuyh , vcdehrdhmckdlitekznq ) ) ; return scaleStream ( wsestepwjrvzzdyhfjus , fvsircfjitonpyebnuyh , vcdehrdhmckdlitekznq , jpthcrlwlxzjgmhrktci , ahgjmgrwctsjpejhnxju , wmbaqsbjrfrsdnpylwfv , blhxrfbrcocomrlzecaf , getOpenShardStack ( wsestepwjrvzzdyhfjus ) , xekiyudmagfrxrivcmap , gyhbfcvtgtzrgnetrjfe ) ; } <s> Fixed a bug which would happen with very aggressive autoscaling policies  Default back to split/merge interface in case the UpdateShardCount API returns an InvalidArgumentException
fix_before_refactoring: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; }
fix_after_refactoring: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String wsestepwjrvzzdyhfjus , int fvsircfjitonpyebnuyh , int vcdehrdhmckdlitekznq , int ahgjmgrwctsjpejhnxju , int wmbaqsbjrfrsdnpylwfv , long blhxrfbrcocomrlzecaf , java.lang.Integer xekiyudmagfrxrivcmap , java.lang.Integer gyhbfcvtgtzrgnetrjfe ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , wsestepwjrvzzdyhfjus , fvsircfjitonpyebnuyh , vcdehrdhmckdlitekznq ) ) ; return scaleStream ( wsestepwjrvzzdyhfjus , fvsircfjitonpyebnuyh , vcdehrdhmckdlitekznq , ahgjmgrwctsjpejhnxju , wmbaqsbjrfrsdnpylwfv , blhxrfbrcocomrlzecaf , getOpenShardStack ( wsestepwjrvzzdyhfjus ) , xekiyudmagfrxrivcmap , gyhbfcvtgtzrgnetrjfe ) ; }
× fix_prediction_before: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , double targetPct , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , targetPct , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; }
× fix_prediction_after: private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String wsestepwjrvzzdyhfjus , int fvsircfjitonpyebnuyh , int vcdehrdhmckdlitekznq , double jpthcrlwlxzjgmhrktci , int ahgjmgrwctsjpejhnxju , int wmbaqsbjrfrsdnpylwfv , long blhxrfbrcocomrlzecaf , java.lang.Integer xekiyudmagfrxrivcmap , java.lang.Integer gyhbfcvtgtzrgnetrjfe ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , wsestepwjrvzzdyhfjus , fvsircfjitonpyebnuyh , vcdehrdhmckdlitekznq ) ) ; return scaleStream ( wsestepwjrvzzdyhfjus , fvsircfjitonpyebnuyh , vcdehrdhmckdlitekznq , jpthcrlwlxzjgmhrktci , ahgjmgrwctsjpejhnxju , wmbaqsbjrfrsdnpylwfv , blhxrfbrcocomrlzecaf , getOpenShardStack ( wsestepwjrvzzdyhfjus ) , xekiyudmagfrxrivannotation , gyhbfcvtgtzrgnetrjfe ) ; }

line_index: 593
bug_before_refactoring: public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } <s> public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } <s> Merge pull request #482 from smartdevicelink/bugfix/utest_lockScreenManagerTest  bugfix/utest_lockScreenManagerTest
bug_after_refactoring: public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel tbpqegzpbyvljxhlfgos ) { hmiLevel = tbpqegzpbyvljxhlfgos ; if ( ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_FULL ) ) || ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } <s> public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel tbpqegzpbyvljxhlfgos ) { hmiLevel = tbpqegzpbyvljxhlfgos ; if ( ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_FULL ) ) || ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } <s> Merge pull request #482 from smartdevicelink/bugfix/utest_lockScreenManagerTest  bugfix/utest_lockScreenManagerTest
fix_before_refactoring: public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( hmiVal != null ) { if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } else { setUserSelectedStatus ( false ) ; } }
fix_after_refactoring: public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel tbpqegzpbyvljxhlfgos ) { hmiLevel = tbpqegzpbyvljxhlfgos ; if ( tbpqegzpbyvljxhlfgos != null ) { if ( ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_FULL ) ) || ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } else { setUserSelectedStatus ( false ) ; } }
× fix_prediction_before: private synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; }
× fix_prediction_after: private synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel tbpqegzpbyvljxhlfgos ) { hmiLevel = tbpqegzpbyvljxhlfgos ; if ( ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_FULL ) ) || ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( tbpqegzpbyvljxhlfgos . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; }

line_index: 594
bug_before_refactoring: protected java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( amountOfParams ) ; } <s> protected java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( amountOfParams ) ; } <s> Fixed multithread issue
bug_after_refactoring: protected java.lang.reflect.Method getMethod ( int ihpwcnatrowbfdimnvhj ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( ihpwcnatrowbfdimnvhj ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( ihpwcnatrowbfdimnvhj , findMethod ( fullName , ihpwcnatrowbfdimnvhj ) ) ; } return methods . get ( ihpwcnatrowbfdimnvhj ) ; } <s> protected java.lang.reflect.Method getMethod ( int ihpwcnatrowbfdimnvhj ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( ihpwcnatrowbfdimnvhj ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( ihpwcnatrowbfdimnvhj , findMethod ( fullName , ihpwcnatrowbfdimnvhj ) ) ; } return methods . get ( ihpwcnatrowbfdimnvhj ) ; } <s> Fixed multithread issue
fix_before_refactoring: protected java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { synchronized ( this ) { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } } } return methods . get ( amountOfParams ) ; }
fix_after_refactoring: protected java.lang.reflect.Method getMethod ( int ihpwcnatrowbfdimnvhj ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( ihpwcnatrowbfdimnvhj ) ) ) { synchronized ( this ) { if ( ! ( methods . containsKey ( ihpwcnatrowbfdimnvhj ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( ihpwcnatrowbfdimnvhj , findMethod ( fullName , ihpwcnatrowbfdimnvhj ) ) ; } } } return methods . get ( ihpwcnatrowbfdimnvhj ) ; }
× fix_prediction_before: public java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( amountOfParams ) ; }
× fix_prediction_after: public java.lang.reflect.Method getMethod ( int ihpwcnatrowbfdimnvhj ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( ihpwcnatrowbfdimnvhj ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( ihpwcnatrowbfdimnvhj , findMethod ( fullName , ihpwcnatrowbfdimnvhj ) ) ; } return methods . get ( ihpwcnatrowbfdimnvhj ) ; }

line_index: 595
bug_before_refactoring: public void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } <s> public void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } <s> AbstractTypeSystem fixes (Issue 1476 & 1475) (#1620)  * Handle type parameter bounds when retrieving super types  * Reflect primitive type's base type and type parameter bounds in getSuperTypes() method  * Change getSuperTypes() to also return indirect super types (#1475)
bug_after_refactoring: public void removeType ( java.lang.String nemsipzczceaiqchfgjk ) { org.yakindu.base.types.Type type = typeRegistry . get ( nemsipzczceaiqchfgjk ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( nemsipzczceaiqchfgjk ) ; } } <s> public void removeType ( java.lang.String nemsipzczceaiqchfgjk ) { org.yakindu.base.types.Type type = typeRegistry . get ( nemsipzczceaiqchfgjk ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( nemsipzczceaiqchfgjk ) ; } } <s> AbstractTypeSystem fixes (Issue 1476 & 1475) (#1620)  * Handle type parameter bounds when retrieving super types  * Reflect primitive type's base type and type parameter bounds in getSuperTypes() method  * Change getSuperTypes() to also return indirect super types (#1475)
fix_before_refactoring: protected void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } }
fix_after_refactoring: protected void removeType ( java.lang.String nemsipzczceaiqchfgjk ) { org.yakindu.base.types.Type type = typeRegistry . get ( nemsipzczceaiqchfgjk ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( nemsipzczceaiqchfgjk ) ; } }
× fix_prediction_before: public void removeType ( java.lang.String name ) { if ( ( typeRegistry . get ( name ) ) != null ) { extendsRegistry . removeAll ( typeRegistry . get ( name ) ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } }
× fix_prediction_after: public boolean removeType ( java.lang.String nemsipzczceaiqchfgjk ) { org.yakindu.base.types.Type type = typeRegistry . get ( nemsipzczceaiqchfgjk ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( nemsipzczceaiqchfgjk ) ; return true ; } return false ; }

line_index: 596
bug_before_refactoring: public void HitOrStand ( Player x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x . lose ( _bet ) ; return; } else { HitOrStand ( x ) ; } } else { return; } } <s> public void HitOrStand ( Player x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x . lose ( _bet ) ; return; } else { HitOrStand ( x ) ; } } else { return; } } <s> Blackjack no longer takes a Player as input. Bugfixes to drawCard()
bug_after_refactoring: public void HitOrStand ( Player psyvhyuclslrovhxrrxj ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { psyvhyuclslrovhxrrxj . lose ( _bet ) ; return; } else { HitOrStand ( psyvhyuclslrovhxrrxj ) ; } } else { return; } } <s> public void HitOrStand ( Player psyvhyuclslrovhxrrxj ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { psyvhyuclslrovhxrrxj . lose ( _bet ) ; return; } else { HitOrStand ( psyvhyuclslrovhxrrxj ) ; } } else { return; } } <s> Blackjack no longer takes a Player as input. Bugfixes to drawCard()
fix_before_refactoring: public int HitOrStand ( int i ) { int x = i ; java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { x += drawCard () ; java.lang.System.out . println ( x ) ; if ( x > 21 ) { return x ; } else { HitOrStand ( x ) ; } } else { return x ; } return x ; }
fix_after_refactoring: public int HitOrStand ( int i ) { int psyvhyuclslrovhxrrxj = i ; java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { psyvhyuclslrovhxrrxj += drawCard () ; java.lang.System.out . println ( psyvhyuclslrovhxrrxj ) ; if ( psyvhyuclslrovhxrrxj > 21 ) { return psyvhyuclslrovhxrrxj ; } else { HitOrStand ( psyvhyuclslrovhxrrxj ) ; } } else { return psyvhyuclslrovhxrrxj ; } return psyvhyuclslrovhxrrxj ; }
× fix_prediction_before: public void HitOrStand () { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x . lose ( _bet ) ; return; } else { HitOrStand ( x ) ; } } else { return; } }
× fix_prediction_after: public Player HitOrStand () { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { return _bet ; } else { HitOrStand ( psyvhyuclslrovhxrrxj ) ; } } else { return null ; } }

line_index: 597
bug_before_refactoring: @ java.lang.Override public void insert ( E obj , int location ) { if ( ( location - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array [ ( location - 1 ) ] = obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } <s> @ java.lang.Override public void insert ( E obj , int location ) { if ( ( location - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array [ ( location - 1 ) ] = obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } <s> Bug fixes  Bug fixes for insert/removing
bug_after_refactoring: @ java.lang.Override public void insert ( E blxuhznyqplxwnqqazaf , int rmutjvociyzzcphfmcxe ) { if ( ( rmutjvociyzzcphfmcxe - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( rmutjvociyzzcphfmcxe - 1 ) , true ) ; array [ ( rmutjvociyzzcphfmcxe - 1 ) ] = blxuhznyqplxwnqqazaf ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } <s> @ java.lang.Override public void insert ( E blxuhznyqplxwnqqazaf , int rmutjvociyzzcphfmcxe ) { if ( ( rmutjvociyzzcphfmcxe - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( rmutjvociyzzcphfmcxe - 1 ) , true ) ; array [ ( rmutjvociyzzcphfmcxe - 1 ) ] = blxuhznyqplxwnqqazaf ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } <s> Bug fixes  Bug fixes for insert/removing
fix_before_refactoring: @ java.lang.Override public E remove ( int location ) { location = location - 1 ; if ( ( ( location < ( currentSize ) ) && ( location >= 0 ) ) && ( ! ( isEmpty () ) ) ) { E obj = array [ location ] ; ( currentSize ) -- ; dynamicResize ( false ) ; shiftElements ( location , false ) ; return obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } }
fix_after_refactoring: @ java.lang.Override public E remove ( int rmutjvociyzzcphfmcxe ) { rmutjvociyzzcphfmcxe = rmutjvociyzzcphfmcxe - 1 ; if ( ( ( rmutjvociyzzcphfmcxe < ( currentSize ) ) && ( rmutjvociyzzcphfmcxe >= 0 ) ) && ( ! ( isEmpty () ) ) ) { E blxuhznyqplxwnqqazaf = array [ rmutjvociyzzcphfmcxe ] ; ( currentSize ) -- ; dynamicResize ( false ) ; shiftElements ( rmutjvociyzzcphfmcxe , false ) ; return blxuhznyqplxwnqqazaf ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } }
× fix_prediction_before: @ java.lang.Override public int insert ( E obj , int location ) { if ( ( location - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array [ ( location - 1 ) ] = obj ; return; } else { return location ; } }
× fix_prediction_after: @ java.lang.Override public void insert ( E blxuhznyqplxwnqqazaf , int rmutjvociyzzcphfmcxe ) { if ( ( rmutjvociyzzcphfmcxe - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( rmutjvociyzzcphfmcxe - 1 ) , true ) ; array [ ( rmutjvociyzzcphfmcxe - 1 ) ] = blxuhznyqplxwnqqazaf ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } }

line_index: 599
bug_before_refactoring: @ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration = thingHandlers . remove ( thing . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } } } <s> @ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration = thingHandlers . remove ( thing . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } } } <s> Merge pull request #160 from qivicon/bug-456287  Fixed #456287: Added bridgeHandlerInitialized and bridgeHandlerDisposed ...
bug_after_refactoring: @ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.Thing weoszedaflybkuzwnhfk ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler > serviceRegistration = weoszedaflybkuzwnhfkHandlers . remove ( weoszedaflybkuzwnhfk . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler weoszedaflybkuzwnhfkHandler = ( ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( weoszedaflybkuzwnhfkHandler ) ; weoszedaflybkuzwnhfkHandler . dispose () ; if ( weoszedaflybkuzwnhfkHandler instanceof org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.BaseThingHandler ) ( weoszedaflybkuzwnhfkHandler ) ) . unsetBundleContext ( bundleContext ) ; } } } <s> @ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.Thing weoszedaflybkuzwnhfk ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler > serviceRegistration = weoszedaflybkuzwnhfkHandlers . remove ( weoszedaflybkuzwnhfk . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler weoszedaflybkuzwnhfkHandler = ( ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( weoszedaflybkuzwnhfkHandler ) ; weoszedaflybkuzwnhfkHandler . dispose () ; if ( weoszedaflybkuzwnhfkHandler instanceof org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.BaseThingHandler ) ( weoszedaflybkuzwnhfkHandler ) ) . unsetBundleContext ( bundleContext ) ; } } } <s> Merge pull request #160 from qivicon/bug-456287  Fixed #456287: Added bridgeHandlerInitialized and bridgeHandlerDisposed ...
fix_before_refactoring: private void unregisterHandler ( org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; serviceRegistration . unregister () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } }
fix_after_refactoring: private void unregisterHandler ( org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler > serviceRegistration ) { org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler weoszedaflybkuzwnhfkHandler = ( ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; removeHandler ( weoszedaflybkuzwnhfkHandler ) ; weoszedaflybkuzwnhfkHandler . dispose () ; serviceRegistration . unregister () ; if ( weoszedaflybkuzwnhfkHandler instanceof org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.BaseThingHandler ) ( weoszedaflybkuzwnhfkHandler ) ) . unsetBundleContext ( bundleContext ) ; } }
× fix_prediction_before: @ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration = thingHandlers . remove ( thing . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } } }
× fix_prediction_after: @ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.Thing weoszedaflybkuzwnhfk ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler > serviceRegistration = weoszedaflybkuzwnhfkHandlers . remove ( weoszedaflybkuzwnhfk . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler weoszedaflybkuzwnhfkHandler = ( ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( weoszedaflybkuzwnhfkHandler ) ; weoszedaflybkuzwnhfkHandler . dispose () ; if ( weoszedaflybkuzwnhfkHandler instanceof org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.weoszedaflybkuzwnhfk.binding.BaseThingHandler ) ( weoszedaflybkuzwnhfkHandler ) ) . unsetBundleContext ( bundleContext ) ; } } }

line_index: 605
bug_before_refactoring: public void setIncomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } } <s> public void setIncomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } } <s> fix bugs in portallayout addon
bug_after_refactoring: public void setIncomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome lhjvvdonvfovsgkcdeut ) { assert lhjvvdonvfovsgkcdeut != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( lhjvvdonvfovsgkcdeut . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } } <s> public void setIncomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome lhjvvdonvfovsgkcdeut ) { assert lhjvvdonvfovsgkcdeut != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( lhjvvdonvfovsgkcdeut . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } } <s> fix bugs in portallayout addon
fix_before_refactoring: public void setIncomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( outcomingPortletCandidate ) == pc ) { outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { incomingPortletCandidate = pc ; } }
fix_after_refactoring: public void setIncomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome lhjvvdonvfovsgkcdeut ) { assert lhjvvdonvfovsgkcdeut != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( lhjvvdonvfovsgkcdeut . getContentWidget () ) ; if ( ( outcomingPortletCandidate ) == pc ) { outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { incomingPortletCandidate = pc ; } }
× fix_prediction_before: public void setIncomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { if ( portletWidget != null ) { com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } } }
× fix_prediction_after: public void setIncomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome lhjvvdonvfovsgkcdeut ) { assert lhjvvdonvfovsgkcdeut != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( lhjvvdonvfovsgkcdeut . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } }

line_index: 606
bug_before_refactoring: static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } <s> static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } <s> Fixes issue with globally scoped document element
bug_after_refactoring: static void processCourseClasses ( org.jdom2.Element crqeueinctyceckdedtc ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( crqeueinctyceckdedtc ) ) ; java.util.List < org.jdom2.Element > classes = crqeueinctyceckdedtc . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } <s> static void processCourseClasses ( org.jdom2.Element crqeueinctyceckdedtc ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( crqeueinctyceckdedtc ) ) ; java.util.List < org.jdom2.Element > classes = crqeueinctyceckdedtc . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } <s> Fixes issue with globally scoped document element
fix_before_refactoring: static void processCourseClasses ( org.jdom2.Element response , org.jdom2.Element courseClass ) throws java.lang.Exception { response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } }
fix_after_refactoring: static void processCourseClasses ( org.jdom2.Element response , org.jdom2.Element crqeueinctyceckdedtc ) throws java.lang.Exception { response . addContent ( edu.stanford.CourseTrans . createNewCourse ( crqeueinctyceckdedtc ) ) ; java.util.List < org.jdom2.Element > classes = crqeueinctyceckdedtc . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } }
× fix_prediction_before: public static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } }
× fix_prediction_after: public static void processCourseClasses ( org.jdom2.Element crqeueinctyceckdedtc ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( crqeueinctyceckdedtc ) ) ; java.util.List < org.jdom2.Element > classes = crqeueinctyceckdedtc . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } }

line_index: 607
bug_before_refactoring: public java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } <s> public java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } <s> Fixed issue on sequence assignment on SaleOrder
bug_after_refactoring: public java.lang.String getSequence ( com.axelor.apps.base.db.Company yycabfsbnneuuppctbnx ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , yycabfsbnneuuppctbnx ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , yycabfsbnneuuppctbnx . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } <s> public java.lang.String getSequence ( com.axelor.apps.base.db.Company yycabfsbnneuuppctbnx ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , yycabfsbnneuuppctbnx ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , yycabfsbnneuuppctbnx . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } <s> Fixed issue on sequence assignment on SaleOrder
fix_before_refactoring: private java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; }
fix_after_refactoring: private java.lang.String getSequence ( com.axelor.apps.base.db.Company yycabfsbnneuuppctbnx ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , yycabfsbnneuuppctbnx ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , yycabfsbnneuuppctbnx . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; }
× fix_prediction_before: public java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; }
× fix_prediction_after: public java.lang.String getSequence ( com.axelor.apps.base.db.Company yycabfsbnneuuppctbnx ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , yycabfsbnneuuppctbnx ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , yycabfsbnneuuppctbnx . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; }

line_index: 608
bug_before_refactoring: public boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } <s> public boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } <s> Finished Victory Point manager unit tests  It fixed a lot of bugs so I’m glad I did it
bug_after_refactoring: public boolean setPlayerToHaveLargestArmy ( int qqtxzorqheaslsmzkshi ) { if ( ( qqtxzorqheaslsmzkshi < 0 ) || ( qqtxzorqheaslsmzkshi > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = qqtxzorqheaslsmzkshi ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } <s> public boolean setPlayerToHaveLargestArmy ( int qqtxzorqheaslsmzkshi ) { if ( ( qqtxzorqheaslsmzkshi < 0 ) || ( qqtxzorqheaslsmzkshi > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = qqtxzorqheaslsmzkshi ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } <s> Finished Victory Point manager unit tests  It fixed a lot of bugs so I’m glad I did it
fix_before_refactoring: private boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; }
fix_after_refactoring: private boolean setPlayerToHaveLargestArmy ( int qqtxzorqheaslsmzkshi ) { if ( ( qqtxzorqheaslsmzkshi < 0 ) || ( qqtxzorqheaslsmzkshi > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = qqtxzorqheaslsmzkshi ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; }
× fix_prediction_before: public boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; }
× fix_prediction_after: public boolean setPlayerToHaveLargestArmy ( int qqtxzorqheaslsmzkshi ) { if ( ( qqtxzorqheaslsmzkshi < 0 ) || ( qqtxzorqheaslsmzkshi > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = qqtxzorqheaslsmzkshi ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; }

line_index: 609
bug_before_refactoring: java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; } <s> java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; } <s> 98% done  bugfixing now  almost there
bug_after_refactoring: java.lang.String executeChange ( org.bukkit.entity.Player pgtgxhhegbuqorcybebk , java.lang.String tzjkbkcxhscqczcyoxwz , java.lang.String oavoezulrvkikdujhytv , java.lang.String ykuhwficeudpgmrkpfbj ) { java.lang.String msg ; if ( changeGroup ( pgtgxhhegbuqorcybebk , tzjkbkcxhscqczcyoxwz , oavoezulrvkikdujhytv , ykuhwficeudpgmrkpfbj ) ) { msg = ( ( ( ( "Successfully changed " + pgtgxhhegbuqorcybebk ) + " to group " ) + oavoezulrvkikdujhytv ) + " in ykuhwficeudpgmrkpfbj " ) + ykuhwficeudpgmrkpfbj ; } else { msg = ( ( ( ( "Unsuccessfully changed " + pgtgxhhegbuqorcybebk ) + " to group " ) + oavoezulrvkikdujhytv ) + " in ykuhwficeudpgmrkpfbj " ) + ykuhwficeudpgmrkpfbj ; } return msg ; } <s> java.lang.String executeChange ( org.bukkit.entity.Player pgtgxhhegbuqorcybebk , java.lang.String tzjkbkcxhscqczcyoxwz , java.lang.String oavoezulrvkikdujhytv , java.lang.String ykuhwficeudpgmrkpfbj ) { java.lang.String msg ; if ( changeGroup ( pgtgxhhegbuqorcybebk , tzjkbkcxhscqczcyoxwz , oavoezulrvkikdujhytv , ykuhwficeudpgmrkpfbj ) ) { msg = ( ( ( ( "Successfully changed " + pgtgxhhegbuqorcybebk ) + " to group " ) + oavoezulrvkikdujhytv ) + " in ykuhwficeudpgmrkpfbj " ) + ykuhwficeudpgmrkpfbj ; } else { msg = ( ( ( ( "Unsuccessfully changed " + pgtgxhhegbuqorcybebk ) + " to group " ) + oavoezulrvkikdujhytv ) + " in ykuhwficeudpgmrkpfbj " ) + ykuhwficeudpgmrkpfbj ; } return msg ; } <s> 98% done  bugfixing now  almost there
fix_before_refactoring: java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; }
fix_after_refactoring: java.lang.String executeChange ( org.bukkit.entity.Player pgtgxhhegbuqorcybebk , java.lang.String tzjkbkcxhscqczcyoxwz , java.lang.String oavoezulrvkikdujhytv , java.lang.String ykuhwficeudpgmrkpfbj ) { java.lang.String msg ; if ( changeGroup ( pgtgxhhegbuqorcybebk , tzjkbkcxhscqczcyoxwz , oavoezulrvkikdujhytv , ykuhwficeudpgmrkpfbj ) ) { msg = ( ( ( ( "Successfully changed " + ( pgtgxhhegbuqorcybebk . getName () ) ) + " to group " ) + oavoezulrvkikdujhytv ) + " in ykuhwficeudpgmrkpfbj " ) + ykuhwficeudpgmrkpfbj ; } else { msg = ( ( ( ( "Unsuccessfully changed " + ( pgtgxhhegbuqorcybebk . getName () ) ) + " to group " ) + oavoezulrvkikdujhytv ) + " in ykuhwficeudpgmrkpfbj " ) + ykuhwficeudpgmrkpfbj ; } return msg ; }
× fix_prediction_before: java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup ) ) { msg = ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; }
× fix_prediction_after: java.lang.String executeChange ( org.bukkit.entity.Player pgtgxhhegbuqorcybebk , java.lang.String tzjkbkcxhscqczcyoxwz , java.lang.String oavoezulrvkikdujhytv , java.lang.String ykuhwficeudpgmrkpfbj ) { java.lang.String msg ; if ( changeGroup ( pgtgxhhegbuqorcybebk , tzjkbkcxhscqczcyoxwz , oavoezulrvkikdujhytv , ykuhwficeudpgmrkpfbj ) ) { msg = ( ( ( ( ( "Successfully changed " + pgtgxhhegbuqorcybebk ) + " to group " ) + oavoezulrvkikdujhytv ) + " in ykuhwficeudpgmrkpfbj " ) + ykuhwficeudpgmrkpfbj ; } else { msg = ( ( ( ( ( "Unsuccessfully changed " + pgtgxhhegbuqorcybebk ) + " to group " ) + oavoezulrvkikdujhytv ) + " in ykuhwficeudpgmrkpfbj " ) + ykuhwficeudpgmrkpfbj ; } return msg ; }

line_index: 610
bug_before_refactoring: @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
bug_after_refactoring: @ java.lang.Override public void invoke ( java.util.Scanner segtygewhpxxthrkysmm ) { final java.lang.String name = ( segtygewhpxxthrkysmm . hasNext () ) ? segtygewhpxxthrkysmm . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> @ java.lang.Override public void invoke ( java.util.Scanner segtygewhpxxthrkysmm ) { final java.lang.String name = ( segtygewhpxxthrkysmm . hasNext () ) ? segtygewhpxxthrkysmm . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } <s> Fixed the bugs!  With Himani's help  we were able to debug!! I have one warning (but I think it is jsut on my computer so check) but this branch is ready to commit and Merge! :D
fix_before_refactoring: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
fix_after_refactoring: @ java.lang.Override public void invoke ( java.util.List < java.lang.String > segtygewhpxxthrkysmm ) { final java.lang.String name = segtygewhpxxthrkysmm . get ( 0 ) ; segtygewhpxxthrkysmm . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
× fix_prediction_before: @ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = args . nextLine () . trim () ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
× fix_prediction_after: @ java.lang.Override public void invoke ( java.util.Scanner segtygewhpxxthrkysmm ) { final java.lang.String name = ( segtygewhpxxthrkysmm . hasNext () ) ? segtygewhpxxthrkysmm . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { context . create ( name ) ; } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }

line_index: 611
bug_before_refactoring: public entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } <s> public entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } <s> saveSesion method added to class bdUtil and some errors fixed
bug_after_refactoring: public entity.Usuario getUsrByName ( java.lang.String krzkjfyxgbtfcyagpqas ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + krzkjfyxgbtfcyagpqas ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } <s> public entity.Usuario getUsrByName ( java.lang.String krzkjfyxgbtfcyagpqas ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + krzkjfyxgbtfcyagpqas ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } <s> saveSesion method added to class bdUtil and some errors fixed
fix_before_refactoring: private entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; }
fix_after_refactoring: private entity.Usuario getUsrByName ( java.lang.String krzkjfyxgbtfcyagpqas ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + krzkjfyxgbtfcyagpqas ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; }
× fix_prediction_before: public entity.Usuario getUsrByName ( java.lang.String usr ) { if ( usr != null ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } return null ; }
× fix_prediction_after: public entity.Usuario getUsrByName ( java.lang.String id ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + id ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; }

line_index: 612
bug_before_refactoring: public java.util.ArrayList < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; } <s> public java.util.ArrayList < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; } <s> bugfixes to object get method
bug_after_refactoring: public java.util.ArrayList < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer vltzcoeandbelhubrzts , java.lang.String pbytrhsoagekximlnchy ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = vltzcoeandbelhubrzts . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( pbytrhsoagekximlnchy ) ) { o . add ( object ) ; } } return o ; } <s> public java.util.ArrayList < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer vltzcoeandbelhubrzts , java.lang.String pbytrhsoagekximlnchy ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = vltzcoeandbelhubrzts . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( pbytrhsoagekximlnchy ) ) { o . add ( object ) ; } } return o ; } <s> bugfixes to object get method
fix_before_refactoring: public java.util.ArrayList < com.badlogic.gdx.maps.MapObject > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < com.badlogic.gdx.maps.MapObject > o = new java.util.ArrayList < com.badlogic.gdx.maps.MapObject > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; }
fix_after_refactoring: public java.util.ArrayList < com.badlogic.gdx.maps.MapObject > checkObjectFor ( com.badlogic.gdx.maps.MapLayer vltzcoeandbelhubrzts , java.lang.String pbytrhsoagekximlnchy ) { java.util.ArrayList < com.badlogic.gdx.maps.MapObject > o = new java.util.ArrayList < com.badlogic.gdx.maps.MapObject > () ; com.badlogic.gdx.maps.MapObjects objects = vltzcoeandbelhubrzts . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( pbytrhsoagekximlnchy ) ) { o . add ( object ) ; } } return o ; }
× fix_prediction_before: public static java.util.ArrayList < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; }
× fix_prediction_after: public java.util.List < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer vltzcoeandbelhubrzts , java.lang.String pbytrhsoagekximlnchy ) { java.util.List < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = vltzcoeandbelhubrzts . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( pbytrhsoagekximlnchy ) ) { o . add ( object ) ; } } return o ; }

line_index: 613
bug_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } <s> @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } <s> Refine doc and fix bugs in rest (#514)  * refine doc and fix bugs in rest  * refactor list actions
bug_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{woohwppkbtjgfnxcppmc}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String ybdxlptbbpivgtwbvero , @ javax.ws.rs.PathParam ( value = "woohwppkbtjgfnxcppmc" ) java.lang.String woohwppkbtjgfnxcppmc ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( woohwppkbtjgfnxcppmc + " " ) + ybdxlptbbpivgtwbvero ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } <s> @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{woohwppkbtjgfnxcppmc}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String ybdxlptbbpivgtwbvero , @ javax.ws.rs.PathParam ( value = "woohwppkbtjgfnxcppmc" ) java.lang.String woohwppkbtjgfnxcppmc ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( woohwppkbtjgfnxcppmc + " " ) + ybdxlptbbpivgtwbvero ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } <s> Refine doc and fix bugs in rest (#514)  * refine doc and fix bugs in rest  * refactor list actions
fix_before_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType , @ javax.ws.rs.FormParam ( value = "args" ) java.lang.String args ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } }
fix_after_refactoring: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{woohwppkbtjgfnxcppmc}" ) public javax.ws.rs.core.Response submitCmdlet ( @ javax.ws.rs.PathParam ( value = "woohwppkbtjgfnxcppmc" ) java.lang.String woohwppkbtjgfnxcppmc , @ javax.ws.rs.FormParam ( value = "ybdxlptbbpivgtwbvero" ) java.lang.String ybdxlptbbpivgtwbvero ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( woohwppkbtjgfnxcppmc + " " ) + ybdxlptbbpivgtwbvero ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } }
× fix_prediction_before: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType , @ javax.ws.rs.PathParam ( value = " args" ) java.lang.String args ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( actionType , args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } }
× fix_prediction_after: @ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{woohwppkbtjgfnxcppmc}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String ybdxlptbbpivgtwbvero ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( woohwppkbtjgfnxcppmc + " " ) + ybdxlptbbpivgtwbvero ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } }

line_index: 614
bug_before_refactoring: public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; } <s> public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; } <s> Fixed Gameover issues and down arrow scoring
bug_after_refactoring: public int lineClearCalc ( int yoprtafjfcciqsaibpze ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( yoprtafjfcciqsaibpze , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( yoprtafjfcciqsaibpze , 2 ) ) ) + ( ( 23 * yoprtafjfcciqsaibpze ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; } <s> public int lineClearCalc ( int yoprtafjfcciqsaibpze ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( yoprtafjfcciqsaibpze , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( yoprtafjfcciqsaibpze , 2 ) ) ) + ( ( 23 * yoprtafjfcciqsaibpze ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; } <s> Fixed Gameover issues and down arrow scoring
fix_before_refactoring: public int lineClearCalc ( int linesCleared ) { int score = 0 ; if ( linesCleared > 0 ) { score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; } return score * ( pointsPerLine ) ; }
fix_after_refactoring: public int lineClearCalc ( int yoprtafjfcciqsaibpze ) { int score = 0 ; if ( yoprtafjfcciqsaibpze > 0 ) { score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( yoprtafjfcciqsaibpze , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( yoprtafjfcciqsaibpze , 2 ) ) ) + ( ( 23 * yoprtafjfcciqsaibpze ) / 6.0 ) ) - 2 ) ) ; } return score * ( pointsPerLine ) ; }
× fix_prediction_before: public int lineClearCalc () { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; }
× fix_prediction_after: public int lineClearCalc ( int yoprtafjfcciqsaibpze ) { int score = ( ( int ) ( ( ( ( ( ( java.lang.Math . pow ( yoprtafjfcciqsaibpze , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( yoprtafjfcciqsaibpze , 2 ) ) ) + ( ( 23 * yoprtafjfcciqsaibpze ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; }

line_index: 615
bug_before_refactoring: private void collapseViews ( android.view.View fab , final android.view.View cardview , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> private void collapseViews ( android.view.View fab , final android.view.View cardview , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> minor lib update - mv export feat on actionBar - bug fix: rm anchor on recView from fab
bug_after_refactoring: private void collapseViews ( android.view.View aavhfwklzovgdahmwuuh , final android.view.View rjclxmrjxesbwlsobjvm , final boolean okqsbrarsyunqhnyijgk ) { android.animation.Animator aavhfwklzovgdahmwuuhAnimator = ( okqsbrarsyunqhnyijgk ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( aavhfwklzovgdahmwuuh , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( aavhfwklzovgdahmwuuh , false ) ; aavhfwklzovgdahmwuuhAnimator . start () ; rjclxmrjxesbwlsobjvm . setVisibility ( ( okqsbrarsyunqhnyijgk ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> private void collapseViews ( android.view.View aavhfwklzovgdahmwuuh , final android.view.View rjclxmrjxesbwlsobjvm , final boolean okqsbrarsyunqhnyijgk ) { android.animation.Animator aavhfwklzovgdahmwuuhAnimator = ( okqsbrarsyunqhnyijgk ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( aavhfwklzovgdahmwuuh , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( aavhfwklzovgdahmwuuh , false ) ; aavhfwklzovgdahmwuuhAnimator . start () ; rjclxmrjxesbwlsobjvm . setVisibility ( ( okqsbrarsyunqhnyijgk ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } <s> minor lib update - mv export feat on actionBar - bug fix: rm anchor on recView from fab
fix_before_refactoring: private void collapseViews ( android.view.View fab , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; }
fix_after_refactoring: private void collapseViews ( android.view.View aavhfwklzovgdahmwuuh , final boolean okqsbrarsyunqhnyijgk ) { android.animation.Animator aavhfwklzovgdahmwuuhAnimator = ( okqsbrarsyunqhnyijgk ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( aavhfwklzovgdahmwuuh , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( aavhfwklzovgdahmwuuh , false ) ; aavhfwklzovgdahmwuuhAnimator . start () ; }
× fix_prediction_before: private void collapseViews ( android.view.View fab , final android.view.View cardview ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; }
× fix_prediction_after: private void collapseViews ( android.view.View aavhfwklzovgdahmwuuh , final android.view.View rjclxmrjxesbwlsobjvm , final boolean okqsbrarsyunqhnyijgk ) { if ( okqsbrarsyunqhnyijgk ) { android.animation.Animator aavhfwklzovgdahmwuuhAnimator = ( okqsbrarsyunqhnyijgk ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( aavhfwklzovgdahmwuuh , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( aavhfwklzovgdahmwuuh , false ) ; aavhfwklzovgdahmwuuhAnimator . start () ; rjclxmrjxesbwlsobjvm . setVisibility ( ( okqsbrarsyunqhnyijgk ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; } }

line_index: 616
bug_before_refactoring: @ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } <s> @ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } <s> fix bug
bug_after_refactoring: @ java.lang.Override public void onActivityStarted ( android.app.Activity earmjzhhgvpuslwmavda ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } <s> @ java.lang.Override public void onActivityStarted ( android.app.Activity earmjzhhgvpuslwmavda ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } <s> fix bug
fix_before_refactoring: @ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; if ( ( appCount ) == 1 ) { com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } }
fix_after_refactoring: @ java.lang.Override public void onActivityStarted ( android.app.Activity earmjzhhgvpuslwmavda ) { ( appCount ) ++ ; if ( ( appCount ) == 1 ) { com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } }
× fix_prediction_before: @ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; if ( ( appCount ) >= 0 ) { com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } }
× fix_prediction_after: @ java.lang.Override public void onActivityStarted ( android.content.Context context ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } }

line_index: 617
bug_before_refactoring: @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; } <s> @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; } <s> Fixed CodeStyle and bugs
bug_after_refactoring: @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{hvdpzcjatlujtsgsrhvr}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer hvdpzcjatlujtsgsrhvr , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store eeshlesdyliphjkjmlwd ) { com.softserve.if072.common.model.Store oldStore = eeshlesdyliphjkjmlwdService . getStoreByNameAndUser ( eeshlesdyliphjkjmlwd . getName () , eeshlesdyliphjkjmlwd . getAddress () , hvdpzcjatlujtsgsrhvr ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , eeshlesdyliphjkjmlwd . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; } <s> @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{hvdpzcjatlujtsgsrhvr}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer hvdpzcjatlujtsgsrhvr , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store eeshlesdyliphjkjmlwd ) { com.softserve.if072.common.model.Store oldStore = eeshlesdyliphjkjmlwdService . getStoreByNameAndUser ( eeshlesdyliphjkjmlwd . getName () , eeshlesdyliphjkjmlwd . getAddress () , hvdpzcjatlujtsgsrhvr ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , eeshlesdyliphjkjmlwd . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; } <s> Fixed CodeStyle and bugs
fix_before_refactoring: @ org.springframework.security.access.prepost.PreAuthorize ( value = "#store != null && #store.user != null && #store.user.id == authentication.user.id" ) @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; return oldStore ; }
fix_after_refactoring: @ org.springframework.security.access.prepost.PreAuthorize ( value = "#eeshlesdyliphjkjmlwd != null && #eeshlesdyliphjkjmlwd.user != null && #eeshlesdyliphjkjmlwd.user.id == authentication.user.id" ) @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{hvdpzcjatlujtsgsrhvr}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer hvdpzcjatlujtsgsrhvr , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store eeshlesdyliphjkjmlwd ) { com.softserve.if072.common.model.Store oldStore = eeshlesdyliphjkjmlwdService . getStoreByNameAndUser ( eeshlesdyliphjkjmlwd . getName () , eeshlesdyliphjkjmlwd . getAddress () , hvdpzcjatlujtsgsrhvr ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , eeshlesdyliphjkjmlwd . getName () ) ) ; return oldStore ; }
× fix_prediction_before: @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { if ( store != null ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; return oldStore ; } else return null ; }
× fix_prediction_after: @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{hvdpzcjatlujtsgsrhvr}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store eeshlesdyliphjkjmlwd ) { com.softserve.if072.common.model.Store oldStore = eeshlesdyliphjkjmlwdService . getStoreByNameAndUser ( eeshlesdyliphjkjmlwd . getName () , eeshlesdyliphjkjmlwd . getAddress () , hvdpzcjatlujtsgsrhvr ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , eeshlesdyliphjkjmlwd . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; }

line_index: 619
bug_before_refactoring: private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } <s> private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } <s> Various bugfixes and improvements
bug_after_refactoring: private static java.lang.String join ( java.lang.String [] gqijntspjfentwlzemfv , java.lang.String lsrasoejiabohiwkfyqp , int ewsuovhkgfxychzcyyve ) { java.lang.String s = gqijntspjfentwlzemfv [ ewsuovhkgfxychzcyyve ] ; int i = 0 ; for ( java.lang.String part : gqijntspjfentwlzemfv ) { if ( i > ewsuovhkgfxychzcyyve ) s = ( ( ( s + " " ) + lsrasoejiabohiwkfyqp ) + " " ) + part ; i ++ ; } return s ; } <s> private static java.lang.String join ( java.lang.String [] gqijntspjfentwlzemfv , java.lang.String lsrasoejiabohiwkfyqp , int ewsuovhkgfxychzcyyve ) { java.lang.String s = gqijntspjfentwlzemfv [ ewsuovhkgfxychzcyyve ] ; int i = 0 ; for ( java.lang.String part : gqijntspjfentwlzemfv ) { if ( i > ewsuovhkgfxychzcyyve ) s = ( ( ( s + " " ) + lsrasoejiabohiwkfyqp ) + " " ) + part ; i ++ ; } return s ; } <s> Various bugfixes and improvements
fix_before_refactoring: private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int offset ) { java.lang.String s = set [ offset ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > offset ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; }
fix_after_refactoring: private static java.lang.String join ( java.lang.String [] gqijntspjfentwlzemfv , java.lang.String lsrasoejiabohiwkfyqp , int offgqijntspjfentwlzemfv ) { java.lang.String s = gqijntspjfentwlzemfv [ offgqijntspjfentwlzemfv ] ; int i = 0 ; for ( java.lang.String part : gqijntspjfentwlzemfv ) { if ( i > offgqijntspjfentwlzemfv ) s = ( ( ( s + " " ) + lsrasoejiabohiwkfyqp ) + " " ) + part ; i ++ ; } return s ; }
× fix_prediction_before: public static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; }
× fix_prediction_after: public static java.lang.String join ( java.lang.String [] gqijntspjfentwlzemfv , java.lang.String lsrasoejiabohiwkfyqp , int ewsuovhkgfxychzcyyve ) { java.lang.String s = gqijntspjfentwlzemfv [ ewsuovhkgfxychzcyyve ] ; int i = 0 ; for ( java.lang.String part : gqijntspjfentwlzemfv ) { if ( i > ewsuovhkgfxychzcyyve ) s = ( ( ( s + " " ) + lsrasoejiabohiwkfyqp ) + " " ) + part ; i ++ ; } return s ; }

line_index: 620
bug_before_refactoring: public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } handleNode ( jsonNode , ops ) ; } <s> public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } handleNode ( jsonNode , ops ) ; } <s> Fix HTTP Status Code for error responses per JSON over HTTP specification at http://www.jsonrpc.org/historical/json-rpc-over-http.html#errors
bug_after_refactoring: public void handle ( java.io.InputStream mafkfaqjqsdqhniapqlp , java.io.OutputStream gdcuzipjrljwkrcjyiaf ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( mafkfaqjqsdqhniapqlp , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( gdcuzipjrljwkrcjyiaf , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } handleNode ( jsonNode , gdcuzipjrljwkrcjyiaf ) ; } <s> public void handle ( java.io.InputStream mafkfaqjqsdqhniapqlp , java.io.OutputStream gdcuzipjrljwkrcjyiaf ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( mafkfaqjqsdqhniapqlp , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( gdcuzipjrljwkrcjyiaf , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } handleNode ( jsonNode , gdcuzipjrljwkrcjyiaf ) ; } <s> Fix HTTP Status Code for error responses per JSON over HTTP specification at http://www.jsonrpc.org/historical/json-rpc-over-http.html#errors
fix_before_refactoring: public int handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return - 32700 ; } return handleNode ( jsonNode , ops ) ; }
fix_after_refactoring: public int handle ( java.io.InputStream mafkfaqjqsdqhniapqlp , java.io.OutputStream gdcuzipjrljwkrcjyiaf ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( mafkfaqjqsdqhniapqlp , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( gdcuzipjrljwkrcjyiaf , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return - 32700 ; } return handleNode ( jsonNode , gdcuzipjrljwkrcjyiaf ) ; }
× fix_prediction_before: public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } handleNode ( jsonNode , ops ) ; }
× fix_prediction_after: public void handle ( java.io.InputStream mafkfaqjqsdqhniapqlp , java.io.OutputStream gdcuzipjrljwkrcjyiaf ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( mafkfaqjqsdqhniapqlp , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( gdcuzipjrljwkrcjyiaf , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return; } handleNode ( jsonNode , gdcuzipjrljwkrcjyiaf ) ; }

line_index: 621
bug_before_refactoring: public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; while ( mostsimilar . iterator () . hasNext () ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } } <s> public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; while ( mostsimilar . iterator () . hasNext () ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } } <s> Bug fixes (tons). The model still hangs :-(
bug_after_refactoring: public void link ( internetz.Artifact eyjhcqbuzkdkabucapop ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , eyjhcqbuzkdkabucapop ) ; while ( mostsimilar . iterator () . hasNext () ) { eyjhcqbuzkdkabucapop . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } } <s> public void link ( internetz.Artifact eyjhcqbuzkdkabucapop ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , eyjhcqbuzkdkabucapop ) ; while ( mostsimilar . iterator () . hasNext () ) { eyjhcqbuzkdkabucapop . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } } <s> Bug fixes (tons). The model still hangs :-(
fix_before_refactoring: public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; int index = 0 ; while ( index < ( mostsimilar . size () ) ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . get ( index ) ) ) ) ; index ++ ; } }
fix_after_refactoring: public void link ( internetz.Artifact eyjhcqbuzkdkabucapop ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , eyjhcqbuzkdkabucapop ) ; int index = 0 ; while ( index < ( mostsimilar . size () ) ) { eyjhcqbuzkdkabucapop . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . get ( index ) ) ) ) ; index ++ ; } }
× fix_prediction_before: public void link ( internetz.Artifact newart ) { if ( ( bookmarks ) != null ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; while ( mostsimilar . iterator () . hasNext () ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } } }
× fix_prediction_after: public boolean link ( internetz.Artifact eyjhcqbuzkdkabucapop ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , eyjhcqbuzkdkabucapop ) ; while ( mostsimilar . iterator () . hasNext () ) { eyjhcqbuzkdkabucapop . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } return true ; }

line_index: 622
bug_before_refactoring: @ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } } <s> @ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } } <s> Fix infinite recursion bug during setGoalTarget  CraftBukkit changed return type of setGoalTarget to boolean from void. This prevented fmob setGoalTarget from overriding the parent's so the wrong version of the function was called. Fix is to change return type of fmob setGoalTarget to boolean.
bug_after_refactoring: @ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving romgszgmqfxisbekalau , org.bukkit.event.entity.EntityTargetEvent.TargetReason zzsvldpnbplqgfqhyszt , boolean hgicfwdxfekouyomuuqd ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } } <s> @ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving romgszgmqfxisbekalau , org.bukkit.event.entity.EntityTargetEvent.TargetReason zzsvldpnbplqgfqhyszt , boolean hgicfwdxfekouyomuuqd ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } } <s> Fix infinite recursion bug during setGoalTarget  CraftBukkit changed return type of setGoalTarget to boolean from void. This prevented fmob setGoalTarget from overriding the parent's so the wrong version of the function was called. Fix is to change return type of fmob setGoalTarget to boolean.
fix_before_refactoring: @ java.lang.Override public boolean setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } return true ; }
fix_after_refactoring: @ java.lang.Override public boolean setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving romgszgmqfxisbekalau , org.bukkit.event.entity.EntityTargetEvent.TargetReason zzsvldpnbplqgfqhyszt , boolean hgicfwdxfekouyomuuqd ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } return true ; }
× fix_prediction_before: @ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , fireEvent ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , fireEvent ) ; } }
× fix_prediction_after: @ java.lang.Override public boolean setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving romgszgmqfxisbekalau , org.bukkit.event.entity.EntityTargetEvent.TargetReason zzsvldpnbplqgfqhyszt , boolean hgicfwdxfekouyomuuqd ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { return super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { return super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } }

line_index: 623
bug_before_refactoring: private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; } <s> private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; } <s> Cleanup tests from adding H2. Remove unused import  make fields final  use try-with-resources to close JDBC result sets and statements  and document the H2 connection parameters.  Other changes:  * Fix javadoc errors.
bug_after_refactoring: private boolean isAccessorGroup ( java.lang.String hjbjwryevkurejuytwsx ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + hjbjwryevkurejuytwsx ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; } <s> private boolean isAccessorGroup ( java.lang.String hjbjwryevkurejuytwsx ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + hjbjwryevkurejuytwsx ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; } <s> Cleanup tests from adding H2. Remove unused import  make fields final  use try-with-resources to close JDBC result sets and statements  and document the H2 connection parameters.  Other changes:  * Fix javadoc errors.
fix_before_refactoring: private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { try ( java.sql.Statement stmt = jdbcFixture . getConnection () . createStatement () ; java.sql.ResultSet rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ) { if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } return false ; }
fix_after_refactoring: private boolean isAccessorGroup ( java.lang.String hjbjwryevkurejuytwsx ) throws java.sql.SQLException { try ( java.sql.Statement stmt = jdbcFixture . getConnection () . createStatement () ; java.sql.ResultSet rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + hjbjwryevkurejuytwsx ) + "'" ) ) ) { if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } return false ; }
× fix_prediction_before: private boolean isAccessorGroup ( final java.lang.String accessorName ) throws java.sql.SQLException { try { final java.sql.Statement stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; }
× fix_prediction_after: private boolean isAccessorGroup ( java.lang.String user_name ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + user_name ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; } return false ; }

line_index: 624
bug_before_refactoring: private long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } <s> private long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } <s> Pulish 1.0.0.Beta  Fixed the TypedQueryPathProcessor's bug reported by customer
bug_after_refactoring: private long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass blnfdviqzvlovxievieg , java.lang.String dibjgccvctnjequemrmv ) throws java.io.IOException { long serialVersionUID = ( dibjgccvctnjequemrmv != null ) ? dibjgccvctnjequemrmv . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : blnfdviqzvlovxievieg . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } <s> private long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass blnfdviqzvlovxievieg , java.lang.String dibjgccvctnjequemrmv ) throws java.io.IOException { long serialVersionUID = ( dibjgccvctnjequemrmv != null ) ? dibjgccvctnjequemrmv . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : blnfdviqzvlovxievieg . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } <s> Pulish 1.0.0.Beta  Fixed the TypedQueryPathProcessor's bug reported by customer
fix_before_refactoring: private static long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; }
fix_after_refactoring: private static long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass blnfdviqzvlovxievieg , java.lang.String dibjgccvctnjequemrmv ) throws java.io.IOException { long serialVersionUID = ( dibjgccvctnjequemrmv != null ) ? dibjgccvctnjequemrmv . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : blnfdviqzvlovxievieg . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; }
× fix_prediction_before: public long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; }
× fix_prediction_after: protected long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass blnfdviqzvlovxievieg , java.lang.String dibjgccvctnjequemrmv ) throws java.io.IOException { long serialVersionUID = ( dibjgccvctnjequemrmv != null ) ? dibjgccvctnjequemrmv . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : blnfdviqzvlovxievieg . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; }

line_index: 625
bug_before_refactoring: public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } } <s> public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } } <s> Duplicate application name issue fixed
bug_after_refactoring: public boolean storeCredentials ( java.lang.String ekdtbvqlnoxwrcycmxgt , java.lang.String tjwqhbimufyfkveesmxw , java.lang.String noeuxdvkhylsbeopuops ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . ekdtbvqlnoxwrcycmxgt ( ekdtbvqlnoxwrcycmxgt ) . username ( tjwqhbimufyfkveesmxw ) . password ( noeuxdvkhylsbeopuops ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } } <s> public boolean storeCredentials ( java.lang.String ekdtbvqlnoxwrcycmxgt , java.lang.String tjwqhbimufyfkveesmxw , java.lang.String noeuxdvkhylsbeopuops ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . ekdtbvqlnoxwrcycmxgt ( ekdtbvqlnoxwrcycmxgt ) . username ( tjwqhbimufyfkveesmxw ) . password ( noeuxdvkhylsbeopuops ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } } <s> Duplicate application name issue fixed
fix_before_refactoring: public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return result == 1 ; }
fix_after_refactoring: public boolean storeCredentials ( java.lang.String ekdtbvqlnoxwrcycmxgt , java.lang.String tjwqhbimufyfkveesmxw , java.lang.String noeuxdvkhylsbeopuops ) { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . ekdtbvqlnoxwrcycmxgt ( ekdtbvqlnoxwrcycmxgt ) . username ( tjwqhbimufyfkveesmxw ) . password ( noeuxdvkhylsbeopuops ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return result == 1 ; }
× fix_prediction_before: public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; }
× fix_prediction_after: public boolean storeCredentials ( java.lang.String ekdtbvqlnoxwrcycmxgt , java.lang.String tjwqhbimufyfkveesmxw , java.lang.String noeuxdvkhylsbeopuops ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . ekdtbvqlnoxwrcycmxgt ( ekdtbvqlnoxwrcycmxgt ) . username ( tjwqhbimufyfkveesmxw ) . password ( noeuxdvkhylsbeopuops ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } }

line_index: 626
bug_before_refactoring: public void cancelNotification ( int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } } <s> public void cancelNotification ( int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } } <s> Fixed error processing
bug_after_refactoring: public void cancelNotification ( int xwzyvulbajgnxizrjzuc ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( xwzyvulbajgnxizrjzuc ) ; } } <s> public void cancelNotification ( int xwzyvulbajgnxizrjzuc ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( xwzyvulbajgnxizrjzuc ) ; } } <s> Fixed error processing
fix_before_refactoring: public static void cancelNotification ( android.content.Context context , int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( context . getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } }
fix_after_refactoring: public static void cancelNotification ( android.content.Context context , int xwzyvulbajgnxizrjzuc ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( context . getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( xwzyvulbajgnxizrjzuc ) ; } }
× fix_prediction_before: public void cancelNotification ( int notificationId ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; }
× fix_prediction_after: public void cancelNotification ( int xwzyvulbajgnxizrjzuc ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( xwzyvulbajgnxizrjzuc ) ; }

line_index: 628
bug_before_refactoring: @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { notDesignedForCompilation () ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } <s> @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { notDesignedForCompilation () ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } <s> [Truffle] Adding TruffleBoundary to fix Illegal recurion errors in String#encode.
bug_after_refactoring: @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString syvhumpliulmsniqgqrp , org.jruby.truffle.nodes.core.RubyString uevumclthornuxokrhtm , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder hiufbjjjrgjrixmeffsv ) { notDesignedForCompilation () ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( syvhumpliulmsniqgqrp ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( uevumclthornuxokrhtm ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } <s> @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString syvhumpliulmsniqgqrp , org.jruby.truffle.nodes.core.RubyString uevumclthornuxokrhtm , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder hiufbjjjrgjrixmeffsv ) { notDesignedForCompilation () ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( syvhumpliulmsniqgqrp ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( uevumclthornuxokrhtm ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } <s> [Truffle] Adding TruffleBoundary to fix Illegal recurion errors in String#encode.
fix_before_refactoring: @ com.oracle.truffle.api.CompilerDirectives.TruffleBoundary @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; }
fix_after_refactoring: @ com.oracle.truffle.api.CompilerDirectives.TruffleBoundary @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString syvhumpliulmsniqgqrp , org.jruby.truffle.nodes.core.RubyString uevumclthornuxokrhtm , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder hiufbjjjrgjrixmeffsv ) { final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( syvhumpliulmsniqgqrp ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( uevumclthornuxokrhtm ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; }
× fix_prediction_before: @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; }
× fix_prediction_after: @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString syvhumpliulmsniqgqrp , org.jruby.truffle.nodes.core.RubyString uevumclthornuxokrhtml , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder hiufbjjjrgjrixmeffsv ) { notDesignedForCompilation () ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( syvhumpliulmsniqgqrp ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( uevumclthornuxokrhtml ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; }

line_index: 629
bug_before_refactoring: public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } } return null ; } <s> public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } } return null ; } <s> Fix concurrent hashmap error
bug_after_refactoring: public com.xrtb.common.Campaign getCampaign ( java.lang.String xuapkykdyvvswpvqmoqh ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( xuapkykdyvvswpvqmoqh ) ) return c ; } } return null ; } <s> public com.xrtb.common.Campaign getCampaign ( java.lang.String xuapkykdyvvswpvqmoqh ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( xuapkykdyvvswpvqmoqh ) ) return c ; } } return null ; } <s> Fix concurrent hashmap error
fix_before_refactoring: public com.xrtb.common.Campaign getCampaign ( java.lang.String name , java.lang.String id ) { com.xrtb.db.User u = map . get ( name ) ; if ( u == null ) return null ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } return null ; }
fix_after_refactoring: public com.xrtb.common.Campaign getCampaign ( java.lang.String name , java.lang.String xuapkykdyvvswpvqmoqh ) { com.xrtb.db.User u = map . get ( name ) ; if ( u == null ) return null ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( xuapkykdyvvswpvqmoqh ) ) return c ; } return null ; }
× fix_prediction_before: public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { synchronized ( this ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } } return null ; } }
× fix_prediction_after: public com.xrtb.common.Campaign getCampaign () { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( xuapkykdyvvswpvqmoqh ) ) return c ; } } return null ; }

line_index: 630
bug_before_refactoring: @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } <s> @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } <s> bugfix fin de questionnaire
bug_after_refactoring: @ java.lang.Override public void buttonPressed ( java.lang.String foetvjlqtosieheyqwch ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + foetvjlqtosieheyqwch ) ) ; if ( foetvjlqtosieheyqwch . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String foetvjlqtosieheyqwch ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( foetvjlqtosieheyqwch . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } <s> @ java.lang.Override public void buttonPressed ( java.lang.String foetvjlqtosieheyqwch ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + foetvjlqtosieheyqwch ) ) ; if ( foetvjlqtosieheyqwch . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String foetvjlqtosieheyqwch ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( foetvjlqtosieheyqwch . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } <s> bugfix fin de questionnaire
fix_before_refactoring: @ java.lang.Override public void buttonPressed ( java.lang.String buttonName , double result ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } }
fix_after_refactoring: @ java.lang.Override public void buttonPressed ( java.lang.String foetvjlqtosieheyqwch , double result ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + foetvjlqtosieheyqwch ) ) ; if ( foetvjlqtosieheyqwch . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String foetvjlqtosieheyqwch ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( foetvjlqtosieheyqwch . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } }
× fix_prediction_before: @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; }
× fix_prediction_after: @ java.lang.Override public void buttonPressed ( java.lang.String foetvjlqtosieheyqwch ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + foetvjlqtosieheyqwch ) ) ; game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String foetvjlqtosieheyqwch ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; }

line_index: 631
bug_before_refactoring: private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( username , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; } <s> private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( username , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; } <s> Fixed a weird error in Library  double equals shenanigans
bug_after_refactoring: private static IUser.UserType authorizeUser ( java.lang.String bpovfxafuwmijmkamaqf ) { IUser.UserType usertype ; if ( ! ( bpovfxafuwmijmkamaqf . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( bpovfxafuwmijmkamaqf , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; } <s> private static IUser.UserType authorizeUser ( java.lang.String bpovfxafuwmijmkamaqf ) { IUser.UserType usertype ; if ( ! ( bpovfxafuwmijmkamaqf . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( bpovfxafuwmijmkamaqf , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; } <s> Fixed a weird error in Library  double equals shenanigans
fix_before_refactoring: private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; usertype = platoUI.libControl . login ( username , password ) ; return usertype ; } else return IUser.UserType.Customer ; }
fix_after_refactoring: private static IUser.UserType authorizeUser ( java.lang.String bpovfxafuwmijmkamaqf ) { IUser.UserType usertype ; if ( ! ( bpovfxafuwmijmkamaqf . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; usertype = platoUI.libControl . login ( bpovfxafuwmijmkamaqf , password ) ; return usertype ; } else return IUser.UserType.Customer ; }
× fix_prediction_before: private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( username , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return IUser.UserType.Customer ; } return usertype ; }
× fix_prediction_after: public static IUser.UserType authorizeUser ( java.lang.String bpovfxafuwmijmkamaqf ) { IUser.UserType usertype ; if ( ! ( bpovfxafuwmijmkamaqf . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( bpovfxafuwmijmkamaqf , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; }

line_index: 634
bug_before_refactoring: @ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; } <s> @ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; } <s> Fixing a lot of errors
bug_after_refactoring: @ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder wgmtgdixbeqsjhbeapry , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter zrnofzdmtagxbulbvjpj , int glpnjpqghlapdnejynik ) { wgmtgdixbeqsjhbeapry . setName ( zrnofzdmtagxbulbvjpj . getTitle () ) ; wgmtgdixbeqsjhbeapry . setText ( zrnofzdmtagxbulbvjpj . getDesc () ) ; wgmtgdixbeqsjhbeapry . setAbjad ( zrnofzdmtagxbulbvjpj . getTitle () . substring ( 0 , 1 ) ) ; } <s> @ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder wgmtgdixbeqsjhbeapry , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter zrnofzdmtagxbulbvjpj , int glpnjpqghlapdnejynik ) { wgmtgdixbeqsjhbeapry . setName ( zrnofzdmtagxbulbvjpj . getTitle () ) ; wgmtgdixbeqsjhbeapry . setText ( zrnofzdmtagxbulbvjpj . getDesc () ) ; wgmtgdixbeqsjhbeapry . setAbjad ( zrnofzdmtagxbulbvjpj . getTitle () . substring ( 0 , 1 ) ) ; } <s> Fixing a lot of errors
fix_before_refactoring: @ java.lang.Override public void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; }
fix_after_refactoring: @ java.lang.Override public void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder wgmtgdixbeqsjhbeapry , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter zrnofzdmtagxbulbvjpj , int glpnjpqghlapdnejynik ) { wgmtgdixbeqsjhbeapry . setName ( zrnofzdmtagxbulbvjpj . getTitle () ) ; wgmtgdixbeqsjhbeapry . setText ( zrnofzdmtagxbulbvjpj . getDesc () ) ; wgmtgdixbeqsjhbeapry . setAbjad ( zrnofzdmtagxbulbvjpj . getTitle () . substring ( 0 , 1 ) ) ; }
× fix_prediction_before: @ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { if ( position >= 0 ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; } }
× fix_prediction_after: @ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder wgmtgdixbeqsjhbeapry , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter zrnofzdmtagxbulbvjpj , int glpnjpqghlapdnejynik ) { if ( ( wgmtgdixbeqsjhbeapry ) != null ) { wgmtgdixbeqsjhbeapry . setName ( zrnofzdmtagxbulbvjpj . getTitle () ) ; wgmtgdixbeqsjhbeapry . setText ( zrnofzdmtagxbulbvjpj . getDesc () ) ; wgmtgdixbeqsjhbeapry . setAbjad ( zrnofzdmtagxbulbvjpj . getTitle () . substring ( 0 , 1 ) ) ; } }

line_index: 636
bug_before_refactoring: public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } <s> public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } <s> #JC-2029 Fixed remarks from QA  Now date for anonymous user displays considering current locale. JCLocaleResolver is used for detection of locale instead of directly reading current user locale  Added "data-" prefix to custom html attribute to prevent w3c validation error
bug_after_refactoring: public java.lang.String format ( org.joda.time.DateTime gimnlpamaigfirqmvpof , java.util.Locale meriyjsbjvbdidsgpbdb ) { if ( gimnlpamaigfirqmvpof == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = gimnlpamaigfirqmvpof . getZone () ; long utcTime = timeZone . convertLocalToUTC ( gimnlpamaigfirqmvpof . getMillis () , false ) ; gimnlpamaigfirqmvpof = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( meriyjsbjvbdidsgpbdb ) . print ( gimnlpamaigfirqmvpof ) ; } <s> public java.lang.String format ( org.joda.time.DateTime gimnlpamaigfirqmvpof , java.util.Locale meriyjsbjvbdidsgpbdb ) { if ( gimnlpamaigfirqmvpof == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = gimnlpamaigfirqmvpof . getZone () ; long utcTime = timeZone . convertLocalToUTC ( gimnlpamaigfirqmvpof . getMillis () , false ) ; gimnlpamaigfirqmvpof = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( meriyjsbjvbdidsgpbdb ) . print ( gimnlpamaigfirqmvpof ) ; } <s> #JC-2029 Fixed remarks from QA  Now date for anonymous user displays considering current locale. JCLocaleResolver is used for detection of locale instead of directly reading current user locale  Added "data-" prefix to custom html attribute to prevent w3c validation error
fix_before_refactoring: public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }
fix_after_refactoring: public java.lang.String format ( org.joda.time.DateTime gimnlpamaigfirqmvpof ) { if ( gimnlpamaigfirqmvpof == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = gimnlpamaigfirqmvpof . getZone () ; long utcTime = timeZone . convertLocalToUTC ( gimnlpamaigfirqmvpof . getMillis () , false ) ; gimnlpamaigfirqmvpof = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( meriyjsbjvbdidsgpbdb ) . print ( gimnlpamaigfirqmvpof ) ; }
× fix_prediction_before: public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () ) ; dateTime = new org.joda.time.DateTime ( (UTCTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }
× fix_prediction_after: public java.lang.String format ( org.joda.time.DateTime gimnlpamaigfirqmvpof , java.util.Locale meriyjsbjvbdidsgpbdb ) { if ( gimnlpamaigfirqmvpof == null ) { return "" ; } long utcTime = timeZone . convertLocalToUTC ( gimnlpamaigfirqmvpof . getMillis () , false ) ; gimnlpamaigfirqmvpof = new org.joda.time.DateTime ( utcTime + ( offset ) ) ; return formatter . withLocale ( meriyjsbjvbdidsgpbdb ) . print ( gimnlpamaigfirqmvpof ) ; }

line_index: 637
bug_before_refactoring: @ java.lang.Override public boolean createStudent ( java.lang.String name , java.lang.String userID , java.lang.String pass ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( name , userID , pass ) ; return this . db . putStudent ( s ) ; } } return false ; } <s> @ java.lang.Override public boolean createStudent ( java.lang.String name , java.lang.String userID , java.lang.String pass ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( name , userID , pass ) ; return this . db . putStudent ( s ) ; } } return false ; } <s> Fix some parameter naming issues
bug_after_refactoring: @ java.lang.Override public boolean createStudent ( java.lang.String hfxjaxdncxhnhwpooylo , java.lang.String ozouqfzppbwixpudkimt , java.lang.String dajrckamrmkrqsmklypo ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( hfxjaxdncxhnhwpooylo , ozouqfzppbwixpudkimt , dajrckamrmkrqsmklypo ) ; return this . db . putStudent ( s ) ; } } return false ; } <s> @ java.lang.Override public boolean createStudent ( java.lang.String hfxjaxdncxhnhwpooylo , java.lang.String ozouqfzppbwixpudkimt , java.lang.String dajrckamrmkrqsmklypo ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( hfxjaxdncxhnhwpooylo , ozouqfzppbwixpudkimt , dajrckamrmkrqsmklypo ) ; return this . db . putStudent ( s ) ; } } return false ; } <s> Fix some parameter naming issues
fix_before_refactoring: @ java.lang.Override public boolean createStudent ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( userID , pass , name ) ; return this . db . putStudent ( s ) ; } } return false ; }
fix_after_refactoring: @ java.lang.Override public boolean createStudent ( java.lang.String ozouqfzppbwixpudkimt , java.lang.String dajrckamrmkrqsmklypo , java.lang.String hfxjaxdncxhnhwpooylo ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( ozouqfzppbwixpudkimt , dajrckamrmkrqsmklypo , hfxjaxdncxhnhwpooylo ) ; return this . db . putStudent ( s ) ; } } return false ; }
× fix_prediction_before: @ java.lang.Override public boolean createStudent ( java.lang.String userID , java.lang.String name , java.lang.String pass ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( userID , name , pass ) ; return this . db . putStudent ( s ) ; } } return false ; }
× fix_prediction_after: @ java.lang.Override public boolean createStudent ( java.lang.String hfxjaxdncxhnhwpooylo , java.lang.String ozouqfzppbwixpudkimt , java.lang.String dajrckamrmkrqsmklypo ) { if ( user . isSet () ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( hfxjaxdncxhnhwpooylo , ozouqfzppbwixpudkimt , dajrckamrmkrqsmklypo ) ; return this . db . putStudent ( s ) ; } return false ; }

line_index: 638
bug_before_refactoring: public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; } <s> public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; } <s> Fixed indexof issue
bug_after_refactoring: public int getValue ( gameplay.Card wsdzrmeogswwodslxdkl ) { int s = wsdzrmeogswwodslxdkl . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , wsdzrmeogswwodslxdkl ) ; break; case 1 : val = this . indexOf ( hearts , wsdzrmeogswwodslxdkl ) ; break; case 2 : val = this . indexOf ( clubs , wsdzrmeogswwodslxdkl ) ; break; case 3 : val = this . indexOf ( diamonds , wsdzrmeogswwodslxdkl ) ; break; default: val = 0 ; } return val ; } <s> public int getValue ( gameplay.Card wsdzrmeogswwodslxdkl ) { int s = wsdzrmeogswwodslxdkl . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , wsdzrmeogswwodslxdkl ) ; break; case 1 : val = this . indexOf ( hearts , wsdzrmeogswwodslxdkl ) ; break; case 2 : val = this . indexOf ( clubs , wsdzrmeogswwodslxdkl ) ; break; case 3 : val = this . indexOf ( diamonds , wsdzrmeogswwodslxdkl ) ; break; default: val = 0 ; } return val ; } <s> Fixed indexof issue
fix_before_refactoring: public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . spades . indexOf ( card ) ; break; case 1 : val = this . hearts . indexOf ( card ) ; break; case 2 : val = this . clubs . indexOf ( card ) ; break; case 3 : val = this . diamonds . indexOf ( card ) ; break; default: val = 0 ; } return val ; }
fix_after_refactoring: public int getValue ( gameplay.Card wsdzrmeogswwodslxdkl ) { int s = wsdzrmeogswwodslxdkl . getSuit () ; int val ; switch ( s ) { case 0 : val = this . spades . indexOf ( wsdzrmeogswwodslxdkl ) ; break; case 1 : val = this . hearts . indexOf ( wsdzrmeogswwodslxdkl ) ; break; case 2 : val = this . clubs . indexOf ( wsdzrmeogswwodslxdkl ) ; break; case 3 : val = this . diamonds . indexOf ( wsdzrmeogswwodslxdkl ) ; break; default: val = 0 ; } return val ; }
× fix_prediction_before: public int getValue ( gameplay.Card card ) { int val ; switch ( this . indexOf ( card ) ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; }
× fix_prediction_after: public int getValue ( gameplay.Card wsdzrmeogswwodslxdkl ) { int s = wsdzrmeogswwodslxdkl . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , wsdzrmeogswwodslxdkl ) ; break; case 1 : val = this . indexOf ( hearts , wsdzrmeogswwodslxdkl ) ; break; case 2 : val = this . indexOf ( clubs , wsdzrmeogswwodslxdkl ) ; break; case 3 : val = this . indexOf ( diamonds , wsdzrmeogswwodslxdkl ) ; break; } return val ; }

line_index: 639
bug_before_refactoring: protected void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; } <s> protected void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; } <s> Bugfix Bézier computer
bug_after_refactoring: protected void updateReel ( double veajffpscfmfulisacji , double frgwooxuknwgwactsexk , double jtljgnjltljhlslfbczl , boolean pdolbwxxzvzeoaokbybl , double ltmjznvqjmnogwnttpca ) { if ( pdolbwxxzvzeoaokbybl ) { orientationGeometrique = jtljgnjltljhlslfbczl ; courbureGeometrique = ltmjznvqjmnogwnttpca ; } else { orientationGeometrique = jtljgnjltljhlslfbczl + ( java.lang.Math.PI ) ; courbureGeometrique = - ltmjznvqjmnogwnttpca ; } position . setX ( veajffpscfmfulisacji ) ; position . setY ( frgwooxuknwgwactsexk ) ; this . jtljgnjltljhlslfbczl = jtljgnjltljhlslfbczl ; this . pdolbwxxzvzeoaokbybl = pdolbwxxzvzeoaokbybl ; this . ltmjznvqjmnogwnttpca = ltmjznvqjmnogwnttpca ; } <s> protected void updateReel ( double veajffpscfmfulisacji , double frgwooxuknwgwactsexk , double jtljgnjltljhlslfbczl , boolean pdolbwxxzvzeoaokbybl , double ltmjznvqjmnogwnttpca ) { if ( pdolbwxxzvzeoaokbybl ) { orientationGeometrique = jtljgnjltljhlslfbczl ; courbureGeometrique = ltmjznvqjmnogwnttpca ; } else { orientationGeometrique = jtljgnjltljhlslfbczl + ( java.lang.Math.PI ) ; courbureGeometrique = - ltmjznvqjmnogwnttpca ; } position . setX ( veajffpscfmfulisacji ) ; position . setY ( frgwooxuknwgwactsexk ) ; this . jtljgnjltljhlslfbczl = jtljgnjltljhlslfbczl ; this . pdolbwxxzvzeoaokbybl = pdolbwxxzvzeoaokbybl ; this . ltmjznvqjmnogwnttpca = ltmjznvqjmnogwnttpca ; } <s> Bugfix Bézier computer
fix_before_refactoring: public void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; }
fix_after_refactoring: public void updateReel ( double veajffpscfmfulisacji , double frgwooxuknwgwactsexk , double jtljgnjltljhlslfbczl , boolean pdolbwxxzvzeoaokbybl , double ltmjznvqjmnogwnttpca ) { if ( pdolbwxxzvzeoaokbybl ) { orientationGeometrique = jtljgnjltljhlslfbczl ; courbureGeometrique = ltmjznvqjmnogwnttpca ; } else { orientationGeometrique = jtljgnjltljhlslfbczl + ( java.lang.Math.PI ) ; courbureGeometrique = - ltmjznvqjmnogwnttpca ; } position . setX ( veajffpscfmfulisacji ) ; position . setY ( frgwooxuknwgwactsexk ) ; this . jtljgnjltljhlslfbczl = jtljgnjltljhlslfbczl ; this . pdolbwxxzvzeoaokbybl = pdolbwxxzvzeoaokbybl ; this . ltmjznvqjmnogwnttpca = ltmjznvqjmnogwnttpca ; }
× fix_prediction_before: protected void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; }
× fix_prediction_after: protected void updateReel ( double veajffpscfmfulisacji , double frgwooxuknwgwactsexk , double jtljgnjltljhlslfbczl , boolean pdolbwxxzvzeoaokbybl , double ltmjznvqjmnogwnttpca ) { orientationGeometrique = jtljgnjltljhlslfbczl ; courbureGeometrique = ltmjznvqjmnogwnttpca ; if ( pdolbwxxzvzeoaokbybl ) { orientationGeometrique = jtljgnjltljhlslfbczl + ( java.lang.Math.PI ) ; courbureGeometrique = - ltmjznvqjmnogwnttpca ; } position . setX ( veajffpscfmfulisacji ) ; position . setY ( frgwooxuknwgwactsexk ) ; this . jtljgnjltljhlslfbczl = jtljgnjltljhlslfbczl ; this . pdolbwxxzvzeoaokbybl = pdolbwxxzvzeoaokbybl ; this . ltmjznvqjmnogwnttpca = ltmjznvqjmnogwnttpca ; }

line_index: 640
bug_before_refactoring: public int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } <s> public int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } <s> fixed a small buffer bug and cleaned up a few pieces of code
bug_after_refactoring: public int getBillWorth ( int khyerxelgspqnqzyunpf , int gyioarnvvbwvwvfaeyxg ) { int cash = 0 ; switch ( khyerxelgspqnqzyunpf ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * gyioarnvvbwvwvfaeyxg ; } <s> public int getBillWorth ( int khyerxelgspqnqzyunpf , int gyioarnvvbwvwvfaeyxg ) { int cash = 0 ; switch ( khyerxelgspqnqzyunpf ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * gyioarnvvbwvwvfaeyxg ; } <s> fixed a small buffer bug and cleaned up a few pieces of code
fix_before_refactoring: private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; }
fix_after_refactoring: private int getBillWorth ( int khyerxelgspqnqzyunpf , int gyioarnvvbwvwvfaeyxg ) { int cash = 0 ; switch ( khyerxelgspqnqzyunpf ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * gyioarnvvbwvwvfaeyxg ; }
× fix_prediction_before: public static int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; }
× fix_prediction_after: public int getBillWorth ( int khyerxelgspqnqzyunpf , int gyioarnvvbwvwvfaeyxg ) { int cash = 0 ; switch ( khyerxelgspqnqzyunpf ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * gyioarnvvbwvwvfaeyxg ; }

line_index: 641
bug_before_refactoring: public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; } <s> public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; } <s> Fixed a bug with cursor list
bug_after_refactoring: public int findPositionById ( long mfohauulozhqfyvxfqkd ) { andromfohauulozhqfyvxfqkd.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == mfohauulozhqfyvxfqkd ) { return cursor . getPosition () ; } } return - 1 ; } <s> public int findPositionById ( long mfohauulozhqfyvxfqkd ) { andromfohauulozhqfyvxfqkd.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == mfohauulozhqfyvxfqkd ) { return cursor . getPosition () ; } } return - 1 ; } <s> Fixed a bug with cursor list
fix_before_refactoring: public static int findPositionById ( android.database.Cursor list , long id ) { if ( list == null ) return - 1 ; while ( list . moveToNext () ) { if ( ( list . getLong ( 0 ) ) == id ) { return list . getPosition () ; } } return - 1 ; }
fix_after_refactoring: public static int findPositionById ( andromfohauulozhqfyvxfqkd.database.Cursor list , long mfohauulozhqfyvxfqkd ) { if ( list == null ) return - 1 ; while ( list . moveToNext () ) { if ( ( list . getLong ( 0 ) ) == mfohauulozhqfyvxfqkd ) { return list . getPosition () ; } } return - 1 ; }
× fix_prediction_before: public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; }
× fix_prediction_after: public int findPositionById ( long mfohauulozhqfyvxfqkd ) { andromfohauulozhqfyvxfqkd.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == mfohauulozhqfyvxfqkd ) { return cursor . getPosition () ; } } return - 1 ; }

line_index: 642
bug_before_refactoring: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "user" ) java.lang.String user , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User username = userDao . getUser ( user ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( username , work ) ; if ( ( username == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) . html () ; } <s> @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "user" ) java.lang.String user , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User username = userDao . getUser ( user ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( username , work ) ; if ( ( username == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) . html () ; } <s> Fix bug that returned 500 for invalid users and comics
bug_after_refactoring: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "rekerntfmapeiigzxzxq" ) java.lang.String rekerntfmapeiigzxzxq , @ ninja.params.PathParam ( value = "bflvgfiaybybfbsxbfnz" ) java.lang.String bflvgfiaybybfbsxbfnz ) { www.purple.mixxy.models.User rekerntfmapeiigzxzxqname = rekerntfmapeiigzxzxqDao . getUser ( rekerntfmapeiigzxzxq ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( rekerntfmapeiigzxzxqname , bflvgfiaybybfbsxbfnz ) ; if ( ( rekerntfmapeiigzxzxqname == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "rekerntfmapeiigzxzxq" , rekerntfmapeiigzxzxq ) . html () ; } <s> @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "rekerntfmapeiigzxzxq" ) java.lang.String rekerntfmapeiigzxzxq , @ ninja.params.PathParam ( value = "bflvgfiaybybfbsxbfnz" ) java.lang.String bflvgfiaybybfbsxbfnz ) { www.purple.mixxy.models.User rekerntfmapeiigzxzxqname = rekerntfmapeiigzxzxqDao . getUser ( rekerntfmapeiigzxzxq ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( rekerntfmapeiigzxzxqname , bflvgfiaybybfbsxbfnz ) ; if ( ( rekerntfmapeiigzxzxqname == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "rekerntfmapeiigzxzxq" , rekerntfmapeiigzxzxq ) . html () ; } <s> Fix bug that returned 500 for invalid users and comics
fix_before_refactoring: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "user" ) java.lang.String username , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User user = userDao . getUser ( username ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( username , work ) ; java.lang.System.out . println ( user ) ; if ( ( user == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) . html () ; }
fix_after_refactoring: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "rekerntfmapeiigzxzxq" ) java.lang.String rekerntfmapeiigzxzxqname , @ ninja.params.PathParam ( value = "bflvgfiaybybfbsxbfnz" ) java.lang.String bflvgfiaybybfbsxbfnz ) { www.purple.mixxy.models.User rekerntfmapeiigzxzxq = rekerntfmapeiigzxzxqDao . getUser ( rekerntfmapeiigzxzxqname ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( rekerntfmapeiigzxzxqname , bflvgfiaybybfbsxbfnz ) ; java.lang.System.out . println ( rekerntfmapeiigzxzxq ) ; if ( ( rekerntfmapeiigzxzxq == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "rekerntfmapeiigzxzxq" , rekerntfmapeiigzxzxq ) . html () ; }
× fix_prediction_before: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "user" ) java.lang.String user ) { www.purple.mixxy.models.User username = userDao . getUser ( user ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( username , work ) ; if ( ( username == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) . html () ; }
× fix_prediction_after: @ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "rekerntfmapeiigzxzxq" ) java.lang.String rekerntfmapeiigzxzxq" ) { www.purple.mixxy.models.User rekerntfmapeiigzxzxqname = rekerntfmapeiigzxzxqDao . getUser ( rekerntfmapeiigzxzxq ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( rekerntfmapeiigzxzxqname , bflvgfiaybybfbsxbfnz ) ; if ( ( rekerntfmapeiigzxzxqname == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "rekerntfmapeiigzxzxq" , rekerntfmapeiigzxzxq ) . html () ; }

line_index: 643
bug_before_refactoring: public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . getParcelable ( key ) ) ) ) ; } return output ; } <s> public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . getParcelable ( key ) ) ) ) ; } return output ; } <s> Exhaustively tested all types  and fixed any found issues.
bug_after_refactoring: public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle ufyorankwyqhddsqxtqt , java.lang.Class < T > fkxfvembcrqearcmlykw ) { ufyorankwyqhddsqxtqt . setClassLoader ( fkxfvembcrqearcmlykw . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : ufyorankwyqhddsqxtqt . keySet () ) { output . put ( key , ( ( T ) ( ufyorankwyqhddsqxtqt . getParcelable ( key ) ) ) ) ; } return output ; } <s> public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle ufyorankwyqhddsqxtqt , java.lang.Class < T > fkxfvembcrqearcmlykw ) { ufyorankwyqhddsqxtqt . setClassLoader ( fkxfvembcrqearcmlykw . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : ufyorankwyqhddsqxtqt . keySet () ) { output . put ( key , ( ( T ) ( ufyorankwyqhddsqxtqt . getParcelable ( key ) ) ) ) ; } return output ; } <s> Exhaustively tested all types  and fixed any found issues.
fix_before_refactoring: public static < T > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . get ( key ) ) ) ) ; } return output ; }
fix_after_refactoring: public static < T > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle ufyorankwyqhddsqxtqt , java.lang.Class < T > fkxfvembcrqearcmlykw ) { ufyorankwyqhddsqxtqt . setClassLoader ( fkxfvembcrqearcmlykw . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : ufyorankwyqhddsqxtqt . keySet () ) { output . put ( key , ( ( T ) ( ufyorankwyqhddsqxtqt . get ( key ) ) ) ) ; } return output ; }
× fix_prediction_before: public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , input . getParcelable ( key ) ) ; } return output ; }
× fix_prediction_after: public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle ufyorankwyqhddsqxtqt , java.lang.Class < T > fkxfvembcrqearcmlykw ) { if ( ufyorankwyqhddsqxtqt != null ) { ufyorankwyqhddsqxtqt . setClassLoader ( fkxfvembcrqearcmlykw . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : ufyorankwyqhddsqxtqt . keySet () ) { output . put ( key , ( ( T ) ( ufyorankwyqhddsqxtqt . getParcelable ( key ) ) ) ) ; } return output ; } return null ; }

line_index: 646
bug_before_refactoring: protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } } <s> protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } } <s> fixed bug when updating Truck creates new Truck
bug_after_refactoring: protected void doGet ( javax.servlet.http.HttpServletRequest aeuqhwucermkjkhgcfay , javax.servlet.http.HttpServletResponse azahywsrckwwrbybrhdy ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = aeuqhwucermkjkhgcfay . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; aeuqhwucermkjkhgcfay . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( aeuqhwucermkjkhgcfay , azahywsrckwwrbybrhdy ) ; } } <s> protected void doGet ( javax.servlet.http.HttpServletRequest aeuqhwucermkjkhgcfay , javax.servlet.http.HttpServletResponse azahywsrckwwrbybrhdy ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = aeuqhwucermkjkhgcfay . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; aeuqhwucermkjkhgcfay . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( aeuqhwucermkjkhgcfay , azahywsrckwwrbybrhdy ) ; } } <s> fixed bug when updating Truck creates new Truck
fix_before_refactoring: protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; }
fix_after_refactoring: protected void doGet ( javax.servlet.http.HttpServletRequest aeuqhwucermkjkhgcfay , javax.servlet.http.HttpServletResponse azahywsrckwwrbybrhdy ) throws java.io.IOException , javax.servlet.ServletException { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; aeuqhwucermkjkhgcfay . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( aeuqhwucermkjkhgcfay , azahywsrckwwrbybrhdy ) ; }
× fix_prediction_before: protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; }
× fix_prediction_after: protected void doGet ( javax.servlet.http.HttpServletRequest aeuqhwucermkjkhgcfay , javax.servlet.http.HttpServletResponse azahywsrckwwrbybrhdy ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = aeuqhwucermkjkhgcfay . getParameter ( "action" ) ; if ( action != null ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; aeuqhwucermkjkhgcfay . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( aeuqhwucermkjkhgcfay , azahywsrckwwrbybrhdy ) ; } }

line_index: 647
bug_before_refactoring: void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd ( interval ) ; int pos = intervalsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; } <s> void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd ( interval ) ; int pos = intervalsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; } <s> Fixed afew bugs.
bug_after_refactoring: void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval tbbodkpbzmlsulkaoclp ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView tbbodkpbzmlsulkaoclpView = tbbodkpbzmlsulkaoclpViewToAdd ( tbbodkpbzmlsulkaoclp ) ; int pos = tbbodkpbzmlsulkaoclpsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { tbbodkpbzmlsulkaoclpView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { tbbodkpbzmlsulkaoclpView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } tbbodkpbzmlsulkaoclpsView . addView ( tbbodkpbzmlsulkaoclpView , pos ) ; } <s> void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval tbbodkpbzmlsulkaoclp ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView tbbodkpbzmlsulkaoclpView = tbbodkpbzmlsulkaoclpViewToAdd ( tbbodkpbzmlsulkaoclp ) ; int pos = tbbodkpbzmlsulkaoclpsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { tbbodkpbzmlsulkaoclpView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { tbbodkpbzmlsulkaoclpView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } tbbodkpbzmlsulkaoclpsView . addView ( tbbodkpbzmlsulkaoclpView , pos ) ; } <s> Fixed afew bugs.
fix_before_refactoring: com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = new com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView ( context , interval ) ; int pos = ( intervalsView . getChildCount () ) - 2 ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; return intervalView ; }
fix_after_refactoring: com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval tbbodkpbzmlsulkaoclp ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView tbbodkpbzmlsulkaoclpView = new com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView ( context , tbbodkpbzmlsulkaoclp ) ; int pos = ( tbbodkpbzmlsulkaoclpsView . getChildCount () ) - 2 ; if ( ( pos % 2 ) == 0 ) { tbbodkpbzmlsulkaoclpView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { tbbodkpbzmlsulkaoclpView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } tbbodkpbzmlsulkaoclpsView . addView ( tbbodkpbzmlsulkaoclpView , pos ) ; return tbbodkpbzmlsulkaoclpView ; }
× fix_prediction_before: private void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd ( interval ) ; int pos = intervalsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; }
× fix_prediction_after: void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval tbbodkpbzmlsulkaoclp ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView tbbodkpbzmlsulkaoclpView = tbbodkpbzmlsulkaoclpViewToAdd ( tbbodkpbzmlsulkaoclp ) ; int pos = tbbodkpbzmlsulkaoclpsView . getChildCount () ; if ( ( pos % 2 ) == 0 ) { tbbodkpbzmlsulkaoclpView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { tbbodkpbzmlsulkaoclpView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } tbbodkpbzmlsulkaoclpsView . addView ( tbbodkpbzmlsulkaoclpView , pos ) ; }

line_index: 649
bug_before_refactoring: public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; } <s> public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; } <s> 4.5 hrs. Got all know bugs fixed. Applied to wheel to all instances of yardline or gain/loss in dialogs. But 5  10   and 15 yard easy access buttons in penalty dialog. reasearched ways to build vertical wheel for play type dialog.
bug_after_refactoring: public dprnfempxelxpnaxvnzroid onClick ( android.dprnfempxelxpnaxvnzriew.View dprnfempxelxpnaxvnzr ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( jadprnfempxelxpnaxvnzra.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( jadprnfempxelxpnaxvnzra.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; } <s> public dprnfempxelxpnaxvnzroid onClick ( android.dprnfempxelxpnaxvnzriew.View dprnfempxelxpnaxvnzr ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( jadprnfempxelxpnaxvnzra.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( jadprnfempxelxpnaxvnzra.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; } <s> 4.5 hrs. Got all know bugs fixed. Applied to wheel to all instances of yardline or gain/loss in dialogs. But 5  10   and 15 yard easy access buttons in penalty dialog. reasearched ways to build vertical wheel for play type dialog.
fix_before_refactoring: @ java.lang.Override public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = false ; newPlayDialog () ; dialog . dismiss () ; }
fix_after_refactoring: @ jadprnfempxelxpnaxvnzra.lang.Odprnfempxelxpnaxvnzrerride public dprnfempxelxpnaxvnzroid onClick ( android.dprnfempxelxpnaxvnzriew.View dprnfempxelxpnaxvnzr ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( jadprnfempxelxpnaxvnzra.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( jadprnfempxelxpnaxvnzra.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = false ; newPlayDialog () ; dialog . dismiss () ; }
× fix_prediction_before: public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; }
× fix_prediction_after: public dprnfempxelxpnaxvnzroid onClick ( android.dprnfempxelxpnaxvnzriew.View dprnfempxelxpnaxvnzr ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( jadprnfempxelxpnaxvnzra.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( jadprnfempxelxpnaxvnzra.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; }

line_index: 651
bug_before_refactoring: private void analyzeAssociations ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } <s> private void analyzeAssociations ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } <s> Fix the bug of saving a deleted model won't be succeeded.
bug_after_refactoring: private void analyzeAssociations ( org.litepal.crud.DataSupport fmvyilscogkgkipeavtr ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( fmvyilscogkgkipeavtr . getClassName () ) ; analyzeAssociatedModels ( fmvyilscogkgkipeavtr , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } <s> private void analyzeAssociations ( org.litepal.crud.DataSupport fmvyilscogkgkipeavtr ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( fmvyilscogkgkipeavtr . getClassName () ) ; analyzeAssociatedModels ( fmvyilscogkgkipeavtr , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } <s> Fix the bug of saving a deleted model won't be succeeded.
fix_before_refactoring: private java.util.Collection < org.litepal.crud.model.AssociationsInfo > analyzeAssociations ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; return associationInfos ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } }
fix_after_refactoring: private java.util.Collection < org.litepal.crud.model.AssociationsInfo > analyzeAssociations ( org.litepal.crud.DataSupport fmvyilscogkgkipeavtr ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( fmvyilscogkgkipeavtr . getClassName () ) ; analyzeAssociatedModels ( fmvyilscogkgkipeavtr , associationInfos ) ; return associationInfos ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } }
× fix_prediction_before: private void analyzeAssociations ( org.litepal.crud.DataSupport baseObj , java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos ) { try { analyzeAssociatedModels ( baseObj , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } }
× fix_prediction_after: private void analyzeAssociations ( org.litepal.crud.DataSupport fmvyilscogkgkipeavtr , java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos ) { try { analyzeAssociatedModels ( fmvyilscogkgkipeavtr , associationInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } }

line_index: 652
bug_before_refactoring: public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; } <s> public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; } <s> Revert "Adds tests and bug fixes. (#21)" (#22)  This reverts commit b3438aabfa84446868fd9c3fcd901903195aec2e.
bug_after_refactoring: public static double roundedToSize ( double ephapplzewtinkirrntv , int yyxouagitcsqlylmgbrq ) { java.math.BigDecimal ephapplzewtinkirrntvBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( ephapplzewtinkirrntv ) ) { java.math.BigDecimal ephapplzewtinkirrntvBD = new java.math.BigDecimal ( ephapplzewtinkirrntv ) ; int newScale = yyxouagitcsqlylmgbrq - ( ( ephapplzewtinkirrntvBD . precision () ) - ( ephapplzewtinkirrntvBD . scale () ) ) ; ephapplzewtinkirrntvBDtoSize = ephapplzewtinkirrntvBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return ephapplzewtinkirrntvBDtoSize . doubleValue () ; } <s> public static double roundedToSize ( double ephapplzewtinkirrntv , int yyxouagitcsqlylmgbrq ) { java.math.BigDecimal ephapplzewtinkirrntvBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( ephapplzewtinkirrntv ) ) { java.math.BigDecimal ephapplzewtinkirrntvBD = new java.math.BigDecimal ( ephapplzewtinkirrntv ) ; int newScale = yyxouagitcsqlylmgbrq - ( ( ephapplzewtinkirrntvBD . precision () ) - ( ephapplzewtinkirrntvBD . scale () ) ) ; ephapplzewtinkirrntvBDtoSize = ephapplzewtinkirrntvBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return ephapplzewtinkirrntvBDtoSize . doubleValue () ; } <s> Revert "Adds tests and bug fixes. (#21)" (#22)  This reverts commit b3438aabfa84446868fd9c3fcd901903195aec2e.
fix_before_refactoring: public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; java.math.BigDecimal valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; return valueBDtoSize . doubleValue () ; }
fix_after_refactoring: public static double roundedToSize ( double ephapplzewtinkirrntv , int yyxouagitcsqlylmgbrq ) { java.math.BigDecimal ephapplzewtinkirrntvBD = new java.math.BigDecimal ( ephapplzewtinkirrntv ) ; int newScale = yyxouagitcsqlylmgbrq - ( ( ephapplzewtinkirrntvBD . precision () ) - ( ephapplzewtinkirrntvBD . scale () ) ) ; java.math.BigDecimal ephapplzewtinkirrntvBDtoSize = ephapplzewtinkirrntvBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; return ephapplzewtinkirrntvBDtoSize . doubleValue () ; }
× fix_prediction_before: public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; }
× fix_prediction_after: public static double roundedToSize ( double ephapplzewtinkirrntv , int yyxouagitcsqlylmgbrq ) { java.math.BigDecimal ephapplzewtinkirrntvBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( ephapplzewtinkirrntv ) ) { java.math.BigDecimal ephapplzewtinkirrntvBD = new java.math.BigDecimal ( ephapplzewtinkirrntv ) ; int newScale = yyxouagitcsqlylmgbrq - ( ( ephapplzewtinkirrntvBD . precision () ) - ( ephapplzewtinkirrntvBD . scale () ) ) ; ephapplzewtinkirrntvBDtoSize = ephapplzewtinkirrntvBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return ephapplzewtinkirrntvBDtoSize . doubleValue () ; }

line_index: 653
bug_before_refactoring: private static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> private static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> fixing return errors
bug_after_refactoring: private static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> private static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } <s> fixing return errors
fix_before_refactoring: public static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
fix_after_refactoring: public static boolean differByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
× fix_prediction_before: private static boolean differentByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
× fix_prediction_after: private static boolean differentByOne ( java.lang.String boelbptkzjqsilczycti , java.lang.String yggpcmkwxuhokzumwbva ) { if ( ( boelbptkzjqsilczycti . length () ) != ( yggpcmkwxuhokzumwbva . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( boelbptkzjqsilczycti . length () ) ; i ++ ) { if ( ( boelbptkzjqsilczycti . charAt ( i ) ) != ( yggpcmkwxuhokzumwbva . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }

